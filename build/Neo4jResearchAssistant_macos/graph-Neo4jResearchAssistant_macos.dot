digraph G {
charset="UTF-8";
	rankdir="LR";
	concentrate="true";
	"<PyiModuleGraph>" [label="<PyiModuleGraph>"];
	"graphdatascience" [label="<f0> Package| <f1> graphdatascience",shape="record"];
	"graphdatascience.version" [label="<f0> SourceModule| <f1> graphdatascience.version",shape="record"];
	"graphdatascience.session.gds_sessions" [label="<f0> SourceModule| <f1> graphdatascience.session.gds_sessions",shape="record"];
	"graphdatascience.session" [label="<f0> Package| <f1> graphdatascience.session",shape="record"];
	"graphdatascience.session.session_sizes" [label="<f0> SourceModule| <f1> graphdatascience.session.session_sizes",shape="record"];
	"graphdatascience.session.session_info" [label="<f0> SourceModule| <f1> graphdatascience.session.session_info",shape="record"];
	"graphdatascience.session.aura_api_responses" [label="<f0> SourceModule| <f1> graphdatascience.session.aura_api_responses",shape="record"];
	"pandas" [label="<f0> Package| <f1> pandas",shape="record"];
	"cmath" [label="<f0> Extension| <f1> cmath",shape="record"];
	"pandas._libs.writers" [label="<f0> Extension| <f1> pandas._libs.writers",shape="record"];
	"pandas._typing" [label="<f0> SourceModule| <f1> pandas._typing",shape="record"];
	"typing_extensions" [label="<f0> SourceModule| <f1> typing_extensions",shape="record"];
	"_socket" [label="<f0> Extension| <f1> _socket",shape="record"];
	"asyncio.coroutines" [label="<f0> SourceModule| <f1> asyncio.coroutines",shape="record"];
	"asyncio.log" [label="<f0> SourceModule| <f1> asyncio.log",shape="record"];
	"logging" [label="<f0> Package| <f1> logging",shape="record"];
	"atexit" [label="<f0> BuiltinModule| <f1> atexit",shape="record"];
	"pickle" [label="<f0> SourceModule| <f1> pickle",shape="record"];
	"pprint" [label="<f0> SourceModule| <f1> pprint",shape="record"];
	"org" [label="<f0> MissingModule| <f1> org",shape="record"];
	"_compat_pickle" [label="<f0> SourceModule| <f1> _compat_pickle",shape="record"];
	"struct" [label="<f0> SourceModule| <f1> struct",shape="record"];
	"_struct" [label="<f0> Extension| <f1> _struct",shape="record"];
	"itertools" [label="<f0> BuiltinModule| <f1> itertools",shape="record"];
	"threading" [label="<f0> SourceModule| <f1> threading",shape="record"];
	"_threading_local" [label="<f0> SourceModule| <f1> _threading_local",shape="record"];
	"_collections" [label="<f0> BuiltinModule| <f1> _collections",shape="record"];
	"string" [label="<f0> SourceModule| <f1> string",shape="record"];
	"_string" [label="<f0> BuiltinModule| <f1> _string",shape="record"];
	"asyncio.format_helpers" [label="<f0> SourceModule| <f1> asyncio.format_helpers",shape="record"];
	"asyncio.constants" [label="<f0> SourceModule| <f1> asyncio.constants",shape="record"];
	"asyncio.base_futures" [label="<f0> SourceModule| <f1> asyncio.base_futures",shape="record"];
	"asyncio" [label="<f0> Package| <f1> asyncio",shape="record"];
	"asyncio.Runner" [label="<f0> MissingModule| <f1> asyncio.Runner",shape="record"];
	"asyncio.timeout_at" [label="<f0> MissingModule| <f1> asyncio.timeout_at",shape="record"];
	"asyncio.timeout" [label="<f0> MissingModule| <f1> asyncio.timeout",shape="record"];
	"asyncio.unix_events" [label="<f0> SourceModule| <f1> asyncio.unix_events",shape="record"];
	"subprocess" [label="<f0> SourceModule| <f1> subprocess",shape="record"];
	"select" [label="<f0> Extension| <f1> select",shape="record"];
	"_winapi" [label="<f0> MissingModule| <f1> _winapi",shape="record"];
	"msvcrt" [label="<f0> MissingModule| <f1> msvcrt",shape="record"];
	"grp" [label="<f0> Extension| <f1> grp",shape="record"];
	"pwd" [label="<f0> BuiltinModule| <f1> pwd",shape="record"];
	"socket" [label="<f0> SourceModule| <f1> socket",shape="record"];
	"array" [label="<f0> Extension| <f1> array",shape="record"];
	"signal" [label="<f0> SourceModule| <f1> signal",shape="record"];
	"_signal" [label="<f0> BuiltinModule| <f1> _signal",shape="record"];
	"selectors" [label="<f0> SourceModule| <f1> selectors",shape="record"];
	"math" [label="<f0> Extension| <f1> math",shape="record"];
	"errno" [label="<f0> BuiltinModule| <f1> errno",shape="record"];
	"asyncio.windows_events" [label="<f0> SourceModule| <f1> asyncio.windows_events",shape="record"];
	"_overlapped" [label="<f0> MissingModule| <f1> _overlapped",shape="record"];
	"asyncio.windows_utils" [label="<f0> SourceModule| <f1> asyncio.windows_utils",shape="record"];
	"tempfile" [label="<f0> SourceModule| <f1> tempfile",shape="record"];
	"random" [label="<f0> SourceModule| <f1> random",shape="record"];
	"statistics" [label="<f0> SourceModule| <f1> statistics",shape="record"];
	"_statistics" [label="<f0> Extension| <f1> _statistics",shape="record"];
	"decimal" [label="<f0> SourceModule| <f1> decimal",shape="record"];
	"_pydecimal" [label="<f0> SourceModule| <f1> _pydecimal",shape="record"];
	"contextvars" [label="<f0> SourceModule| <f1> contextvars",shape="record"];
	"_contextvars" [label="<f0> Extension| <f1> _contextvars",shape="record"];
	"_decimal" [label="<f0> Extension| <f1> _decimal",shape="record"];
	"fractions" [label="<f0> SourceModule| <f1> fractions",shape="record"];
	"numbers" [label="<f0> SourceModule| <f1> numbers",shape="record"];
	"hashlib" [label="<f0> SourceModule| <f1> hashlib",shape="record"];
	"_hashlib" [label="<f0> Extension| <f1> _hashlib",shape="record"];
	"_sha3" [label="<f0> Extension| <f1> _sha3",shape="record"];
	"_blake2" [label="<f0> Extension| <f1> _blake2",shape="record"];
	"_sha256" [label="<f0> Extension| <f1> _sha256",shape="record"];
	"_md5" [label="<f0> Extension| <f1> _md5",shape="record"];
	"_sha1" [label="<f0> Extension| <f1> _sha1",shape="record"];
	"_sha512" [label="<f0> Extension| <f1> _sha512",shape="record"];
	"_random" [label="<f0> Extension| <f1> _random",shape="record"];
	"bisect" [label="<f0> SourceModule| <f1> bisect",shape="record"];
	"_bisect" [label="<f0> Extension| <f1> _bisect",shape="record"];
	"shutil" [label="<f0> SourceModule| <f1> shutil",shape="record"];
	"zipfile" [label="<f0> SourceModule| <f1> zipfile",shape="record"];
	"argparse" [label="<f0> SourceModule| <f1> argparse",shape="record"];
	"textwrap" [label="<f0> SourceModule| <f1> textwrap",shape="record"];
	"copy" [label="<f0> SourceModule| <f1> copy",shape="record"];
	"'org.python'" [label="<f0> MissingModule| <f1> 'org.python'",shape="record"];
	"gettext" [label="<f0> SourceModule| <f1> gettext",shape="record"];
	"py_compile" [label="<f0> SourceModule| <f1> py_compile",shape="record"];
	"os.path" [label="<f0> AliasNode| <f1> os.path",shape="record"];
	"importlib.machinery" [label="<f0> SourceModule| <f1> importlib.machinery",shape="record"];
	"importlib" [label="<f0> Package| <f1> importlib",shape="record"];
	"importlib._common" [label="<f0> SourceModule| <f1> importlib._common",shape="record"];
	"pathlib" [label="<f0> SourceModule| <f1> pathlib",shape="record"];
	"urllib.parse" [label="<f0> SourceModule| <f1> urllib.parse",shape="record"];
	"urllib" [label="<f0> Package| <f1> urllib",shape="record"];
	"urllib.urlopen" [label="<f0> MissingModule| <f1> urllib.urlopen",shape="record"];
	"urllib.urlencode" [label="<f0> MissingModule| <f1> urllib.urlencode",shape="record"];
	"unicodedata" [label="<f0> Extension| <f1> unicodedata",shape="record"];
	"_frozen_importlib_external" [label="<f0> MissingModule| <f1> _frozen_importlib_external",shape="record"];
	"_frozen_importlib" [label="<f0> ExcludedModule| <f1> _frozen_importlib",shape="record"];
	"importlib._bootstrap" [label="<f0> SourceModule| <f1> importlib._bootstrap",shape="record"];
	"_imp" [label="<f0> BuiltinModule| <f1> _imp",shape="record"];
	"importlib._bootstrap_external" [label="<f0> SourceModule| <f1> importlib._bootstrap_external",shape="record"];
	"importlib.metadata" [label="<f0> SourceModule| <f1> importlib.metadata",shape="record"];
	"pep517" [label="<f0> MissingModule| <f1> pep517",shape="record"];
	"importlib.abc" [label="<f0> SourceModule| <f1> importlib.abc",shape="record"];
	"configparser" [label="<f0> SourceModule| <f1> configparser",shape="record"];
	"email" [label="<f0> Package| <f1> email",shape="record"];
	"email.parser" [label="<f0> SourceModule| <f1> email.parser",shape="record"];
	"email._policybase" [label="<f0> SourceModule| <f1> email._policybase",shape="record"];
	"email.utils" [label="<f0> SourceModule| <f1> email.utils",shape="record"];
	"email._parseaddr" [label="<f0> SourceModule| <f1> email._parseaddr",shape="record"];
	"calendar" [label="<f0> SourceModule| <f1> calendar",shape="record"];
	"email.feedparser" [label="<f0> SourceModule| <f1> email.feedparser",shape="record"];
	"email.message" [label="<f0> SourceModule| <f1> email.message",shape="record"];
	"email.policy" [label="<f0> SourceModule| <f1> email.policy",shape="record"];
	"email.contentmanager" [label="<f0> SourceModule| <f1> email.contentmanager",shape="record"];
	"email.quoprimime" [label="<f0> SourceModule| <f1> email.quoprimime",shape="record"];
	"email.headerregistry" [label="<f0> SourceModule| <f1> email.headerregistry",shape="record"];
	"email.iterators" [label="<f0> SourceModule| <f1> email.iterators",shape="record"];
	"email.generator" [label="<f0> SourceModule| <f1> email.generator",shape="record"];
	"email._encoded_words" [label="<f0> SourceModule| <f1> email._encoded_words",shape="record"];
	"base64" [label="<f0> SourceModule| <f1> base64",shape="record"];
	"getopt" [label="<f0> SourceModule| <f1> getopt",shape="record"];
	"quopri" [label="<f0> SourceModule| <f1> quopri",shape="record"];
	"uu" [label="<f0> SourceModule| <f1> uu",shape="record"];
	"optparse" [label="<f0> SourceModule| <f1> optparse",shape="record"];
	"email._header_value_parser" [label="<f0> SourceModule| <f1> email._header_value_parser",shape="record"];
	"email.header" [label="<f0> SourceModule| <f1> email.header",shape="record"];
	"email.base64mime" [label="<f0> SourceModule| <f1> email.base64mime",shape="record"];
	"email.charset" [label="<f0> SourceModule| <f1> email.charset",shape="record"];
	"email.encoders" [label="<f0> SourceModule| <f1> email.encoders",shape="record"];
	"email.errors" [label="<f0> SourceModule| <f1> email.errors",shape="record"];
	"csv" [label="<f0> SourceModule| <f1> csv",shape="record"];
	"_csv" [label="<f0> Extension| <f1> _csv",shape="record"];
	"tokenize" [label="<f0> SourceModule| <f1> tokenize",shape="record"];
	"token" [label="<f0> SourceModule| <f1> token",shape="record"];
	"winreg" [label="<f0> MissingModule| <f1> winreg",shape="record"];
	"marshal" [label="<f0> BuiltinModule| <f1> marshal",shape="record"];
	"_warnings" [label="<f0> BuiltinModule| <f1> _warnings",shape="record"];
	"_io" [label="<f0> BuiltinModule| <f1> _io",shape="record"];
	"importlib.util" [label="<f0> SourceModule| <f1> importlib.util",shape="record"];
	"binascii" [label="<f0> Extension| <f1> binascii",shape="record"];
	"tarfile" [label="<f0> SourceModule| <f1> tarfile",shape="record"];
	"gzip" [label="<f0> SourceModule| <f1> gzip",shape="record"];
	"_compression" [label="<f0> SourceModule| <f1> _compression",shape="record"];
	"nt" [label="<f0> MissingModule| <f1> nt",shape="record"];
	"lzma" [label="<f0> SourceModule| <f1> lzma",shape="record"];
	"_lzma" [label="<f0> Extension| <f1> _lzma",shape="record"];
	"bz2" [label="<f0> SourceModule| <f1> bz2",shape="record"];
	"_bz2" [label="<f0> Extension| <f1> _bz2",shape="record"];
	"zlib" [label="<f0> Extension| <f1> zlib",shape="record"];
	"fnmatch" [label="<f0> SourceModule| <f1> fnmatch",shape="record"];
	"asyncio.selector_events" [label="<f0> SourceModule| <f1> asyncio.selector_events",shape="record"];
	"ssl" [label="<f0> SourceModule| <f1> ssl",shape="record"];
	"asyncio.proactor_events" [label="<f0> SourceModule| <f1> asyncio.proactor_events",shape="record"];
	"asyncio.base_subprocess" [label="<f0> SourceModule| <f1> asyncio.base_subprocess",shape="record"];
	"asyncio.threads" [label="<f0> SourceModule| <f1> asyncio.threads",shape="record"];
	"asyncio.subprocess" [label="<f0> SourceModule| <f1> asyncio.subprocess",shape="record"];
	"asyncio.streams" [label="<f0> SourceModule| <f1> asyncio.streams",shape="record"];
	"asyncio.queues" [label="<f0> SourceModule| <f1> asyncio.queues",shape="record"];
	"asyncio.runners" [label="<f0> SourceModule| <f1> asyncio.runners",shape="record"];
	"asyncio.base_events" [label="<f0> SourceModule| <f1> asyncio.base_events",shape="record"];
	"concurrent.futures" [label="<f0> Package| <f1> concurrent.futures",shape="record"];
	"concurrent.futures.thread" [label="<f0> SourceModule| <f1> concurrent.futures.thread",shape="record"];
	"queue" [label="<f0> SourceModule| <f1> queue",shape="record"];
	"_queue" [label="<f0> Extension| <f1> _queue",shape="record"];
	"concurrent.futures.process" [label="<f0> SourceModule| <f1> concurrent.futures.process",shape="record"];
	"multiprocessing.queues" [label="<f0> SourceModule| <f1> multiprocessing.queues",shape="record"];
	"multiprocessing.synchronize" [label="<f0> SourceModule| <f1> multiprocessing.synchronize",shape="record"];
	"multiprocessing.heap" [label="<f0> SourceModule| <f1> multiprocessing.heap",shape="record"];
	"mmap" [label="<f0> Extension| <f1> mmap",shape="record"];
	"multiprocessing.resource_tracker" [label="<f0> SourceModule| <f1> multiprocessing.resource_tracker",shape="record"];
	"_posixshmem" [label="<f0> Extension| <f1> _posixshmem",shape="record"];
	"multiprocessing.spawn" [label="<f0> SourceModule| <f1> multiprocessing.spawn",shape="record"];
	"multiprocessing.set_start_method" [label="<f0> MissingModule| <f1> multiprocessing.set_start_method",shape="record"];
	"multiprocessing.get_start_method" [label="<f0> MissingModule| <f1> multiprocessing.get_start_method",shape="record"];
	"runpy" [label="<f0> SourceModule| <f1> runpy",shape="record"];
	"pkgutil" [label="<f0> SourceModule| <f1> pkgutil",shape="record"];
	"multiprocessing.process" [label="<f0> SourceModule| <f1> multiprocessing.process",shape="record"];
	"multiprocessing.util" [label="<f0> SourceModule| <f1> multiprocessing.util",shape="record"];
	"multiprocessing.forkserver" [label="<f0> SourceModule| <f1> multiprocessing.forkserver",shape="record"];
	"multiprocessing.context" [label="<f0> SourceModule| <f1> multiprocessing.context",shape="record"];
	"multiprocessing.popen_spawn_win32" [label="<f0> SourceModule| <f1> multiprocessing.popen_spawn_win32",shape="record"];
	"multiprocessing.popen_forkserver" [label="<f0> SourceModule| <f1> multiprocessing.popen_forkserver",shape="record"];
	"multiprocessing.popen_spawn_posix" [label="<f0> SourceModule| <f1> multiprocessing.popen_spawn_posix",shape="record"];
	"multiprocessing.popen_fork" [label="<f0> SourceModule| <f1> multiprocessing.popen_fork",shape="record"];
	"multiprocessing.sharedctypes" [label="<f0> SourceModule| <f1> multiprocessing.sharedctypes",shape="record"];
	"multiprocessing.get_context" [label="<f0> MissingModule| <f1> multiprocessing.get_context",shape="record"];
	"ctypes" [label="<f0> Package| <f1> ctypes",shape="record"];
	"ctypes._endian" [label="<f0> SourceModule| <f1> ctypes._endian",shape="record"];
	"_ctypes" [label="<f0> Extension| <f1> _ctypes",shape="record"];
	"multiprocessing.pool" [label="<f0> SourceModule| <f1> multiprocessing.pool",shape="record"];
	"multiprocessing.dummy" [label="<f0> Package| <f1> multiprocessing.dummy",shape="record"];
	"multiprocessing.dummy.connection" [label="<f0> SourceModule| <f1> multiprocessing.dummy.connection",shape="record"];
	"multiprocessing.TimeoutError" [label="<f0> MissingModule| <f1> multiprocessing.TimeoutError",shape="record"];
	"multiprocessing.managers" [label="<f0> SourceModule| <f1> multiprocessing.managers",shape="record"];
	"multiprocessing.shared_memory" [label="<f0> SourceModule| <f1> multiprocessing.shared_memory",shape="record"];
	"secrets" [label="<f0> SourceModule| <f1> secrets",shape="record"];
	"hmac" [label="<f0> SourceModule| <f1> hmac",shape="record"];
	"_operator" [label="<f0> BuiltinModule| <f1> _operator",shape="record"];
	"multiprocessing.reduction" [label="<f0> SourceModule| <f1> multiprocessing.reduction",shape="record"];
	"multiprocessing.resource_sharer" [label="<f0> SourceModule| <f1> multiprocessing.resource_sharer",shape="record"];
	"_multiprocessing" [label="<f0> Extension| <f1> _multiprocessing",shape="record"];
	"multiprocessing.connection" [label="<f0> SourceModule| <f1> multiprocessing.connection",shape="record"];
	"xmlrpc.client" [label="<f0> SourceModule| <f1> xmlrpc.client",shape="record"];
	"xmlrpc" [label="<f0> Package| <f1> xmlrpc",shape="record"];
	"xml.parsers.expat" [label="<f0> SourceModule| <f1> xml.parsers.expat",shape="record"];
	"pyexpat" [label="<f0> Extension| <f1> pyexpat",shape="record"];
	"xml.parsers" [label="<f0> Package| <f1> xml.parsers",shape="record"];
	"xml" [label="<f0> Package| <f1> xml",shape="record"];
	"xml.sax.expatreader" [label="<f0> SourceModule| <f1> xml.sax.expatreader",shape="record"];
	"_weakref" [label="<f0> BuiltinModule| <f1> _weakref",shape="record"];
	"xml.sax.saxutils" [label="<f0> SourceModule| <f1> xml.sax.saxutils",shape="record"];
	"urllib.request" [label="<f0> SourceModule| <f1> urllib.request",shape="record"];
	"_scproxy" [label="<f0> Extension| <f1> _scproxy",shape="record"];
	"getpass" [label="<f0> SourceModule| <f1> getpass",shape="record"];
	"termios" [label="<f0> Extension| <f1> termios",shape="record"];
	"nturl2path" [label="<f0> SourceModule| <f1> nturl2path",shape="record"];
	"ftplib" [label="<f0> SourceModule| <f1> ftplib",shape="record"];
	"netrc" [label="<f0> SourceModule| <f1> netrc",shape="record"];
	"shlex" [label="<f0> SourceModule| <f1> shlex",shape="record"];
	"mimetypes" [label="<f0> SourceModule| <f1> mimetypes",shape="record"];
	"http.cookiejar" [label="<f0> SourceModule| <f1> http.cookiejar",shape="record"];
	"http" [label="<f0> Package| <f1> http",shape="record"];
	"urllib.response" [label="<f0> SourceModule| <f1> urllib.response",shape="record"];
	"urllib.error" [label="<f0> SourceModule| <f1> urllib.error",shape="record"];
	"xml.sax" [label="<f0> Package| <f1> xml.sax",shape="record"];
	"xml.sax.handler" [label="<f0> SourceModule| <f1> xml.sax.handler",shape="record"];
	"xml.sax._exceptions" [label="<f0> SourceModule| <f1> xml.sax._exceptions",shape="record"];
	"'java.lang'" [label="<f0> MissingModule| <f1> 'java.lang'",shape="record"];
	"xml.sax.xmlreader" [label="<f0> SourceModule| <f1> xml.sax.xmlreader",shape="record"];
	"http.client" [label="<f0> SourceModule| <f1> http.client",shape="record"];
	"multiprocessing.BufferTooShort" [label="<f0> MissingModule| <f1> multiprocessing.BufferTooShort",shape="record"];
	"multiprocessing.AuthenticationError" [label="<f0> MissingModule| <f1> multiprocessing.AuthenticationError",shape="record"];
	"multiprocessing" [label="<f0> Package| <f1> multiprocessing",shape="record"];
	"multiprocessing.RLock" [label="<f0> MissingModule| <f1> multiprocessing.RLock",shape="record"];
	"concurrent.futures._base" [label="<f0> SourceModule| <f1> concurrent.futures._base",shape="record"];
	"concurrent" [label="<f0> Package| <f1> concurrent",shape="record"];
	"asyncio.trsock" [label="<f0> SourceModule| <f1> asyncio.trsock",shape="record"];
	"asyncio.staggered" [label="<f0> SourceModule| <f1> asyncio.staggered",shape="record"];
	"asyncio.tasks" [label="<f0> SourceModule| <f1> asyncio.tasks",shape="record"];
	"_asyncio" [label="<f0> Extension| <f1> _asyncio",shape="record"];
	"asyncio.base_tasks" [label="<f0> SourceModule| <f1> asyncio.base_tasks",shape="record"];
	"asyncio.locks" [label="<f0> SourceModule| <f1> asyncio.locks",shape="record"];
	"asyncio.sslproto" [label="<f0> SourceModule| <f1> asyncio.sslproto",shape="record"];
	"asyncio.transports" [label="<f0> SourceModule| <f1> asyncio.transports",shape="record"];
	"asyncio.protocols" [label="<f0> SourceModule| <f1> asyncio.protocols",shape="record"];
	"asyncio.futures" [label="<f0> SourceModule| <f1> asyncio.futures",shape="record"];
	"asyncio.exceptions" [label="<f0> SourceModule| <f1> asyncio.exceptions",shape="record"];
	"asyncio.events" [label="<f0> SourceModule| <f1> asyncio.events",shape="record"];
	"asyncio.DefaultEventLoopPolicy" [label="<f0> MissingModule| <f1> asyncio.DefaultEventLoopPolicy",shape="record"];
	"inspect" [label="<f0> SourceModule| <f1> inspect",shape="record"];
	"dis" [label="<f0> SourceModule| <f1> dis",shape="record"];
	"opcode" [label="<f0> SourceModule| <f1> opcode",shape="record"];
	"_opcode" [label="<f0> Extension| <f1> _opcode",shape="record"];
	"ast" [label="<f0> SourceModule| <f1> ast",shape="record"];
	"_ast" [label="<f0> BuiltinModule| <f1> _ast",shape="record"];
	"contextlib" [label="<f0> SourceModule| <f1> contextlib",shape="record"];
	"builtins" [label="<f0> BuiltinModule| <f1> builtins",shape="record"];
	"pandas.tseries.holiday" [label="<f0> SourceModule| <f1> pandas.tseries.holiday",shape="record"];
	"dateutil.relativedelta" [label="<f0> SourceModule| <f1> dateutil.relativedelta",shape="record"];
	"dateutil" [label="<f0> Package| <f1> dateutil",shape="record"];
	"dateutil.rrule" [label="<f0> SourceModule| <f1> dateutil.rrule",shape="record"];
	"dateutil.parser" [label="<f0> Package| <f1> dateutil.parser",shape="record"];
	"dateutil.parser.isoparser" [label="<f0> SourceModule| <f1> dateutil.parser.isoparser",shape="record"];
	"dateutil.parser._parser" [label="<f0> SourceModule| <f1> dateutil.parser._parser",shape="record"];
	"six.moves.range" [label="<f0> MissingModule| <f1> six.moves.range",shape="record"];
	"six.moves._thread" [label="<f0> AliasNode| <f1> six.moves._thread",shape="record"];
	"six.moves" [label="<f0> RuntimePackage| <f1> six.moves",shape="record"];
	"six.moves.winreg" [label="<f0> MissingModule| <f1> six.moves.winreg",shape="record"];
	"dateutil.tz" [label="<f0> Package| <f1> dateutil.tz",shape="record"];
	"dateutil.tz.tz" [label="<f0> SourceModule| <f1> dateutil.tz.tz",shape="record"];
	"dateutil.zoneinfo" [label="<f0> Package| <f1> dateutil.zoneinfo",shape="record"];
	"json" [label="<f0> Package| <f1> json",shape="record"];
	"json.encoder" [label="<f0> SourceModule| <f1> json.encoder",shape="record"];
	"json.decoder" [label="<f0> SourceModule| <f1> json.decoder",shape="record"];
	"json.scanner" [label="<f0> SourceModule| <f1> json.scanner",shape="record"];
	"dateutil.tz.win" [label="<f0> SourceModule| <f1> dateutil.tz.win",shape="record"];
	"ctypes.wintypes" [label="<f0> SourceModule| <f1> ctypes.wintypes",shape="record"];
	"dateutil.tz._factories" [label="<f0> SourceModule| <f1> dateutil.tz._factories",shape="record"];
	"dateutil.tz._common" [label="<f0> SourceModule| <f1> dateutil.tz._common",shape="record"];
	"dateutil.tz.tzfile" [label="<f0> MissingModule| <f1> dateutil.tz.tzfile",shape="record"];
	"dateutil.easter" [label="<f0> SourceModule| <f1> dateutil.easter",shape="record"];
	"dateutil._version" [label="<f0> SourceModule| <f1> dateutil._version",shape="record"];
	"dateutil._common" [label="<f0> SourceModule| <f1> dateutil._common",shape="record"];
	"six" [label="<f0> SourceModule| <f1> six",shape="record"];
	"StringIO" [label="<f0> MissingModule| <f1> StringIO",shape="record"];
	"pandas.io.formats.format" [label="<f0> SourceModule| <f1> pandas.io.formats.format",shape="record"];
	"pandas.io.formats.csvs" [label="<f0> SourceModule| <f1> pandas.io.formats.csvs",shape="record"];
	"pandas.core.dtypes.generic" [label="<f0> SourceModule| <f1> pandas.core.dtypes.generic",shape="record"];
	"pandas.core.dtypes" [label="<f0> Package| <f1> pandas.core.dtypes",shape="record"];
	"pandas.core" [label="<f0> Package| <f1> pandas.core",shape="record"];
	"pandas.core.arraylike" [label="<f0> SourceModule| <f1> pandas.core.arraylike",shape="record"];
	"pandas.core.ops.common" [label="<f0> SourceModule| <f1> pandas.core.ops.common",shape="record"];
	"pandas.core.ops" [label="<f0> Package| <f1> pandas.core.ops",shape="record"];
	"pandas.core.ops.mask_ops" [label="<f0> SourceModule| <f1> pandas.core.ops.mask_ops",shape="record"];
	"pandas.core.ops.invalid" [label="<f0> SourceModule| <f1> pandas.core.ops.invalid",shape="record"];
	"pandas.core.ops.docstrings" [label="<f0> SourceModule| <f1> pandas.core.ops.docstrings",shape="record"];
	"pandas.core.ops.array_ops" [label="<f0> SourceModule| <f1> pandas.core.ops.array_ops",shape="record"];
	"pandas.core.ops.dispatch" [label="<f0> SourceModule| <f1> pandas.core.ops.dispatch",shape="record"];
	"pandas.core.computation.expressions" [label="<f0> SourceModule| <f1> pandas.core.computation.expressions",shape="record"];
	"numexpr" [label="<f0> MissingModule| <f1> numexpr",shape="record"];
	"pandas.core.computation.check" [label="<f0> SourceModule| <f1> pandas.core.computation.check",shape="record"];
	"pandas.compat._optional" [label="<f0> SourceModule| <f1> pandas.compat._optional",shape="record"];
	"pandas.util.version" [label="<f0> Package| <f1> pandas.util.version",shape="record"];
	"pandas.util" [label="<f0> Package| <f1> pandas.util",shape="record"];
	"pandas.core.util.hashing" [label="<f0> SourceModule| <f1> pandas.core.util.hashing",shape="record"];
	"pandas.core.util" [label="<f0> Package| <f1> pandas.core.util",shape="record"];
	"pandas.core.computation" [label="<f0> Package| <f1> pandas.core.computation",shape="record"];
	"pandas.core.computation.expr" [label="<f0> SourceModule| <f1> pandas.core.computation.expr",shape="record"];
	"pandas.core.computation.scope" [label="<f0> SourceModule| <f1> pandas.core.computation.scope",shape="record"];
	"pandas.core.computation.parsing" [label="<f0> SourceModule| <f1> pandas.core.computation.parsing",shape="record"];
	"pandas.core.computation.ops" [label="<f0> SourceModule| <f1> pandas.core.computation.ops",shape="record"];
	"pandas.core.computation.eval" [label="<f0> SourceModule| <f1> pandas.core.computation.eval",shape="record"];
	"pandas.core.computation.engines" [label="<f0> SourceModule| <f1> pandas.core.computation.engines",shape="record"];
	"pandas.core.computation.align" [label="<f0> SourceModule| <f1> pandas.core.computation.align",shape="record"];
	"pandas.util._validators" [label="<f0> SourceModule| <f1> pandas.util._validators",shape="record"];
	"pandas.core.computation.common" [label="<f0> SourceModule| <f1> pandas.core.computation.common",shape="record"];
	"pandas.core.dtypes.cast" [label="<f0> SourceModule| <f1> pandas.core.dtypes.cast",shape="record"];
	"pandas.core.arrays.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.arrays.timedeltas",shape="record"];
	"pandas.core.arrays._ranges" [label="<f0> SourceModule| <f1> pandas.core.arrays._ranges",shape="record"];
	"pandas.core.arrays.datetimelike" [label="<f0> SourceModule| <f1> pandas.core.arrays.datetimelike",shape="record"];
	"pandas.core.groupby.ops" [label="<f0> SourceModule| <f1> pandas.core.groupby.ops",shape="record"];
	"pandas.core.sorting" [label="<f0> SourceModule| <f1> pandas.core.sorting",shape="record"];
	"pandas.core.groupby.grouper" [label="<f0> SourceModule| <f1> pandas.core.groupby.grouper",shape="record"];
	"pandas.core.groupby.categorical" [label="<f0> SourceModule| <f1> pandas.core.groupby.categorical",shape="record"];
	"pandas.core.arrays.categorical" [label="<f0> SourceModule| <f1> pandas.core.arrays.categorical",shape="record"];
	"pandas.core.dtypes.concat" [label="<f0> SourceModule| <f1> pandas.core.dtypes.concat",shape="record"];
	"pandas.core.dtypes.astype" [label="<f0> SourceModule| <f1> pandas.core.dtypes.astype",shape="record"];
	"pandas.core.strings.object_array" [label="<f0> SourceModule| <f1> pandas.core.strings.object_array",shape="record"];
	"pandas.core.strings" [label="<f0> Package| <f1> pandas.core.strings",shape="record"];
	"pandas.core.strings.base" [label="<f0> SourceModule| <f1> pandas.core.strings.base",shape="record"];
	"pandas.core.accessor" [label="<f0> SourceModule| <f1> pandas.core.accessor",shape="record"];
	"pandas.core.groupby" [label="<f0> Package| <f1> pandas.core.groupby",shape="record"];
	"pandas.core.groupby.PanelGroupBy" [label="<f0> MissingModule| <f1> pandas.core.groupby.PanelGroupBy",shape="record"];
	"pandas.core.groupby.groupby" [label="<f0> SourceModule| <f1> pandas.core.groupby.groupby",shape="record"];
	"pandas.core._numba.kernels" [label="<f0> Package| <f1> pandas.core._numba.kernels",shape="record"];
	"pandas.core._numba.kernels.var_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.var_",shape="record"];
	"pandas.core._numba.kernels.shared" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.shared",shape="record"];
	"numba" [label="<f0> MissingModule| <f1> numba",shape="record"];
	"pandas.core._numba.kernels.sum_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.sum_",shape="record"];
	"'numba.extending'" [label="<f0> MissingModule| <f1> 'numba.extending'",shape="record"];
	"pandas.core._numba.kernels.min_max_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.min_max_",shape="record"];
	"pandas.core._numba.kernels.mean_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.mean_",shape="record"];
	"pandas.core.window" [label="<f0> Package| <f1> pandas.core.window",shape="record"];
	"pandas.core.window._Rolling_and_Expanding" [label="<f0> MissingModule| <f1> pandas.core.window._Rolling_and_Expanding",shape="record"];
	"pandas.core.window.expanding" [label="<f0> SourceModule| <f1> pandas.core.window.expanding",shape="record"];
	"pandas.core.window.doc" [label="<f0> SourceModule| <f1> pandas.core.window.doc",shape="record"];
	"pandas.core.shared_docs" [label="<f0> SourceModule| <f1> pandas.core.shared_docs",shape="record"];
	"pandas.core.indexers.objects" [label="<f0> SourceModule| <f1> pandas.core.indexers.objects",shape="record"];
	"pandas.core.window.ewm" [label="<f0> SourceModule| <f1> pandas.core.window.ewm",shape="record"];
	"pandas.core.window.online" [label="<f0> SourceModule| <f1> pandas.core.window.online",shape="record"];
	"pandas.core.window.numba_" [label="<f0> SourceModule| <f1> pandas.core.window.numba_",shape="record"];
	"pandas.core.window.common" [label="<f0> SourceModule| <f1> pandas.core.window.common",shape="record"];
	"pandas.core.util.numba_" [label="<f0> SourceModule| <f1> pandas.core.util.numba_",shape="record"];
	"pandas.core.internals.blocks" [label="<f0> SourceModule| <f1> pandas.core.internals.blocks",shape="record"];
	"pandas.core.array_algos.transforms" [label="<f0> SourceModule| <f1> pandas.core.array_algos.transforms",shape="record"];
	"pandas.core.array_algos.replace" [label="<f0> SourceModule| <f1> pandas.core.array_algos.replace",shape="record"];
	"pandas.core.array_algos.quantile" [label="<f0> SourceModule| <f1> pandas.core.array_algos.quantile",shape="record"];
	"pandas.core.array_algos.putmask" [label="<f0> SourceModule| <f1> pandas.core.array_algos.putmask",shape="record"];
	"pandas.core.groupby.indexing" [label="<f0> SourceModule| <f1> pandas.core.groupby.indexing",shape="record"];
	"pandas.core.arrays.string_arrow" [label="<f0> SourceModule| <f1> pandas.core.arrays.string_arrow",shape="record"];
	"pandas.core.arrays.masked" [label="<f0> SourceModule| <f1> pandas.core.arrays.masked",shape="record"];
	"pandas.core.arrays._utils" [label="<f0> SourceModule| <f1> pandas.core.arrays._utils",shape="record"];
	"pandas.core.array_algos.masked_reductions" [label="<f0> SourceModule| <f1> pandas.core.array_algos.masked_reductions",shape="record"];
	"pandas.core.array_algos.masked_accumulations" [label="<f0> SourceModule| <f1> pandas.core.array_algos.masked_accumulations",shape="record"];
	"pandas.core.dtypes.base" [label="<f0> SourceModule| <f1> pandas.core.dtypes.base",shape="record"];
	"pandas.core.arrays.arrow._arrow_utils" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow._arrow_utils",shape="record"];
	"pyarrow.compute" [label="<f0> SourceModule| <f1> pyarrow.compute",shape="record"];
	"pyarrow.vendored.docscrape" [label="<f0> SourceModule| <f1> pyarrow.vendored.docscrape",shape="record"];
	"sphinx" [label="<f0> MissingModule| <f1> sphinx",shape="record"];
	"pydoc" [label="<f0> SourceModule| <f1> pydoc",shape="record"];
	"webbrowser" [label="<f0> SourceModule| <f1> webbrowser",shape="record"];
	"glob" [label="<f0> SourceModule| <f1> glob",shape="record"];
	"http.server" [label="<f0> SourceModule| <f1> http.server",shape="record"];
	"socketserver" [label="<f0> SourceModule| <f1> socketserver",shape="record"];
	"html" [label="<f0> Package| <f1> html",shape="record"];
	"html.entities" [label="<f0> SourceModule| <f1> html.entities",shape="record"];
	"pydoc_data.topics" [label="<f0> SourceModule| <f1> pydoc_data.topics",shape="record"];
	"pydoc_data" [label="<f0> Package| <f1> pydoc_data",shape="record"];
	"tty" [label="<f0> SourceModule| <f1> tty",shape="record"];
	"sysconfig" [label="<f0> SourceModule| <f1> sysconfig",shape="record"];
	"_sysconfigdata__darwin_darwin" [label="<f0> SourceModule| <f1> _sysconfigdata__darwin_darwin",shape="record"];
	"_aix_support" [label="<f0> SourceModule| <f1> _aix_support",shape="record"];
	"_bootsubprocess" [label="<f0> SourceModule| <f1> _bootsubprocess",shape="record"];
	"_osx_support" [label="<f0> SourceModule| <f1> _osx_support",shape="record"];
	"platform" [label="<f0> SourceModule| <f1> platform",shape="record"];
	"vms_lib" [label="<f0> MissingModule| <f1> vms_lib",shape="record"];
	"java" [label="<f0> MissingModule| <f1> java",shape="record"];
	"plistlib" [label="<f0> SourceModule| <f1> plistlib",shape="record"];
	"_winreg" [label="<f0> MissingModule| <f1> _winreg",shape="record"];
	"pyarrow.vendored" [label="<f0> Package| <f1> pyarrow.vendored",shape="record"];
	"pyarrow._compute_docstrings" [label="<f0> SourceModule| <f1> pyarrow._compute_docstrings",shape="record"];
	"pyarrow._compute" [label="<f0> Extension| <f1> pyarrow._compute",shape="record"];
	"pandas.core.arrays.numeric" [label="<f0> SourceModule| <f1> pandas.core.arrays.numeric",shape="record"];
	"pandas.core.tools.numeric" [label="<f0> SourceModule| <f1> pandas.core.tools.numeric",shape="record"];
	"pandas.core.tools" [label="<f0> Package| <f1> pandas.core.tools",shape="record"];
	"pandas.core.arrays.boolean" [label="<f0> SourceModule| <f1> pandas.core.arrays.boolean",shape="record"];
	"pandas.core.arrays.arrow" [label="<f0> Package| <f1> pandas.core.arrays.arrow",shape="record"];
	"pandas.core.arrays.arrow.accessors" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.accessors",shape="record"];
	"pandas.core.arrays._arrow_string_mixins" [label="<f0> SourceModule| <f1> pandas.core.arrays._arrow_string_mixins",shape="record"];
	"pandas.core.apply" [label="<f0> SourceModule| <f1> pandas.core.apply",shape="record"];
	"pandas.core._numba.extensions" [label="<f0> SourceModule| <f1> pandas.core._numba.extensions",shape="record"];
	"'numba.typed'" [label="<f0> MissingModule| <f1> 'numba.typed'",shape="record"];
	"'numba.core'" [label="<f0> MissingModule| <f1> 'numba.core'",shape="record"];
	"pandas.core._numba.executor" [label="<f0> SourceModule| <f1> pandas.core._numba.executor",shape="record"];
	"pandas.core._numba" [label="<f0> Package| <f1> pandas.core._numba",shape="record"];
	"pandas.core.groupby.numba_" [label="<f0> SourceModule| <f1> pandas.core.groupby.numba_",shape="record"];
	"pandas.core.groupby.base" [label="<f0> SourceModule| <f1> pandas.core.groupby.base",shape="record"];
	"pandas.core.arrays.period" [label="<f0> SourceModule| <f1> pandas.core.arrays.period",shape="record"];
	"pandas.core.arrays.arrow.extension_types" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.extension_types",shape="record"];
	"pickletools" [label="<f0> SourceModule| <f1> pickletools",shape="record"];
	"doctest" [label="<f0> SourceModule| <f1> doctest",shape="record"];
	"unittest" [label="<f0> Package| <f1> unittest",shape="record"];
	"unittest.async_case" [label="<f0> SourceModule| <f1> unittest.async_case",shape="record"];
	"unittest.signals" [label="<f0> SourceModule| <f1> unittest.signals",shape="record"];
	"unittest.main" [label="<f0> SourceModule| <f1> unittest.main",shape="record"];
	"unittest.runner" [label="<f0> SourceModule| <f1> unittest.runner",shape="record"];
	"unittest.loader" [label="<f0> SourceModule| <f1> unittest.loader",shape="record"];
	"unittest.suite" [label="<f0> SourceModule| <f1> unittest.suite",shape="record"];
	"unittest.case" [label="<f0> SourceModule| <f1> unittest.case",shape="record"];
	"unittest._log" [label="<f0> SourceModule| <f1> unittest._log",shape="record"];
	"unittest.result" [label="<f0> SourceModule| <f1> unittest.result",shape="record"];
	"unittest.util" [label="<f0> SourceModule| <f1> unittest.util",shape="record"];
	"pdb" [label="<f0> SourceModule| <f1> pdb",shape="record"];
	"readline" [label="<f0> Extension| <f1> readline",shape="record"];
	"code" [label="<f0> SourceModule| <f1> code",shape="record"];
	"codeop" [label="<f0> SourceModule| <f1> codeop",shape="record"];
	"bdb" [label="<f0> SourceModule| <f1> bdb",shape="record"];
	"cmd" [label="<f0> SourceModule| <f1> cmd",shape="record"];
	"difflib" [label="<f0> SourceModule| <f1> difflib",shape="record"];
	"pandas.core.arrays.interval" [label="<f0> SourceModule| <f1> pandas.core.arrays.interval",shape="record"];
	"pandas.tseries.frequencies" [label="<f0> SourceModule| <f1> pandas.tseries.frequencies",shape="record"];
	"pandas.core.indexers" [label="<f0> Package| <f1> pandas.core.indexers",shape="record"];
	"pandas.core.indexers.utils" [label="<f0> SourceModule| <f1> pandas.core.indexers.utils",shape="record"];
	"pandas.core.arrays._mixins" [label="<f0> SourceModule| <f1> pandas.core.arrays._mixins",shape="record"];
	"pandas.core.array_algos.datetimelike_accumulations" [label="<f0> SourceModule| <f1> pandas.core.array_algos.datetimelike_accumulations",shape="record"];
	"pandas.core.array_algos" [label="<f0> Package| <f1> pandas.core.array_algos",shape="record"];
	"pandas.compat.numpy.function" [label="<f0> SourceModule| <f1> pandas.compat.numpy.function",shape="record"];
	"numpy.ndarray" [label="<f0> MissingModule| <f1> numpy.ndarray",shape="record"];
	"pandas.compat.numpy" [label="<f0> Package| <f1> pandas.compat.numpy",shape="record"];
	"pandas.core.arrays.datetimes" [label="<f0> SourceModule| <f1> pandas.core.arrays.datetimes",shape="record"];
	"pyarrow" [label="<f0> Package| <f1> pyarrow",shape="record"];
	"pyarrow.vendored.version" [label="<f0> SourceModule| <f1> pyarrow.vendored.version",shape="record"];
	"pyarrow.substrait" [label="<f0> SourceModule| <f1> pyarrow.substrait",shape="record"];
	"pyarrow.parquet.encryption" [label="<f0> SourceModule| <f1> pyarrow.parquet.encryption",shape="record"];
	"pyarrow.parquet.core" [label="<f0> SourceModule| <f1> pyarrow.parquet.core",shape="record"];
	"pyarrow.parquet" [label="<f0> Package| <f1> pyarrow.parquet",shape="record"];
	"pyarrow.pandas_compat" [label="<f0> SourceModule| <f1> pyarrow.pandas_compat",shape="record"];
	"'pandas.api.internals'" [label="<f0> MissingModule| <f1> 'pandas.api.internals'",shape="record"];
	"pyarrow.orc" [label="<f0> SourceModule| <f1> pyarrow.orc",shape="record"];
	"pyarrow.jvm" [label="<f0> SourceModule| <f1> pyarrow.jvm",shape="record"];
	"pyarrow.json" [label="<f0> SourceModule| <f1> pyarrow.json",shape="record"];
	"pyarrow.interchange.from_dataframe" [label="<f0> SourceModule| <f1> pyarrow.interchange.from_dataframe",shape="record"];
	"pyarrow.interchange.dataframe" [label="<f0> SourceModule| <f1> pyarrow.interchange.dataframe",shape="record"];
	"pyarrow.interchange.column" [label="<f0> SourceModule| <f1> pyarrow.interchange.column",shape="record"];
	"pyarrow.interchange.buffer" [label="<f0> SourceModule| <f1> pyarrow.interchange.buffer",shape="record"];
	"pyarrow.interchange" [label="<f0> Package| <f1> pyarrow.interchange",shape="record"];
	"pyarrow.dataset" [label="<f0> SourceModule| <f1> pyarrow.dataset",shape="record"];
	"pyarrow.cuda" [label="<f0> SourceModule| <f1> pyarrow.cuda",shape="record"];
	"'pyarrow._cuda'" [label="<f0> MissingModule| <f1> 'pyarrow._cuda'",shape="record"];
	"pyarrow.csv" [label="<f0> SourceModule| <f1> pyarrow.csv",shape="record"];
	"pyarrow.conftest" [label="<f0> SourceModule| <f1> pyarrow.conftest",shape="record"];
	"'pyarrow.gandiva'" [label="<f0> MissingModule| <f1> 'pyarrow.gandiva'",shape="record"];
	"fastparquet" [label="<f0> MissingModule| <f1> fastparquet",shape="record"];
	"cython" [label="<f0> MissingModule| <f1> cython",shape="record"];
	"pyarrow.tests.util" [label="<f0> SourceModule| <f1> pyarrow.tests.util",shape="record"];
	"pyarrow.tests" [label="<f0> Package| <f1> pyarrow.tests",shape="record"];
	"psutil" [label="<f0> MissingModule| <f1> psutil",shape="record"];
	"pytest" [label="<f0> MissingModule| <f1> pytest",shape="record"];
	"pyarrow.cffi" [label="<f0> SourceModule| <f1> pyarrow.cffi",shape="record"];
	"cffi" [label="<f0> Package| <f1> cffi",shape="record"];
	"cffi.error" [label="<f0> SourceModule| <f1> cffi.error",shape="record"];
	"cffi.api" [label="<f0> SourceModule| <f1> cffi.api",shape="record"];
	"ctypes.util" [label="<f0> SourceModule| <f1> ctypes.util",shape="record"];
	"ctypes._aix" [label="<f0> SourceModule| <f1> ctypes._aix",shape="record"];
	"ctypes.macholib.dyld" [label="<f0> SourceModule| <f1> ctypes.macholib.dyld",shape="record"];
	"ctypes.macholib" [label="<f0> Package| <f1> ctypes.macholib",shape="record"];
	"ctypes.macholib.dylib" [label="<f0> SourceModule| <f1> ctypes.macholib.dylib",shape="record"];
	"ctypes.macholib.framework" [label="<f0> SourceModule| <f1> ctypes.macholib.framework",shape="record"];
	"cffi.recompiler" [label="<f0> SourceModule| <f1> cffi.recompiler",shape="record"];
	"cffi.cffi_opcode" [label="<f0> SourceModule| <f1> cffi.cffi_opcode",shape="record"];
	"cffi._shimmed_dist_utils" [label="<f0> SourceModule| <f1> cffi._shimmed_dist_utils",shape="record"];
	"distutils.msvc9compiler" [label="<f0> SourceModule| <f1> distutils.msvc9compiler",shape="record"];
	"distutils.util" [label="<f0> SourceModule| <f1> distutils.util",shape="record"];
	"distutils.filelist" [label="<f0> SourceModule| <f1> distutils.filelist",shape="record"];
	"distutils.debug" [label="<f0> SourceModule| <f1> distutils.debug",shape="record"];
	"distutils.file_util" [label="<f0> SourceModule| <f1> distutils.file_util",shape="record"];
	"distutils.spawn" [label="<f0> SourceModule| <f1> distutils.spawn",shape="record"];
	"distutils.dep_util" [label="<f0> SourceModule| <f1> distutils.dep_util",shape="record"];
	"distutils.errors" [label="<f0> SourceModule| <f1> distutils.errors",shape="record"];
	"distutils.dir_util" [label="<f0> SourceModule| <f1> distutils.dir_util",shape="record"];
	"distutils.core" [label="<f0> SourceModule| <f1> distutils.core",shape="record"];
	"distutils.extension" [label="<f0> SourceModule| <f1> distutils.extension",shape="record"];
	"distutils.text_file" [label="<f0> SourceModule| <f1> distutils.text_file",shape="record"];
	"distutils.config" [label="<f0> SourceModule| <f1> distutils.config",shape="record"];
	"cgi" [label="<f0> SourceModule| <f1> cgi",shape="record"];
	"distutils.cmd" [label="<f0> SourceModule| <f1> distutils.cmd",shape="record"];
	"distutils.fancy_getopt" [label="<f0> SourceModule| <f1> distutils.fancy_getopt",shape="record"];
	"distutils.archive_util" [label="<f0> SourceModule| <f1> distutils.archive_util",shape="record"];
	"distutils.dist" [label="<f0> SourceModule| <f1> distutils.dist",shape="record"];
	"distutils.versionpredicate" [label="<f0> SourceModule| <f1> distutils.versionpredicate",shape="record"];
	"distutils.version" [label="<f0> SourceModule| <f1> distutils.version",shape="record"];
	"distutils.command" [label="<f0> Package| <f1> distutils.command",shape="record"];
	"distutils.command.build_ext" [label="<f0> SourceModule| <f1> distutils.command.build_ext",shape="record"];
	"distutils._msvccompiler" [label="<f0> SourceModule| <f1> distutils._msvccompiler",shape="record"];
	"site" [label="<f0> SourceModule| <f1> site",shape="record"];
	"usercustomize" [label="<f0> MissingModule| <f1> usercustomize",shape="record"];
	"sitecustomize" [label="<f0> MissingModule| <f1> sitecustomize",shape="record"];
	"rlcompleter" [label="<f0> SourceModule| <f1> rlcompleter",shape="record"];
	"_sitebuiltins" [label="<f0> SourceModule| <f1> _sitebuiltins",shape="record"];
	"distutils.ccompiler" [label="<f0> SourceModule| <f1> distutils.ccompiler",shape="record"];
	"distutils.sysconfig" [label="<f0> SourceModule| <f1> distutils.sysconfig",shape="record"];
	"distutils.log" [label="<f0> SourceModule| <f1> distutils.log",shape="record"];
	"distutils" [label="<f0> Package| <f1> distutils",shape="record"];
	"setuptools" [label="<f0> Package| <f1> setuptools",shape="record"];
	"setuptools._vendor.pyparsing" [label="<f0> SourceModule| <f1> setuptools._vendor.pyparsing",shape="record"];
	"uuid" [label="<f0> SourceModule| <f1> uuid",shape="record"];
	"_uuid" [label="<f0> Extension| <f1> _uuid",shape="record"];
	"__builtin__" [label="<f0> MissingModule| <f1> __builtin__",shape="record"];
	"ordereddict" [label="<f0> MissingModule| <f1> ordereddict",shape="record"];
	"collections.MutableMapping" [label="<f0> MissingModule| <f1> collections.MutableMapping",shape="record"];
	"collections.Iterable" [label="<f0> MissingModule| <f1> collections.Iterable",shape="record"];
	"setuptools._vendor.packaging.version" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.version",shape="record"];
	"setuptools._vendor.packaging.utils" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.utils",shape="record"];
	"setuptools._vendor.packaging.tags" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.tags",shape="record"];
	"_manylinux" [label="<f0> MissingModule| <f1> _manylinux",shape="record"];
	"imp" [label="<f0> SourceModule| <f1> imp",shape="record"];
	"setuptools._vendor.packaging.specifiers" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.specifiers",shape="record"];
	"setuptools._vendor.packaging.requirements" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.requirements",shape="record"];
	"'setuptools.extern.pyparsing'" [label="<f0> MissingModule| <f1> 'setuptools.extern.pyparsing'",shape="record"];
	"setuptools._vendor.packaging.markers" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.markers",shape="record"];
	"setuptools._vendor.packaging._typing" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._typing",shape="record"];
	"setuptools._vendor.packaging._structures" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._structures",shape="record"];
	"setuptools._vendor.packaging._compat" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._compat",shape="record"];
	"setuptools._vendor.packaging.__about__" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.__about__",shape="record"];
	"setuptools._vendor.packaging" [label="<f0> Package| <f1> setuptools._vendor.packaging",shape="record"];
	"setuptools._vendor.ordered_set" [label="<f0> SourceModule| <f1> setuptools._vendor.ordered_set",shape="record"];
	"collections.Sequence" [label="<f0> MissingModule| <f1> collections.Sequence",shape="record"];
	"collections.MutableSet" [label="<f0> MissingModule| <f1> collections.MutableSet",shape="record"];
	"setuptools._vendor.more_itertools.recipes" [label="<f0> SourceModule| <f1> setuptools._vendor.more_itertools.recipes",shape="record"];
	"setuptools._vendor.more_itertools.more" [label="<f0> SourceModule| <f1> setuptools._vendor.more_itertools.more",shape="record"];
	"setuptools._vendor.more_itertools" [label="<f0> Package| <f1> setuptools._vendor.more_itertools",shape="record"];
	"setuptools._vendor" [label="<f0> Package| <f1> setuptools._vendor",shape="record"];
	"syslog" [label="<f0> Extension| <f1> syslog",shape="record"];
	"setuptools.msvc" [label="<f0> SourceModule| <f1> setuptools.msvc",shape="record"];
	"'setuptools.extern.more_itertools'" [label="<f0> MissingModule| <f1> 'setuptools.extern.more_itertools'",shape="record"];
	"'setuptools.extern.packaging.version'" [label="<f0> MissingModule| <f1> 'setuptools.extern.packaging.version'",shape="record"];
	"setuptools.monkey" [label="<f0> SourceModule| <f1> setuptools.monkey",shape="record"];
	"setuptools.depends" [label="<f0> SourceModule| <f1> setuptools.depends",shape="record"];
	"setuptools._imp" [label="<f0> SourceModule| <f1> setuptools._imp",shape="record"];
	"setuptools.py34compat" [label="<f0> SourceModule| <f1> setuptools.py34compat",shape="record"];
	"setuptools.dist" [label="<f0> SourceModule| <f1> setuptools.dist",shape="record"];
	"setuptools.installer" [label="<f0> SourceModule| <f1> setuptools.installer",shape="record"];
	"setuptools.wheel" [label="<f0> SourceModule| <f1> setuptools.wheel",shape="record"];
	"setuptools.command.egg_info" [label="<f0> SourceModule| <f1> setuptools.command.egg_info",shape="record"];
	"setuptools.glob" [label="<f0> SourceModule| <f1> setuptools.glob",shape="record"];
	"setuptools.unicode_utils" [label="<f0> SourceModule| <f1> setuptools.unicode_utils",shape="record"];
	"setuptools.command.bdist_egg" [label="<f0> SourceModule| <f1> setuptools.command.bdist_egg",shape="record"];
	"setuptools.command.setopt" [label="<f0> SourceModule| <f1> setuptools.command.setopt",shape="record"];
	"setuptools.command.sdist" [label="<f0> SourceModule| <f1> setuptools.command.sdist",shape="record"];
	"setuptools.command.py36compat" [label="<f0> SourceModule| <f1> setuptools.command.py36compat",shape="record"];
	"distutils.command.sdist" [label="<f0> SourceModule| <f1> distutils.command.sdist",shape="record"];
	"'setuptools.extern.packaging.utils'" [label="<f0> MissingModule| <f1> 'setuptools.extern.packaging.utils'",shape="record"];
	"'setuptools.extern.packaging.tags'" [label="<f0> MissingModule| <f1> 'setuptools.extern.packaging.tags'",shape="record"];
	"pkg_resources" [label="<f0> Package| <f1> pkg_resources",shape="record"];
	"packaging.version" [label="<f0> SourceModule| <f1> packaging.version",shape="record"];
	"packaging.utils" [label="<f0> SourceModule| <f1> packaging.utils",shape="record"];
	"packaging.tags" [label="<f0> SourceModule| <f1> packaging.tags",shape="record"];
	"packaging.specifiers" [label="<f0> SourceModule| <f1> packaging.specifiers",shape="record"];
	"packaging.requirements" [label="<f0> SourceModule| <f1> packaging.requirements",shape="record"];
	"packaging.metadata" [label="<f0> SourceModule| <f1> packaging.metadata",shape="record"];
	"packaging.markers" [label="<f0> SourceModule| <f1> packaging.markers",shape="record"];
	"packaging.licenses._spdx" [label="<f0> SourceModule| <f1> packaging.licenses._spdx",shape="record"];
	"packaging.licenses" [label="<f0> Package| <f1> packaging.licenses",shape="record"];
	"packaging._tokenizer" [label="<f0> SourceModule| <f1> packaging._tokenizer",shape="record"];
	"packaging._structures" [label="<f0> SourceModule| <f1> packaging._structures",shape="record"];
	"packaging._parser" [label="<f0> SourceModule| <f1> packaging._parser",shape="record"];
	"packaging._musllinux" [label="<f0> SourceModule| <f1> packaging._musllinux",shape="record"];
	"packaging._manylinux" [label="<f0> SourceModule| <f1> packaging._manylinux",shape="record"];
	"packaging._elffile" [label="<f0> SourceModule| <f1> packaging._elffile",shape="record"];
	"packaging" [label="<f0> Package| <f1> packaging",shape="record"];
	"pkg_resources._vendor.pyparsing" [label="<f0> SourceModule| <f1> pkg_resources._vendor.pyparsing",shape="record"];
	"pkg_resources._vendor.packaging.version" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.version",shape="record"];
	"pkg_resources._vendor.packaging.utils" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.utils",shape="record"];
	"pkg_resources._vendor.packaging.tags" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.tags",shape="record"];
	"pkg_resources._vendor.packaging.specifiers" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.specifiers",shape="record"];
	"pkg_resources._vendor.packaging.requirements" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.requirements",shape="record"];
	"'pkg_resources.extern.pyparsing'" [label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'",shape="record"];
	"pkg_resources._vendor.packaging.markers" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.markers",shape="record"];
	"pkg_resources._vendor.packaging._typing" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging._typing",shape="record"];
	"pkg_resources._vendor.packaging._structures" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging._structures",shape="record"];
	"pkg_resources._vendor.packaging._compat" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging._compat",shape="record"];
	"pkg_resources._vendor.packaging.__about__" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.__about__",shape="record"];
	"pkg_resources._vendor.packaging" [label="<f0> Package| <f1> pkg_resources._vendor.packaging",shape="record"];
	"pkg_resources._vendor.appdirs" [label="<f0> SourceModule| <f1> pkg_resources._vendor.appdirs",shape="record"];
	"'win32com.shell'" [label="<f0> MissingModule| <f1> 'win32com.shell'",shape="record"];
	"'com.sun'" [label="<f0> MissingModule| <f1> 'com.sun'",shape="record"];
	"com" [label="<f0> MissingModule| <f1> com",shape="record"];
	"win32api" [label="<f0> MissingModule| <f1> win32api",shape="record"];
	"win32com" [label="<f0> MissingModule| <f1> win32com",shape="record"];
	"pkg_resources._vendor" [label="<f0> Package| <f1> pkg_resources._vendor",shape="record"];
	"pkg_resources.extern.packaging" [label="<f0> MissingModule| <f1> pkg_resources.extern.packaging",shape="record"];
	"pkg_resources.extern.appdirs" [label="<f0> MissingModule| <f1> pkg_resources.extern.appdirs",shape="record"];
	"pkg_resources.extern" [label="<f0> Package| <f1> pkg_resources.extern",shape="record"];
	"setuptools.config" [label="<f0> SourceModule| <f1> setuptools.config",shape="record"];
	"'setuptools.extern.packaging.specifiers'" [label="<f0> MissingModule| <f1> 'setuptools.extern.packaging.specifiers'",shape="record"];
	"setuptools.command" [label="<f0> Package| <f1> setuptools.command",shape="record"];
	"distutils.command.bdist" [label="<f0> SourceModule| <f1> distutils.command.bdist",shape="record"];
	"setuptools.extern.ordered_set" [label="<f0> MissingModule| <f1> setuptools.extern.ordered_set",shape="record"];
	"setuptools.extern.packaging" [label="<f0> MissingModule| <f1> setuptools.extern.packaging",shape="record"];
	"setuptools.extern" [label="<f0> Package| <f1> setuptools.extern",shape="record"];
	"setuptools.windows_support" [label="<f0> SourceModule| <f1> setuptools.windows_support",shape="record"];
	"setuptools.extension" [label="<f0> SourceModule| <f1> setuptools.extension",shape="record"];
	"setuptools.version" [label="<f0> SourceModule| <f1> setuptools.version",shape="record"];
	"setuptools._deprecation_warning" [label="<f0> SourceModule| <f1> setuptools._deprecation_warning",shape="record"];
	"_distutils_hack.override" [label="<f0> SourceModule| <f1> _distutils_hack.override",shape="record"];
	"_distutils_hack" [label="<f0> Package| <f1> _distutils_hack",shape="record"];
	"cffi.verifier" [label="<f0> SourceModule| <f1> cffi.verifier",shape="record"];
	"_cffi_backend" [label="<f0> Extension| <f1> _cffi_backend",shape="record"];
	"collections.Callable" [label="<f0> MissingModule| <f1> collections.Callable",shape="record"];
	"cffi.lock" [label="<f0> SourceModule| <f1> cffi.lock",shape="record"];
	"_dummy_thread" [label="<f0> MissingModule| <f1> _dummy_thread",shape="record"];
	"dummy_thread" [label="<f0> MissingModule| <f1> dummy_thread",shape="record"];
	"thread" [label="<f0> MissingModule| <f1> thread",shape="record"];
	"cffi.pkgconfig" [label="<f0> SourceModule| <f1> cffi.pkgconfig",shape="record"];
	"cffi.vengine_cpy" [label="<f0> SourceModule| <f1> cffi.vengine_cpy",shape="record"];
	"cffi._imp_emulation" [label="<f0> SourceModule| <f1> cffi._imp_emulation",shape="record"];
	"cffi.vengine_gen" [label="<f0> SourceModule| <f1> cffi.vengine_gen",shape="record"];
	"cffi.ffiplatform" [label="<f0> SourceModule| <f1> cffi.ffiplatform",shape="record"];
	"cStringIO" [label="<f0> MissingModule| <f1> cStringIO",shape="record"];
	"cffi.cparser" [label="<f0> SourceModule| <f1> cffi.cparser",shape="record"];
	"pycparser.lextab" [label="<f0> SourceModule| <f1> pycparser.lextab",shape="record"];
	"pycparser.yacctab" [label="<f0> SourceModule| <f1> pycparser.yacctab",shape="record"];
	"pycparser" [label="<f0> Package| <f1> pycparser",shape="record"];
	"pycparser.c_parser" [label="<f0> SourceModule| <f1> pycparser.c_parser",shape="record"];
	"pycparser.ast_transforms" [label="<f0> SourceModule| <f1> pycparser.ast_transforms",shape="record"];
	"pycparser.plyparser" [label="<f0> SourceModule| <f1> pycparser.plyparser",shape="record"];
	"pycparser.c_lexer" [label="<f0> SourceModule| <f1> pycparser.c_lexer",shape="record"];
	"pycparser.ply.lex" [label="<f0> SourceModule| <f1> pycparser.ply.lex",shape="record"];
	"pycparser.ply.yacc" [label="<f0> SourceModule| <f1> pycparser.ply.yacc",shape="record"];
	"cPickle" [label="<f0> MissingModule| <f1> cPickle",shape="record"];
	"pycparser.ply" [label="<f0> Package| <f1> pycparser.ply",shape="record"];
	"pycparser.c_ast" [label="<f0> SourceModule| <f1> pycparser.c_ast",shape="record"];
	"cffi.commontypes" [label="<f0> SourceModule| <f1> cffi.commontypes",shape="record"];
	"cffi._pycparser" [label="<f0> MissingModule| <f1> cffi._pycparser",shape="record"];
	"cffi.model" [label="<f0> SourceModule| <f1> cffi.model",shape="record"];
	"pyarrow.benchmark" [label="<f0> SourceModule| <f1> pyarrow.benchmark",shape="record"];
	"pyarrow.acero" [label="<f0> SourceModule| <f1> pyarrow.acero",shape="record"];
	"pyarrow._substrait" [label="<f0> Extension| <f1> pyarrow._substrait",shape="record"];
	"pyarrow._s3fs" [label="<f0> Extension| <f1> pyarrow._s3fs",shape="record"];
	"pyarrow._parquet_encryption" [label="<f0> Extension| <f1> pyarrow._parquet_encryption",shape="record"];
	"pyarrow._parquet" [label="<f0> Extension| <f1> pyarrow._parquet",shape="record"];
	"pyarrow._orc" [label="<f0> Extension| <f1> pyarrow._orc",shape="record"];
	"pyarrow._json" [label="<f0> Extension| <f1> pyarrow._json",shape="record"];
	"pyarrow._hdfs" [label="<f0> Extension| <f1> pyarrow._hdfs",shape="record"];
	"pyarrow._gcsfs" [label="<f0> Extension| <f1> pyarrow._gcsfs",shape="record"];
	"pyarrow._fs" [label="<f0> Extension| <f1> pyarrow._fs",shape="record"];
	"pyarrow._flight" [label="<f0> Extension| <f1> pyarrow._flight",shape="record"];
	"pyarrow._dataset_parquet_encryption" [label="<f0> Extension| <f1> pyarrow._dataset_parquet_encryption",shape="record"];
	"pyarrow._dataset_parquet" [label="<f0> Extension| <f1> pyarrow._dataset_parquet",shape="record"];
	"pyarrow._dataset_orc" [label="<f0> Extension| <f1> pyarrow._dataset_orc",shape="record"];
	"pyarrow._dataset" [label="<f0> Extension| <f1> pyarrow._dataset",shape="record"];
	"pyarrow._csv" [label="<f0> Extension| <f1> pyarrow._csv",shape="record"];
	"pyarrow._azurefs" [label="<f0> Extension| <f1> pyarrow._azurefs",shape="record"];
	"pyarrow._acero" [label="<f0> Extension| <f1> pyarrow._acero",shape="record"];
	"pyarrow.flight" [label="<f0> SourceModule| <f1> pyarrow.flight",shape="record"];
	"pyarrow.feather" [label="<f0> SourceModule| <f1> pyarrow.feather",shape="record"];
	"pyarrow._feather" [label="<f0> Extension| <f1> pyarrow._feather",shape="record"];
	"pyarrow.util" [label="<f0> SourceModule| <f1> pyarrow.util",shape="record"];
	"requests" [label="<f0> Package| <f1> requests",shape="record"];
	"requests.status_codes" [label="<f0> SourceModule| <f1> requests.status_codes",shape="record"];
	"requests.structures" [label="<f0> SourceModule| <f1> requests.structures",shape="record"];
	"requests.compat" [label="<f0> SourceModule| <f1> requests.compat",shape="record"];
	"http.cookies" [label="<f0> SourceModule| <f1> http.cookies",shape="record"];
	"simplejson" [label="<f0> MissingModule| <f1> simplejson",shape="record"];
	"requests.models" [label="<f0> SourceModule| <f1> requests.models",shape="record"];
	"idna" [label="<f0> Package| <f1> idna",shape="record"];
	"idna.package_data" [label="<f0> SourceModule| <f1> idna.package_data",shape="record"];
	"idna.intranges" [label="<f0> SourceModule| <f1> idna.intranges",shape="record"];
	"idna.core" [label="<f0> SourceModule| <f1> idna.core",shape="record"];
	"idna.uts46data" [label="<f0> SourceModule| <f1> idna.uts46data",shape="record"];
	"idna.idnadata" [label="<f0> SourceModule| <f1> idna.idnadata",shape="record"];
	"requests.hooks" [label="<f0> SourceModule| <f1> requests.hooks",shape="record"];
	"requests.cookies" [label="<f0> SourceModule| <f1> requests.cookies",shape="record"];
	"dummy_threading" [label="<f0> MissingModule| <f1> dummy_threading",shape="record"];
	"requests.auth" [label="<f0> SourceModule| <f1> requests.auth",shape="record"];
	"requests._internal_utils" [label="<f0> SourceModule| <f1> requests._internal_utils",shape="record"];
	"urllib3.util" [label="<f0> Package| <f1> urllib3.util",shape="record"];
	"urllib3.util.wait" [label="<f0> SourceModule| <f1> urllib3.util.wait",shape="record"];
	"urllib3.util.url" [label="<f0> SourceModule| <f1> urllib3.util.url",shape="record"];
	"urllib3.util.util" [label="<f0> SourceModule| <f1> urllib3.util.util",shape="record"];
	"urllib3.util.timeout" [label="<f0> SourceModule| <f1> urllib3.util.timeout",shape="record"];
	"urllib3.util.ssl_" [label="<f0> SourceModule| <f1> urllib3.util.ssl_",shape="record"];
	"urllib3.util.ssltransport" [label="<f0> SourceModule| <f1> urllib3.util.ssltransport",shape="record"];
	"urllib3.util.retry" [label="<f0> SourceModule| <f1> urllib3.util.retry",shape="record"];
	"urllib3.response" [label="<f0> SourceModule| <f1> urllib3.response",shape="record"];
	"urllib3.connection" [label="<f0> SourceModule| <f1> urllib3.connection",shape="record"];
	"urllib3.util.ssl_match_hostname" [label="<f0> SourceModule| <f1> urllib3.util.ssl_match_hostname",shape="record"];
	"ipaddress" [label="<f0> SourceModule| <f1> ipaddress",shape="record"];
	"urllib3._version" [label="<f0> SourceModule| <f1> urllib3._version",shape="record"];
	"urllib3.http2.probe" [label="<f0> SourceModule| <f1> urllib3.http2.probe",shape="record"];
	"urllib3.http2" [label="<f0> Package| <f1> urllib3.http2",shape="record"];
	"urllib3.http2.connection" [label="<f0> SourceModule| <f1> urllib3.http2.connection",shape="record"];
	"'h2.events'" [label="<f0> MissingModule| <f1> 'h2.events'",shape="record"];
	"'h2.connection'" [label="<f0> MissingModule| <f1> 'h2.connection'",shape="record"];
	"h2" [label="<f0> MissingModule| <f1> h2",shape="record"];
	"urllib3._collections" [label="<f0> SourceModule| <f1> urllib3._collections",shape="record"];
	"zstandard" [label="<f0> Package| <f1> zstandard",shape="record"];
	"zstandard.backend_rust" [label="<f0> MissingModule| <f1> zstandard.backend_rust",shape="record"];
	"zstandard.backend_cffi" [label="<f0> SourceModule| <f1> zstandard.backend_cffi",shape="record"];
	"zstandard._cffi" [label="<f0> Extension| <f1> zstandard._cffi",shape="record"];
	"zstandard.backend_c" [label="<f0> Extension| <f1> zstandard.backend_c",shape="record"];
	"brotli" [label="<f0> MissingModule| <f1> brotli",shape="record"];
	"brotlicffi" [label="<f0> MissingModule| <f1> brotlicffi",shape="record"];
	"urllib3._base_connection" [label="<f0> SourceModule| <f1> urllib3._base_connection",shape="record"];
	"urllib3.connectionpool" [label="<f0> SourceModule| <f1> urllib3.connectionpool",shape="record"];
	"urllib3.util.proxy" [label="<f0> SourceModule| <f1> urllib3.util.proxy",shape="record"];
	"urllib3._request_methods" [label="<f0> SourceModule| <f1> urllib3._request_methods",shape="record"];
	"urllib3.util.response" [label="<f0> SourceModule| <f1> urllib3.util.response",shape="record"];
	"urllib3.util.request" [label="<f0> SourceModule| <f1> urllib3.util.request",shape="record"];
	"urllib3.util.connection" [label="<f0> SourceModule| <f1> urllib3.util.connection",shape="record"];
	"urllib3.filepost" [label="<f0> SourceModule| <f1> urllib3.filepost",shape="record"];
	"urllib3.fields" [label="<f0> SourceModule| <f1> urllib3.fields",shape="record"];
	"requests.api" [label="<f0> SourceModule| <f1> requests.api",shape="record"];
	"requests.sessions" [label="<f0> SourceModule| <f1> requests.sessions",shape="record"];
	"requests.adapters" [label="<f0> SourceModule| <f1> requests.adapters",shape="record"];
	"urllib3.contrib.socks" [label="<f0> SourceModule| <f1> urllib3.contrib.socks",shape="record"];
	"socks" [label="<f0> MissingModule| <f1> socks",shape="record"];
	"urllib3.poolmanager" [label="<f0> SourceModule| <f1> urllib3.poolmanager",shape="record"];
	"requests.__version__" [label="<f0> SourceModule| <f1> requests.__version__",shape="record"];
	"requests.utils" [label="<f0> SourceModule| <f1> requests.utils",shape="record"];
	"requests.certs" [label="<f0> SourceModule| <f1> requests.certs",shape="record"];
	"certifi" [label="<f0> Package| <f1> certifi",shape="record"];
	"certifi.core" [label="<f0> SourceModule| <f1> certifi.core",shape="record"];
	"importlib.resources" [label="<f0> SourceModule| <f1> importlib.resources",shape="record"];
	"'typing.io'" [label="<f0> MissingModule| <f1> 'typing.io'",shape="record"];
	"requests.packages" [label="<f0> SourceModule| <f1> requests.packages",shape="record"];
	"urllib3.exceptions" [label="<f0> SourceModule| <f1> urllib3.exceptions",shape="record"];
	"cryptography" [label="<f0> Package| <f1> cryptography",shape="record"];
	"cryptography.hazmat.bindings.openssl.binding" [label="<f0> SourceModule| <f1> cryptography.hazmat.bindings.openssl.binding",shape="record"];
	"cryptography.hazmat.bindings._rust" [label="<f0> Extension| <f1> cryptography.hazmat.bindings._rust",shape="record"];
	"cryptography.hazmat.bindings" [label="<f0> Package| <f1> cryptography.hazmat.bindings",shape="record"];
	"cryptography.hazmat" [label="<f0> Package| <f1> cryptography.hazmat",shape="record"];
	"cryptography.exceptions" [label="<f0> SourceModule| <f1> cryptography.exceptions",shape="record"];
	"cryptography.hazmat.bindings.openssl._conditional" [label="<f0> SourceModule| <f1> cryptography.hazmat.bindings.openssl._conditional",shape="record"];
	"cryptography.hazmat.bindings.openssl" [label="<f0> Package| <f1> cryptography.hazmat.bindings.openssl",shape="record"];
	"cryptography.hazmat.backends.openssl.backend" [label="<f0> SourceModule| <f1> cryptography.hazmat.backends.openssl.backend",shape="record"];
	"cryptography.hazmat.primitives.ciphers.modes" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.ciphers.modes",shape="record"];
	"cryptography.hazmat.primitives._cipheralgorithm" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives._cipheralgorithm",shape="record"];
	"cryptography.hazmat.primitives.ciphers.algorithms" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.ciphers.algorithms",shape="record"];
	"cryptography.hazmat.decrepit.ciphers.algorithms" [label="<f0> SourceModule| <f1> cryptography.hazmat.decrepit.ciphers.algorithms",shape="record"];
	"cryptography.hazmat.decrepit.ciphers" [label="<f0> Package| <f1> cryptography.hazmat.decrepit.ciphers",shape="record"];
	"cryptography.hazmat.decrepit" [label="<f0> Package| <f1> cryptography.hazmat.decrepit",shape="record"];
	"cryptography.hazmat.primitives.ciphers" [label="<f0> Package| <f1> cryptography.hazmat.primitives.ciphers",shape="record"];
	"cryptography.hazmat.primitives.ciphers.base" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.ciphers.base",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.padding" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.padding",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.rsa" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.rsa",shape="record"];
	"cryptography.hazmat.primitives._serialization" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives._serialization",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.utils" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.utils",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.ec" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.ec",shape="record"];
	"cryptography.hazmat._oid" [label="<f0> SourceModule| <f1> cryptography.hazmat._oid",shape="record"];
	"cryptography.hazmat.primitives.asymmetric" [label="<f0> Package| <f1> cryptography.hazmat.primitives.asymmetric",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.dh" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.dh",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.x25519" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.x25519",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.x448" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.x448",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.ed25519" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.ed25519",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.ed448" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.ed448",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.dsa" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.dsa",shape="record"];
	"cryptography.hazmat.primitives._asymmetric" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives._asymmetric",shape="record"];
	"cryptography.hazmat.primitives.hashes" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.hashes",shape="record"];
	"cryptography.hazmat.primitives" [label="<f0> Package| <f1> cryptography.hazmat.primitives",shape="record"];
	"cryptography.hazmat.primitives.padding" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.padding",shape="record"];
	"cryptography.hazmat.primitives.serialization" [label="<f0> Package| <f1> cryptography.hazmat.primitives.serialization",shape="record"];
	"cryptography.hazmat.primitives.serialization.ssh" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.serialization.ssh",shape="record"];
	"bcrypt" [label="<f0> MissingModule| <f1> bcrypt",shape="record"];
	"cryptography.hazmat.primitives.serialization.base" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.serialization.base",shape="record"];
	"cryptography.hazmat.primitives.constant_time" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.constant_time",shape="record"];
	"cryptography.hazmat.backends.openssl" [label="<f0> Package| <f1> cryptography.hazmat.backends.openssl",shape="record"];
	"cryptography.hazmat.backends" [label="<f0> Package| <f1> cryptography.hazmat.backends",shape="record"];
	"cryptography.x509" [label="<f0> Package| <f1> cryptography.x509",shape="record"];
	"cryptography.x509.UnsupportedExtension" [label="<f0> MissingModule| <f1> cryptography.x509.UnsupportedExtension",shape="record"];
	"cryptography.x509.oid" [label="<f0> SourceModule| <f1> cryptography.x509.oid",shape="record"];
	"cryptography.x509.name" [label="<f0> SourceModule| <f1> cryptography.x509.name",shape="record"];
	"cryptography.x509.general_name" [label="<f0> SourceModule| <f1> cryptography.x509.general_name",shape="record"];
	"cryptography.x509.extensions" [label="<f0> SourceModule| <f1> cryptography.x509.extensions",shape="record"];
	"cryptography.hazmat.primitives.asymmetric.types" [label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.types",shape="record"];
	"cryptography.x509.base" [label="<f0> SourceModule| <f1> cryptography.x509.base",shape="record"];
	"cryptography.x509.verification" [label="<f0> SourceModule| <f1> cryptography.x509.verification",shape="record"];
	"cryptography.x509.certificate_transparency" [label="<f0> SourceModule| <f1> cryptography.x509.certificate_transparency",shape="record"];
	"cryptography.__about__" [label="<f0> SourceModule| <f1> cryptography.__about__",shape="record"];
	"cryptography.utils" [label="<f0> SourceModule| <f1> cryptography.utils",shape="record"];
	"urllib3.contrib.pyopenssl" [label="<f0> SourceModule| <f1> urllib3.contrib.pyopenssl",shape="record"];
	"'OpenSSL.crypto'" [label="<f0> MissingModule| <f1> 'OpenSSL.crypto'",shape="record"];
	"OpenSSL" [label="<f0> MissingModule| <f1> OpenSSL",shape="record"];
	"urllib3.contrib" [label="<f0> Package| <f1> urllib3.contrib",shape="record"];
	"chardet" [label="<f0> MissingModule| <f1> chardet",shape="record"];
	"charset_normalizer" [label="<f0> Package| <f1> charset_normalizer",shape="record"];
	"charset_normalizer.md__mypyc" [label="<f0> Extension| <f1> charset_normalizer.md__mypyc",shape="record"];
	"charset_normalizer.version" [label="<f0> SourceModule| <f1> charset_normalizer.version",shape="record"];
	"charset_normalizer.utils" [label="<f0> SourceModule| <f1> charset_normalizer.utils",shape="record"];
	"charset_normalizer.constant" [label="<f0> SourceModule| <f1> charset_normalizer.constant",shape="record"];
	"_multibytecodec" [label="<f0> Extension| <f1> _multibytecodec",shape="record"];
	"charset_normalizer.models" [label="<f0> SourceModule| <f1> charset_normalizer.models",shape="record"];
	"charset_normalizer.cd" [label="<f0> SourceModule| <f1> charset_normalizer.cd",shape="record"];
	"charset_normalizer.md" [label="<f0> Extension| <f1> charset_normalizer.md",shape="record"];
	"charset_normalizer.legacy" [label="<f0> SourceModule| <f1> charset_normalizer.legacy",shape="record"];
	"charset_normalizer.api" [label="<f0> SourceModule| <f1> charset_normalizer.api",shape="record"];
	"requests.exceptions" [label="<f0> SourceModule| <f1> requests.exceptions",shape="record"];
	"urllib3" [label="<f0> Package| <f1> urllib3",shape="record"];
	"urllib3.contrib.emscripten" [label="<f0> Package| <f1> urllib3.contrib.emscripten",shape="record"];
	"urllib3.contrib.emscripten.connection" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.connection",shape="record"];
	"urllib3.contrib.emscripten.response" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.response",shape="record"];
	"urllib3.contrib.emscripten.request" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.request",shape="record"];
	"urllib3.contrib.emscripten.fetch" [label="<f0> SourceModule| <f1> urllib3.contrib.emscripten.fetch",shape="record"];
	"'pyodide.ffi'" [label="<f0> MissingModule| <f1> 'pyodide.ffi'",shape="record"];
	"pyodide" [label="<f0> MissingModule| <f1> pyodide",shape="record"];
	"js" [label="<f0> MissingModule| <f1> js",shape="record"];
	"pyarrow.types" [label="<f0> SourceModule| <f1> pyarrow.types",shape="record"];
	"pyarrow.ipc" [label="<f0> SourceModule| <f1> pyarrow.ipc",shape="record"];
	"pyarrow.fs" [label="<f0> SourceModule| <f1> pyarrow.fs",shape="record"];
	"fsspec" [label="<f0> Package| <f1> fsspec",shape="record"];
	"fsspec.utils" [label="<f0> SourceModule| <f1> fsspec.utils",shape="record"];
	"fsspec.transaction" [label="<f0> SourceModule| <f1> fsspec.transaction",shape="record"];
	"distributed" [label="<f0> MissingModule| <f1> distributed",shape="record"];
	"fsspec.parquet" [label="<f0> SourceModule| <f1> fsspec.parquet",shape="record"];
	"fsspec.json" [label="<f0> SourceModule| <f1> fsspec.json",shape="record"];
	"fsspec.implementations.zip" [label="<f0> SourceModule| <f1> fsspec.implementations.zip",shape="record"];
	"fsspec.implementations.webhdfs" [label="<f0> SourceModule| <f1> fsspec.implementations.webhdfs",shape="record"];
	"requests_kerberos" [label="<f0> MissingModule| <f1> requests_kerberos",shape="record"];
	"fsspec.implementations.tar" [label="<f0> SourceModule| <f1> fsspec.implementations.tar",shape="record"];
	"fsspec.implementations.smb" [label="<f0> SourceModule| <f1> fsspec.implementations.smb",shape="record"];
	"smbprotocol" [label="<f0> MissingModule| <f1> smbprotocol",shape="record"];
	"smbclient" [label="<f0> MissingModule| <f1> smbclient",shape="record"];
	"fsspec.implementations.sftp" [label="<f0> SourceModule| <f1> fsspec.implementations.sftp",shape="record"];
	"paramiko" [label="<f0> MissingModule| <f1> paramiko",shape="record"];
	"fsspec.implementations.reference" [label="<f0> SourceModule| <f1> fsspec.implementations.reference",shape="record"];
	"jinja2" [label="<f0> MissingModule| <f1> jinja2",shape="record"];
	"kerchunk" [label="<f0> MissingModule| <f1> kerchunk",shape="record"];
	"ujson" [label="<f0> MissingModule| <f1> ujson",shape="record"];
	"fsspec.implementations.memory" [label="<f0> SourceModule| <f1> fsspec.implementations.memory",shape="record"];
	"fsspec.implementations.local" [label="<f0> SourceModule| <f1> fsspec.implementations.local",shape="record"];
	"fsspec.implementations.libarchive" [label="<f0> SourceModule| <f1> fsspec.implementations.libarchive",shape="record"];
	"'libarchive.ffi'" [label="<f0> MissingModule| <f1> 'libarchive.ffi'",shape="record"];
	"libarchive" [label="<f0> MissingModule| <f1> libarchive",shape="record"];
	"fsspec.implementations.jupyter" [label="<f0> SourceModule| <f1> fsspec.implementations.jupyter",shape="record"];
	"fsspec.implementations.http" [label="<f0> SourceModule| <f1> fsspec.implementations.http",shape="record"];
	"yarl" [label="<f0> Package| <f1> yarl",shape="record"];
	"yarl._url" [label="<f0> SourceModule| <f1> yarl._url",shape="record"];
	"yarl._quoters" [label="<f0> SourceModule| <f1> yarl._quoters",shape="record"];
	"yarl._quoting" [label="<f0> SourceModule| <f1> yarl._quoting",shape="record"];
	"yarl._quoting_c" [label="<f0> Extension| <f1> yarl._quoting_c",shape="record"];
	"yarl._quoting_py" [label="<f0> SourceModule| <f1> yarl._quoting_py",shape="record"];
	"yarl._path" [label="<f0> SourceModule| <f1> yarl._path",shape="record"];
	"yarl._parse" [label="<f0> SourceModule| <f1> yarl._parse",shape="record"];
	"propcache.api" [label="<f0> SourceModule| <f1> propcache.api",shape="record"];
	"propcache" [label="<f0> Package| <f1> propcache",shape="record"];
	"propcache._helpers" [label="<f0> SourceModule| <f1> propcache._helpers",shape="record"];
	"propcache._helpers_c" [label="<f0> Extension| <f1> propcache._helpers_c",shape="record"];
	"propcache._helpers_py" [label="<f0> SourceModule| <f1> propcache._helpers_py",shape="record"];
	"multidict" [label="<f0> Package| <f1> multidict",shape="record"];
	"multidict._multidict_py" [label="<f0> SourceModule| <f1> multidict._multidict_py",shape="record"];
	"multidict._compat" [label="<f0> SourceModule| <f1> multidict._compat",shape="record"];
	"multidict._multidict" [label="<f0> Extension| <f1> multidict._multidict",shape="record"];
	"multidict._abc" [label="<f0> SourceModule| <f1> multidict._abc",shape="record"];
	"yarl._query" [label="<f0> SourceModule| <f1> yarl._query",shape="record"];
	"aiohttp" [label="<f0> Package| <f1> aiohttp",shape="record"];
	"aiohttp.worker" [label="<f0> SourceModule| <f1> aiohttp.worker",shape="record"];
	"uvloop" [label="<f0> MissingModule| <f1> uvloop",shape="record"];
	"aiohttp.web_log" [label="<f0> SourceModule| <f1> aiohttp.web_log",shape="record"];
	"aiohttp.web_response" [label="<f0> SourceModule| <f1> aiohttp.web_response",shape="record"];
	"aiohttp.typedefs" [label="<f0> SourceModule| <f1> aiohttp.typedefs",shape="record"];
	"aiohttp.compression_utils" [label="<f0> SourceModule| <f1> aiohttp.compression_utils",shape="record"];
	"aiohttp.web_request" [label="<f0> SourceModule| <f1> aiohttp.web_request",shape="record"];
	"aiohttp.web_urldispatcher" [label="<f0> SourceModule| <f1> aiohttp.web_urldispatcher",shape="record"];
	"aiohttp.web_routedef" [label="<f0> SourceModule| <f1> aiohttp.web_routedef",shape="record"];
	"aiohttp.web_fileresponse" [label="<f0> SourceModule| <f1> aiohttp.web_fileresponse",shape="record"];
	"aiohttp.web_protocol" [label="<f0> SourceModule| <f1> aiohttp.web_protocol",shape="record"];
	"aiohttp.web_server" [label="<f0> SourceModule| <f1> aiohttp.web_server",shape="record"];
	"aiohttp.tcp_helpers" [label="<f0> SourceModule| <f1> aiohttp.tcp_helpers",shape="record"];
	"aiohttp.log" [label="<f0> SourceModule| <f1> aiohttp.log",shape="record"];
	"aiohttp.http_exceptions" [label="<f0> SourceModule| <f1> aiohttp.http_exceptions",shape="record"];
	"aiohttp.base_protocol" [label="<f0> SourceModule| <f1> aiohttp.base_protocol",shape="record"];
	"aiohttp.client_exceptions" [label="<f0> SourceModule| <f1> aiohttp.client_exceptions",shape="record"];
	"aiohttp.client_reqrep" [label="<f0> SourceModule| <f1> aiohttp.client_reqrep",shape="record"];
	"aiohttp.connector" [label="<f0> SourceModule| <f1> aiohttp.connector",shape="record"];
	"aiohttp.client_proto" [label="<f0> SourceModule| <f1> aiohttp.client_proto",shape="record"];
	"aiohappyeyeballs" [label="<f0> Package| <f1> aiohappyeyeballs",shape="record"];
	"aiohappyeyeballs.utils" [label="<f0> SourceModule| <f1> aiohappyeyeballs.utils",shape="record"];
	"aiohappyeyeballs.types" [label="<f0> SourceModule| <f1> aiohappyeyeballs.types",shape="record"];
	"aiohappyeyeballs.impl" [label="<f0> SourceModule| <f1> aiohappyeyeballs.impl",shape="record"];
	"aiohappyeyeballs._staggered" [label="<f0> SourceModule| <f1> aiohappyeyeballs._staggered",shape="record"];
	"aiohttp.web_exceptions" [label="<f0> SourceModule| <f1> aiohttp.web_exceptions",shape="record"];
	"aiohttp.http_writer" [label="<f0> SourceModule| <f1> aiohttp.http_writer",shape="record"];
	"aiohttp._http_writer" [label="<f0> Extension| <f1> aiohttp._http_writer",shape="record"];
	"aiohttp.http_parser" [label="<f0> SourceModule| <f1> aiohttp.http_parser",shape="record"];
	"aiohttp._http_parser" [label="<f0> Extension| <f1> aiohttp._http_parser",shape="record"];
	"attr" [label="<f0> Package| <f1> attr",shape="record"];
	"attr._version_info" [label="<f0> SourceModule| <f1> attr._version_info",shape="record"];
	"attr._next_gen" [label="<f0> SourceModule| <f1> attr._next_gen",shape="record"];
	"attr._make" [label="<f0> SourceModule| <f1> attr._make",shape="record"];
	"attr._compat" [label="<f0> SourceModule| <f1> attr._compat",shape="record"];
	"annotationlib" [label="<f0> MissingModule| <f1> annotationlib",shape="record"];
	"attr._funcs" [label="<f0> SourceModule| <f1> attr._funcs",shape="record"];
	"attr._cmp" [label="<f0> SourceModule| <f1> attr._cmp",shape="record"];
	"attr.validators" [label="<f0> SourceModule| <f1> attr.validators",shape="record"];
	"attr.filters" [label="<f0> SourceModule| <f1> attr.filters",shape="record"];
	"attr.exceptions" [label="<f0> SourceModule| <f1> attr.exceptions",shape="record"];
	"attr.converters" [label="<f0> SourceModule| <f1> attr.converters",shape="record"];
	"attr.setters" [label="<f0> SourceModule| <f1> attr.setters",shape="record"];
	"attr._config" [label="<f0> SourceModule| <f1> attr._config",shape="record"];
	"aiohttp.abc" [label="<f0> SourceModule| <f1> aiohttp.abc",shape="record"];
	"aiohttp.web_app" [label="<f0> SourceModule| <f1> aiohttp.web_app",shape="record"];
	"aiohttp.web_middlewares" [label="<f0> SourceModule| <f1> aiohttp.web_middlewares",shape="record"];
	"frozenlist" [label="<f0> Package| <f1> frozenlist",shape="record"];
	"frozenlist._frozenlist" [label="<f0> Extension| <f1> frozenlist._frozenlist",shape="record"];
	"aiosignal" [label="<f0> Package| <f1> aiosignal",shape="record"];
	"aiohttp.web" [label="<f0> SourceModule| <f1> aiohttp.web",shape="record"];
	"aiohttp.web_ws" [label="<f0> SourceModule| <f1> aiohttp.web_ws",shape="record"];
	"async_timeout" [label="<f0> Package| <f1> async_timeout",shape="record"];
	"aiohttp.http_websocket" [label="<f0> SourceModule| <f1> aiohttp.http_websocket",shape="record"];
	"aiohttp._websocket.models" [label="<f0> SourceModule| <f1> aiohttp._websocket.models",shape="record"];
	"aiohttp._websocket" [label="<f0> Package| <f1> aiohttp._websocket",shape="record"];
	"aiohttp._websocket.helpers" [label="<f0> SourceModule| <f1> aiohttp._websocket.helpers",shape="record"];
	"aiohttp._websocket.mask" [label="<f0> Extension| <f1> aiohttp._websocket.mask",shape="record"];
	"aiohttp._websocket.writer" [label="<f0> SourceModule| <f1> aiohttp._websocket.writer",shape="record"];
	"aiohttp._websocket.reader" [label="<f0> SourceModule| <f1> aiohttp._websocket.reader",shape="record"];
	"aiohttp._websocket.reader_c" [label="<f0> Extension| <f1> aiohttp._websocket.reader_c",shape="record"];
	"aiohttp._websocket.reader_py" [label="<f0> SourceModule| <f1> aiohttp._websocket.reader_py",shape="record"];
	"aiohttp.web_runner" [label="<f0> SourceModule| <f1> aiohttp.web_runner",shape="record"];
	"'gunicorn.workers'" [label="<f0> MissingModule| <f1> 'gunicorn.workers'",shape="record"];
	"gunicorn" [label="<f0> MissingModule| <f1> gunicorn",shape="record"];
	"aiohttp.tracing" [label="<f0> SourceModule| <f1> aiohttp.tracing",shape="record"];
	"aiohttp.streams" [label="<f0> SourceModule| <f1> aiohttp.streams",shape="record"];
	"aiohttp.resolver" [label="<f0> SourceModule| <f1> aiohttp.resolver",shape="record"];
	"aiodns" [label="<f0> MissingModule| <f1> aiodns",shape="record"];
	"aiohttp.payload_streamer" [label="<f0> SourceModule| <f1> aiohttp.payload_streamer",shape="record"];
	"aiohttp.payload" [label="<f0> SourceModule| <f1> aiohttp.payload",shape="record"];
	"aiohttp.helpers" [label="<f0> SourceModule| <f1> aiohttp.helpers",shape="record"];
	"aiohttp.formdata" [label="<f0> SourceModule| <f1> aiohttp.formdata",shape="record"];
	"aiohttp.cookiejar" [label="<f0> SourceModule| <f1> aiohttp.cookiejar",shape="record"];
	"aiohttp.client" [label="<f0> SourceModule| <f1> aiohttp.client",shape="record"];
	"aiohttp.client_ws" [label="<f0> SourceModule| <f1> aiohttp.client_ws",shape="record"];
	"aiohttp.multipart" [label="<f0> SourceModule| <f1> aiohttp.multipart",shape="record"];
	"aiohttp.http" [label="<f0> SourceModule| <f1> aiohttp.http",shape="record"];
	"aiohttp.hdrs" [label="<f0> SourceModule| <f1> aiohttp.hdrs",shape="record"];
	"fsspec.implementations.github" [label="<f0> SourceModule| <f1> fsspec.implementations.github",shape="record"];
	"fsspec.implementations.git" [label="<f0> SourceModule| <f1> fsspec.implementations.git",shape="record"];
	"pygit2" [label="<f0> MissingModule| <f1> pygit2",shape="record"];
	"fsspec.implementations.ftp" [label="<f0> SourceModule| <f1> fsspec.implementations.ftp",shape="record"];
	"fsspec.implementations.dirfs" [label="<f0> SourceModule| <f1> fsspec.implementations.dirfs",shape="record"];
	"fsspec.implementations.dbfs" [label="<f0> SourceModule| <f1> fsspec.implementations.dbfs",shape="record"];
	"fsspec.implementations.data" [label="<f0> SourceModule| <f1> fsspec.implementations.data",shape="record"];
	"fsspec.implementations.dask" [label="<f0> SourceModule| <f1> fsspec.implementations.dask",shape="record"];
	"'distributed.worker'" [label="<f0> MissingModule| <f1> 'distributed.worker'",shape="record"];
	"'distributed.client'" [label="<f0> MissingModule| <f1> 'distributed.client'",shape="record"];
	"dask" [label="<f0> MissingModule| <f1> dask",shape="record"];
	"fsspec.implementations.cached" [label="<f0> SourceModule| <f1> fsspec.implementations.cached",shape="record"];
	"fsspec.implementations.cache_metadata" [label="<f0> SourceModule| <f1> fsspec.implementations.cache_metadata",shape="record"];
	"fsspec.implementations.cache_mapper" [label="<f0> SourceModule| <f1> fsspec.implementations.cache_mapper",shape="record"];
	"fsspec.implementations.asyn_wrapper" [label="<f0> SourceModule| <f1> fsspec.implementations.asyn_wrapper",shape="record"];
	"fsspec.implementations.arrow" [label="<f0> SourceModule| <f1> fsspec.implementations.arrow",shape="record"];
	"fsspec.implementations" [label="<f0> Package| <f1> fsspec.implementations",shape="record"];
	"fsspec.gui" [label="<f0> SourceModule| <f1> fsspec.gui",shape="record"];
	"panel" [label="<f0> MissingModule| <f1> panel",shape="record"];
	"fsspec.generic" [label="<f0> SourceModule| <f1> fsspec.generic",shape="record"];
	"fsspec.fuse" [label="<f0> SourceModule| <f1> fsspec.fuse",shape="record"];
	"fuse" [label="<f0> MissingModule| <f1> fuse",shape="record"];
	"fsspec.dircache" [label="<f0> SourceModule| <f1> fsspec.dircache",shape="record"];
	"fsspec.conftest" [label="<f0> SourceModule| <f1> fsspec.conftest",shape="record"];
	"fsspec.config" [label="<f0> SourceModule| <f1> fsspec.config",shape="record"];
	"fsspec.asyn" [label="<f0> SourceModule| <f1> fsspec.asyn",shape="record"];
	"resource" [label="<f0> Extension| <f1> resource",shape="record"];
	"fsspec.archive" [label="<f0> SourceModule| <f1> fsspec.archive",shape="record"];
	"fsspec.spec" [label="<f0> SourceModule| <f1> fsspec.spec",shape="record"];
	"fsspec.registry" [label="<f0> SourceModule| <f1> fsspec.registry",shape="record"];
	"fsspec.mapping" [label="<f0> SourceModule| <f1> fsspec.mapping",shape="record"];
	"fsspec.exceptions" [label="<f0> SourceModule| <f1> fsspec.exceptions",shape="record"];
	"fsspec.core" [label="<f0> SourceModule| <f1> fsspec.core",shape="record"];
	"fsspec.compression" [label="<f0> SourceModule| <f1> fsspec.compression",shape="record"];
	"lz4" [label="<f0> MissingModule| <f1> lz4",shape="record"];
	"snappy" [label="<f0> MissingModule| <f1> snappy",shape="record"];
	"lzmaffi" [label="<f0> MissingModule| <f1> lzmaffi",shape="record"];
	"isal" [label="<f0> MissingModule| <f1> isal",shape="record"];
	"fsspec.callbacks" [label="<f0> SourceModule| <f1> fsspec.callbacks",shape="record"];
	"tqdm" [label="<f0> Package| <f1> tqdm",shape="record"];
	"tqdm.notebook" [label="<f0> SourceModule| <f1> tqdm.notebook",shape="record"];
	"'IPython.display'" [label="<f0> MissingModule| <f1> 'IPython.display'",shape="record"];
	"'IPython.html'" [label="<f0> MissingModule| <f1> 'IPython.html'",shape="record"];
	"ipywidgets" [label="<f0> MissingModule| <f1> ipywidgets",shape="record"];
	"tqdm.version" [label="<f0> SourceModule| <f1> tqdm.version",shape="record"];
	"tqdm._dist_ver" [label="<f0> SourceModule| <f1> tqdm._dist_ver",shape="record"];
	"tqdm.std" [label="<f0> SourceModule| <f1> tqdm.std",shape="record"];
	"tqdm.utils" [label="<f0> SourceModule| <f1> tqdm.utils",shape="record"];
	"fcntl" [label="<f0> Extension| <f1> fcntl",shape="record"];
	"colorama" [label="<f0> MissingModule| <f1> colorama",shape="record"];
	"tqdm.gui" [label="<f0> SourceModule| <f1> tqdm.gui",shape="record"];
	"'matplotlib.pyplot'" [label="<f0> MissingModule| <f1> 'matplotlib.pyplot'",shape="record"];
	"matplotlib" [label="<f0> MissingModule| <f1> matplotlib",shape="record"];
	"tqdm.cli" [label="<f0> SourceModule| <f1> tqdm.cli",shape="record"];
	"importlib_resources" [label="<f0> MissingModule| <f1> importlib_resources",shape="record"];
	"tqdm._tqdm_pandas" [label="<f0> SourceModule| <f1> tqdm._tqdm_pandas",shape="record"];
	"tqdm._monitor" [label="<f0> SourceModule| <f1> tqdm._monitor",shape="record"];
	"fsspec._version" [label="<f0> SourceModule| <f1> fsspec._version",shape="record"];
	"fsspec.caching" [label="<f0> SourceModule| <f1> fsspec.caching",shape="record"];
	"pyarrow.lib" [label="<f0> Extension| <f1> pyarrow.lib",shape="record"];
	"'setuptools_scm.git'" [label="<f0> MissingModule| <f1> 'setuptools_scm.git'",shape="record"];
	"setuptools_scm" [label="<f0> MissingModule| <f1> setuptools_scm",shape="record"];
	"pyarrow._generated_version" [label="<f0> SourceModule| <f1> pyarrow._generated_version",shape="record"];
	"pandas.core.arrays.arrow.array" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.array",shape="record"];
	"pandas.core.tools.times" [label="<f0> SourceModule| <f1> pandas.core.tools.times",shape="record"];
	"pandas.core.tools.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.tools.timedeltas",shape="record"];
	"pandas.core.tools.datetimes" [label="<f0> SourceModule| <f1> pandas.core.tools.datetimes",shape="record"];
	"pandas.core.arrays.floating" [label="<f0> SourceModule| <f1> pandas.core.arrays.floating",shape="record"];
	"pandas.core.arrays.integer" [label="<f0> SourceModule| <f1> pandas.core.arrays.integer",shape="record"];
	"pandas.io._util" [label="<f0> SourceModule| <f1> pandas.io._util",shape="record"];
	"pandas.core.dtypes.inference" [label="<f0> SourceModule| <f1> pandas.core.dtypes.inference",shape="record"];
	"pandas.util._exceptions" [label="<f0> SourceModule| <f1> pandas.util._exceptions",shape="record"];
	"pandas.core.ops.missing" [label="<f0> SourceModule| <f1> pandas.core.ops.missing",shape="record"];
	"pandas.core.construction" [label="<f0> SourceModule| <f1> pandas.core.construction",shape="record"];
	"numpy.ma" [label="<f0> Package| <f1> numpy.ma",shape="record"];
	"numpy._pytesttester" [label="<f0> SourceModule| <f1> numpy._pytesttester",shape="record"];
	"numpy.testing" [label="<f0> Package| <f1> numpy.testing",shape="record"];
	"numpy.testing.overrides" [label="<f0> SourceModule| <f1> numpy.testing.overrides",shape="record"];
	"numpy.lib.recfunctions" [label="<f0> SourceModule| <f1> numpy.lib.recfunctions",shape="record"];
	"numpy.lib._iotools" [label="<f0> SourceModule| <f1> numpy.lib._iotools",shape="record"];
	"numpy.compat" [label="<f0> Package| <f1> numpy.compat",shape="record"];
	"numpy.compat.py3k" [label="<f0> SourceModule| <f1> numpy.compat.py3k",shape="record"];
	"pickle5" [label="<f0> MissingModule| <f1> pickle5",shape="record"];
	"numpy._utils._inspect" [label="<f0> SourceModule| <f1> numpy._utils._inspect",shape="record"];
	"numpy._utils" [label="<f0> Package| <f1> numpy._utils",shape="record"];
	"numpy._utils._convertions" [label="<f0> SourceModule| <f1> numpy._utils._convertions",shape="record"];
	"numpy.core.numeric" [label="<f0> SourceModule| <f1> numpy.core.numeric",shape="record"];
	"numpy.core._asarray" [label="<f0> SourceModule| <f1> numpy.core._asarray",shape="record"];
	"numpy.core.arrayprint" [label="<f0> SourceModule| <f1> numpy.core.arrayprint",shape="record"];
	"numpy.core.fromnumeric" [label="<f0> SourceModule| <f1> numpy.core.fromnumeric",shape="record"];
	"numpy.core._methods" [label="<f0> SourceModule| <f1> numpy.core._methods",shape="record"];
	"numpy.lib.stride_tricks" [label="<f0> SourceModule| <f1> numpy.lib.stride_tricks",shape="record"];
	"numpy._globals" [label="<f0> SourceModule| <f1> numpy._globals",shape="record"];
	"numpy.core._exceptions" [label="<f0> SourceModule| <f1> numpy.core._exceptions",shape="record"];
	"numpy.eye" [label="<f0> MissingModule| <f1> numpy.eye",shape="record"];
	"numpy.core._ufunc_config" [label="<f0> SourceModule| <f1> numpy.core._ufunc_config",shape="record"];
	"numpy.exceptions" [label="<f0> SourceModule| <f1> numpy.exceptions",shape="record"];
	"numpy.core.numerictypes" [label="<f0> SourceModule| <f1> numpy.core.numerictypes",shape="record"];
	"numpy.core._dtype" [label="<f0> SourceModule| <f1> numpy.core._dtype",shape="record"];
	"numpy.core._type_aliases" [label="<f0> SourceModule| <f1> numpy.core._type_aliases",shape="record"];
	"numpy.core._string_helpers" [label="<f0> SourceModule| <f1> numpy.core._string_helpers",shape="record"];
	"numpy.core.shape_base" [label="<f0> SourceModule| <f1> numpy.core.shape_base",shape="record"];
	"numpy.core.multiarray" [label="<f0> SourceModule| <f1> numpy.core.multiarray",shape="record"];
	"numpy.core._multiarray_umath" [label="<f0> Extension| <f1> numpy.core._multiarray_umath",shape="record"];
	"numpy.core" [label="<f0> Package| <f1> numpy.core",shape="record"];
	"numpy.core.integer" [label="<f0> MissingModule| <f1> numpy.core.integer",shape="record"];
	"numpy.core.conjugate" [label="<f0> MissingModule| <f1> numpy.core.conjugate",shape="record"];
	"numpy.core._internal" [label="<f0> SourceModule| <f1> numpy.core._internal",shape="record"];
	"numpy.core._dtype_ctypes" [label="<f0> SourceModule| <f1> numpy.core._dtype_ctypes",shape="record"];
	"numpy.core._add_newdocs_scalars" [label="<f0> SourceModule| <f1> numpy.core._add_newdocs_scalars",shape="record"];
	"numpy.core._add_newdocs" [label="<f0> SourceModule| <f1> numpy.core._add_newdocs",shape="record"];
	"numpy.core.einsumfunc" [label="<f0> SourceModule| <f1> numpy.core.einsumfunc",shape="record"];
	"numpy.core._machar" [label="<f0> SourceModule| <f1> numpy.core._machar",shape="record"];
	"numpy.core.function_base" [label="<f0> SourceModule| <f1> numpy.core.function_base",shape="record"];
	"numpy.core.memmap" [label="<f0> SourceModule| <f1> numpy.core.memmap",shape="record"];
	"numpy.core.records" [label="<f0> SourceModule| <f1> numpy.core.records",shape="record"];
	"numpy.core.defchararray" [label="<f0> SourceModule| <f1> numpy.core.defchararray",shape="record"];
	"numpy.core.ufunc" [label="<f0> MissingModule| <f1> numpy.core.ufunc",shape="record"];
	"numpy.core.ones" [label="<f0> MissingModule| <f1> numpy.core.ones",shape="record"];
	"numpy.core.hstack" [label="<f0> MissingModule| <f1> numpy.core.hstack",shape="record"];
	"numpy.core.atleast_1d" [label="<f0> MissingModule| <f1> numpy.core.atleast_1d",shape="record"];
	"numpy.core.atleast_3d" [label="<f0> MissingModule| <f1> numpy.core.atleast_3d",shape="record"];
	"numpy.core.vstack" [label="<f0> MissingModule| <f1> numpy.core.vstack",shape="record"];
	"numpy.core.linspace" [label="<f0> MissingModule| <f1> numpy.core.linspace",shape="record"];
	"numpy.core.transpose" [label="<f0> MissingModule| <f1> numpy.core.transpose",shape="record"];
	"numpy.core.result_type" [label="<f0> MissingModule| <f1> numpy.core.result_type",shape="record"];
	"numpy.core.float_" [label="<f0> MissingModule| <f1> numpy.core.float_",shape="record"];
	"numpy.core.number" [label="<f0> MissingModule| <f1> numpy.core.number",shape="record"];
	"numpy.core.max" [label="<f0> MissingModule| <f1> numpy.core.max",shape="record"];
	"numpy.core.bool_" [label="<f0> MissingModule| <f1> numpy.core.bool_",shape="record"];
	"numpy.core.inf" [label="<f0> MissingModule| <f1> numpy.core.inf",shape="record"];
	"numpy.core.array2string" [label="<f0> MissingModule| <f1> numpy.core.array2string",shape="record"];
	"numpy.core.signbit" [label="<f0> MissingModule| <f1> numpy.core.signbit",shape="record"];
	"numpy.core.isscalar" [label="<f0> MissingModule| <f1> numpy.core.isscalar",shape="record"];
	"numpy.core.isnat" [label="<f0> MissingModule| <f1> numpy.core.isnat",shape="record"];
	"numpy.core.ndarray" [label="<f0> MissingModule| <f1> numpy.core.ndarray",shape="record"];
	"numpy.core.array_repr" [label="<f0> MissingModule| <f1> numpy.core.array_repr",shape="record"];
	"numpy.core.arange" [label="<f0> MissingModule| <f1> numpy.core.arange",shape="record"];
	"numpy.core.float32" [label="<f0> MissingModule| <f1> numpy.core.float32",shape="record"];
	"numpy.core.iinfo" [label="<f0> MissingModule| <f1> numpy.core.iinfo",shape="record"];
	"numpy.core.reciprocal" [label="<f0> MissingModule| <f1> numpy.core.reciprocal",shape="record"];
	"numpy.core.sort" [label="<f0> MissingModule| <f1> numpy.core.sort",shape="record"];
	"numpy.core.argsort" [label="<f0> MissingModule| <f1> numpy.core.argsort",shape="record"];
	"numpy.core.sign" [label="<f0> MissingModule| <f1> numpy.core.sign",shape="record"];
	"numpy.core.isnan" [label="<f0> MissingModule| <f1> numpy.core.isnan",shape="record"];
	"numpy.core.count_nonzero" [label="<f0> MissingModule| <f1> numpy.core.count_nonzero",shape="record"];
	"numpy.core.divide" [label="<f0> MissingModule| <f1> numpy.core.divide",shape="record"];
	"numpy.core.swapaxes" [label="<f0> MissingModule| <f1> numpy.core.swapaxes",shape="record"];
	"numpy.core.matmul" [label="<f0> MissingModule| <f1> numpy.core.matmul",shape="record"];
	"numpy.core.object_" [label="<f0> MissingModule| <f1> numpy.core.object_",shape="record"];
	"numpy.core.asanyarray" [label="<f0> MissingModule| <f1> numpy.core.asanyarray",shape="record"];
	"numpy.core.intp" [label="<f0> MissingModule| <f1> numpy.core.intp",shape="record"];
	"numpy.core.atleast_2d" [label="<f0> MissingModule| <f1> numpy.core.atleast_2d",shape="record"];
	"numpy.core.prod" [label="<f0> MissingModule| <f1> numpy.core.prod",shape="record"];
	"numpy.core.amax" [label="<f0> MissingModule| <f1> numpy.core.amax",shape="record"];
	"numpy.core.amin" [label="<f0> MissingModule| <f1> numpy.core.amin",shape="record"];
	"numpy.core.moveaxis" [label="<f0> MissingModule| <f1> numpy.core.moveaxis",shape="record"];
	"numpy.core.geterrobj" [label="<f0> MissingModule| <f1> numpy.core.geterrobj",shape="record"];
	"numpy.core.errstate" [label="<f0> MissingModule| <f1> numpy.core.errstate",shape="record"];
	"numpy.core.finfo" [label="<f0> MissingModule| <f1> numpy.core.finfo",shape="record"];
	"numpy.core.isfinite" [label="<f0> MissingModule| <f1> numpy.core.isfinite",shape="record"];
	"numpy.core.sum" [label="<f0> MissingModule| <f1> numpy.core.sum",shape="record"];
	"numpy.core.sqrt" [label="<f0> MissingModule| <f1> numpy.core.sqrt",shape="record"];
	"numpy.core.multiply" [label="<f0> MissingModule| <f1> numpy.core.multiply",shape="record"];
	"numpy.core.add" [label="<f0> MissingModule| <f1> numpy.core.add",shape="record"];
	"numpy.core.dot" [label="<f0> MissingModule| <f1> numpy.core.dot",shape="record"];
	"numpy.core.Inf" [label="<f0> MissingModule| <f1> numpy.core.Inf",shape="record"];
	"numpy.core.all" [label="<f0> MissingModule| <f1> numpy.core.all",shape="record"];
	"numpy.core.newaxis" [label="<f0> MissingModule| <f1> numpy.core.newaxis",shape="record"];
	"numpy.core.complexfloating" [label="<f0> MissingModule| <f1> numpy.core.complexfloating",shape="record"];
	"numpy.core.inexact" [label="<f0> MissingModule| <f1> numpy.core.inexact",shape="record"];
	"numpy.core.cdouble" [label="<f0> MissingModule| <f1> numpy.core.cdouble",shape="record"];
	"numpy.core.csingle" [label="<f0> MissingModule| <f1> numpy.core.csingle",shape="record"];
	"numpy.core.double" [label="<f0> MissingModule| <f1> numpy.core.double",shape="record"];
	"numpy.core.single" [label="<f0> MissingModule| <f1> numpy.core.single",shape="record"];
	"numpy.core.intc" [label="<f0> MissingModule| <f1> numpy.core.intc",shape="record"];
	"numpy.core.empty_like" [label="<f0> MissingModule| <f1> numpy.core.empty_like",shape="record"];
	"numpy.core.empty" [label="<f0> MissingModule| <f1> numpy.core.empty",shape="record"];
	"numpy.core.zeros" [label="<f0> MissingModule| <f1> numpy.core.zeros",shape="record"];
	"numpy.core.asarray" [label="<f0> MissingModule| <f1> numpy.core.asarray",shape="record"];
	"numpy.core.array" [label="<f0> MissingModule| <f1> numpy.core.array",shape="record"];
	"numpy.core.getlimits" [label="<f0> SourceModule| <f1> numpy.core.getlimits",shape="record"];
	"numpy.version" [label="<f0> SourceModule| <f1> numpy.version",shape="record"];
	"numpy.ma.mrecords" [label="<f0> SourceModule| <f1> numpy.ma.mrecords",shape="record"];
	"numpy.array" [label="<f0> MissingModule| <f1> numpy.array",shape="record"];
	"numpy.dtype" [label="<f0> MissingModule| <f1> numpy.dtype",shape="record"];
	"numpy.bool_" [label="<f0> MissingModule| <f1> numpy.bool_",shape="record"];
	"numpy.recarray" [label="<f0> MissingModule| <f1> numpy.recarray",shape="record"];
	"numpy.lib" [label="<f0> Package| <f1> numpy.lib",shape="record"];
	"numpy.lib._version" [label="<f0> SourceModule| <f1> numpy.lib._version",shape="record"];
	"numpy.lib.arraypad" [label="<f0> SourceModule| <f1> numpy.lib.arraypad",shape="record"];
	"numpy.lib.arrayterator" [label="<f0> SourceModule| <f1> numpy.lib.arrayterator",shape="record"];
	"numpy.lib.npyio" [label="<f0> SourceModule| <f1> numpy.lib.npyio",shape="record"];
	"numpy.lib._datasource" [label="<f0> SourceModule| <f1> numpy.lib._datasource",shape="record"];
	"numpy.lib.format" [label="<f0> SourceModule| <f1> numpy.lib.format",shape="record"];
	"numpy.lib.arraysetops" [label="<f0> SourceModule| <f1> numpy.lib.arraysetops",shape="record"];
	"numpy.lib.utils" [label="<f0> SourceModule| <f1> numpy.lib.utils",shape="record"];
	"threadpoolctl" [label="<f0> MissingModule| <f1> threadpoolctl",shape="record"];
	"numpy.lib.polynomial" [label="<f0> SourceModule| <f1> numpy.lib.polynomial",shape="record"];
	"numpy.linalg" [label="<f0> Package| <f1> numpy.linalg",shape="record"];
	"numpy.linalg.linalg" [label="<f0> SourceModule| <f1> numpy.linalg.linalg",shape="record"];
	"numpy._typing" [label="<f0> Package| <f1> numpy._typing",shape="record"];
	"numpy._typing._ufunc" [label="<f0> MissingModule| <f1> numpy._typing._ufunc",shape="record"];
	"numpy._typing._array_like" [label="<f0> SourceModule| <f1> numpy._typing._array_like",shape="record"];
	"numpy.bytes_" [label="<f0> MissingModule| <f1> numpy.bytes_",shape="record"];
	"numpy.str_" [label="<f0> MissingModule| <f1> numpy.str_",shape="record"];
	"numpy.void" [label="<f0> MissingModule| <f1> numpy.void",shape="record"];
	"numpy.object_" [label="<f0> MissingModule| <f1> numpy.object_",shape="record"];
	"numpy.datetime64" [label="<f0> MissingModule| <f1> numpy.datetime64",shape="record"];
	"numpy.timedelta64" [label="<f0> MissingModule| <f1> numpy.timedelta64",shape="record"];
	"numpy.number" [label="<f0> MissingModule| <f1> numpy.number",shape="record"];
	"numpy.complexfloating" [label="<f0> MissingModule| <f1> numpy.complexfloating",shape="record"];
	"numpy.floating" [label="<f0> MissingModule| <f1> numpy.floating",shape="record"];
	"numpy.integer" [label="<f0> MissingModule| <f1> numpy.integer",shape="record"];
	"numpy.unsignedinteger" [label="<f0> MissingModule| <f1> numpy.unsignedinteger",shape="record"];
	"numpy.generic" [label="<f0> MissingModule| <f1> numpy.generic",shape="record"];
	"numpy._typing._dtype_like" [label="<f0> SourceModule| <f1> numpy._typing._dtype_like",shape="record"];
	"numpy._typing._shape" [label="<f0> SourceModule| <f1> numpy._typing._shape",shape="record"];
	"numpy._typing._scalars" [label="<f0> SourceModule| <f1> numpy._typing._scalars",shape="record"];
	"numpy._typing._char_codes" [label="<f0> SourceModule| <f1> numpy._typing._char_codes",shape="record"];
	"numpy._typing._nbit" [label="<f0> SourceModule| <f1> numpy._typing._nbit",shape="record"];
	"numpy._typing._nested_sequence" [label="<f0> SourceModule| <f1> numpy._typing._nested_sequence",shape="record"];
	"numpy.linalg._umath_linalg" [label="<f0> Extension| <f1> numpy.linalg._umath_linalg",shape="record"];
	"numpy.lib.histograms" [label="<f0> SourceModule| <f1> numpy.lib.histograms",shape="record"];
	"numpy.lib.ufunclike" [label="<f0> SourceModule| <f1> numpy.lib.ufunclike",shape="record"];
	"numpy.lib.twodim_base" [label="<f0> SourceModule| <f1> numpy.lib.twodim_base",shape="record"];
	"numpy.histogramdd" [label="<f0> MissingModule| <f1> numpy.histogramdd",shape="record"];
	"numpy.lib.shape_base" [label="<f0> SourceModule| <f1> numpy.lib.shape_base",shape="record"];
	"numpy.matrixlib.defmatrix" [label="<f0> SourceModule| <f1> numpy.matrixlib.defmatrix",shape="record"];
	"numpy.matrixlib" [label="<f0> Package| <f1> numpy.matrixlib",shape="record"];
	"numpy.lib.nanfunctions" [label="<f0> SourceModule| <f1> numpy.lib.nanfunctions",shape="record"];
	"numpy.lib.function_base" [label="<f0> SourceModule| <f1> numpy.lib.function_base",shape="record"];
	"numpy.lib.index_tricks" [label="<f0> SourceModule| <f1> numpy.lib.index_tricks",shape="record"];
	"numpy.lib.imag" [label="<f0> MissingModule| <f1> numpy.lib.imag",shape="record"];
	"numpy.lib.real" [label="<f0> MissingModule| <f1> numpy.lib.real",shape="record"];
	"numpy.lib.iscomplexobj" [label="<f0> MissingModule| <f1> numpy.lib.iscomplexobj",shape="record"];
	"numpy.lib.type_check" [label="<f0> SourceModule| <f1> numpy.lib.type_check",shape="record"];
	"numpy.lib.scimath" [label="<f0> SourceModule| <f1> numpy.lib.scimath",shape="record"];
	"numpy.lib.mixins" [label="<f0> SourceModule| <f1> numpy.lib.mixins",shape="record"];
	"numpy.core.umath" [label="<f0> SourceModule| <f1> numpy.core.umath",shape="record"];
	"numpy.ufunc" [label="<f0> MissingModule| <f1> numpy.ufunc",shape="record"];
	"numpy.core.overrides" [label="<f0> SourceModule| <f1> numpy.core.overrides",shape="record"];
	"numpy.testing._private.extbuild" [label="<f0> SourceModule| <f1> numpy.testing._private.extbuild",shape="record"];
	"numpy.testing._private.utils" [label="<f0> SourceModule| <f1> numpy.testing._private.utils",shape="record"];
	"win32pdh" [label="<f0> MissingModule| <f1> win32pdh",shape="record"];
	"numpy.isinf" [label="<f0> MissingModule| <f1> numpy.isinf",shape="record"];
	"numpy.isnan" [label="<f0> MissingModule| <f1> numpy.isnan",shape="record"];
	"numpy.isfinite" [label="<f0> MissingModule| <f1> numpy.isfinite",shape="record"];
	"numpy.testing._private" [label="<f0> Package| <f1> numpy.testing._private",shape="record"];
	"numpy.array_api" [label="<f0> Package| <f1> numpy.array_api",shape="record"];
	"numpy.array_api._utility_functions" [label="<f0> SourceModule| <f1> numpy.array_api._utility_functions",shape="record"];
	"numpy.array_api._array_object" [label="<f0> SourceModule| <f1> numpy.array_api._array_object",shape="record"];
	"numpy.array_api._typing" [label="<f0> SourceModule| <f1> numpy.array_api._typing",shape="record"];
	"numpy.float64" [label="<f0> MissingModule| <f1> numpy.float64",shape="record"];
	"numpy.float32" [label="<f0> MissingModule| <f1> numpy.float32",shape="record"];
	"numpy.uint64" [label="<f0> MissingModule| <f1> numpy.uint64",shape="record"];
	"numpy.uint32" [label="<f0> MissingModule| <f1> numpy.uint32",shape="record"];
	"numpy.uint16" [label="<f0> MissingModule| <f1> numpy.uint16",shape="record"];
	"numpy.uint8" [label="<f0> MissingModule| <f1> numpy.uint8",shape="record"];
	"numpy.int64" [label="<f0> MissingModule| <f1> numpy.int64",shape="record"];
	"numpy.int32" [label="<f0> MissingModule| <f1> numpy.int32",shape="record"];
	"numpy.int16" [label="<f0> MissingModule| <f1> numpy.int16",shape="record"];
	"numpy.int8" [label="<f0> MissingModule| <f1> numpy.int8",shape="record"];
	"numpy.array_api._statistical_functions" [label="<f0> SourceModule| <f1> numpy.array_api._statistical_functions",shape="record"];
	"numpy.array_api._sorting_functions" [label="<f0> SourceModule| <f1> numpy.array_api._sorting_functions",shape="record"];
	"numpy.array_api._set_functions" [label="<f0> SourceModule| <f1> numpy.array_api._set_functions",shape="record"];
	"numpy.array_api._searching_functions" [label="<f0> SourceModule| <f1> numpy.array_api._searching_functions",shape="record"];
	"numpy.array_api._manipulation_functions" [label="<f0> SourceModule| <f1> numpy.array_api._manipulation_functions",shape="record"];
	"numpy.array_api.linalg" [label="<f0> SourceModule| <f1> numpy.array_api.linalg",shape="record"];
	"numpy.array_api._indexing_functions" [label="<f0> SourceModule| <f1> numpy.array_api._indexing_functions",shape="record"];
	"numpy.array_api._elementwise_functions" [label="<f0> SourceModule| <f1> numpy.array_api._elementwise_functions",shape="record"];
	"numpy.array_api._dtypes" [label="<f0> SourceModule| <f1> numpy.array_api._dtypes",shape="record"];
	"numpy.array_api._data_type_functions" [label="<f0> SourceModule| <f1> numpy.array_api._data_type_functions",shape="record"];
	"numpy.array_api._creation_functions" [label="<f0> SourceModule| <f1> numpy.array_api._creation_functions",shape="record"];
	"numpy.array_api._constants" [label="<f0> SourceModule| <f1> numpy.array_api._constants",shape="record"];
	"numpy.ma.extras" [label="<f0> SourceModule| <f1> numpy.ma.extras",shape="record"];
	"numpy.ma.core" [label="<f0> SourceModule| <f1> numpy.ma.core",shape="record"];
	"numpy.expand_dims" [label="<f0> MissingModule| <f1> numpy.expand_dims",shape="record"];
	"numpy.iscomplexobj" [label="<f0> MissingModule| <f1> numpy.iscomplexobj",shape="record"];
	"numpy.amin" [label="<f0> MissingModule| <f1> numpy.amin",shape="record"];
	"numpy.amax" [label="<f0> MissingModule| <f1> numpy.amax",shape="record"];
	"pandas.core.algorithms" [label="<f0> SourceModule| <f1> pandas.core.algorithms",shape="record"];
	"pandas.core.internals.construction" [label="<f0> SourceModule| <f1> pandas.core.internals.construction",shape="record"];
	"pandas.core.internals.managers" [label="<f0> SourceModule| <f1> pandas.core.internals.managers",shape="record"];
	"pandas.api.extensions" [label="<f0> Package| <f1> pandas.api.extensions",shape="record"];
	"pandas.core.internals.ops" [label="<f0> SourceModule| <f1> pandas.core.internals.ops",shape="record"];
	"pandas.core.internals.base" [label="<f0> SourceModule| <f1> pandas.core.internals.base",shape="record"];
	"pandas.core.internals.array_manager" [label="<f0> SourceModule| <f1> pandas.core.internals.array_manager",shape="record"];
	"pandas.core.reshape.tile" [label="<f0> SourceModule| <f1> pandas.core.reshape.tile",shape="record"];
	"pandas.core.reshape" [label="<f0> Package| <f1> pandas.core.reshape",shape="record"];
	"pandas.core.array_algos.take" [label="<f0> SourceModule| <f1> pandas.core.array_algos.take",shape="record"];
	"pandas.core.sample" [label="<f0> SourceModule| <f1> pandas.core.sample",shape="record"];
	"pandas.core.indexing" [label="<f0> SourceModule| <f1> pandas.core.indexing",shape="record"];
	"pandas.core.nanops" [label="<f0> SourceModule| <f1> pandas.core.nanops",shape="record"];
	"'scipy.stats'" [label="<f0> MissingModule| <f1> 'scipy.stats'",shape="record"];
	"pandas.core.missing" [label="<f0> SourceModule| <f1> pandas.core.missing",shape="record"];
	"scipy" [label="<f0> MissingModule| <f1> scipy",shape="record"];
	"pandas.core.roperator" [label="<f0> SourceModule| <f1> pandas.core.roperator",shape="record"];
	"pandas.util._decorators" [label="<f0> SourceModule| <f1> pandas.util._decorators",shape="record"];
	"pandas.io.formats.string" [label="<f0> SourceModule| <f1> pandas.io.formats.string",shape="record"];
	"pandas.io.formats.html" [label="<f0> SourceModule| <f1> pandas.io.formats.html",shape="record"];
	"pandas.core.indexes.multi" [label="<f0> SourceModule| <f1> pandas.core.indexes.multi",shape="record"];
	"pandas.core.indexes" [label="<f0> Package| <f1> pandas.core.indexes",shape="record"];
	"pandas.core.reshape.util" [label="<f0> SourceModule| <f1> pandas.core.reshape.util",shape="record"];
	"pandas.core.indexes.frozen" [label="<f0> SourceModule| <f1> pandas.core.indexes.frozen",shape="record"];
	"pandas.io.formats.console" [label="<f0> SourceModule| <f1> pandas.io.formats.console",shape="record"];
	"pandas.io.formats.printing" [label="<f0> SourceModule| <f1> pandas.io.formats.printing",shape="record"];
	"traitlets" [label="<f0> MissingModule| <f1> traitlets",shape="record"];
	"'IPython.core'" [label="<f0> MissingModule| <f1> 'IPython.core'",shape="record"];
	"IPython" [label="<f0> MissingModule| <f1> IPython",shape="record"];
	"pandas.io.formats" [label="<f0> Package| <f1> pandas.io.formats",shape="record"];
	"pandas.io.formats.style" [label="<f0> SourceModule| <f1> pandas.io.formats.style",shape="record"];
	"pandas.io.formats.excel" [label="<f0> SourceModule| <f1> pandas.io.formats.excel",shape="record"];
	"pandas.io.excel" [label="<f0> Package| <f1> pandas.io.excel",shape="record"];
	"pandas.io.excel._xlsxwriter" [label="<f0> SourceModule| <f1> pandas.io.excel._xlsxwriter",shape="record"];
	"xlsxwriter" [label="<f0> MissingModule| <f1> xlsxwriter",shape="record"];
	"pandas.io.excel._util" [label="<f0> SourceModule| <f1> pandas.io.excel._util",shape="record"];
	"pandas.io.excel._openpyxl" [label="<f0> SourceModule| <f1> pandas.io.excel._openpyxl",shape="record"];
	"'openpyxl.cell'" [label="<f0> MissingModule| <f1> 'openpyxl.cell'",shape="record"];
	"'openpyxl.styles'" [label="<f0> MissingModule| <f1> 'openpyxl.styles'",shape="record"];
	"'openpyxl.workbook'" [label="<f0> MissingModule| <f1> 'openpyxl.workbook'",shape="record"];
	"'openpyxl.descriptors'" [label="<f0> MissingModule| <f1> 'openpyxl.descriptors'",shape="record"];
	"openpyxl" [label="<f0> MissingModule| <f1> openpyxl",shape="record"];
	"pandas.io.excel._odswriter" [label="<f0> SourceModule| <f1> pandas.io.excel._odswriter",shape="record"];
	"'odf.config'" [label="<f0> MissingModule| <f1> 'odf.config'",shape="record"];
	"'odf.style'" [label="<f0> MissingModule| <f1> 'odf.style'",shape="record"];
	"'odf.text'" [label="<f0> MissingModule| <f1> 'odf.text'",shape="record"];
	"'odf.table'" [label="<f0> MissingModule| <f1> 'odf.table'",shape="record"];
	"'odf.opendocument'" [label="<f0> MissingModule| <f1> 'odf.opendocument'",shape="record"];
	"pandas.io.excel._base" [label="<f0> SourceModule| <f1> pandas.io.excel._base",shape="record"];
	"xlrd" [label="<f0> MissingModule| <f1> xlrd",shape="record"];
	"pandas.io.excel._xlrd" [label="<f0> SourceModule| <f1> pandas.io.excel._xlrd",shape="record"];
	"pandas.io.excel._pyxlsb" [label="<f0> SourceModule| <f1> pandas.io.excel._pyxlsb",shape="record"];
	"pyxlsb" [label="<f0> MissingModule| <f1> pyxlsb",shape="record"];
	"pandas.io.excel._odfreader" [label="<f0> SourceModule| <f1> pandas.io.excel._odfreader",shape="record"];
	"'odf.office'" [label="<f0> MissingModule| <f1> 'odf.office'",shape="record"];
	"'odf.element'" [label="<f0> MissingModule| <f1> 'odf.element'",shape="record"];
	"'odf.namespaces'" [label="<f0> MissingModule| <f1> 'odf.namespaces'",shape="record"];
	"odf" [label="<f0> MissingModule| <f1> odf",shape="record"];
	"pandas.io.excel._calamine" [label="<f0> SourceModule| <f1> pandas.io.excel._calamine",shape="record"];
	"python_calamine" [label="<f0> MissingModule| <f1> python_calamine",shape="record"];
	"pandas.io.parsers.readers" [label="<f0> SourceModule| <f1> pandas.io.parsers.readers",shape="record"];
	"pandas.io.parsers.python_parser" [label="<f0> SourceModule| <f1> pandas.io.parsers.python_parser",shape="record"];
	"pandas.io.parsers.c_parser_wrapper" [label="<f0> SourceModule| <f1> pandas.io.parsers.c_parser_wrapper",shape="record"];
	"pandas.io.parsers.base_parser" [label="<f0> SourceModule| <f1> pandas.io.parsers.base_parser",shape="record"];
	"pandas.io.parsers.arrow_parser_wrapper" [label="<f0> SourceModule| <f1> pandas.io.parsers.arrow_parser_wrapper",shape="record"];
	"pandas.io.parsers" [label="<f0> Package| <f1> pandas.io.parsers",shape="record"];
	"pandas.io.formats.css" [label="<f0> SourceModule| <f1> pandas.io.formats.css",shape="record"];
	"pandas.io.formats._color_data" [label="<f0> SourceModule| <f1> pandas.io.formats._color_data",shape="record"];
	"'matplotlib.colors'" [label="<f0> MissingModule| <f1> 'matplotlib.colors'",shape="record"];
	"pandas.io.formats.style_render" [label="<f0> SourceModule| <f1> pandas.io.formats.style_render",shape="record"];
	"markupsafe" [label="<f0> MissingModule| <f1> markupsafe",shape="record"];
	"pandas.api.types" [label="<f0> Package| <f1> pandas.api.types",shape="record"];
	"pandas.core.dtypes.api" [label="<f0> SourceModule| <f1> pandas.core.dtypes.api",shape="record"];
	"pandas.io.common" [label="<f0> SourceModule| <f1> pandas.io.common",shape="record"];
	"botocore" [label="<f0> MissingModule| <f1> botocore",shape="record"];
	"pandas.core.reshape.concat" [label="<f0> SourceModule| <f1> pandas.core.reshape.concat",shape="record"];
	"pandas.core.indexes.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.indexes.timedeltas",shape="record"];
	"pandas.core.indexes.extension" [label="<f0> SourceModule| <f1> pandas.core.indexes.extension",shape="record"];
	"pandas.core.indexes.datetimelike" [label="<f0> SourceModule| <f1> pandas.core.indexes.datetimelike",shape="record"];
	"pandas.core.indexes.range" [label="<f0> SourceModule| <f1> pandas.core.indexes.range",shape="record"];
	"pandas.core.indexes.datetimes" [label="<f0> SourceModule| <f1> pandas.core.indexes.datetimes",shape="record"];
	"pytz" [label="<f0> Package| <f1> pytz",shape="record"];
	"pytz.tzfile" [label="<f0> SourceModule| <f1> pytz.tzfile",shape="record"];
	"pytz.tzinfo" [label="<f0> SourceModule| <f1> pytz.tzinfo",shape="record"];
	"sets" [label="<f0> MissingModule| <f1> sets",shape="record"];
	"pytz.lazy" [label="<f0> SourceModule| <f1> pytz.lazy",shape="record"];
	"collections.Mapping" [label="<f0> MissingModule| <f1> collections.Mapping",shape="record"];
	"UserDict" [label="<f0> MissingModule| <f1> UserDict",shape="record"];
	"pytz.exceptions" [label="<f0> SourceModule| <f1> pytz.exceptions",shape="record"];
	"pandas.core.indexes.api" [label="<f0> SourceModule| <f1> pandas.core.indexes.api",shape="record"];
	"pandas.core.indexes.period" [label="<f0> SourceModule| <f1> pandas.core.indexes.period",shape="record"];
	"pandas.core.indexes.interval" [label="<f0> SourceModule| <f1> pandas.core.indexes.interval",shape="record"];
	"pandas.core.indexes.category" [label="<f0> SourceModule| <f1> pandas.core.indexes.category",shape="record"];
	"pandas.core.common" [label="<f0> SourceModule| <f1> pandas.core.common",shape="record"];
	"pandas.core.base" [label="<f0> SourceModule| <f1> pandas.core.base",shape="record"];
	"pandas.core.arrays.string_" [label="<f0> SourceModule| <f1> pandas.core.arrays.string_",shape="record"];
	"pandas.core.arrays.numpy_" [label="<f0> SourceModule| <f1> pandas.core.arrays.numpy_",shape="record"];
	"pandas.core.arrays" [label="<f0> Package| <f1> pandas.core.arrays",shape="record"];
	"pandas.core.arrays.sparse" [label="<f0> Package| <f1> pandas.core.arrays.sparse",shape="record"];
	"pandas.core.arrays.sparse.array" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.array",shape="record"];
	"'scipy.sparse'" [label="<f0> MissingModule| <f1> 'scipy.sparse'",shape="record"];
	"pandas.core.arrays.sparse.accessor" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.accessor",shape="record"];
	"pandas.core.arrays.sparse.scipy_sparse" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.scipy_sparse",shape="record"];
	"pandas.core.dtypes.missing" [label="<f0> SourceModule| <f1> pandas.core.dtypes.missing",shape="record"];
	"pandas.core.dtypes.common" [label="<f0> SourceModule| <f1> pandas.core.dtypes.common",shape="record"];
	"pandas._config.config" [label="<f0> SourceModule| <f1> pandas._config.config",shape="record"];
	"pandas.core.window.rolling" [label="<f0> SourceModule| <f1> pandas.core.window.rolling",shape="record"];
	"pandas.core.series" [label="<f0> SourceModule| <f1> pandas.core.series",shape="record"];
	"pandas.core.reshape.reshape" [label="<f0> SourceModule| <f1> pandas.core.reshape.reshape",shape="record"];
	"pandas.io.formats.info" [label="<f0> SourceModule| <f1> pandas.io.formats.info",shape="record"];
	"pandas.core.strings.accessor" [label="<f0> SourceModule| <f1> pandas.core.strings.accessor",shape="record"];
	"pandas.core.methods.selectn" [label="<f0> SourceModule| <f1> pandas.core.methods.selectn",shape="record"];
	"pandas.core.methods" [label="<f0> Package| <f1> pandas.core.methods",shape="record"];
	"pandas.core.indexes.accessors" [label="<f0> SourceModule| <f1> pandas.core.indexes.accessors",shape="record"];
	"pandas.compat._constants" [label="<f0> SourceModule| <f1> pandas.compat._constants",shape="record"];
	"pandas.core.resample" [label="<f0> SourceModule| <f1> pandas.core.resample",shape="record"];
	"pandas.core.internals" [label="<f0> Package| <f1> pandas.core.internals",shape="record"];
	"pandas.core.internals.concat" [label="<f0> SourceModule| <f1> pandas.core.internals.concat",shape="record"];
	"pandas.core.internals.api" [label="<f0> SourceModule| <f1> pandas.core.internals.api",shape="record"];
	"pandas.core.internals.Block" [label="<f0> MissingModule| <f1> pandas.core.internals.Block",shape="record"];
	"pandas.core.indexes.base" [label="<f0> SourceModule| <f1> pandas.core.indexes.base",shape="record"];
	"pandas.core.reshape.merge" [label="<f0> SourceModule| <f1> pandas.core.reshape.merge",shape="record"];
	"pandas.core.groupby.generic" [label="<f0> SourceModule| <f1> pandas.core.groupby.generic",shape="record"];
	"pandas.core.generic" [label="<f0> SourceModule| <f1> pandas.core.generic",shape="record"];
	"pandas.io.clipboards" [label="<f0> SourceModule| <f1> pandas.io.clipboards",shape="record"];
	"pandas.io.clipboard" [label="<f0> Package| <f1> pandas.io.clipboard",shape="record"];
	"Foundation" [label="<f0> MissingModule| <f1> Foundation",shape="record"];
	"AppKit" [label="<f0> MissingModule| <f1> AppKit",shape="record"];
	"PyQt4" [label="<f0> MissingModule| <f1> PyQt4",shape="record"];
	"qtpy" [label="<f0> MissingModule| <f1> qtpy",shape="record"];
	"pandas.io.pickle" [label="<f0> SourceModule| <f1> pandas.io.pickle",shape="record"];
	"pandas.compat.pickle_compat" [label="<f0> SourceModule| <f1> pandas.compat.pickle_compat",shape="record"];
	"pandas.io.sql" [label="<f0> SourceModule| <f1> pandas.io.sql",shape="record"];
	"sqlalchemy.engine" [label="<f0> Package| <f1> sqlalchemy.engine",shape="record"];
	"sqlalchemy.sql.ddl" [label="<f0> SourceModule| <f1> sqlalchemy.sql.ddl",shape="record"];
	"sqlalchemy.sql.selectable" [label="<f0> SourceModule| <f1> sqlalchemy.sql.selectable",shape="record"];
	"sqlalchemy.sql.functions" [label="<f0> SourceModule| <f1> sqlalchemy.sql.functions",shape="record"];
	"sqlalchemy.sql.util" [label="<f0> SourceModule| <f1> sqlalchemy.sql.util",shape="record"];
	"sqlalchemy.sql.dml" [label="<f0> SourceModule| <f1> sqlalchemy.sql.dml",shape="record"];
	"sqlalchemy.sql.sqltypes" [label="<f0> SourceModule| <f1> sqlalchemy.sql.sqltypes",shape="record"];
	"sqlalchemy.util.langhelpers" [label="<f0> SourceModule| <f1> sqlalchemy.util.langhelpers",shape="record"];
	"sqlalchemy.util._has_cy" [label="<f0> SourceModule| <f1> sqlalchemy.util._has_cy",shape="record"];
	"sqlalchemy.cyextension.util" [label="<f0> Extension| <f1> sqlalchemy.cyextension.util",shape="record"];
	"sqlalchemy.cyextension.resultproxy" [label="<f0> Extension| <f1> sqlalchemy.cyextension.resultproxy",shape="record"];
	"sqlalchemy.cyextension.processors" [label="<f0> Extension| <f1> sqlalchemy.cyextension.processors",shape="record"];
	"sqlalchemy.cyextension.immutabledict" [label="<f0> Extension| <f1> sqlalchemy.cyextension.immutabledict",shape="record"];
	"sqlalchemy.cyextension.collections" [label="<f0> Extension| <f1> sqlalchemy.cyextension.collections",shape="record"];
	"sqlalchemy.cyextension" [label="<f0> Package| <f1> sqlalchemy.cyextension",shape="record"];
	"sqlalchemy.util.compat" [label="<f0> SourceModule| <f1> sqlalchemy.util.compat",shape="record"];
	"importlib_metadata" [label="<f0> Package| <f1> importlib_metadata",shape="record"];
	"zipp.compat.overlay" [label="<f0> SourceModule| <f1> zipp.compat.overlay",shape="record"];
	"zipp.compat" [label="<f0> Package| <f1> zipp.compat",shape="record"];
	"zipp" [label="<f0> Package| <f1> zipp",shape="record"];
	"zipp._functools" [label="<f0> SourceModule| <f1> zipp._functools",shape="record"];
	"zipp.glob" [label="<f0> SourceModule| <f1> zipp.glob",shape="record"];
	"zipp.compat.py310" [label="<f0> SourceModule| <f1> zipp.compat.py310",shape="record"];
	"importlib_metadata._adapters" [label="<f0> SourceModule| <f1> importlib_metadata._adapters",shape="record"];
	"importlib_metadata._text" [label="<f0> SourceModule| <f1> importlib_metadata._text",shape="record"];
	"importlib_metadata.compat.py311" [label="<f0> SourceModule| <f1> importlib_metadata.compat.py311",shape="record"];
	"importlib_metadata.compat.py39" [label="<f0> SourceModule| <f1> importlib_metadata.compat.py39",shape="record"];
	"importlib_metadata.compat" [label="<f0> Package| <f1> importlib_metadata.compat",shape="record"];
	"importlib_metadata._typing" [label="<f0> SourceModule| <f1> importlib_metadata._typing",shape="record"];
	"importlib_metadata._itertools" [label="<f0> SourceModule| <f1> importlib_metadata._itertools",shape="record"];
	"importlib_metadata._functools" [label="<f0> SourceModule| <f1> importlib_metadata._functools",shape="record"];
	"importlib_metadata._compat" [label="<f0> SourceModule| <f1> importlib_metadata._compat",shape="record"];
	"importlib_metadata._collections" [label="<f0> SourceModule| <f1> importlib_metadata._collections",shape="record"];
	"importlib_metadata._meta" [label="<f0> SourceModule| <f1> importlib_metadata._meta",shape="record"];
	"sqlalchemy.util._collections" [label="<f0> SourceModule| <f1> sqlalchemy.util._collections",shape="record"];
	"sqlalchemy.util._py_collections" [label="<f0> SourceModule| <f1> sqlalchemy.util._py_collections",shape="record"];
	"sqlalchemy.inspection" [label="<f0> SourceModule| <f1> sqlalchemy.inspection",shape="record"];
	"sqlalchemy.event" [label="<f0> Package| <f1> sqlalchemy.event",shape="record"];
	"sqlalchemy.event.registry" [label="<f0> SourceModule| <f1> sqlalchemy.event.registry",shape="record"];
	"sqlalchemy.event.base" [label="<f0> SourceModule| <f1> sqlalchemy.event.base",shape="record"];
	"sqlalchemy.event.attr" [label="<f0> SourceModule| <f1> sqlalchemy.event.attr",shape="record"];
	"sqlalchemy.util.concurrency" [label="<f0> SourceModule| <f1> sqlalchemy.util.concurrency",shape="record"];
	"sqlalchemy.util._concurrency_py3k" [label="<f0> SourceModule| <f1> sqlalchemy.util._concurrency_py3k",shape="record"];
	"greenlet" [label="<f0> MissingModule| <f1> greenlet",shape="record"];
	"sqlalchemy.event.api" [label="<f0> SourceModule| <f1> sqlalchemy.event.api",shape="record"];
	"sqlalchemy.event.legacy" [label="<f0> SourceModule| <f1> sqlalchemy.event.legacy",shape="record"];
	"sqlalchemy.sql.annotation" [label="<f0> SourceModule| <f1> sqlalchemy.sql.annotation",shape="record"];
	"sqlalchemy.sql._typing" [label="<f0> SourceModule| <f1> sqlalchemy.sql._typing",shape="record"];
	"sqlalchemy.sql.lambdas" [label="<f0> SourceModule| <f1> sqlalchemy.sql.lambdas",shape="record"];
	"sqlalchemy.sql.visitors" [label="<f0> SourceModule| <f1> sqlalchemy.sql.visitors",shape="record"];
	"sqlalchemy.sql._py_util" [label="<f0> SourceModule| <f1> sqlalchemy.sql._py_util",shape="record"];
	"sqlalchemy.sql.type_api" [label="<f0> SourceModule| <f1> sqlalchemy.sql.type_api",shape="record"];
	"sqlalchemy.sql.traversals" [label="<f0> SourceModule| <f1> sqlalchemy.sql.traversals",shape="record"];
	"sqlalchemy.sql.operators" [label="<f0> SourceModule| <f1> sqlalchemy.sql.operators",shape="record"];
	"sqlalchemy.sql.coercions" [label="<f0> SourceModule| <f1> sqlalchemy.sql.coercions",shape="record"];
	"sqlalchemy.sql.cache_key" [label="<f0> SourceModule| <f1> sqlalchemy.sql.cache_key",shape="record"];
	"sqlalchemy.sql.schema" [label="<f0> SourceModule| <f1> sqlalchemy.sql.schema",shape="record"];
	"sqlalchemy.sql.compiler" [label="<f0> SourceModule| <f1> sqlalchemy.sql.compiler",shape="record"];
	"sqlalchemy.sql.crud" [label="<f0> SourceModule| <f1> sqlalchemy.sql.crud",shape="record"];
	"sqlalchemy.util.typing" [label="<f0> SourceModule| <f1> sqlalchemy.util.typing",shape="record"];
	"sqlalchemy.util.topological" [label="<f0> SourceModule| <f1> sqlalchemy.util.topological",shape="record"];
	"sqlalchemy.util" [label="<f0> Package| <f1> sqlalchemy.util",shape="record"];
	"sqlalchemy.util.deprecations" [label="<f0> SourceModule| <f1> sqlalchemy.util.deprecations",shape="record"];
	"sqlalchemy.util.queue" [label="<f0> SourceModule| <f1> sqlalchemy.util.queue",shape="record"];
	"sqlalchemy.util.preloaded" [label="<f0> SourceModule| <f1> sqlalchemy.util.preloaded",shape="record"];
	"sqlalchemy.sql.naming" [label="<f0> SourceModule| <f1> sqlalchemy.sql.naming",shape="record"];
	"sqlalchemy.sql.events" [label="<f0> SourceModule| <f1> sqlalchemy.sql.events",shape="record"];
	"sqlalchemy.sql.default_comparator" [label="<f0> SourceModule| <f1> sqlalchemy.sql.default_comparator",shape="record"];
	"sqlalchemy.orm.util" [label="<f0> SourceModule| <f1> sqlalchemy.orm.util",shape="record"];
	"sqlalchemy.orm.query" [label="<f0> SourceModule| <f1> sqlalchemy.orm.query",shape="record"];
	"sqlalchemy.log" [label="<f0> SourceModule| <f1> sqlalchemy.log",shape="record"];
	"sqlalchemy.orm.loading" [label="<f0> SourceModule| <f1> sqlalchemy.orm.loading",shape="record"];
	"sqlalchemy.orm.mapper" [label="<f0> SourceModule| <f1> sqlalchemy.orm.mapper",shape="record"];
	"sqlalchemy.orm.events" [label="<f0> SourceModule| <f1> sqlalchemy.orm.events",shape="record"];
	"sqlalchemy.orm.collections" [label="<f0> SourceModule| <f1> sqlalchemy.orm.collections",shape="record"];
	"sqlalchemy.orm.mapped_collection" [label="<f0> SourceModule| <f1> sqlalchemy.orm.mapped_collection",shape="record"];
	"sqlalchemy.orm.unitofwork" [label="<f0> SourceModule| <f1> sqlalchemy.orm.unitofwork",shape="record"];
	"sqlalchemy.orm.scoping" [label="<f0> SourceModule| <f1> sqlalchemy.orm.scoping",shape="record"];
	"sqlalchemy.orm.identity" [label="<f0> SourceModule| <f1> sqlalchemy.orm.identity",shape="record"];
	"sqlalchemy.orm.instrumentation" [label="<f0> SourceModule| <f1> sqlalchemy.orm.instrumentation",shape="record"];
	"sqlalchemy.orm.context" [label="<f0> SourceModule| <f1> sqlalchemy.orm.context",shape="record"];
	"sqlalchemy.future" [label="<f0> Package| <f1> sqlalchemy.future",shape="record"];
	"sqlalchemy.sql._selectable_constructors" [label="<f0> SourceModule| <f1> sqlalchemy.sql._selectable_constructors",shape="record"];
	"sqlalchemy.future.engine" [label="<f0> SourceModule| <f1> sqlalchemy.future.engine",shape="record"];
	"sqlalchemy.orm.path_registry" [label="<f0> SourceModule| <f1> sqlalchemy.orm.path_registry",shape="record"];
	"sqlalchemy.orm.interfaces" [label="<f0> SourceModule| <f1> sqlalchemy.orm.interfaces",shape="record"];
	"sqlalchemy.orm._typing" [label="<f0> SourceModule| <f1> sqlalchemy.orm._typing",shape="record"];
	"sqlalchemy.sql._orm_types" [label="<f0> SourceModule| <f1> sqlalchemy.sql._orm_types",shape="record"];
	"sqlalchemy.orm.exc" [label="<f0> SourceModule| <f1> sqlalchemy.orm.exc",shape="record"];
	"sqlalchemy.orm.strategy_options" [label="<f0> SourceModule| <f1> sqlalchemy.orm.strategy_options",shape="record"];
	"sqlalchemy.orm.strategies" [label="<f0> SourceModule| <f1> sqlalchemy.orm.strategies",shape="record"];
	"sqlalchemy.orm.state" [label="<f0> SourceModule| <f1> sqlalchemy.orm.state",shape="record"];
	"sqlalchemy.ext.asyncio.session" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.session",shape="record"];
	"sqlalchemy.ext.asyncio.result" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.result",shape="record"];
	"sqlalchemy.ext.asyncio.exc" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.exc",shape="record"];
	"sqlalchemy.ext.asyncio.base" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.base",shape="record"];
	"sqlalchemy.ext.asyncio.engine" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.engine",shape="record"];
	"sqlalchemy.pool" [label="<f0> Package| <f1> sqlalchemy.pool",shape="record"];
	"sqlalchemy.pool.impl" [label="<f0> SourceModule| <f1> sqlalchemy.pool.impl",shape="record"];
	"sqlalchemy.pool.base" [label="<f0> SourceModule| <f1> sqlalchemy.pool.base",shape="record"];
	"sqlalchemy.pool.events" [label="<f0> SourceModule| <f1> sqlalchemy.pool.events",shape="record"];
	"sqlalchemy.ext.asyncio" [label="<f0> Package| <f1> sqlalchemy.ext.asyncio",shape="record"];
	"sqlalchemy.ext" [label="<f0> Package| <f1> sqlalchemy.ext",shape="record"];
	"sqlalchemy.ext.asyncio.scoping" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.scoping",shape="record"];
	"sqlalchemy.orm.session" [label="<f0> SourceModule| <f1> sqlalchemy.orm.session",shape="record"];
	"sqlalchemy.orm.state_changes" [label="<f0> SourceModule| <f1> sqlalchemy.orm.state_changes",shape="record"];
	"sqlalchemy.orm.bulk_persistence" [label="<f0> SourceModule| <f1> sqlalchemy.orm.bulk_persistence",shape="record"];
	"sqlalchemy.orm.persistence" [label="<f0> SourceModule| <f1> sqlalchemy.orm.persistence",shape="record"];
	"sqlalchemy.orm.sync" [label="<f0> SourceModule| <f1> sqlalchemy.orm.sync",shape="record"];
	"sqlalchemy.orm.evaluator" [label="<f0> SourceModule| <f1> sqlalchemy.orm.evaluator",shape="record"];
	"sqlalchemy.orm.relationships" [label="<f0> SourceModule| <f1> sqlalchemy.orm.relationships",shape="record"];
	"sqlalchemy.orm.properties" [label="<f0> SourceModule| <f1> sqlalchemy.orm.properties",shape="record"];
	"sqlalchemy.orm.descriptor_props" [label="<f0> SourceModule| <f1> sqlalchemy.orm.descriptor_props",shape="record"];
	"sqlalchemy.orm.dependency" [label="<f0> SourceModule| <f1> sqlalchemy.orm.dependency",shape="record"];
	"sqlalchemy.orm.decl_base" [label="<f0> SourceModule| <f1> sqlalchemy.orm.decl_base",shape="record"];
	"sqlalchemy.orm.decl_api" [label="<f0> SourceModule| <f1> sqlalchemy.orm.decl_api",shape="record"];
	"sqlalchemy.orm._orm_constructors" [label="<f0> SourceModule| <f1> sqlalchemy.orm._orm_constructors",shape="record"];
	"sqlalchemy.orm.clsregistry" [label="<f0> SourceModule| <f1> sqlalchemy.orm.clsregistry",shape="record"];
	"sqlalchemy.orm.base" [label="<f0> SourceModule| <f1> sqlalchemy.orm.base",shape="record"];
	"sqlalchemy.orm.writeonly" [label="<f0> SourceModule| <f1> sqlalchemy.orm.writeonly",shape="record"];
	"sqlalchemy.orm.dynamic" [label="<f0> SourceModule| <f1> sqlalchemy.orm.dynamic",shape="record"];
	"sqlalchemy.orm.attributes" [label="<f0> SourceModule| <f1> sqlalchemy.orm.attributes",shape="record"];
	"sqlalchemy.engine.default" [label="<f0> SourceModule| <f1> sqlalchemy.engine.default",shape="record"];
	"sqlalchemy.orm" [label="<f0> Package| <f1> sqlalchemy.orm",shape="record"];
	"sqlalchemy.dialects" [label="<f0> Package| <f1> sqlalchemy.dialects",shape="record"];
	"sqlalchemy.sql.elements" [label="<f0> SourceModule| <f1> sqlalchemy.sql.elements",shape="record"];
	"sqlalchemy.sql.base" [label="<f0> SourceModule| <f1> sqlalchemy.sql.base",shape="record"];
	"sqlalchemy.sql.roles" [label="<f0> SourceModule| <f1> sqlalchemy.sql.roles",shape="record"];
	"sqlalchemy.sql" [label="<f0> Package| <f1> sqlalchemy.sql",shape="record"];
	"sqlalchemy.engine.url" [label="<f0> SourceModule| <f1> sqlalchemy.engine.url",shape="record"];
	"sqlalchemy.engine.row" [label="<f0> SourceModule| <f1> sqlalchemy.engine.row",shape="record"];
	"sqlalchemy.engine._py_row" [label="<f0> SourceModule| <f1> sqlalchemy.engine._py_row",shape="record"];
	"sqlalchemy.engine.result" [label="<f0> SourceModule| <f1> sqlalchemy.engine.result",shape="record"];
	"sqlalchemy.engine.reflection" [label="<f0> SourceModule| <f1> sqlalchemy.engine.reflection",shape="record"];
	"sqlalchemy.engine.mock" [label="<f0> SourceModule| <f1> sqlalchemy.engine.mock",shape="record"];
	"sqlalchemy.engine.interfaces" [label="<f0> SourceModule| <f1> sqlalchemy.engine.interfaces",shape="record"];
	"sqlalchemy.engine.create" [label="<f0> SourceModule| <f1> sqlalchemy.engine.create",shape="record"];
	"sqlalchemy.engine.base" [label="<f0> SourceModule| <f1> sqlalchemy.engine.base",shape="record"];
	"sqlalchemy.engine.util" [label="<f0> SourceModule| <f1> sqlalchemy.engine.util",shape="record"];
	"sqlalchemy.engine._py_util" [label="<f0> SourceModule| <f1> sqlalchemy.engine._py_util",shape="record"];
	"sqlalchemy.engine.events" [label="<f0> SourceModule| <f1> sqlalchemy.engine.events",shape="record"];
	"sqlalchemy.engine.cursor" [label="<f0> SourceModule| <f1> sqlalchemy.engine.cursor",shape="record"];
	"sqlalchemy.engine.characteristics" [label="<f0> SourceModule| <f1> sqlalchemy.engine.characteristics",shape="record"];
	"sqlalchemy.engine.processors" [label="<f0> SourceModule| <f1> sqlalchemy.engine.processors",shape="record"];
	"sqlalchemy.engine._py_processors" [label="<f0> SourceModule| <f1> sqlalchemy.engine._py_processors",shape="record"];
	"sqlalchemy.exc" [label="<f0> SourceModule| <f1> sqlalchemy.exc",shape="record"];
	"sqlalchemy.types" [label="<f0> SourceModule| <f1> sqlalchemy.types",shape="record"];
	"sqlalchemy.schema" [label="<f0> SourceModule| <f1> sqlalchemy.schema",shape="record"];
	"sqlite3" [label="<f0> Package| <f1> sqlite3",shape="record"];
	"sqlite3.dump" [label="<f0> SourceModule| <f1> sqlite3.dump",shape="record"];
	"sqlite3.dbapi2" [label="<f0> SourceModule| <f1> sqlite3.dbapi2",shape="record"];
	"_sqlite3" [label="<f0> Extension| <f1> _sqlite3",shape="record"];
	"sqlalchemy.sql.expression" [label="<f0> SourceModule| <f1> sqlalchemy.sql.expression",shape="record"];
	"sqlalchemy.sql._elements_constructors" [label="<f0> SourceModule| <f1> sqlalchemy.sql._elements_constructors",shape="record"];
	"sqlalchemy.sql._dml_constructors" [label="<f0> SourceModule| <f1> sqlalchemy.sql._dml_constructors",shape="record"];
	"sqlalchemy" [label="<f0> Package| <f1> sqlalchemy",shape="record"];
	"sqlalchemy.dialects.sqlite" [label="<f0> Package| <f1> sqlalchemy.dialects.sqlite",shape="record"];
	"sqlalchemy.dialects.sqlite.dml" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.dml",shape="record"];
	"sqlalchemy.dialects._typing" [label="<f0> SourceModule| <f1> sqlalchemy.dialects._typing",shape="record"];
	"sqlalchemy.dialects.sqlite.pysqlite" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.pysqlite",shape="record"];
	"sqlalchemy.dialects.sqlite.pysqlcipher" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.pysqlcipher",shape="record"];
	"pysqlcipher3" [label="<f0> MissingModule| <f1> pysqlcipher3",shape="record"];
	"sqlcipher3" [label="<f0> MissingModule| <f1> sqlcipher3",shape="record"];
	"sqlalchemy.dialects.sqlite.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.base",shape="record"];
	"sqlalchemy.dialects.sqlite.json" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.json",shape="record"];
	"sqlalchemy.dialects.sqlite.aiosqlite" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.aiosqlite",shape="record"];
	"sqlalchemy.dialects.postgresql" [label="<f0> Package| <f1> sqlalchemy.dialects.postgresql",shape="record"];
	"sqlalchemy.dialects.postgresql.types" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.types",shape="record"];
	"sqlalchemy.dialects.postgresql.named_types" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.named_types",shape="record"];
	"sqlalchemy.dialects.postgresql.hstore" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.hstore",shape="record"];
	"sqlalchemy.dialects.postgresql.operators" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.operators",shape="record"];
	"sqlalchemy.dialects.postgresql.ext" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.ext",shape="record"];
	"sqlalchemy.dialects.postgresql.dml" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.dml",shape="record"];
	"sqlalchemy.dialects.postgresql.psycopg2cffi" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.psycopg2cffi",shape="record"];
	"sqlalchemy.dialects.postgresql.psycopg2" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.psycopg2",shape="record"];
	"sqlalchemy.dialects.postgresql._psycopg_common" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql._psycopg_common",shape="record"];
	"sqlalchemy.dialects.postgresql.psycopg" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.psycopg",shape="record"];
	"'psycopg.pq'" [label="<f0> MissingModule| <f1> 'psycopg.pq'",shape="record"];
	"'psycopg.types'" [label="<f0> MissingModule| <f1> 'psycopg.types'",shape="record"];
	"'psycopg.adapt'" [label="<f0> MissingModule| <f1> 'psycopg.adapt'",shape="record"];
	"psycopg" [label="<f0> MissingModule| <f1> psycopg",shape="record"];
	"sqlalchemy.dialects.postgresql.pg8000" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.pg8000",shape="record"];
	"sqlalchemy.dialects.postgresql.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.base",shape="record"];
	"sqlalchemy.dialects.postgresql.asyncpg" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.asyncpg",shape="record"];
	"asyncpg" [label="<f0> MissingModule| <f1> asyncpg",shape="record"];
	"sqlalchemy.dialects.postgresql.pg_catalog" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.pg_catalog",shape="record"];
	"sqlalchemy.dialects.postgresql.ranges" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.ranges",shape="record"];
	"sqlalchemy.dialects.postgresql.json" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.json",shape="record"];
	"sqlalchemy.dialects.postgresql.array" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.array",shape="record"];
	"sqlalchemy.dialects.oracle" [label="<f0> Package| <f1> sqlalchemy.dialects.oracle",shape="record"];
	"sqlalchemy.dialects.oracle.oracledb" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.oracledb",shape="record"];
	"oracledb" [label="<f0> MissingModule| <f1> oracledb",shape="record"];
	"sqlalchemy.connectors.asyncio" [label="<f0> SourceModule| <f1> sqlalchemy.connectors.asyncio",shape="record"];
	"sqlalchemy.connectors" [label="<f0> Package| <f1> sqlalchemy.connectors",shape="record"];
	"sqlalchemy.dialects.oracle.cx_oracle" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.cx_oracle",shape="record"];
	"cx_Oracle" [label="<f0> MissingModule| <f1> cx_Oracle",shape="record"];
	"sqlalchemy.dialects.oracle.types" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.types",shape="record"];
	"sqlalchemy.dialects.oracle.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.base",shape="record"];
	"sqlalchemy.dialects.oracle.dictionary" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.dictionary",shape="record"];
	"sqlalchemy.dialects.mysql" [label="<f0> Package| <f1> sqlalchemy.dialects.mysql",shape="record"];
	"sqlalchemy.dialects.mysql.mariadb" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.mariadb",shape="record"];
	"sqlalchemy.dialects.mysql.expression" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.expression",shape="record"];
	"sqlalchemy.dialects.mysql.dml" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.dml",shape="record"];
	"sqlalchemy.dialects.mysql.pyodbc" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.pyodbc",shape="record"];
	"sqlalchemy.connectors.pyodbc" [label="<f0> SourceModule| <f1> sqlalchemy.connectors.pyodbc",shape="record"];
	"sqlalchemy.dialects.mysql.types" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.types",shape="record"];
	"sqlalchemy.dialects.mysql.pymysql" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.pymysql",shape="record"];
	"sqlalchemy.dialects.mysql.mysqldb" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.mysqldb",shape="record"];
	"sqlalchemy.dialects.mysql.mysqlconnector" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.mysqlconnector",shape="record"];
	"'mysql.connector'" [label="<f0> MissingModule| <f1> 'mysql.connector'",shape="record"];
	"mysql" [label="<f0> MissingModule| <f1> mysql",shape="record"];
	"sqlalchemy.dialects.mysql.mariadbconnector" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.mariadbconnector",shape="record"];
	"sqlalchemy.dialects.mysql.cymysql" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.cymysql",shape="record"];
	"sqlalchemy.dialects.mysql.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.base",shape="record"];
	"sqlalchemy.dialects.mysql.reserved_words" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.reserved_words",shape="record"];
	"sqlalchemy.dialects.mysql.json" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.json",shape="record"];
	"sqlalchemy.dialects.mysql.enumerated" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.enumerated",shape="record"];
	"sqlalchemy.dialects.mysql.asyncmy" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.asyncmy",shape="record"];
	"asyncmy" [label="<f0> MissingModule| <f1> asyncmy",shape="record"];
	"sqlalchemy.dialects.mysql.aiomysql" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.aiomysql",shape="record"];
	"'pymysql.constants'" [label="<f0> MissingModule| <f1> 'pymysql.constants'",shape="record"];
	"sqlalchemy.dialects.mysql.reflection" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.reflection",shape="record"];
	"sqlalchemy.dialects.mssql" [label="<f0> Package| <f1> sqlalchemy.dialects.mssql",shape="record"];
	"sqlalchemy.dialects.mssql.pyodbc" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.pyodbc",shape="record"];
	"sqlalchemy.dialects.mssql.json" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.json",shape="record"];
	"sqlalchemy.dialects.mssql.pymssql" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.pymssql",shape="record"];
	"sqlalchemy.dialects.mssql.aioodbc" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.aioodbc",shape="record"];
	"sqlalchemy.connectors.aioodbc" [label="<f0> SourceModule| <f1> sqlalchemy.connectors.aioodbc",shape="record"];
	"sqlalchemy.dialects.mssql.information_schema" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.information_schema",shape="record"];
	"sqlalchemy.ext.compiler" [label="<f0> SourceModule| <f1> sqlalchemy.ext.compiler",shape="record"];
	"sqlalchemy.dialects.mssql.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.base",shape="record"];
	"sqlalchemy.ext.baked" [label="<f0> SourceModule| <f1> sqlalchemy.ext.baked",shape="record"];
	"psycopg2" [label="<f0> MissingModule| <f1> psycopg2",shape="record"];
	"pandas.io.pytables" [label="<f0> SourceModule| <f1> pandas.io.pytables",shape="record"];
	"tables" [label="<f0> MissingModule| <f1> tables",shape="record"];
	"pandas.core.computation.pytables" [label="<f0> SourceModule| <f1> pandas.core.computation.pytables",shape="record"];
	"pandas.io.json" [label="<f0> Package| <f1> pandas.io.json",shape="record"];
	"pandas.io.json._table_schema" [label="<f0> SourceModule| <f1> pandas.io.json._table_schema",shape="record"];
	"pandas.io.json._json" [label="<f0> SourceModule| <f1> pandas.io.json._json",shape="record"];
	"pandas.core.methods.describe" [label="<f0> SourceModule| <f1> pandas.core.methods.describe",shape="record"];
	"pandas.core.flags" [label="<f0> SourceModule| <f1> pandas.core.flags",shape="record"];
	"pandas.core.frame" [label="<f0> SourceModule| <f1> pandas.core.frame",shape="record"];
	"pandas.core.reshape.pivot" [label="<f0> SourceModule| <f1> pandas.core.reshape.pivot",shape="record"];
	"pandas.io.formats.xml" [label="<f0> SourceModule| <f1> pandas.io.formats.xml",shape="record"];
	"lxml.etree" [label="<f0> Extension| <f1> lxml.etree",shape="record"];
	"lxml._elementpath" [label="<f0> Extension| <f1> lxml._elementpath",shape="record"];
	"lxml" [label="<f0> Package| <f1> lxml",shape="record"];
	"lxml.usedoctest" [label="<f0> SourceModule| <f1> lxml.usedoctest",shape="record"];
	"lxml.sax" [label="<f0> Extension| <f1> lxml.sax",shape="record"];
	"lxml.pyclasslookup" [label="<f0> SourceModule| <f1> lxml.pyclasslookup",shape="record"];
	"lxml.objectify" [label="<f0> Extension| <f1> lxml.objectify",shape="record"];
	"lxml.isoschematron" [label="<f0> Package| <f1> lxml.isoschematron",shape="record"];
	"lxml.includes.libxslt" [label="<f0> Package| <f1> lxml.includes.libxslt",shape="record"];
	"lxml.includes.libxml" [label="<f0> Package| <f1> lxml.includes.libxml",shape="record"];
	"lxml.includes.libexslt" [label="<f0> Package| <f1> lxml.includes.libexslt",shape="record"];
	"lxml.includes.extlibs" [label="<f0> Package| <f1> lxml.includes.extlibs",shape="record"];
	"lxml.includes" [label="<f0> Package| <f1> lxml.includes",shape="record"];
	"lxml.html.usedoctest" [label="<f0> SourceModule| <f1> lxml.html.usedoctest",shape="record"];
	"lxml.html.soupparser" [label="<f0> SourceModule| <f1> lxml.html.soupparser",shape="record"];
	"htmlentitydefs" [label="<f0> MissingModule| <f1> htmlentitydefs",shape="record"];
	"BeautifulSoup" [label="<f0> MissingModule| <f1> BeautifulSoup",shape="record"];
	"bs4" [label="<f0> MissingModule| <f1> bs4",shape="record"];
	"lxml.html.html5parser" [label="<f0> SourceModule| <f1> lxml.html.html5parser",shape="record"];
	"urlparse" [label="<f0> MissingModule| <f1> urlparse",shape="record"];
	"urllib2" [label="<f0> MissingModule| <f1> urllib2",shape="record"];
	"'html5lib.treebuilders'" [label="<f0> MissingModule| <f1> 'html5lib.treebuilders'",shape="record"];
	"html5lib" [label="<f0> MissingModule| <f1> html5lib",shape="record"];
	"lxml.html.formfill" [label="<f0> SourceModule| <f1> lxml.html.formfill",shape="record"];
	"lxml.html.diff" [label="<f0> Extension| <f1> lxml.html.diff",shape="record"];
	"lxml.html.defs" [label="<f0> SourceModule| <f1> lxml.html.defs",shape="record"];
	"lxml.html.clean" [label="<f0> SourceModule| <f1> lxml.html.clean",shape="record"];
	"lxml_html_clean" [label="<f0> MissingModule| <f1> lxml_html_clean",shape="record"];
	"lxml.html.builder" [label="<f0> SourceModule| <f1> lxml.html.builder",shape="record"];
	"lxml.html._setmixin" [label="<f0> SourceModule| <f1> lxml.html._setmixin",shape="record"];
	"lxml.html._html5builder" [label="<f0> SourceModule| <f1> lxml.html._html5builder",shape="record"];
	"lxml.html._diffcommand" [label="<f0> SourceModule| <f1> lxml.html._diffcommand",shape="record"];
	"lxml.html.ElementSoup" [label="<f0> SourceModule| <f1> lxml.html.ElementSoup",shape="record"];
	"lxml.html" [label="<f0> Package| <f1> lxml.html",shape="record"];
	"lxml.doctestcompare" [label="<f0> SourceModule| <f1> lxml.doctestcompare",shape="record"];
	"lxml.cssselect" [label="<f0> SourceModule| <f1> lxml.cssselect",shape="record"];
	"cssselect" [label="<f0> MissingModule| <f1> cssselect",shape="record"];
	"lxml.builder" [label="<f0> Extension| <f1> lxml.builder",shape="record"];
	"lxml.ElementInclude" [label="<f0> SourceModule| <f1> lxml.ElementInclude",shape="record"];
	"xml.dom.minidom" [label="<f0> SourceModule| <f1> xml.dom.minidom",shape="record"];
	"xml.dom.pulldom" [label="<f0> SourceModule| <f1> xml.dom.pulldom",shape="record"];
	"xml.dom.expatbuilder" [label="<f0> SourceModule| <f1> xml.dom.expatbuilder",shape="record"];
	"xml.dom.NodeFilter" [label="<f0> SourceModule| <f1> xml.dom.NodeFilter",shape="record"];
	"xml.dom.xmlbuilder" [label="<f0> SourceModule| <f1> xml.dom.xmlbuilder",shape="record"];
	"xml.dom.minicompat" [label="<f0> SourceModule| <f1> xml.dom.minicompat",shape="record"];
	"xml.dom.domreg" [label="<f0> SourceModule| <f1> xml.dom.domreg",shape="record"];
	"xml.dom" [label="<f0> Package| <f1> xml.dom",shape="record"];
	"xml.etree.ElementTree" [label="<f0> SourceModule| <f1> xml.etree.ElementTree",shape="record"];
	"xml.etree.ElementPath" [label="<f0> SourceModule| <f1> xml.etree.ElementPath",shape="record"];
	"xml.etree" [label="<f0> Package| <f1> xml.etree",shape="record"];
	"pandas.io.xml" [label="<f0> SourceModule| <f1> pandas.io.xml",shape="record"];
	"pandas.io.orc" [label="<f0> SourceModule| <f1> pandas.io.orc",shape="record"];
	"pandas.io.parquet" [label="<f0> SourceModule| <f1> pandas.io.parquet",shape="record"];
	"pandas.io.feather_format" [label="<f0> SourceModule| <f1> pandas.io.feather_format",shape="record"];
	"pandas.io.stata" [label="<f0> SourceModule| <f1> pandas.io.stata",shape="record"];
	"pandas.io.gbq" [label="<f0> SourceModule| <f1> pandas.io.gbq",shape="record"];
	"google.auth.credentials" [label="<f0> SourceModule| <f1> google.auth.credentials",shape="record"];
	"google.auth._refresh_worker" [label="<f0> SourceModule| <f1> google.auth._refresh_worker",shape="record"];
	"google.auth._credentials_base" [label="<f0> SourceModule| <f1> google.auth._credentials_base",shape="record"];
	"google.auth.metrics" [label="<f0> SourceModule| <f1> google.auth.metrics",shape="record"];
	"google.auth.version" [label="<f0> SourceModule| <f1> google.auth.version",shape="record"];
	"google.auth.exceptions" [label="<f0> SourceModule| <f1> google.auth.exceptions",shape="record"];
	"google.auth.environment_vars" [label="<f0> SourceModule| <f1> google.auth.environment_vars",shape="record"];
	"google.auth._helpers" [label="<f0> SourceModule| <f1> google.auth._helpers",shape="record"];
	"google.auth" [label="<f0> Package| <f1> google.auth",shape="record"];
	"google.auth._default" [label="<f0> SourceModule| <f1> google.auth._default",shape="record"];
	"google.oauth2.gdch_credentials" [label="<f0> SourceModule| <f1> google.oauth2.gdch_credentials",shape="record"];
	"google.oauth2._client" [label="<f0> SourceModule| <f1> google.oauth2._client",shape="record"];
	"google.auth.transport" [label="<f0> Package| <f1> google.auth.transport",shape="record"];
	"google.auth.transport.mtls" [label="<f0> SourceModule| <f1> google.auth.transport.mtls",shape="record"];
	"google.auth.transport._mtls_helper" [label="<f0> SourceModule| <f1> google.auth.transport._mtls_helper",shape="record"];
	"google.auth.transport._custom_tls_signer" [label="<f0> SourceModule| <f1> google.auth.transport._custom_tls_signer",shape="record"];
	"google.auth._exponential_backoff" [label="<f0> SourceModule| <f1> google.auth._exponential_backoff",shape="record"];
	"google.oauth2.service_account" [label="<f0> SourceModule| <f1> google.oauth2.service_account",shape="record"];
	"google.oauth2.credentials" [label="<f0> SourceModule| <f1> google.oauth2.credentials",shape="record"];
	"google.oauth2.reauth" [label="<f0> SourceModule| <f1> google.oauth2.reauth",shape="record"];
	"google.oauth2.challenges" [label="<f0> SourceModule| <f1> google.oauth2.challenges",shape="record"];
	"'pyu2f.model'" [label="<f0> MissingModule| <f1> 'pyu2f.model'",shape="record"];
	"'pyu2f.errors'" [label="<f0> MissingModule| <f1> 'pyu2f.errors'",shape="record"];
	"pyu2f" [label="<f0> MissingModule| <f1> pyu2f",shape="record"];
	"google.oauth2.webauthn_types" [label="<f0> SourceModule| <f1> google.oauth2.webauthn_types",shape="record"];
	"google.oauth2.webauthn_handler_factory" [label="<f0> SourceModule| <f1> google.oauth2.webauthn_handler_factory",shape="record"];
	"google.oauth2.webauthn_handler" [label="<f0> SourceModule| <f1> google.oauth2.webauthn_handler",shape="record"];
	"google.oauth2" [label="<f0> Package| <f1> google.oauth2",shape="record"];
	"google.oauth2.sts" [label="<f0> SourceModule| <f1> google.oauth2.sts",shape="record"];
	"google.oauth2.utils" [label="<f0> SourceModule| <f1> google.oauth2.utils",shape="record"];
	"google.auth.transport.requests" [label="<f0> SourceModule| <f1> google.auth.transport.requests",shape="record"];
	"'requests.packages.urllib3'" [label="<f0> MissingModule| <f1> 'requests.packages.urllib3'",shape="record"];
	"google.auth.compute_engine._metadata" [label="<f0> SourceModule| <f1> google.auth.compute_engine._metadata",shape="record"];
	"google.auth.app_engine" [label="<f0> SourceModule| <f1> google.auth.app_engine",shape="record"];
	"'google.appengine'" [label="<f0> MissingModule| <f1> 'google.appengine'",shape="record"];
	"google.auth.transport._http_client" [label="<f0> SourceModule| <f1> google.auth.transport._http_client",shape="record"];
	"google.auth.api_key" [label="<f0> SourceModule| <f1> google.auth.api_key",shape="record"];
	"google.auth.identity_pool" [label="<f0> SourceModule| <f1> google.auth.identity_pool",shape="record"];
	"google.auth.pluggable" [label="<f0> SourceModule| <f1> google.auth.pluggable",shape="record"];
	"google.auth.aws" [label="<f0> SourceModule| <f1> google.auth.aws",shape="record"];
	"google.auth.external_account" [label="<f0> SourceModule| <f1> google.auth.external_account",shape="record"];
	"google.auth.impersonated_credentials" [label="<f0> SourceModule| <f1> google.auth.impersonated_credentials",shape="record"];
	"google.auth.external_account_authorized_user" [label="<f0> SourceModule| <f1> google.auth.external_account_authorized_user",shape="record"];
	"google.auth.compute_engine" [label="<f0> Package| <f1> google.auth.compute_engine",shape="record"];
	"google.auth.compute_engine.credentials" [label="<f0> SourceModule| <f1> google.auth.compute_engine.credentials",shape="record"];
	"google.auth.jwt" [label="<f0> SourceModule| <f1> google.auth.jwt",shape="record"];
	"google.auth.crypt.es256" [label="<f0> SourceModule| <f1> google.auth.crypt.es256",shape="record"];
	"google.auth.crypt.base" [label="<f0> SourceModule| <f1> google.auth.crypt.base",shape="record"];
	"cachetools" [label="<f0> Package| <f1> cachetools",shape="record"];
	"cachetools._decorators" [label="<f0> SourceModule| <f1> cachetools._decorators",shape="record"];
	"cachetools.keys" [label="<f0> SourceModule| <f1> cachetools.keys",shape="record"];
	"google.auth._service_account_info" [label="<f0> SourceModule| <f1> google.auth._service_account_info",shape="record"];
	"google.auth.iam" [label="<f0> SourceModule| <f1> google.auth.iam",shape="record"];
	"google.auth.crypt" [label="<f0> Package| <f1> google.auth.crypt",shape="record"];
	"google.auth.crypt.rsa" [label="<f0> SourceModule| <f1> google.auth.crypt.rsa",shape="record"];
	"google.auth.crypt._python_rsa" [label="<f0> SourceModule| <f1> google.auth.crypt._python_rsa",shape="record"];
	"rsa" [label="<f0> Package| <f1> rsa",shape="record"];
	"rsa.pkcs1" [label="<f0> SourceModule| <f1> rsa.pkcs1",shape="record"];
	"rsa.core" [label="<f0> SourceModule| <f1> rsa.core",shape="record"];
	"rsa.common" [label="<f0> SourceModule| <f1> rsa.common",shape="record"];
	"rsa.key" [label="<f0> SourceModule| <f1> rsa.key",shape="record"];
	"pyasn1.type.namedtype" [label="<f0> SourceModule| <f1> pyasn1.type.namedtype",shape="record"];
	"pyasn1.type.tagmap" [label="<f0> SourceModule| <f1> pyasn1.type.tagmap",shape="record"];
	"pyasn1.type.tag" [label="<f0> SourceModule| <f1> pyasn1.type.tag",shape="record"];
	"pyasn1.error" [label="<f0> SourceModule| <f1> pyasn1.error",shape="record"];
	"pyasn1" [label="<f0> Package| <f1> pyasn1",shape="record"];
	"pyasn1.debug" [label="<f0> SourceModule| <f1> pyasn1.debug",shape="record"];
	"pyasn1.type.univ" [label="<f0> SourceModule| <f1> pyasn1.type.univ",shape="record"];
	"pyasn1.type.namedval" [label="<f0> SourceModule| <f1> pyasn1.type.namedval",shape="record"];
	"pyasn1.type.constraint" [label="<f0> SourceModule| <f1> pyasn1.type.constraint",shape="record"];
	"pyasn1.type.error" [label="<f0> SourceModule| <f1> pyasn1.type.error",shape="record"];
	"pyasn1.type.base" [label="<f0> SourceModule| <f1> pyasn1.type.base",shape="record"];
	"pyasn1.compat.integer" [label="<f0> SourceModule| <f1> pyasn1.compat.integer",shape="record"];
	"pyasn1.compat" [label="<f0> Package| <f1> pyasn1.compat",shape="record"];
	"pyasn1.codec.ber.eoo" [label="<f0> SourceModule| <f1> pyasn1.codec.ber.eoo",shape="record"];
	"pyasn1.codec.ber" [label="<f0> Package| <f1> pyasn1.codec.ber",shape="record"];
	"pyasn1.codec.ber.encoder" [label="<f0> SourceModule| <f1> pyasn1.codec.ber.encoder",shape="record"];
	"pyasn1.type.useful" [label="<f0> SourceModule| <f1> pyasn1.type.useful",shape="record"];
	"pyasn1.type.char" [label="<f0> SourceModule| <f1> pyasn1.type.char",shape="record"];
	"pyasn1.codec.ber.decoder" [label="<f0> SourceModule| <f1> pyasn1.codec.ber.decoder",shape="record"];
	"pyasn1.codec.streaming" [label="<f0> SourceModule| <f1> pyasn1.codec.streaming",shape="record"];
	"pyasn1.codec" [label="<f0> Package| <f1> pyasn1.codec",shape="record"];
	"pyasn1.type" [label="<f0> Package| <f1> pyasn1.type",shape="record"];
	"pyasn1.type.opentype" [label="<f0> SourceModule| <f1> pyasn1.type.opentype",shape="record"];
	"pyasn1.codec.der.encoder" [label="<f0> SourceModule| <f1> pyasn1.codec.der.encoder",shape="record"];
	"pyasn1.codec.cer.encoder" [label="<f0> SourceModule| <f1> pyasn1.codec.cer.encoder",shape="record"];
	"pyasn1.codec.cer" [label="<f0> Package| <f1> pyasn1.codec.cer",shape="record"];
	"pyasn1.codec.cer.decoder" [label="<f0> SourceModule| <f1> pyasn1.codec.cer.decoder",shape="record"];
	"rsa.asn1" [label="<f0> SourceModule| <f1> rsa.asn1",shape="record"];
	"rsa.randnum" [label="<f0> SourceModule| <f1> rsa.randnum",shape="record"];
	"rsa.pem" [label="<f0> SourceModule| <f1> rsa.pem",shape="record"];
	"rsa.prime" [label="<f0> SourceModule| <f1> rsa.prime",shape="record"];
	"rsa.parallel" [label="<f0> SourceModule| <f1> rsa.parallel",shape="record"];
	"rsa.transform" [label="<f0> SourceModule| <f1> rsa.transform",shape="record"];
	"pyasn1_modules.rfc5208" [label="<f0> SourceModule| <f1> pyasn1_modules.rfc5208",shape="record"];
	"pyasn1_modules.rfc2251" [label="<f0> SourceModule| <f1> pyasn1_modules.rfc2251",shape="record"];
	"pyasn1_modules.rfc2459" [label="<f0> SourceModule| <f1> pyasn1_modules.rfc2459",shape="record"];
	"pyasn1_modules.pem" [label="<f0> SourceModule| <f1> pyasn1_modules.pem",shape="record"];
	"pyasn1_modules" [label="<f0> Package| <f1> pyasn1_modules",shape="record"];
	"pyasn1.codec.der.decoder" [label="<f0> SourceModule| <f1> pyasn1.codec.der.decoder",shape="record"];
	"pyasn1.codec.der" [label="<f0> Package| <f1> pyasn1.codec.der",shape="record"];
	"google.auth.crypt._cryptography_rsa" [label="<f0> SourceModule| <f1> google.auth.crypt._cryptography_rsa",shape="record"];
	"google.auth._cloud_sdk" [label="<f0> SourceModule| <f1> google.auth._cloud_sdk",shape="record"];
	"google" [label="<f0> NamespacePackage| <f1> google",shape="record"];
	"google.resumable_media" [label="<f0> Package| <f1> google.resumable_media",shape="record"];
	"google.resumable_media._upload" [label="<f0> SourceModule| <f1> google.resumable_media._upload",shape="record"];
	"google.resumable_media._download" [label="<f0> SourceModule| <f1> google.resumable_media._download",shape="record"];
	"google.resumable_media._helpers" [label="<f0> SourceModule| <f1> google.resumable_media._helpers",shape="record"];
	"crcmod" [label="<f0> MissingModule| <f1> crcmod",shape="record"];
	"google_crc32c" [label="<f0> Package| <f1> google_crc32c",shape="record"];
	"google_crc32c.python" [label="<f0> SourceModule| <f1> google_crc32c.python",shape="record"];
	"google_crc32c._checksum" [label="<f0> SourceModule| <f1> google_crc32c._checksum",shape="record"];
	"google_crc32c.cext" [label="<f0> SourceModule| <f1> google_crc32c.cext",shape="record"];
	"google_crc32c._crc32c" [label="<f0> Extension| <f1> google_crc32c._crc32c",shape="record"];
	"google_crc32c.__config__" [label="<f0> SourceModule| <f1> google_crc32c.__config__",shape="record"];
	"google.resumable_media.common" [label="<f0> SourceModule| <f1> google.resumable_media.common",shape="record"];
	"pandas.core.methods.to_dict" [label="<f0> SourceModule| <f1> pandas.core.methods.to_dict",shape="record"];
	"pandas.core.interchange.dataframe" [label="<f0> SourceModule| <f1> pandas.core.interchange.dataframe",shape="record"];
	"pandas.core.interchange" [label="<f0> Package| <f1> pandas.core.interchange",shape="record"];
	"pandas.core.interchange.utils" [label="<f0> SourceModule| <f1> pandas.core.interchange.utils",shape="record"];
	"pandas.core.interchange.column" [label="<f0> SourceModule| <f1> pandas.core.interchange.column",shape="record"];
	"pandas.core.interchange.buffer" [label="<f0> SourceModule| <f1> pandas.core.interchange.buffer",shape="record"];
	"pandas.core.interchange.dataframe_protocol" [label="<f0> SourceModule| <f1> pandas.core.interchange.dataframe_protocol",shape="record"];
	"pandas.core.reshape.melt" [label="<f0> SourceModule| <f1> pandas.core.reshape.melt",shape="record"];
	"pandas.core.arrays.base" [label="<f0> SourceModule| <f1> pandas.core.arrays.base",shape="record"];
	"numpy.typing" [label="<f0> Package| <f1> numpy.typing",shape="record"];
	"numpy._typing._add_docstring" [label="<f0> SourceModule| <f1> numpy._typing._add_docstring",shape="record"];
	"numpy" [label="<f0> Package| <f1> numpy",shape="record"];
	"numpy.core._multiarray_tests" [label="<f0> Extension| <f1> numpy.core._multiarray_tests",shape="record"];
	"numpy.ctypeslib" [label="<f0> SourceModule| <f1> numpy.ctypeslib",shape="record"];
	"numpy.random" [label="<f0> Package| <f1> numpy.random",shape="record"];
	"numpy.random.mtrand" [label="<f0> Extension| <f1> numpy.random.mtrand",shape="record"];
	"numpy.random._sfc64" [label="<f0> Extension| <f1> numpy.random._sfc64",shape="record"];
	"numpy.random._philox" [label="<f0> Extension| <f1> numpy.random._philox",shape="record"];
	"numpy.random._pcg64" [label="<f0> Extension| <f1> numpy.random._pcg64",shape="record"];
	"numpy.random._mt19937" [label="<f0> Extension| <f1> numpy.random._mt19937",shape="record"];
	"numpy.random.bit_generator" [label="<f0> Extension| <f1> numpy.random.bit_generator",shape="record"];
	"numpy.random._generator" [label="<f0> Extension| <f1> numpy.random._generator",shape="record"];
	"numpy.random._bounded_integers" [label="<f0> Extension| <f1> numpy.random._bounded_integers",shape="record"];
	"numpy.random._common" [label="<f0> Extension| <f1> numpy.random._common",shape="record"];
	"numpy.random._pickle" [label="<f0> SourceModule| <f1> numpy.random._pickle",shape="record"];
	"numpy.uint" [label="<f0> MissingModule| <f1> numpy.uint",shape="record"];
	"numpy.polynomial" [label="<f0> Package| <f1> numpy.polynomial",shape="record"];
	"numpy.polynomial._polybase" [label="<f0> SourceModule| <f1> numpy.polynomial._polybase",shape="record"];
	"numpy.polynomial.laguerre" [label="<f0> SourceModule| <f1> numpy.polynomial.laguerre",shape="record"];
	"numpy.polynomial.hermite_e" [label="<f0> SourceModule| <f1> numpy.polynomial.hermite_e",shape="record"];
	"numpy.polynomial.hermite" [label="<f0> SourceModule| <f1> numpy.polynomial.hermite",shape="record"];
	"numpy.polynomial.legendre" [label="<f0> SourceModule| <f1> numpy.polynomial.legendre",shape="record"];
	"numpy.polynomial.chebyshev" [label="<f0> SourceModule| <f1> numpy.polynomial.chebyshev",shape="record"];
	"numpy.polynomial.polynomial" [label="<f0> SourceModule| <f1> numpy.polynomial.polynomial",shape="record"];
	"numpy.polynomial.polyutils" [label="<f0> SourceModule| <f1> numpy.polynomial.polyutils",shape="record"];
	"numpy.fft" [label="<f0> Package| <f1> numpy.fft",shape="record"];
	"numpy.fft.helper" [label="<f0> SourceModule| <f1> numpy.fft.helper",shape="record"];
	"numpy.fft._pocketfft" [label="<f0> SourceModule| <f1> numpy.fft._pocketfft",shape="record"];
	"numpy.fft._pocketfft_internal" [label="<f0> Extension| <f1> numpy.fft._pocketfft_internal",shape="record"];
	"numpy.dtypes" [label="<f0> SourceModule| <f1> numpy.dtypes",shape="record"];
	"numpy.__config__" [label="<f0> SourceModule| <f1> numpy.__config__",shape="record"];
	"yaml" [label="<f0> Package| <f1> yaml",shape="record"];
	"yaml.cyaml" [label="<f0> SourceModule| <f1> yaml.cyaml",shape="record"];
	"yaml.resolver" [label="<f0> SourceModule| <f1> yaml.resolver",shape="record"];
	"yaml.representer" [label="<f0> SourceModule| <f1> yaml.representer",shape="record"];
	"yaml.serializer" [label="<f0> SourceModule| <f1> yaml.serializer",shape="record"];
	"yaml.constructor" [label="<f0> SourceModule| <f1> yaml.constructor",shape="record"];
	"yaml._yaml" [label="<f0> Extension| <f1> yaml._yaml",shape="record"];
	"yaml.dumper" [label="<f0> SourceModule| <f1> yaml.dumper",shape="record"];
	"yaml.emitter" [label="<f0> SourceModule| <f1> yaml.emitter",shape="record"];
	"yaml.loader" [label="<f0> SourceModule| <f1> yaml.loader",shape="record"];
	"yaml.composer" [label="<f0> SourceModule| <f1> yaml.composer",shape="record"];
	"yaml.parser" [label="<f0> SourceModule| <f1> yaml.parser",shape="record"];
	"yaml.scanner" [label="<f0> SourceModule| <f1> yaml.scanner",shape="record"];
	"yaml.reader" [label="<f0> SourceModule| <f1> yaml.reader",shape="record"];
	"yaml.nodes" [label="<f0> SourceModule| <f1> yaml.nodes",shape="record"];
	"yaml.events" [label="<f0> SourceModule| <f1> yaml.events",shape="record"];
	"yaml.tokens" [label="<f0> SourceModule| <f1> yaml.tokens",shape="record"];
	"yaml.error" [label="<f0> SourceModule| <f1> yaml.error",shape="record"];
	"numpy._distributor_init" [label="<f0> SourceModule| <f1> numpy._distributor_init",shape="record"];
	"numpy._distributor_init_local" [label="<f0> MissingModule| <f1> numpy._distributor_init_local",shape="record"];
	"pandas._libs.window.indexers" [label="<f0> Extension| <f1> pandas._libs.window.indexers",shape="record"];
	"pandas._libs.window.aggregations" [label="<f0> Extension| <f1> pandas._libs.window.aggregations",shape="record"];
	"pandas._libs.window" [label="<f0> Package| <f1> pandas._libs.window",shape="record"];
	"pandas._libs.tslibs.vectorized" [label="<f0> Extension| <f1> pandas._libs.tslibs.vectorized",shape="record"];
	"pandas._libs.tslibs.tzconversion" [label="<f0> Extension| <f1> pandas._libs.tslibs.tzconversion",shape="record"];
	"pandas._libs.tslibs.timezones" [label="<f0> Extension| <f1> pandas._libs.tslibs.timezones",shape="record"];
	"pandas._libs.tslibs.timestamps" [label="<f0> Extension| <f1> pandas._libs.tslibs.timestamps",shape="record"];
	"pandas._libs.tslibs.timedeltas" [label="<f0> Extension| <f1> pandas._libs.tslibs.timedeltas",shape="record"];
	"pandas._libs.tslibs.strptime" [label="<f0> Extension| <f1> pandas._libs.tslibs.strptime",shape="record"];
	"pandas._libs.tslibs.period" [label="<f0> Extension| <f1> pandas._libs.tslibs.period",shape="record"];
	"pandas._libs.tslibs.parsing" [label="<f0> Extension| <f1> pandas._libs.tslibs.parsing",shape="record"];
	"pandas._libs.tslibs.offsets" [label="<f0> Extension| <f1> pandas._libs.tslibs.offsets",shape="record"];
	"pandas._libs.tslibs.np_datetime" [label="<f0> Extension| <f1> pandas._libs.tslibs.np_datetime",shape="record"];
	"pandas._libs.tslibs.nattype" [label="<f0> Extension| <f1> pandas._libs.tslibs.nattype",shape="record"];
	"pandas._libs.tslibs.fields" [label="<f0> Extension| <f1> pandas._libs.tslibs.fields",shape="record"];
	"pandas._libs.tslibs.dtypes" [label="<f0> Extension| <f1> pandas._libs.tslibs.dtypes",shape="record"];
	"pandas._libs.tslibs.conversion" [label="<f0> Extension| <f1> pandas._libs.tslibs.conversion",shape="record"];
	"pandas._libs.tslibs.ccalendar" [label="<f0> Extension| <f1> pandas._libs.tslibs.ccalendar",shape="record"];
	"pandas._libs.tslibs.base" [label="<f0> Extension| <f1> pandas._libs.tslibs.base",shape="record"];
	"pandas._libs.tslibs" [label="<f0> Package| <f1> pandas._libs.tslibs",shape="record"];
	"pandas._libs.tslib" [label="<f0> Extension| <f1> pandas._libs.tslib",shape="record"];
	"pandas._libs.testing" [label="<f0> Extension| <f1> pandas._libs.testing",shape="record"];
	"pandas._libs.sparse" [label="<f0> Extension| <f1> pandas._libs.sparse",shape="record"];
	"pandas._libs.sas" [label="<f0> Extension| <f1> pandas._libs.sas",shape="record"];
	"pandas.io.sas.sas7bdat" [label="<f0> SourceModule| <f1> pandas.io.sas.sas7bdat",shape="record"];
	"pandas.io.sas.sasreader" [label="<f0> SourceModule| <f1> pandas.io.sas.sasreader",shape="record"];
	"pandas.io.sas.sas_xport" [label="<f0> SourceModule| <f1> pandas.io.sas.sas_xport",shape="record"];
	"pandas.io.sas.sas_constants" [label="<f0> SourceModule| <f1> pandas.io.sas.sas_constants",shape="record"];
	"pandas.io.sas" [label="<f0> Package| <f1> pandas.io.sas",shape="record"];
	"pandas._libs.reshape" [label="<f0> Extension| <f1> pandas._libs.reshape",shape="record"];
	"pandas._libs.properties" [label="<f0> Extension| <f1> pandas._libs.properties",shape="record"];
	"pandas._libs.parsers" [label="<f0> Extension| <f1> pandas._libs.parsers",shape="record"];
	"pandas._libs.pandas_parser" [label="<f0> Extension| <f1> pandas._libs.pandas_parser",shape="record"];
	"pandas._libs.pandas_datetime" [label="<f0> Extension| <f1> pandas._libs.pandas_datetime",shape="record"];
	"pandas._libs.ops_dispatch" [label="<f0> Extension| <f1> pandas._libs.ops_dispatch",shape="record"];
	"pandas._libs.ops" [label="<f0> Extension| <f1> pandas._libs.ops",shape="record"];
	"pandas._libs.missing" [label="<f0> Extension| <f1> pandas._libs.missing",shape="record"];
	"pandas._libs.lib" [label="<f0> Extension| <f1> pandas._libs.lib",shape="record"];
	"pandas._libs.json" [label="<f0> Extension| <f1> pandas._libs.json",shape="record"];
	"pandas._libs.join" [label="<f0> Extension| <f1> pandas._libs.join",shape="record"];
	"pandas._libs.interval" [label="<f0> Extension| <f1> pandas._libs.interval",shape="record"];
	"pandas._libs.internals" [label="<f0> Extension| <f1> pandas._libs.internals",shape="record"];
	"pandas._libs.indexing" [label="<f0> Extension| <f1> pandas._libs.indexing",shape="record"];
	"pandas._libs.index" [label="<f0> Extension| <f1> pandas._libs.index",shape="record"];
	"pandas._libs.hashtable" [label="<f0> Extension| <f1> pandas._libs.hashtable",shape="record"];
	"pandas._libs.hashing" [label="<f0> Extension| <f1> pandas._libs.hashing",shape="record"];
	"pandas._libs.groupby" [label="<f0> Extension| <f1> pandas._libs.groupby",shape="record"];
	"pandas._libs.byteswap" [label="<f0> Extension| <f1> pandas._libs.byteswap",shape="record"];
	"pandas._libs.arrays" [label="<f0> Extension| <f1> pandas._libs.arrays",shape="record"];
	"pandas._libs.algos" [label="<f0> Extension| <f1> pandas._libs.algos",shape="record"];
	"pandas._libs" [label="<f0> Package| <f1> pandas._libs",shape="record"];
	"pandas.Panel" [label="<f0> MissingModule| <f1> pandas.Panel",shape="record"];
	"pandas._version" [label="<f0> SourceModule| <f1> pandas._version",shape="record"];
	"pandas._version_meson" [label="<f0> SourceModule| <f1> pandas._version_meson",shape="record"];
	"pandas.util._tester" [label="<f0> SourceModule| <f1> pandas.util._tester",shape="record"];
	"pandas.io.json._normalize" [label="<f0> SourceModule| <f1> pandas.io.json._normalize",shape="record"];
	"pandas.io.api" [label="<f0> SourceModule| <f1> pandas.io.api",shape="record"];
	"pandas.io.spss" [label="<f0> SourceModule| <f1> pandas.io.spss",shape="record"];
	"pandas.io.html" [label="<f0> SourceModule| <f1> pandas.io.html",shape="record"];
	"pandas.util._print_versions" [label="<f0> SourceModule| <f1> pandas.util._print_versions",shape="record"];
	"pandas.testing" [label="<f0> SourceModule| <f1> pandas.testing",shape="record"];
	"pandas._testing" [label="<f0> Package| <f1> pandas._testing",shape="record"];
	"pandas._testing.contexts" [label="<f0> SourceModule| <f1> pandas._testing.contexts",shape="record"];
	"pandas._testing.compat" [label="<f0> SourceModule| <f1> pandas._testing.compat",shape="record"];
	"pandas._testing.asserters" [label="<f0> SourceModule| <f1> pandas._testing.asserters",shape="record"];
	"'matplotlib.axes'" [label="<f0> MissingModule| <f1> 'matplotlib.axes'",shape="record"];
	"'matplotlib.artist'" [label="<f0> MissingModule| <f1> 'matplotlib.artist'",shape="record"];
	"pandas._testing._warnings" [label="<f0> SourceModule| <f1> pandas._testing._warnings",shape="record"];
	"pandas._testing._io" [label="<f0> SourceModule| <f1> pandas._testing._io",shape="record"];
	"pandas._config.localization" [label="<f0> SourceModule| <f1> pandas._config.localization",shape="record"];
	"pandas.plotting" [label="<f0> Package| <f1> pandas.plotting",shape="record"];
	"pandas.plotting._misc" [label="<f0> SourceModule| <f1> pandas.plotting._misc",shape="record"];
	"'matplotlib.table'" [label="<f0> MissingModule| <f1> 'matplotlib.table'",shape="record"];
	"'matplotlib.figure'" [label="<f0> MissingModule| <f1> 'matplotlib.figure'",shape="record"];
	"pandas.plotting._core" [label="<f0> SourceModule| <f1> pandas.plotting._core",shape="record"];
	"pandas.io" [label="<f0> Package| <f1> pandas.io",shape="record"];
	"pandas.errors" [label="<f0> Package| <f1> pandas.errors",shape="record"];
	"pandas.arrays" [label="<f0> Package| <f1> pandas.arrays",shape="record"];
	"pandas.api" [label="<f0> Package| <f1> pandas.api",shape="record"];
	"pandas.api.typing" [label="<f0> Package| <f1> pandas.api.typing",shape="record"];
	"pandas.api.interchange" [label="<f0> Package| <f1> pandas.api.interchange",shape="record"];
	"pandas.core.interchange.from_dataframe" [label="<f0> SourceModule| <f1> pandas.core.interchange.from_dataframe",shape="record"];
	"pandas.api.indexers" [label="<f0> Package| <f1> pandas.api.indexers",shape="record"];
	"pandas.core.reshape.api" [label="<f0> SourceModule| <f1> pandas.core.reshape.api",shape="record"];
	"pandas.core.reshape.encoding" [label="<f0> SourceModule| <f1> pandas.core.reshape.encoding",shape="record"];
	"pandas.core.computation.api" [label="<f0> SourceModule| <f1> pandas.core.computation.api",shape="record"];
	"pandas.tseries.offsets" [label="<f0> SourceModule| <f1> pandas.tseries.offsets",shape="record"];
	"pandas.tseries" [label="<f0> Package| <f1> pandas.tseries",shape="record"];
	"pandas.tseries.api" [label="<f0> SourceModule| <f1> pandas.tseries.api",shape="record"];
	"pandas.core.dtypes.dtypes" [label="<f0> SourceModule| <f1> pandas.core.dtypes.dtypes",shape="record"];
	"pandas.core.api" [label="<f0> SourceModule| <f1> pandas.core.api",shape="record"];
	"pandas.core.config_init" [label="<f0> SourceModule| <f1> pandas.core.config_init",shape="record"];
	"pandas._config" [label="<f0> Package| <f1> pandas._config",shape="record"];
	"pandas._config.display" [label="<f0> SourceModule| <f1> pandas._config.display",shape="record"];
	"pandas._config.dates" [label="<f0> SourceModule| <f1> pandas._config.dates",shape="record"];
	"pandas.compat" [label="<f0> Package| <f1> pandas.compat",shape="record"];
	"pandas.compat.pyarrow" [label="<f0> SourceModule| <f1> pandas.compat.pyarrow",shape="record"];
	"pandas.compat.compressors" [label="<f0> SourceModule| <f1> pandas.compat.compressors",shape="record"];
	"sys" [label="<f0> BuiltinModule| <f1> sys",shape="record"];
	"graphdatascience.session.dedicated_sessions" [label="<f0> SourceModule| <f1> graphdatascience.session.dedicated_sessions",shape="record"];
	"graphdatascience.query_runner.neo4j_query_runner" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.neo4j_query_runner",shape="record"];
	"graphdatascience.query_runner" [label="<f0> Package| <f1> graphdatascience.query_runner",shape="record"];
	"graphdatascience.query_runner.progress.query_progress_logger" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.progress.query_progress_logger",shape="record"];
	"graphdatascience.query_runner.progress" [label="<f0> Package| <f1> graphdatascience.query_runner.progress",shape="record"];
	"graphdatascience.query_runner.progress.static_progress_provider" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.progress.static_progress_provider",shape="record"];
	"graphdatascience.query_runner.progress.query_progress_provider" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.progress.query_progress_provider",shape="record"];
	"graphdatascience.query_runner.progress.progress_provider" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.progress.progress_provider",shape="record"];
	"tqdm.auto" [label="<f0> SourceModule| <f1> tqdm.auto",shape="record"];
	"tqdm.asyncio" [label="<f0> SourceModule| <f1> tqdm.asyncio",shape="record"];
	"tqdm.autonotebook" [label="<f0> SourceModule| <f1> tqdm.autonotebook",shape="record"];
	"graphdatascience.query_runner.graph_constructor" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.graph_constructor",shape="record"];
	"graphdatascience.query_runner.cypher_graph_constructor" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.cypher_graph_constructor",shape="record"];
	"graphdatascience.semantic_version.semantic_version" [label="<f0> SourceModule| <f1> graphdatascience.semantic_version.semantic_version",shape="record"];
	"graphdatascience.semantic_version" [label="<f0> Package| <f1> graphdatascience.semantic_version",shape="record"];
	"graphdatascience.error.unable_to_connect" [label="<f0> SourceModule| <f1> graphdatascience.error.unable_to_connect",shape="record"];
	"graphdatascience.error" [label="<f0> Package| <f1> graphdatascience.error",shape="record"];
	"graphdatascience.error.gds_not_installed" [label="<f0> SourceModule| <f1> graphdatascience.error.gds_not_installed",shape="record"];
	"graphdatascience.error.endpoint_suggester" [label="<f0> SourceModule| <f1> graphdatascience.error.endpoint_suggester",shape="record"];
	"graphdatascience.ignored_server_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.ignored_server_endpoints",shape="record"];
	"textdistance" [label="<f0> Package| <f1> textdistance",shape="record"];
	"textdistance.libraries" [label="<f0> SourceModule| <f1> textdistance.libraries",shape="record"];
	"textdistance.benchmark" [label="<f0> SourceModule| <f1> textdistance.benchmark",shape="record"];
	"tabulate" [label="<f0> MissingModule| <f1> tabulate",shape="record"];
	"timeit" [label="<f0> SourceModule| <f1> timeit",shape="record"];
	"textdistance.algorithms.vector_based" [label="<f0> SourceModule| <f1> textdistance.algorithms.vector_based",shape="record"];
	"textdistance.algorithms.types" [label="<f0> SourceModule| <f1> textdistance.algorithms.types",shape="record"];
	"textdistance.algorithms.token_based" [label="<f0> SourceModule| <f1> textdistance.algorithms.token_based",shape="record"];
	"textdistance.algorithms.simple" [label="<f0> SourceModule| <f1> textdistance.algorithms.simple",shape="record"];
	"textdistance.algorithms.sequence_based" [label="<f0> SourceModule| <f1> textdistance.algorithms.sequence_based",shape="record"];
	"textdistance.algorithms.phonetic" [label="<f0> SourceModule| <f1> textdistance.algorithms.phonetic",shape="record"];
	"textdistance.algorithms.edit_based" [label="<f0> SourceModule| <f1> textdistance.algorithms.edit_based",shape="record"];
	"textdistance.algorithms.compression_based" [label="<f0> SourceModule| <f1> textdistance.algorithms.compression_based",shape="record"];
	"textdistance.algorithms.base" [label="<f0> SourceModule| <f1> textdistance.algorithms.base",shape="record"];
	"textdistance.utils" [label="<f0> SourceModule| <f1> textdistance.utils",shape="record"];
	"textdistance.algorithms" [label="<f0> Package| <f1> textdistance.algorithms",shape="record"];
	"graphdatascience.call_parameters" [label="<f0> SourceModule| <f1> graphdatascience.call_parameters",shape="record"];
	"neo4j" [label="<f0> Package| <f1> neo4j",shape="record"];
	"neo4j.api" [label="<f0> SourceModule| <f1> neo4j.api",shape="record"];
	"neo4j.exceptions" [label="<f0> SourceModule| <f1> neo4j.exceptions",shape="record"];
	"neo4j.addressing" [label="<f0> SourceModule| <f1> neo4j.addressing",shape="record"];
	"neo4j._work" [label="<f0> Package| <f1> neo4j._work",shape="record"];
	"neo4j._work.summary" [label="<f0> SourceModule| <f1> neo4j._work.summary",shape="record"];
	"neo4j._exceptions" [label="<f0> SourceModule| <f1> neo4j._exceptions",shape="record"];
	"neo4j._work.query" [label="<f0> SourceModule| <f1> neo4j._work.query",shape="record"];
	"neo4j._work.eager_result" [label="<f0> SourceModule| <f1> neo4j._work.eager_result",shape="record"];
	"neo4j._sync.work" [label="<f0> Package| <f1> neo4j._sync.work",shape="record"];
	"neo4j._sync" [label="<f0> Package| <f1> neo4j._sync",shape="record"];
	"neo4j._sync.work.transaction" [label="<f0> SourceModule| <f1> neo4j._sync.work.transaction",shape="record"];
	"neo4j._sync.io" [label="<f0> Package| <f1> neo4j._sync.io",shape="record"];
	"neo4j._sync.io._pool" [label="<f0> SourceModule| <f1> neo4j._sync.io._pool",shape="record"];
	"neo4j.auth_management" [label="<f0> SourceModule| <f1> neo4j.auth_management",shape="record"];
	"neo4j._sync.auth_management" [label="<f0> SourceModule| <f1> neo4j._sync.auth_management",shape="record"];
	"neo4j._auth_management" [label="<f0> SourceModule| <f1> neo4j._auth_management",shape="record"];
	"neo4j._async.auth_management" [label="<f0> SourceModule| <f1> neo4j._async.auth_management",shape="record"];
	"neo4j._async" [label="<f0> Package| <f1> neo4j._async",shape="record"];
	"neo4j._sync.home_db_cache" [label="<f0> SourceModule| <f1> neo4j._sync.home_db_cache",shape="record"];
	"neo4j._routing" [label="<f0> SourceModule| <f1> neo4j._routing",shape="record"];
	"neo4j._deadline" [label="<f0> SourceModule| <f1> neo4j._deadline",shape="record"];
	"neo4j._async_compat.network" [label="<f0> Package| <f1> neo4j._async_compat.network",shape="record"];
	"neo4j._async_compat.network._util" [label="<f0> SourceModule| <f1> neo4j._async_compat.network._util",shape="record"];
	"neo4j._async_compat.network._bolt_socket" [label="<f0> SourceModule| <f1> neo4j._async_compat.network._bolt_socket",shape="record"];
	"neo4j._async.io" [label="<f0> Package| <f1> neo4j._async.io",shape="record"];
	"neo4j._async.io._pool" [label="<f0> SourceModule| <f1> neo4j._async.io._pool",shape="record"];
	"neo4j._async.home_db_cache" [label="<f0> SourceModule| <f1> neo4j._async.home_db_cache",shape="record"];
	"neo4j._async.config" [label="<f0> SourceModule| <f1> neo4j._async.config",shape="record"];
	"neo4j._async.io._common" [label="<f0> SourceModule| <f1> neo4j._async.io._common",shape="record"];
	"neo4j._async.io._bolt" [label="<f0> SourceModule| <f1> neo4j._async.io._bolt",shape="record"];
	"neo4j._async.io._bolt_socket" [label="<f0> SourceModule| <f1> neo4j._async.io._bolt_socket",shape="record"];
	"neo4j._codec.packstream.v1" [label="<f0> Package| <f1> neo4j._codec.packstream.v1",shape="record"];
	"'neo4j._codec.packstream._rust.v1'" [label="<f0> MissingModule| <f1> 'neo4j._codec.packstream._rust.v1'",shape="record"];
	"neo4j._codec.packstream.v1.types" [label="<f0> SourceModule| <f1> neo4j._codec.packstream.v1.types",shape="record"];
	"neo4j._optional_deps" [label="<f0> Package| <f1> neo4j._optional_deps",shape="record"];
	"neo4j._codec.packstream._common" [label="<f0> SourceModule| <f1> neo4j._codec.packstream._common",shape="record"];
	"neo4j._codec.packstream._python" [label="<f0> Package| <f1> neo4j._codec.packstream._python",shape="record"];
	"neo4j._codec.packstream._python._common" [label="<f0> SourceModule| <f1> neo4j._codec.packstream._python._common",shape="record"];
	"neo4j._codec.packstream._rust" [label="<f0> MissingModule| <f1> neo4j._codec.packstream._rust",shape="record"];
	"neo4j._codec.packstream" [label="<f0> Package| <f1> neo4j._codec.packstream",shape="record"];
	"neo4j._codec" [label="<f0> Package| <f1> neo4j._codec",shape="record"];
	"neo4j._codec.hydration.v1" [label="<f0> Package| <f1> neo4j._codec.hydration.v1",shape="record"];
	"neo4j._codec.hydration.v1.hydration_handler" [label="<f0> SourceModule| <f1> neo4j._codec.hydration.v1.hydration_handler",shape="record"];
	"neo4j._codec.hydration.v2.temporal" [label="<f0> SourceModule| <f1> neo4j._codec.hydration.v2.temporal",shape="record"];
	"neo4j._codec.hydration.v2" [label="<f0> Package| <f1> neo4j._codec.hydration.v2",shape="record"];
	"neo4j._codec.hydration.v2.hydration_handler" [label="<f0> SourceModule| <f1> neo4j._codec.hydration.v2.hydration_handler",shape="record"];
	"neo4j._codec.hydration._interface" [label="<f0> Package| <f1> neo4j._codec.hydration._interface",shape="record"];
	"neo4j._codec.hydration._common" [label="<f0> SourceModule| <f1> neo4j._codec.hydration._common",shape="record"];
	"neo4j.time" [label="<f0> Package| <f1> neo4j.time",shape="record"];
	"neo4j.time._clock_implementations" [label="<f0> SourceModule| <f1> neo4j.time._clock_implementations",shape="record"];
	"neo4j.time._metaclasses" [label="<f0> SourceModule| <f1> neo4j.time._metaclasses",shape="record"];
	"neo4j.time._arithmetic" [label="<f0> SourceModule| <f1> neo4j.time._arithmetic",shape="record"];
	"neo4j.spatial" [label="<f0> Package| <f1> neo4j.spatial",shape="record"];
	"neo4j._spatial" [label="<f0> Package| <f1> neo4j._spatial",shape="record"];
	"neo4j.graph" [label="<f0> Package| <f1> neo4j.graph",shape="record"];
	"neo4j._codec.hydration.v1.temporal" [label="<f0> SourceModule| <f1> neo4j._codec.hydration.v1.temporal",shape="record"];
	"neo4j._codec.hydration.v1.spatial" [label="<f0> SourceModule| <f1> neo4j._codec.hydration.v1.spatial",shape="record"];
	"neo4j._codec.hydration" [label="<f0> Package| <f1> neo4j._codec.hydration",shape="record"];
	"neo4j._async.io._bolt5" [label="<f0> SourceModule| <f1> neo4j._async.io._bolt5",shape="record"];
	"neo4j._async.io._bolt4" [label="<f0> SourceModule| <f1> neo4j._async.io._bolt4",shape="record"];
	"neo4j._async.io._bolt3" [label="<f0> SourceModule| <f1> neo4j._async.io._bolt3",shape="record"];
	"neo4j._async_compat.shims" [label="<f0> Package| <f1> neo4j._async_compat.shims",shape="record"];
	"neo4j._async_compat" [label="<f0> Package| <f1> neo4j._async_compat",shape="record"];
	"neo4j._async_compat.concurrency" [label="<f0> SourceModule| <f1> neo4j._async_compat.concurrency",shape="record"];
	"neo4j._sync.io._common" [label="<f0> SourceModule| <f1> neo4j._sync.io._common",shape="record"];
	"neo4j._sync.io._bolt" [label="<f0> SourceModule| <f1> neo4j._sync.io._bolt",shape="record"];
	"neo4j._sync.io._bolt_socket" [label="<f0> SourceModule| <f1> neo4j._sync.io._bolt_socket",shape="record"];
	"neo4j._sync.io._bolt5" [label="<f0> SourceModule| <f1> neo4j._sync.io._bolt5",shape="record"];
	"neo4j._sync.io._bolt4" [label="<f0> SourceModule| <f1> neo4j._sync.io._bolt4",shape="record"];
	"neo4j._sync.io._bolt3" [label="<f0> SourceModule| <f1> neo4j._sync.io._bolt3",shape="record"];
	"neo4j._sync._debug" [label="<f0> Package| <f1> neo4j._sync._debug",shape="record"];
	"neo4j._sync._debug._concurrency_check" [label="<f0> SourceModule| <f1> neo4j._sync._debug._concurrency_check",shape="record"];
	"neo4j._debug" [label="<f0> Package| <f1> neo4j._debug",shape="record"];
	"neo4j._debug._notification_printer" [label="<f0> SourceModule| <f1> neo4j._debug._notification_printer",shape="record"];
	"neo4j._debug._config" [label="<f0> SourceModule| <f1> neo4j._debug._config",shape="record"];
	"neo4j._async_compat.util" [label="<f0> SourceModule| <f1> neo4j._async_compat.util",shape="record"];
	"neo4j._sync.work.session" [label="<f0> SourceModule| <f1> neo4j._sync.work.session",shape="record"];
	"neo4j._sync.work.workspace" [label="<f0> SourceModule| <f1> neo4j._sync.work.workspace",shape="record"];
	"neo4j._util" [label="<f0> Package| <f1> neo4j._util",shape="record"];
	"neo4j._util._context_bool" [label="<f0> SourceModule| <f1> neo4j._util._context_bool",shape="record"];
	"neo4j._sync.work.result" [label="<f0> SourceModule| <f1> neo4j._sync.work.result",shape="record"];
	"neo4j.warnings" [label="<f0> SourceModule| <f1> neo4j.warnings",shape="record"];
	"neo4j._sync.driver" [label="<f0> SourceModule| <f1> neo4j._sync.driver",shape="record"];
	"neo4j._sync.bookmark_manager" [label="<f0> SourceModule| <f1> neo4j._sync.bookmark_manager",shape="record"];
	"neo4j._sync.config" [label="<f0> SourceModule| <f1> neo4j._sync.config",shape="record"];
	"neo4j._meta" [label="<f0> SourceModule| <f1> neo4j._meta",shape="record"];
	"neo4j._data" [label="<f0> SourceModule| <f1> neo4j._data",shape="record"];
	"neo4j._conf" [label="<f0> SourceModule| <f1> neo4j._conf",shape="record"];
	"neo4j._async.work" [label="<f0> Package| <f1> neo4j._async.work",shape="record"];
	"neo4j._async.work.transaction" [label="<f0> SourceModule| <f1> neo4j._async.work.transaction",shape="record"];
	"neo4j._async._debug" [label="<f0> Package| <f1> neo4j._async._debug",shape="record"];
	"neo4j._async._debug._concurrency_check" [label="<f0> SourceModule| <f1> neo4j._async._debug._concurrency_check",shape="record"];
	"neo4j._async.work.session" [label="<f0> SourceModule| <f1> neo4j._async.work.session",shape="record"];
	"neo4j._async.work.workspace" [label="<f0> SourceModule| <f1> neo4j._async.work.workspace",shape="record"];
	"neo4j._async.work.result" [label="<f0> SourceModule| <f1> neo4j._async.work.result",shape="record"];
	"neo4j._async.driver" [label="<f0> SourceModule| <f1> neo4j._async.driver",shape="record"];
	"neo4j._async.bookmark_manager" [label="<f0> SourceModule| <f1> neo4j._async.bookmark_manager",shape="record"];
	"neo4j._api" [label="<f0> SourceModule| <f1> neo4j._api",shape="record"];
	"graphdatascience.session.dbms_connection_info" [label="<f0> SourceModule| <f1> graphdatascience.session.dbms_connection_info",shape="record"];
	"graphdatascience.session.cloud_location" [label="<f0> SourceModule| <f1> graphdatascience.session.cloud_location",shape="record"];
	"graphdatascience.session.aura_graph_data_science" [label="<f0> SourceModule| <f1> graphdatascience.session.aura_graph_data_science",shape="record"];
	"graphdatascience.utils.util_remote_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.utils.util_remote_proc_runner",shape="record"];
	"graphdatascience.utils" [label="<f0> Package| <f1> graphdatascience.utils",shape="record"];
	"graphdatascience.utils.util_node_property_func_runner" [label="<f0> SourceModule| <f1> graphdatascience.utils.util_node_property_func_runner",shape="record"];
	"graphdatascience.graph.graph_type_check" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_type_check",shape="record"];
	"graphdatascience.graph" [label="<f0> Package| <f1> graphdatascience.graph",shape="record"];
	"graphdatascience.error.illegal_attr_checker" [label="<f0> SourceModule| <f1> graphdatascience.error.illegal_attr_checker",shape="record"];
	"graphdatascience.caller_base" [label="<f0> SourceModule| <f1> graphdatascience.caller_base",shape="record"];
	"graphdatascience.error.cypher_warning_handler" [label="<f0> SourceModule| <f1> graphdatascience.error.cypher_warning_handler",shape="record"];
	"graphdatascience.query_runner.session_query_runner" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.session_query_runner",shape="record"];
	"graphdatascience.query_runner.protocol.write_protocols" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.protocol.write_protocols",shape="record"];
	"graphdatascience.query_runner.protocol" [label="<f0> Package| <f1> graphdatascience.query_runner.protocol",shape="record"];
	"graphdatascience.session.dbms.protocol_version" [label="<f0> SourceModule| <f1> graphdatascience.session.dbms.protocol_version",shape="record"];
	"graphdatascience.session.dbms" [label="<f0> Package| <f1> graphdatascience.session.dbms",shape="record"];
	"graphdatascience.query_runner.protocol.status" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.protocol.status",shape="record"];
	"graphdatascience.query_runner.protocol.retry_utils" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.protocol.retry_utils",shape="record"];
	"tenacity.retry" [label="<f0> SourceModule| <f1> tenacity.retry",shape="record"];
	"tenacity" [label="<f0> Package| <f1> tenacity",shape="record"];
	"tenacity.tornadoweb" [label="<f0> SourceModule| <f1> tenacity.tornadoweb",shape="record"];
	"'tornado.concurrent'" [label="<f0> MissingModule| <f1> 'tornado.concurrent'",shape="record"];
	"tenacity.asyncio" [label="<f0> Package| <f1> tenacity.asyncio",shape="record"];
	"sniffio" [label="<f0> Package| <f1> sniffio",shape="record"];
	"sniffio._impl" [label="<f0> SourceModule| <f1> sniffio._impl",shape="record"];
	"curio" [label="<f0> MissingModule| <f1> curio",shape="record"];
	"sniffio._version" [label="<f0> SourceModule| <f1> sniffio._version",shape="record"];
	"trio" [label="<f0> MissingModule| <f1> trio",shape="record"];
	"tenacity.asyncio.retry" [label="<f0> SourceModule| <f1> tenacity.asyncio.retry",shape="record"];
	"tornado" [label="<f0> MissingModule| <f1> tornado",shape="record"];
	"tenacity.before_sleep" [label="<f0> SourceModule| <f1> tenacity.before_sleep",shape="record"];
	"tenacity.after" [label="<f0> SourceModule| <f1> tenacity.after",shape="record"];
	"tenacity.before" [label="<f0> SourceModule| <f1> tenacity.before",shape="record"];
	"tenacity.wait" [label="<f0> SourceModule| <f1> tenacity.wait",shape="record"];
	"tenacity.stop" [label="<f0> SourceModule| <f1> tenacity.stop",shape="record"];
	"tenacity.nap" [label="<f0> SourceModule| <f1> tenacity.nap",shape="record"];
	"tenacity._utils" [label="<f0> SourceModule| <f1> tenacity._utils",shape="record"];
	"graphdatascience.query_runner.protocol.project_protocols" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.protocol.project_protocols",shape="record"];
	"graphdatascience.session.dbms.protocol_resolver" [label="<f0> SourceModule| <f1> graphdatascience.session.dbms.protocol_resolver",shape="record"];
	"graphdatascience.query_runner.termination_flag" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.termination_flag",shape="record"];
	"graphdatascience.query_runner.gds_arrow_client" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.gds_arrow_client",shape="record"];
	"graphdatascience.query_runner.arrow_endpoint_version" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.arrow_endpoint_version",shape="record"];
	"graphdatascience.query_runner.arrow_query_runner" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.arrow_query_runner",shape="record"];
	"graphdatascience.query_runner.arrow_graph_constructor" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.arrow_graph_constructor",shape="record"];
	"graphdatascience.query_runner.arrow_info" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.arrow_info",shape="record"];
	"graphdatascience.graph.graph_remote_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_remote_proc_runner",shape="record"];
	"graphdatascience.graph.graph_remote_project_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_remote_project_runner",shape="record"];
	"graphdatascience.server_version.compatible_with" [label="<f0> SourceModule| <f1> graphdatascience.server_version.compatible_with",shape="record"];
	"graphdatascience.server_version" [label="<f0> Package| <f1> graphdatascience.server_version",shape="record"];
	"graphdatascience.graph.base_graph_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.base_graph_proc_runner",shape="record"];
	"graphdatascience.graph.nx_loader" [label="<f0> SourceModule| <f1> graphdatascience.graph.nx_loader",shape="record"];
	"networkx" [label="<f0> MissingModule| <f1> networkx",shape="record"];
	"graphdatascience.graph.ogb_loader" [label="<f0> SourceModule| <f1> graphdatascience.graph.ogb_loader",shape="record"];
	"'ogb.linkproppred'" [label="<f0> MissingModule| <f1> 'ogb.linkproppred'",shape="record"];
	"ogb" [label="<f0> MissingModule| <f1> ogb",shape="record"];
	"graphdatascience.graph.graph_sample_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_sample_runner",shape="record"];
	"graphdatascience.graph.graph_export_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_export_runner",shape="record"];
	"graphdatascience.graph.graph_entity_ops_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_entity_ops_runner",shape="record"];
	"graphdatascience.utils.util_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.utils.util_proc_runner",shape="record"];
	"graphdatascience.error.client_only_endpoint" [label="<f0> SourceModule| <f1> graphdatascience.error.client_only_endpoint",shape="record"];
	"multimethod" [label="<f0> Package| <f1> multimethod",shape="record"];
	"graphdatascience.error.uncallable_namespace" [label="<f0> SourceModule| <f1> graphdatascience.error.uncallable_namespace",shape="record"];
	"graphdatascience.endpoints" [label="<f0> SourceModule| <f1> graphdatascience.endpoints",shape="record"];
	"graphdatascience.utils.direct_util_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.utils.direct_util_endpoints",shape="record"];
	"graphdatascience.topological_lp.topological_lp_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.topological_lp.topological_lp_endpoints",shape="record"];
	"graphdatascience.topological_lp" [label="<f0> Package| <f1> graphdatascience.topological_lp",shape="record"];
	"graphdatascience.topological_lp.topological_lp_alpha_runner" [label="<f0> SourceModule| <f1> graphdatascience.topological_lp.topological_lp_alpha_runner",shape="record"];
	"graphdatascience.system.system_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.system.system_endpoints",shape="record"];
	"graphdatascience.system" [label="<f0> Package| <f1> graphdatascience.system",shape="record"];
	"graphdatascience.system.config_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.system.config_endpoints",shape="record"];
	"graphdatascience.pipeline.pipeline_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.pipeline_endpoints",shape="record"];
	"graphdatascience.pipeline" [label="<f0> Package| <f1> graphdatascience.pipeline",shape="record"];
	"graphdatascience.pipeline.pipeline_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.pipeline_proc_runner",shape="record"];
	"graphdatascience.pipeline.training_pipeline" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.training_pipeline",shape="record"];
	"graphdatascience.pipeline.pipeline_beta_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.pipeline_beta_proc_runner",shape="record"];
	"graphdatascience.pipeline.nc_pipeline_create_runner" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.nc_pipeline_create_runner",shape="record"];
	"graphdatascience.pipeline.lp_pipeline_create_runner" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.lp_pipeline_create_runner",shape="record"];
	"graphdatascience.pipeline.pipeline_alpha_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.pipeline_alpha_proc_runner",shape="record"];
	"graphdatascience.pipeline.nr_pipeline_create_runner" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.nr_pipeline_create_runner",shape="record"];
	"graphdatascience.model.model_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.model.model_endpoints",shape="record"];
	"graphdatascience.model" [label="<f0> Package| <f1> graphdatascience.model",shape="record"];
	"graphdatascience.model.model_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.model.model_proc_runner",shape="record"];
	"graphdatascience.model.model_resolver" [label="<f0> SourceModule| <f1> graphdatascience.model.model_resolver",shape="record"];
	"graphdatascience.model.model" [label="<f0> SourceModule| <f1> graphdatascience.model.model",shape="record"];
	"graphdatascience.model.model_beta_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.model.model_beta_proc_runner",shape="record"];
	"graphdatascience.model.model_alpha_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.model.model_alpha_proc_runner",shape="record"];
	"graphdatascience.graph.graph_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_endpoints",shape="record"];
	"graphdatascience.graph.graph_beta_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_beta_proc_runner",shape="record"];
	"graphdatascience.graph.graph_project_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_project_runner",shape="record"];
	"graphdatascience.graph.graph_alpha_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_alpha_proc_runner",shape="record"];
	"graphdatascience.algo.single_mode_algo_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.algo.single_mode_algo_endpoints",shape="record"];
	"graphdatascience.algo" [label="<f0> Package| <f1> graphdatascience.algo",shape="record"];
	"graphdatascience.algo.algo_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.algo.algo_proc_runner",shape="record"];
	"graphdatascience.call_builder" [label="<f0> SourceModule| <f1> graphdatascience.call_builder",shape="record"];
	"graphdatascience.algo.algo_endpoints" [label="<f0> SourceModule| <f1> graphdatascience.algo.algo_endpoints",shape="record"];
	"graphdatascience.session.aura_api" [label="<f0> SourceModule| <f1> graphdatascience.session.aura_api",shape="record"];
	"graphdatascience.session.algorithm_category" [label="<f0> SourceModule| <f1> graphdatascience.session.algorithm_category",shape="record"];
	"typing" [label="<f0> SourceModule| <f1> typing",shape="record"];
	"dataclasses" [label="<f0> SourceModule| <f1> dataclasses",shape="record"];
	"__future__" [label="<f0> SourceModule| <f1> __future__",shape="record"];
	"graphdatascience.server_version.server_version" [label="<f0> SourceModule| <f1> graphdatascience.server_version.server_version",shape="record"];
	"graphdatascience.query_runner.query_runner" [label="<f0> SourceModule| <f1> graphdatascience.query_runner.query_runner",shape="record"];
	"graphdatascience.pipeline.nr_training_pipeline" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.nr_training_pipeline",shape="record"];
	"graphdatascience.pipeline.nc_training_pipeline" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.nc_training_pipeline",shape="record"];
	"graphdatascience.pipeline.classification_training_pipeline" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.classification_training_pipeline",shape="record"];
	"graphdatascience.pipeline.lp_training_pipeline" [label="<f0> SourceModule| <f1> graphdatascience.pipeline.lp_training_pipeline",shape="record"];
	"graphdatascience.model.simple_rel_embedding_model" [label="<f0> SourceModule| <f1> graphdatascience.model.simple_rel_embedding_model",shape="record"];
	"graphdatascience.model.pipeline_model" [label="<f0> SourceModule| <f1> graphdatascience.model.pipeline_model",shape="record"];
	"graphdatascience.model.node_regression_model" [label="<f0> SourceModule| <f1> graphdatascience.model.node_regression_model",shape="record"];
	"graphdatascience.model.node_classification_model" [label="<f0> SourceModule| <f1> graphdatascience.model.node_classification_model",shape="record"];
	"graphdatascience.model.link_prediction_model" [label="<f0> SourceModule| <f1> graphdatascience.model.link_prediction_model",shape="record"];
	"graphdatascience.model.graphsage_model" [label="<f0> SourceModule| <f1> graphdatascience.model.graphsage_model",shape="record"];
	"graphdatascience.graph_data_science" [label="<f0> SourceModule| <f1> graphdatascience.graph_data_science",shape="record"];
	"graphdatascience.graph.graph_proc_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_proc_runner",shape="record"];
	"graphdatascience.graph.graph_cypher_runner" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_cypher_runner",shape="record"];
	"graphdatascience.graph.graph_object" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_object",shape="record"];
	"graphdatascience.graph.graph_create_result" [label="<f0> SourceModule| <f1> graphdatascience.graph.graph_create_result",shape="record"];
	"_thread" [label="<f0> BuiltinModule| <f1> _thread",shape="record"];
	"_elementtree" [label="<f0> Extension| <f1> _elementtree",shape="record"];
	"xml.etree.cElementTree" [label="<f0> SourceModule| <f1> xml.etree.cElementTree",shape="record"];
	"xml.etree.ElementInclude" [label="<f0> SourceModule| <f1> xml.etree.ElementInclude",shape="record"];
	"zipimport" [label="<f0> SourceModule| <f1> zipimport",shape="record"];
	"_ssl" [label="<f0> Extension| <f1> _ssl",shape="record"];
	"_json" [label="<f0> Extension| <f1> _json",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py",shape="record"];
	"pyimod02_importers" [label="<f0> MissingModule| <f1> pyimod02_importers",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_cryptography_openssl.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_cryptography_openssl.py",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime-java.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime-java.py",shape="record"];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime_hook.py" [label="<f0> Script| <f1> /Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime_hook.py",shape="record"];
	"tiktoken" [label="<f0> Package| <f1> tiktoken",shape="record"];
	"tiktoken.registry" [label="<f0> SourceModule| <f1> tiktoken.registry",shape="record"];
	"tiktoken_ext" [label="<f0> NamespacePackage| <f1> tiktoken_ext",shape="record"];
	"tiktoken.model" [label="<f0> SourceModule| <f1> tiktoken.model",shape="record"];
	"tiktoken.core" [label="<f0> SourceModule| <f1> tiktoken.core",shape="record"];
	"regex" [label="<f0> Package| <f1> regex",shape="record"];
	"regex.regex" [label="<f0> SourceModule| <f1> regex.regex",shape="record"];
	"regex._regex" [label="<f0> Extension| <f1> regex._regex",shape="record"];
	"regex._regex_core" [label="<f0> SourceModule| <f1> regex._regex_core",shape="record"];
	"regex.DEFAULT_VERSION" [label="<f0> MissingModule| <f1> regex.DEFAULT_VERSION",shape="record"];
	"tiktoken._tiktoken" [label="<f0> Extension| <f1> tiktoken._tiktoken",shape="record"];
	"langchain_community" [label="<f0> Package| <f1> langchain_community",shape="record"];
	"langchain_core" [label="<f0> Package| <f1> langchain_core",shape="record"];
	"langchain_core.version" [label="<f0> SourceModule| <f1> langchain_core.version",shape="record"];
	"langchain_core._api" [label="<f0> Package| <f1> langchain_core._api",shape="record"];
	"langchain_core._api.path" [label="<f0> SourceModule| <f1> langchain_core._api.path",shape="record"];
	"langchain_core._api.deprecation" [label="<f0> SourceModule| <f1> langchain_core._api.deprecation",shape="record"];
	"langchain_core.utils.pydantic" [label="<f0> SourceModule| <f1> langchain_core.utils.pydantic",shape="record"];
	"langchain_core.utils" [label="<f0> Package| <f1> langchain_core.utils",shape="record"];
	"langchain_core.utils.mustache" [label="<f0> SourceModule| <f1> langchain_core.utils.mustache",shape="record"];
	"langchain_core.utils.utils" [label="<f0> SourceModule| <f1> langchain_core.utils.utils",shape="record"];
	"langchain_core.utils.strings" [label="<f0> SourceModule| <f1> langchain_core.utils.strings",shape="record"];
	"langchain_core.utils.loading" [label="<f0> SourceModule| <f1> langchain_core.utils.loading",shape="record"];
	"langchain_core.utils.iter" [label="<f0> SourceModule| <f1> langchain_core.utils.iter",shape="record"];
	"langchain_core.utils.input" [label="<f0> SourceModule| <f1> langchain_core.utils.input",shape="record"];
	"langchain_core.utils.formatting" [label="<f0> SourceModule| <f1> langchain_core.utils.formatting",shape="record"];
	"langchain_core.utils.env" [label="<f0> SourceModule| <f1> langchain_core.utils.env",shape="record"];
	"langchain_core.utils.aiter" [label="<f0> SourceModule| <f1> langchain_core.utils.aiter",shape="record"];
	"langchain_core.utils.image" [label="<f0> SourceModule| <f1> langchain_core.utils.image",shape="record"];
	"pydantic.v1" [label="<f0> Package| <f1> pydantic.v1",shape="record"];
	"pydantic.v1.version" [label="<f0> SourceModule| <f1> pydantic.v1.version",shape="record"];
	"pydantic.v1.types" [label="<f0> SourceModule| <f1> pydantic.v1.types",shape="record"];
	"pydantic.v1.typing" [label="<f0> SourceModule| <f1> pydantic.v1.typing",shape="record"];
	"pydantic.v1.validators" [label="<f0> SourceModule| <f1> pydantic.v1.validators",shape="record"];
	"pydantic.v1.utils" [label="<f0> SourceModule| <f1> pydantic.v1.utils",shape="record"];
	"pydantic.v1.datetime_parse" [label="<f0> SourceModule| <f1> pydantic.v1.datetime_parse",shape="record"];
	"pydantic.v1.tools" [label="<f0> SourceModule| <f1> pydantic.v1.tools",shape="record"];
	"pydantic.v1.parse" [label="<f0> SourceModule| <f1> pydantic.v1.parse",shape="record"];
	"pydantic.v1.networks" [label="<f0> SourceModule| <f1> pydantic.v1.networks",shape="record"];
	"email_validator" [label="<f0> MissingModule| <f1> email_validator",shape="record"];
	"pydantic.v1.main" [label="<f0> SourceModule| <f1> pydantic.v1.main",shape="record"];
	"pydantic.v1.schema" [label="<f0> SourceModule| <f1> pydantic.v1.schema",shape="record"];
	"pydantic.v1.json" [label="<f0> SourceModule| <f1> pydantic.v1.json",shape="record"];
	"pydantic.v1.color" [label="<f0> SourceModule| <f1> pydantic.v1.color",shape="record"];
	"colorsys" [label="<f0> SourceModule| <f1> colorsys",shape="record"];
	"pydantic.v1.error_wrappers" [label="<f0> SourceModule| <f1> pydantic.v1.error_wrappers",shape="record"];
	"pydantic.v1.env_settings" [label="<f0> SourceModule| <f1> pydantic.v1.env_settings",shape="record"];
	"dotenv" [label="<f0> Package| <f1> dotenv",shape="record"];
	"dotenv.ipython" [label="<f0> SourceModule| <f1> dotenv.ipython",shape="record"];
	"dotenv.main" [label="<f0> SourceModule| <f1> dotenv.main",shape="record"];
	"dotenv.variables" [label="<f0> SourceModule| <f1> dotenv.variables",shape="record"];
	"dotenv.parser" [label="<f0> SourceModule| <f1> dotenv.parser",shape="record"];
	"pydantic.v1.decorator" [label="<f0> SourceModule| <f1> pydantic.v1.decorator",shape="record"];
	"pydantic.v1.config" [label="<f0> SourceModule| <f1> pydantic.v1.config",shape="record"];
	"pydantic.v1.class_validators" [label="<f0> SourceModule| <f1> pydantic.v1.class_validators",shape="record"];
	"pydantic.v1.annotated_types" [label="<f0> SourceModule| <f1> pydantic.v1.annotated_types",shape="record"];
	"pydantic.v1.dataclasses" [label="<f0> SourceModule| <f1> pydantic.v1.dataclasses",shape="record"];
	"pydantic.v1.errors" [label="<f0> SourceModule| <f1> pydantic.v1.errors",shape="record"];
	"pydantic.v1.fields" [label="<f0> SourceModule| <f1> pydantic.v1.fields",shape="record"];
	"pydantic_core.core_schema" [label="<f0> SourceModule| <f1> pydantic_core.core_schema",shape="record"];
	"pydantic_core" [label="<f0> Package| <f1> pydantic_core",shape="record"];
	"pydantic_core._pydantic_core" [label="<f0> Extension| <f1> pydantic_core._pydantic_core",shape="record"];
	"_typeshed" [label="<f0> MissingModule| <f1> _typeshed",shape="record"];
	"pydantic.json_schema" [label="<f0> SourceModule| <f1> pydantic.json_schema",shape="record"];
	"pydantic.type_adapter" [label="<f0> SourceModule| <f1> pydantic.type_adapter",shape="record"];
	"pydantic.plugin._schema_validator" [label="<f0> SourceModule| <f1> pydantic.plugin._schema_validator",shape="record"];
	"pydantic.plugin._loader" [label="<f0> SourceModule| <f1> pydantic.plugin._loader",shape="record"];
	"pydantic.plugin" [label="<f0> Package| <f1> pydantic.plugin",shape="record"];
	"pydantic._internal._utils" [label="<f0> SourceModule| <f1> pydantic._internal._utils",shape="record"];
	"pydantic._internal._import_utils" [label="<f0> SourceModule| <f1> pydantic._internal._import_utils",shape="record"];
	"pydantic._internal._typing_extra" [label="<f0> SourceModule| <f1> pydantic._internal._typing_extra",shape="record"];
	"eval_type_backport" [label="<f0> MissingModule| <f1> eval_type_backport",shape="record"];
	"pydantic.version" [label="<f0> SourceModule| <f1> pydantic.version",shape="record"];
	"pydantic._internal._git" [label="<f0> SourceModule| <f1> pydantic._internal._git",shape="record"];
	"typing_inspection.typing_objects" [label="<f0> SourceModule| <f1> typing_inspection.typing_objects",shape="record"];
	"typing_inspection" [label="<f0> Package| <f1> typing_inspection",shape="record"];
	"pydantic._internal._repr" [label="<f0> SourceModule| <f1> pydantic._internal._repr",shape="record"];
	"pydantic._internal._namespace_utils" [label="<f0> SourceModule| <f1> pydantic._internal._namespace_utils",shape="record"];
	"pydantic._internal._generate_schema" [label="<f0> SourceModule| <f1> pydantic._internal._generate_schema",shape="record"];
	"pydantic.dataclasses" [label="<f0> SourceModule| <f1> pydantic.dataclasses",shape="record"];
	"pydantic._migration" [label="<f0> SourceModule| <f1> pydantic._migration",shape="record"];
	"pydantic._internal._serializers" [label="<f0> SourceModule| <f1> pydantic._internal._serializers",shape="record"];
	"pydantic._internal._validators" [label="<f0> SourceModule| <f1> pydantic._internal._validators",shape="record"];
	"pydantic.types" [label="<f0> SourceModule| <f1> pydantic.types",shape="record"];
	"annotated_types" [label="<f0> Package| <f1> annotated_types",shape="record"];
	"pydantic._internal._schema_gather" [label="<f0> SourceModule| <f1> pydantic._internal._schema_gather",shape="record"];
	"pydantic._internal._generics" [label="<f0> SourceModule| <f1> pydantic._internal._generics",shape="record"];
	"pydantic._internal._forward_ref" [label="<f0> SourceModule| <f1> pydantic._internal._forward_ref",shape="record"];
	"pydantic._internal._fields" [label="<f0> SourceModule| <f1> pydantic._internal._fields",shape="record"];
	"pydantic._internal._docs_extraction" [label="<f0> SourceModule| <f1> pydantic._internal._docs_extraction",shape="record"];
	"pydantic._internal._known_annotated_metadata" [label="<f0> SourceModule| <f1> pydantic._internal._known_annotated_metadata",shape="record"];
	"pydantic._internal._discriminated_union" [label="<f0> SourceModule| <f1> pydantic._internal._discriminated_union",shape="record"];
	"pydantic.functional_validators" [label="<f0> SourceModule| <f1> pydantic.functional_validators",shape="record"];
	"pydantic.PydanticSchemaGenerationError" [label="<f0> MissingModule| <f1> pydantic.PydanticSchemaGenerationError",shape="record"];
	"pydantic.aliases" [label="<f0> SourceModule| <f1> pydantic.aliases",shape="record"];
	"zoneinfo" [label="<f0> Package| <f1> zoneinfo",shape="record"];
	"zoneinfo._zoneinfo" [label="<f0> SourceModule| <f1> zoneinfo._zoneinfo",shape="record"];
	"_zoneinfo" [label="<f0> Extension| <f1> _zoneinfo",shape="record"];
	"zoneinfo._common" [label="<f0> SourceModule| <f1> zoneinfo._common",shape="record"];
	"zoneinfo._tzpath" [label="<f0> SourceModule| <f1> zoneinfo._tzpath",shape="record"];
	"pydantic.root_model" [label="<f0> SourceModule| <f1> pydantic.root_model",shape="record"];
	"pydantic._internal._model_construction" [label="<f0> SourceModule| <f1> pydantic._internal._model_construction",shape="record"];
	"pydantic._internal._signature" [label="<f0> SourceModule| <f1> pydantic._internal._signature",shape="record"];
	"pydantic.PydanticUserError" [label="<f0> MissingModule| <f1> pydantic.PydanticUserError",shape="record"];
	"pydantic.main" [label="<f0> SourceModule| <f1> pydantic.main",shape="record"];
	"pydantic.deprecated.json" [label="<f0> SourceModule| <f1> pydantic.deprecated.json",shape="record"];
	"pydantic.networks" [label="<f0> SourceModule| <f1> pydantic.networks",shape="record"];
	"pydantic.color" [label="<f0> SourceModule| <f1> pydantic.color",shape="record"];
	"pydantic.deprecated.copy_internals" [label="<f0> SourceModule| <f1> pydantic.deprecated.copy_internals",shape="record"];
	"pydantic.deprecated" [label="<f0> Package| <f1> pydantic.deprecated",shape="record"];
	"pydantic.deprecated.parse" [label="<f0> SourceModule| <f1> pydantic.deprecated.parse",shape="record"];
	"pydantic._internal._dataclasses" [label="<f0> SourceModule| <f1> pydantic._internal._dataclasses",shape="record"];
	"pydantic.errors" [label="<f0> SourceModule| <f1> pydantic.errors",shape="record"];
	"pydantic.config" [label="<f0> SourceModule| <f1> pydantic.config",shape="record"];
	"pydantic.annotated_handlers" [label="<f0> SourceModule| <f1> pydantic.annotated_handlers",shape="record"];
	"pydantic._internal._schema_generation_shared" [label="<f0> SourceModule| <f1> pydantic._internal._schema_generation_shared",shape="record"];
	"pydantic._internal._mock_val_ser" [label="<f0> SourceModule| <f1> pydantic._internal._mock_val_ser",shape="record"];
	"pydantic._internal._internal_dataclass" [label="<f0> SourceModule| <f1> pydantic._internal._internal_dataclass",shape="record"];
	"pydantic._internal._decorators" [label="<f0> SourceModule| <f1> pydantic._internal._decorators",shape="record"];
	"pydantic._internal._core_utils" [label="<f0> SourceModule| <f1> pydantic._internal._core_utils",shape="record"];
	"'rich.pretty'" [label="<f0> MissingModule| <f1> 'rich.pretty'",shape="record"];
	"rich" [label="<f0> MissingModule| <f1> rich",shape="record"];
	"pydantic._internal._core_metadata" [label="<f0> SourceModule| <f1> pydantic._internal._core_metadata",shape="record"];
	"pydantic._internal._config" [label="<f0> SourceModule| <f1> pydantic._internal._config",shape="record"];
	"pydantic._internal" [label="<f0> Package| <f1> pydantic._internal",shape="record"];
	"pydantic._internal._decorators_v1" [label="<f0> SourceModule| <f1> pydantic._internal._decorators_v1",shape="record"];
	"pydantic._internal._validate_call" [label="<f0> SourceModule| <f1> pydantic._internal._validate_call",shape="record"];
	"pydantic.warnings" [label="<f0> SourceModule| <f1> pydantic.warnings",shape="record"];
	"typing_inspection.introspection" [label="<f0> SourceModule| <f1> typing_inspection.introspection",shape="record"];
	"pydantic.fields" [label="<f0> SourceModule| <f1> pydantic.fields",shape="record"];
	"pydantic.BaseModel" [label="<f0> MissingModule| <f1> pydantic.BaseModel",shape="record"];
	"pydantic" [label="<f0> Package| <f1> pydantic",shape="record"];
	"pydantic.validators" [label="<f0> SourceModule| <f1> pydantic.validators",shape="record"];
	"pydantic.v1.mypy" [label="<f0> SourceModule| <f1> pydantic.v1.mypy",shape="record"];
	"toml" [label="<f0> MissingModule| <f1> toml",shape="record"];
	"tomli" [label="<f0> MissingModule| <f1> tomli",shape="record"];
	"tomllib" [label="<f0> MissingModule| <f1> tomllib",shape="record"];
	"'mypy.version'" [label="<f0> MissingModule| <f1> 'mypy.version'",shape="record"];
	"'mypy.util'" [label="<f0> MissingModule| <f1> 'mypy.util'",shape="record"];
	"'mypy.typevars'" [label="<f0> MissingModule| <f1> 'mypy.typevars'",shape="record"];
	"'mypy.types'" [label="<f0> MissingModule| <f1> 'mypy.types'",shape="record"];
	"'mypy.server'" [label="<f0> MissingModule| <f1> 'mypy.server'",shape="record"];
	"'mypy.semanal'" [label="<f0> MissingModule| <f1> 'mypy.semanal'",shape="record"];
	"'mypy.plugins'" [label="<f0> MissingModule| <f1> 'mypy.plugins'",shape="record"];
	"'mypy.plugin'" [label="<f0> MissingModule| <f1> 'mypy.plugin'",shape="record"];
	"'mypy.options'" [label="<f0> MissingModule| <f1> 'mypy.options'",shape="record"];
	"'mypy.nodes'" [label="<f0> MissingModule| <f1> 'mypy.nodes'",shape="record"];
	"'mypy.errorcodes'" [label="<f0> MissingModule| <f1> 'mypy.errorcodes'",shape="record"];
	"pydantic.v1.generics" [label="<f0> SourceModule| <f1> pydantic.v1.generics",shape="record"];
	"pydantic.v1._hypothesis_plugin" [label="<f0> SourceModule| <f1> pydantic.v1._hypothesis_plugin",shape="record"];
	"hypothesis" [label="<f0> MissingModule| <f1> hypothesis",shape="record"];
	"pydantic.utils" [label="<f0> SourceModule| <f1> pydantic.utils",shape="record"];
	"pydantic.typing" [label="<f0> SourceModule| <f1> pydantic.typing",shape="record"];
	"pydantic.tools" [label="<f0> SourceModule| <f1> pydantic.tools",shape="record"];
	"pydantic.schema" [label="<f0> SourceModule| <f1> pydantic.schema",shape="record"];
	"pydantic.parse" [label="<f0> SourceModule| <f1> pydantic.parse",shape="record"];
	"pydantic.mypy" [label="<f0> SourceModule| <f1> pydantic.mypy",shape="record"];
	"'mypy.typeops'" [label="<f0> MissingModule| <f1> 'mypy.typeops'",shape="record"];
	"'mypy.type_visitor'" [label="<f0> MissingModule| <f1> 'mypy.type_visitor'",shape="record"];
	"'mypy.state'" [label="<f0> MissingModule| <f1> 'mypy.state'",shape="record"];
	"'mypy.expandtype'" [label="<f0> MissingModule| <f1> 'mypy.expandtype'",shape="record"];
	"mypy" [label="<f0> MissingModule| <f1> mypy",shape="record"];
	"pydantic.json" [label="<f0> SourceModule| <f1> pydantic.json",shape="record"];
	"pydantic.generics" [label="<f0> SourceModule| <f1> pydantic.generics",shape="record"];
	"pydantic.experimental.pipeline" [label="<f0> SourceModule| <f1> pydantic.experimental.pipeline",shape="record"];
	"pydantic.experimental.arguments_schema" [label="<f0> SourceModule| <f1> pydantic.experimental.arguments_schema",shape="record"];
	"pydantic.experimental" [label="<f0> Package| <f1> pydantic.experimental",shape="record"];
	"pydantic.error_wrappers" [label="<f0> SourceModule| <f1> pydantic.error_wrappers",shape="record"];
	"pydantic.env_settings" [label="<f0> SourceModule| <f1> pydantic.env_settings",shape="record"];
	"pydantic.deprecated.decorator" [label="<f0> SourceModule| <f1> pydantic.deprecated.decorator",shape="record"];
	"pydantic.decorator" [label="<f0> SourceModule| <f1> pydantic.decorator",shape="record"];
	"pydantic.datetime_parse" [label="<f0> SourceModule| <f1> pydantic.datetime_parse",shape="record"];
	"pydantic.class_validators" [label="<f0> SourceModule| <f1> pydantic.class_validators",shape="record"];
	"pydantic.alias_generators" [label="<f0> SourceModule| <f1> pydantic.alias_generators",shape="record"];
	"pydantic.validate_arguments" [label="<f0> MissingModule| <f1> pydantic.validate_arguments",shape="record"];
	"pydantic.deprecated.tools" [label="<f0> SourceModule| <f1> pydantic.deprecated.tools",shape="record"];
	"pydantic.deprecated.config" [label="<f0> SourceModule| <f1> pydantic.deprecated.config",shape="record"];
	"pydantic.deprecated.class_validators" [label="<f0> SourceModule| <f1> pydantic.deprecated.class_validators",shape="record"];
	"pydantic.validate_call_decorator" [label="<f0> SourceModule| <f1> pydantic.validate_call_decorator",shape="record"];
	"pydantic.functional_serializers" [label="<f0> SourceModule| <f1> pydantic.functional_serializers",shape="record"];
	"langchain_core._api.internal" [label="<f0> SourceModule| <f1> langchain_core._api.internal",shape="record"];
	"langchain_core._api.beta_decorator" [label="<f0> SourceModule| <f1> langchain_core._api.beta_decorator",shape="record"];
	"langchain_core._import_utils" [label="<f0> SourceModule| <f1> langchain_core._import_utils",shape="record"];
	"langchain" [label="<f0> Package| <f1> langchain",shape="record"];
	"langchain.globals" [label="<f0> SourceModule| <f1> langchain.globals",shape="record"];
	"langchain_core.caches" [label="<f0> SourceModule| <f1> langchain_core.caches",shape="record"];
	"langchain_core.runnables" [label="<f0> Package| <f1> langchain_core.runnables",shape="record"];
	"langchain_core.runnables.utils" [label="<f0> SourceModule| <f1> langchain_core.runnables.utils",shape="record"];
	"langchain_core.runnables.schema" [label="<f0> SourceModule| <f1> langchain_core.runnables.schema",shape="record"];
	"langchain_core.runnables.router" [label="<f0> SourceModule| <f1> langchain_core.runnables.router",shape="record"];
	"langchain_core.runnables.passthrough" [label="<f0> SourceModule| <f1> langchain_core.runnables.passthrough",shape="record"];
	"langchain_core.runnables.graph" [label="<f0> SourceModule| <f1> langchain_core.runnables.graph",shape="record"];
	"langchain_core.runnables.graph_mermaid" [label="<f0> SourceModule| <f1> langchain_core.runnables.graph_mermaid",shape="record"];
	"pyppeteer" [label="<f0> MissingModule| <f1> pyppeteer",shape="record"];
	"langchain_core.runnables.graph_png" [label="<f0> SourceModule| <f1> langchain_core.runnables.graph_png",shape="record"];
	"pygraphviz" [label="<f0> MissingModule| <f1> pygraphviz",shape="record"];
	"langchain_core.runnables.graph_ascii" [label="<f0> SourceModule| <f1> langchain_core.runnables.graph_ascii",shape="record"];
	"'grandalf.routing'" [label="<f0> MissingModule| <f1> 'grandalf.routing'",shape="record"];
	"'grandalf.layouts'" [label="<f0> MissingModule| <f1> 'grandalf.layouts'",shape="record"];
	"grandalf" [label="<f0> MissingModule| <f1> grandalf",shape="record"];
	"langchain_core.load.serializable" [label="<f0> SourceModule| <f1> langchain_core.load.serializable",shape="record"];
	"langchain_core.load" [label="<f0> Package| <f1> langchain_core.load",shape="record"];
	"langchain_core.load.dump" [label="<f0> SourceModule| <f1> langchain_core.load.dump",shape="record"];
	"langchain_core.messages" [label="<f0> Package| <f1> langchain_core.messages",shape="record"];
	"langchain_core.messages.utils" [label="<f0> SourceModule| <f1> langchain_core.messages.utils",shape="record"];
	"langchain_core.prompt_values" [label="<f0> SourceModule| <f1> langchain_core.prompt_values",shape="record"];
	"langchain_core.language_models" [label="<f0> Package| <f1> langchain_core.language_models",shape="record"];
	"langchain_core.language_models.llms" [label="<f0> SourceModule| <f1> langchain_core.language_models.llms",shape="record"];
	"langchain_core.globals" [label="<f0> SourceModule| <f1> langchain_core.globals",shape="record"];
	"langchain_core.callbacks" [label="<f0> Package| <f1> langchain_core.callbacks",shape="record"];
	"langchain_core.callbacks.usage" [label="<f0> SourceModule| <f1> langchain_core.callbacks.usage",shape="record"];
	"langchain_core.tracers.context" [label="<f0> SourceModule| <f1> langchain_core.tracers.context",shape="record"];
	"langchain_core.tracers" [label="<f0> Package| <f1> langchain_core.tracers",shape="record"];
	"langchain_core.tracers.stdout" [label="<f0> SourceModule| <f1> langchain_core.tracers.stdout",shape="record"];
	"langchain_core.tracers.log_stream" [label="<f0> SourceModule| <f1> langchain_core.tracers.log_stream",shape="record"];
	"langchain_core.tracers.memory_stream" [label="<f0> SourceModule| <f1> langchain_core.tracers.memory_stream",shape="record"];
	"langchain_core.tracers._streaming" [label="<f0> SourceModule| <f1> langchain_core.tracers._streaming",shape="record"];
	"jsonpatch" [label="<f0> SourceModule| <f1> jsonpatch",shape="record"];
	"collections.MutableSequence" [label="<f0> MissingModule| <f1> collections.MutableSequence",shape="record"];
	"jsonpointer" [label="<f0> SourceModule| <f1> jsonpointer",shape="record"];
	"langchain_core.tracers.evaluation" [label="<f0> SourceModule| <f1> langchain_core.tracers.evaluation",shape="record"];
	"langsmith.evaluation.evaluator" [label="<f0> SourceModule| <f1> langsmith.evaluation.evaluator",shape="record"];
	"langsmith.evaluation" [label="<f0> Package| <f1> langsmith.evaluation",shape="record"];
	"langsmith.evaluation.string_evaluator" [label="<f0> SourceModule| <f1> langsmith.evaluation.string_evaluator",shape="record"];
	"langsmith.evaluation.integrations._langchain" [label="<f0> SourceModule| <f1> langsmith.evaluation.integrations._langchain",shape="record"];
	"langsmith.evaluation.integrations" [label="<f0> Package| <f1> langsmith.evaluation.integrations",shape="record"];
	"langchain.evaluation" [label="<f0> Package| <f1> langchain.evaluation",shape="record"];
	"langchain.evaluation.string_distance" [label="<f0> Package| <f1> langchain.evaluation.string_distance",shape="record"];
	"langchain.evaluation.string_distance.base" [label="<f0> SourceModule| <f1> langchain.evaluation.string_distance.base",shape="record"];
	"rapidfuzz" [label="<f0> MissingModule| <f1> rapidfuzz",shape="record"];
	"langchain.chains.base" [label="<f0> SourceModule| <f1> langchain.chains.base",shape="record"];
	"langchain_core.memory" [label="<f0> SourceModule| <f1> langchain_core.memory",shape="record"];
	"langchain.evaluation.scoring" [label="<f0> Package| <f1> langchain.evaluation.scoring",shape="record"];
	"langchain.evaluation.scoring.eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.scoring.eval_chain",shape="record"];
	"langchain.evaluation.scoring.prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.scoring.prompt",shape="record"];
	"langchain_core.prompts.chat" [label="<f0> SourceModule| <f1> langchain_core.prompts.chat",shape="record"];
	"langchain_core.utils.interactive_env" [label="<f0> SourceModule| <f1> langchain_core.utils.interactive_env",shape="record"];
	"langchain_core.prompts.string" [label="<f0> SourceModule| <f1> langchain_core.prompts.string",shape="record"];
	"'jinja2.sandbox'" [label="<f0> MissingModule| <f1> 'jinja2.sandbox'",shape="record"];
	"langchain_core.prompts.message" [label="<f0> SourceModule| <f1> langchain_core.prompts.message",shape="record"];
	"langchain_core.prompts.image" [label="<f0> SourceModule| <f1> langchain_core.prompts.image",shape="record"];
	"langchain_core.prompts.dict" [label="<f0> SourceModule| <f1> langchain_core.prompts.dict",shape="record"];
	"langchain_core.prompts.base" [label="<f0> SourceModule| <f1> langchain_core.prompts.base",shape="record"];
	"langchain_core.output_parsers.base" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.base",shape="record"];
	"langchain.evaluation.criteria.eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.criteria.eval_chain",shape="record"];
	"langchain.evaluation.criteria.prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.criteria.prompt",shape="record"];
	"langchain.chains.llm" [label="<f0> SourceModule| <f1> langchain.chains.llm",shape="record"];
	"langchain_core.runnables.configurable" [label="<f0> SourceModule| <f1> langchain_core.runnables.configurable",shape="record"];
	"langchain.chains.constitutional_ai.models" [label="<f0> SourceModule| <f1> langchain.chains.constitutional_ai.models",shape="record"];
	"langchain.chains.constitutional_ai" [label="<f0> Package| <f1> langchain.chains.constitutional_ai",shape="record"];
	"langchain_core.prompts.prompt" [label="<f0> SourceModule| <f1> langchain_core.prompts.prompt",shape="record"];
	"langchain.evaluation.regex_match.base" [label="<f0> SourceModule| <f1> langchain.evaluation.regex_match.base",shape="record"];
	"langchain.evaluation.regex_match" [label="<f0> Package| <f1> langchain.evaluation.regex_match",shape="record"];
	"langchain.evaluation.qa" [label="<f0> Package| <f1> langchain.evaluation.qa",shape="record"];
	"langchain.evaluation.qa.generate_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.qa.generate_chain",shape="record"];
	"langchain.output_parsers.regex" [label="<f0> SourceModule| <f1> langchain.output_parsers.regex",shape="record"];
	"langchain.output_parsers" [label="<f0> Package| <f1> langchain.output_parsers",shape="record"];
	"langchain_community.output_parsers.rail_parser" [label="<f0> SourceModule| <f1> langchain_community.output_parsers.rail_parser",shape="record"];
	"langchain_community.output_parsers" [label="<f0> Package| <f1> langchain_community.output_parsers",shape="record"];
	"guardrails" [label="<f0> MissingModule| <f1> guardrails",shape="record"];
	"langchain.output_parsers.yaml" [label="<f0> SourceModule| <f1> langchain.output_parsers.yaml",shape="record"];
	"langchain.output_parsers.format_instructions" [label="<f0> SourceModule| <f1> langchain.output_parsers.format_instructions",shape="record"];
	"langchain.output_parsers.structured" [label="<f0> SourceModule| <f1> langchain.output_parsers.structured",shape="record"];
	"langchain_core.output_parsers.json" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.json",shape="record"];
	"langchain_core.utils.json" [label="<f0> SourceModule| <f1> langchain_core.utils.json",shape="record"];
	"langchain_core.output_parsers.transform" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.transform",shape="record"];
	"langchain_core.output_parsers.format_instructions" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.format_instructions",shape="record"];
	"langchain.output_parsers.retry" [label="<f0> SourceModule| <f1> langchain.output_parsers.retry",shape="record"];
	"langchain.output_parsers.regex_dict" [label="<f0> SourceModule| <f1> langchain.output_parsers.regex_dict",shape="record"];
	"langchain.output_parsers.pandas_dataframe" [label="<f0> SourceModule| <f1> langchain.output_parsers.pandas_dataframe",shape="record"];
	"langchain.output_parsers.fix" [label="<f0> SourceModule| <f1> langchain.output_parsers.fix",shape="record"];
	"langchain.output_parsers.prompts" [label="<f0> SourceModule| <f1> langchain.output_parsers.prompts",shape="record"];
	"langchain.output_parsers.enum" [label="<f0> SourceModule| <f1> langchain.output_parsers.enum",shape="record"];
	"langchain.output_parsers.datetime" [label="<f0> SourceModule| <f1> langchain.output_parsers.datetime",shape="record"];
	"langchain.output_parsers.combining" [label="<f0> SourceModule| <f1> langchain.output_parsers.combining",shape="record"];
	"langchain.output_parsers.boolean" [label="<f0> SourceModule| <f1> langchain.output_parsers.boolean",shape="record"];
	"langchain._api" [label="<f0> Package| <f1> langchain._api",shape="record"];
	"langchain._api.module_import" [label="<f0> SourceModule| <f1> langchain._api.module_import",shape="record"];
	"langchain._api.deprecation" [label="<f0> SourceModule| <f1> langchain._api.deprecation",shape="record"];
	"langchain_core.output_parsers.openai_tools" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.openai_tools",shape="record"];
	"langchain.evaluation.qa.generate_prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.qa.generate_prompt",shape="record"];
	"langchain.evaluation.qa.eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.qa.eval_chain",shape="record"];
	"langchain.evaluation.qa.eval_prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.qa.eval_prompt",shape="record"];
	"langchain.evaluation.parsing.json_schema" [label="<f0> SourceModule| <f1> langchain.evaluation.parsing.json_schema",shape="record"];
	"langchain.evaluation.parsing" [label="<f0> Package| <f1> langchain.evaluation.parsing",shape="record"];
	"jsonschema" [label="<f0> MissingModule| <f1> jsonschema",shape="record"];
	"langchain.evaluation.parsing.json_distance" [label="<f0> SourceModule| <f1> langchain.evaluation.parsing.json_distance",shape="record"];
	"langchain.evaluation.parsing.base" [label="<f0> SourceModule| <f1> langchain.evaluation.parsing.base",shape="record"];
	"langchain.evaluation.loading" [label="<f0> SourceModule| <f1> langchain.evaluation.loading",shape="record"];
	"langchain_community.chat_models.openai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.openai",shape="record"];
	"langchain.chains.openai_functions.base" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.base",shape="record"];
	"langchain.chains.openai_functions" [label="<f0> Package| <f1> langchain.chains.openai_functions",shape="record"];
	"langchain.chains.openai_functions.tagging" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.tagging",shape="record"];
	"langchain.chains.openai_functions.utils" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.utils",shape="record"];
	"langchain.chains.openai_functions.qa_with_structure" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.qa_with_structure",shape="record"];
	"langchain.chains.openai_functions.extraction" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.extraction",shape="record"];
	"langchain.chains.openai_functions.citation_fuzzy_match" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.citation_fuzzy_match",shape="record"];
	"langchain.chains.structured_output.base" [label="<f0> SourceModule| <f1> langchain.chains.structured_output.base",shape="record"];
	"langchain.chains.structured_output" [label="<f0> Package| <f1> langchain.chains.structured_output",shape="record"];
	"langchain_core.utils.function_calling" [label="<f0> SourceModule| <f1> langchain_core.utils.function_calling",shape="record"];
	"langchain_core.tools.simple" [label="<f0> SourceModule| <f1> langchain_core.tools.simple",shape="record"];
	"langchain_core.tools.base" [label="<f0> SourceModule| <f1> langchain_core.tools.base",shape="record"];
	"langchain_core.utils.json_schema" [label="<f0> SourceModule| <f1> langchain_core.utils.json_schema",shape="record"];
	"langchain_core.output_parsers.openai_functions" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.openai_functions",shape="record"];
	"langchain_community.utils.openai" [label="<f0> SourceModule| <f1> langchain_community.utils.openai",shape="record"];
	"langchain_community.utils" [label="<f0> Package| <f1> langchain_community.utils",shape="record"];
	"langchain_community.adapters.openai" [label="<f0> SourceModule| <f1> langchain_community.adapters.openai",shape="record"];
	"langchain_community.adapters" [label="<f0> Package| <f1> langchain_community.adapters",shape="record"];
	"langchain_core.chat_sessions" [label="<f0> SourceModule| <f1> langchain_core.chat_sessions",shape="record"];
	"langchain_core.tools" [label="<f0> Package| <f1> langchain_core.tools",shape="record"];
	"langchain_core.tools.structured" [label="<f0> SourceModule| <f1> langchain_core.tools.structured",shape="record"];
	"langchain_core.tools.retriever" [label="<f0> SourceModule| <f1> langchain_core.tools.retriever",shape="record"];
	"langchain_core.retrievers" [label="<f0> SourceModule| <f1> langchain_core.retrievers",shape="record"];
	"langchain_core.tools.render" [label="<f0> SourceModule| <f1> langchain_core.tools.render",shape="record"];
	"langchain_core.tools.convert" [label="<f0> SourceModule| <f1> langchain_core.tools.convert",shape="record"];
	"datasets" [label="<f0> MissingModule| <f1> datasets",shape="record"];
	"langchain.evaluation.embedding_distance.base" [label="<f0> SourceModule| <f1> langchain.evaluation.embedding_distance.base",shape="record"];
	"langchain_community.utils.math" [label="<f0> SourceModule| <f1> langchain_community.utils.math",shape="record"];
	"simsimd" [label="<f0> MissingModule| <f1> simsimd",shape="record"];
	"langchain_community.embeddings.openai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.openai",shape="record"];
	"transformers" [label="<f0> MissingModule| <f1> transformers",shape="record"];
	"langchain_core.embeddings" [label="<f0> Package| <f1> langchain_core.embeddings",shape="record"];
	"langchain_core.embeddings.fake" [label="<f0> SourceModule| <f1> langchain_core.embeddings.fake",shape="record"];
	"langchain_core.embeddings.embeddings" [label="<f0> SourceModule| <f1> langchain_core.embeddings.embeddings",shape="record"];
	"langchain.evaluation.comparison.eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.comparison.eval_chain",shape="record"];
	"langchain.evaluation.comparison.prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.comparison.prompt",shape="record"];
	"langchain.evaluation.agents.trajectory_eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.agents.trajectory_eval_chain",shape="record"];
	"langchain.evaluation.agents.trajectory_eval_prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.agents.trajectory_eval_prompt",shape="record"];
	"langchain_core.agents" [label="<f0> SourceModule| <f1> langchain_core.agents",shape="record"];
	"langchain.evaluation.exact_match.base" [label="<f0> SourceModule| <f1> langchain.evaluation.exact_match.base",shape="record"];
	"langchain.evaluation.exact_match" [label="<f0> Package| <f1> langchain.evaluation.exact_match",shape="record"];
	"langchain.evaluation.embedding_distance" [label="<f0> Package| <f1> langchain.evaluation.embedding_distance",shape="record"];
	"langchain.evaluation.criteria" [label="<f0> Package| <f1> langchain.evaluation.criteria",shape="record"];
	"langchain.evaluation.comparison" [label="<f0> Package| <f1> langchain.evaluation.comparison",shape="record"];
	"langchain.evaluation.agents" [label="<f0> Package| <f1> langchain.evaluation.agents",shape="record"];
	"langchain.evaluation.schema" [label="<f0> SourceModule| <f1> langchain.evaluation.schema",shape="record"];
	"langsmith.evaluation._runner" [label="<f0> SourceModule| <f1> langsmith.evaluation._runner",shape="record"];
	"langsmith.evaluation._name_generation" [label="<f0> SourceModule| <f1> langsmith.evaluation._name_generation",shape="record"];
	"langsmith._internal._beta_decorator" [label="<f0> SourceModule| <f1> langsmith._internal._beta_decorator",shape="record"];
	"langsmith._internal" [label="<f0> Package| <f1> langsmith._internal",shape="record"];
	"langsmith._internal._orjson" [label="<f0> SourceModule| <f1> langsmith._internal._orjson",shape="record"];
	"orjson.loads" [label="<f0> MissingModule| <f1> orjson.loads",shape="record"];
	"orjson.dumps" [label="<f0> MissingModule| <f1> orjson.dumps",shape="record"];
	"orjson.JSONDecodeError" [label="<f0> MissingModule| <f1> orjson.JSONDecodeError",shape="record"];
	"orjson.Fragment" [label="<f0> MissingModule| <f1> orjson.Fragment",shape="record"];
	"orjson.OPT_SERIALIZE_UUID" [label="<f0> MissingModule| <f1> orjson.OPT_SERIALIZE_UUID",shape="record"];
	"orjson.OPT_SERIALIZE_NUMPY" [label="<f0> MissingModule| <f1> orjson.OPT_SERIALIZE_NUMPY",shape="record"];
	"orjson.OPT_SERIALIZE_DATACLASS" [label="<f0> MissingModule| <f1> orjson.OPT_SERIALIZE_DATACLASS",shape="record"];
	"orjson.OPT_NON_STR_KEYS" [label="<f0> MissingModule| <f1> orjson.OPT_NON_STR_KEYS",shape="record"];
	"orjson" [label="<f0> Package| <f1> orjson",shape="record"];
	"orjson.orjson" [label="<f0> Extension| <f1> orjson.orjson",shape="record"];
	"langsmith._internal._patch" [label="<f0> SourceModule| <f1> langsmith._internal._patch",shape="record"];
	"langsmith._internal._aiter" [label="<f0> SourceModule| <f1> langsmith._internal._aiter",shape="record"];
	"langsmith.run_trees" [label="<f0> SourceModule| <f1> langsmith.run_trees",shape="record"];
	"langsmith.client" [label="<f0> SourceModule| <f1> langsmith.client",shape="record"];
	"langchain_core.prompts.structured" [label="<f0> SourceModule| <f1> langchain_core.prompts.structured",shape="record"];
	"langchain.smith" [label="<f0> Package| <f1> langchain.smith",shape="record"];
	"langchain.smith.evaluation" [label="<f0> Package| <f1> langchain.smith.evaluation",shape="record"];
	"langchain.smith.evaluation.string_run_evaluator" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.string_run_evaluator",shape="record"];
	"langchain.smith.evaluation.runner_utils" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.runner_utils",shape="record"];
	"langchain.smith.evaluation.progress" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.progress",shape="record"];
	"langchain.smith.evaluation.name_generation" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.name_generation",shape="record"];
	"langchain.smith.evaluation.config" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.config",shape="record"];
	"langsmith_pyo3" [label="<f0> MissingModule| <f1> langsmith_pyo3",shape="record"];
	"langsmith._internal._serde" [label="<f0> SourceModule| <f1> langsmith._internal._serde",shape="record"];
	"langsmith._internal._operations" [label="<f0> SourceModule| <f1> langsmith._internal._operations",shape="record"];
	"langsmith._internal._multipart" [label="<f0> SourceModule| <f1> langsmith._internal._multipart",shape="record"];
	"langsmith._internal._constants" [label="<f0> SourceModule| <f1> langsmith._internal._constants",shape="record"];
	"langsmith._internal._background_thread" [label="<f0> SourceModule| <f1> langsmith._internal._background_thread",shape="record"];
	"requests_toolbelt.multipart" [label="<f0> Package| <f1> requests_toolbelt.multipart",shape="record"];
	"requests_toolbelt.multipart.decoder" [label="<f0> SourceModule| <f1> requests_toolbelt.multipart.decoder",shape="record"];
	"requests_toolbelt.multipart.encoder" [label="<f0> SourceModule| <f1> requests_toolbelt.multipart.encoder",shape="record"];
	"requests_toolbelt._compat" [label="<f0> SourceModule| <f1> requests_toolbelt._compat",shape="record"];
	"Queue" [label="<f0> MissingModule| <f1> Queue",shape="record"];
	"requests_toolbelt" [label="<f0> Package| <f1> requests_toolbelt",shape="record"];
	"requests_toolbelt.exceptions" [label="<f0> SourceModule| <f1> requests_toolbelt.exceptions",shape="record"];
	"requests_toolbelt.utils.user_agent" [label="<f0> SourceModule| <f1> requests_toolbelt.utils.user_agent",shape="record"];
	"requests_toolbelt.utils" [label="<f0> Package| <f1> requests_toolbelt.utils",shape="record"];
	"requests_toolbelt.streaming_iterator" [label="<f0> SourceModule| <f1> requests_toolbelt.streaming_iterator",shape="record"];
	"requests_toolbelt.auth.guess" [label="<f0> SourceModule| <f1> requests_toolbelt.auth.guess",shape="record"];
	"requests_toolbelt.auth.http_proxy_digest" [label="<f0> SourceModule| <f1> requests_toolbelt.auth.http_proxy_digest",shape="record"];
	"requests_toolbelt.auth._digest_auth_compat" [label="<f0> SourceModule| <f1> requests_toolbelt.auth._digest_auth_compat",shape="record"];
	"requests_toolbelt.auth" [label="<f0> Package| <f1> requests_toolbelt.auth",shape="record"];
	"requests_toolbelt.adapters" [label="<f0> Package| <f1> requests_toolbelt.adapters",shape="record"];
	"requests_toolbelt.adapters.source" [label="<f0> SourceModule| <f1> requests_toolbelt.adapters.source",shape="record"];
	"requests_toolbelt.adapters.ssl" [label="<f0> SourceModule| <f1> requests_toolbelt.adapters.ssl",shape="record"];
	"langsmith.env" [label="<f0> Package| <f1> langsmith.env",shape="record"];
	"langsmith.env._runtime_env" [label="<f0> SourceModule| <f1> langsmith.env._runtime_env",shape="record"];
	"langsmith.__version__" [label="<f0> MissingModule| <f1> langsmith.__version__",shape="record"];
	"langsmith.env._git" [label="<f0> SourceModule| <f1> langsmith.env._git",shape="record"];
	"langsmith.evaluation._arunner" [label="<f0> SourceModule| <f1> langsmith.evaluation._arunner",shape="record"];
	"langsmith.schemas" [label="<f0> SourceModule| <f1> langsmith.schemas",shape="record"];
	"langchain_core.tracers.base" [label="<f0> SourceModule| <f1> langchain_core.tracers.base",shape="record"];
	"langchain_core.tracers.core" [label="<f0> SourceModule| <f1> langchain_core.tracers.core",shape="record"];
	"langchain_core.tracers.schemas" [label="<f0> SourceModule| <f1> langchain_core.tracers.schemas",shape="record"];
	"langchain_core.tracers.run_collector" [label="<f0> SourceModule| <f1> langchain_core.tracers.run_collector",shape="record"];
	"langchain_core.tracers.langchain" [label="<f0> SourceModule| <f1> langchain_core.tracers.langchain",shape="record"];
	"langchain_core.env" [label="<f0> SourceModule| <f1> langchain_core.env",shape="record"];
	"langsmith.utils" [label="<f0> SourceModule| <f1> langsmith.utils",shape="record"];
	"vcr" [label="<f0> MissingModule| <f1> vcr",shape="record"];
	"httpx" [label="<f0> Package| <f1> httpx",shape="record"];
	"httpx._main" [label="<f0> SourceModule| <f1> httpx._main",shape="record"];
	"httpcore" [label="<f0> Package| <f1> httpcore",shape="record"];
	"httpcore._backends.trio" [label="<f0> SourceModule| <f1> httpcore._backends.trio",shape="record"];
	"httpcore._backends" [label="<f0> Package| <f1> httpcore._backends",shape="record"];
	"httpcore._backends.anyio" [label="<f0> SourceModule| <f1> httpcore._backends.anyio",shape="record"];
	"httpcore._utils" [label="<f0> SourceModule| <f1> httpcore._utils",shape="record"];
	"anyio" [label="<f0> Package| <f1> anyio",shape="record"];
	"anyio._backends._trio" [label="<f0> SourceModule| <f1> anyio._backends._trio",shape="record"];
	"'trio.testing'" [label="<f0> MissingModule| <f1> 'trio.testing'",shape="record"];
	"exceptiongroup" [label="<f0> Package| <f1> exceptiongroup",shape="record"];
	"exceptiongroup._suppress" [label="<f0> SourceModule| <f1> exceptiongroup._suppress",shape="record"];
	"exceptiongroup._formatting" [label="<f0> SourceModule| <f1> exceptiongroup._formatting",shape="record"];
	"apport_python_hook" [label="<f0> MissingModule| <f1> apport_python_hook",shape="record"];
	"exceptiongroup._exceptions" [label="<f0> SourceModule| <f1> exceptiongroup._exceptions",shape="record"];
	"exceptiongroup._version" [label="<f0> SourceModule| <f1> exceptiongroup._version",shape="record"];
	"exceptiongroup._catch" [label="<f0> SourceModule| <f1> exceptiongroup._catch",shape="record"];
	"anyio.streams.memory" [label="<f0> SourceModule| <f1> anyio.streams.memory",shape="record"];
	"anyio.streams" [label="<f0> Package| <f1> anyio.streams",shape="record"];
	"anyio.lowlevel" [label="<f0> SourceModule| <f1> anyio.lowlevel",shape="record"];
	"anyio.abc._eventloop" [label="<f0> SourceModule| <f1> anyio.abc._eventloop",shape="record"];
	"anyio.abc._testing" [label="<f0> SourceModule| <f1> anyio.abc._testing",shape="record"];
	"anyio.abc._tasks" [label="<f0> SourceModule| <f1> anyio.abc._tasks",shape="record"];
	"anyio.abc._subprocesses" [label="<f0> SourceModule| <f1> anyio.abc._subprocesses",shape="record"];
	"anyio.abc._streams" [label="<f0> SourceModule| <f1> anyio.abc._streams",shape="record"];
	"anyio.abc._resources" [label="<f0> SourceModule| <f1> anyio.abc._resources",shape="record"];
	"anyio.abc._sockets" [label="<f0> SourceModule| <f1> anyio.abc._sockets",shape="record"];
	"anyio.from_thread" [label="<f0> SourceModule| <f1> anyio.from_thread",shape="record"];
	"anyio._core" [label="<f0> Package| <f1> anyio._core",shape="record"];
	"anyio.abc" [label="<f0> Package| <f1> anyio.abc",shape="record"];
	"'trio.to_thread'" [label="<f0> MissingModule| <f1> 'trio.to_thread'",shape="record"];
	"'trio.socket'" [label="<f0> MissingModule| <f1> 'trio.socket'",shape="record"];
	"outcome" [label="<f0> MissingModule| <f1> outcome",shape="record"];
	"'trio.lowlevel'" [label="<f0> MissingModule| <f1> 'trio.lowlevel'",shape="record"];
	"'trio.from_thread'" [label="<f0> MissingModule| <f1> 'trio.from_thread'",shape="record"];
	"anyio._backends._asyncio" [label="<f0> SourceModule| <f1> anyio._backends._asyncio",shape="record"];
	"anyio._core._asyncio_selector_thread" [label="<f0> SourceModule| <f1> anyio._core._asyncio_selector_thread",shape="record"];
	"_pytest" [label="<f0> MissingModule| <f1> _pytest",shape="record"];
	"anyio._backends" [label="<f0> Package| <f1> anyio._backends",shape="record"];
	"anyio._core._typedattr" [label="<f0> SourceModule| <f1> anyio._core._typedattr",shape="record"];
	"anyio._core._testing" [label="<f0> SourceModule| <f1> anyio._core._testing",shape="record"];
	"anyio._core._tempfile" [label="<f0> SourceModule| <f1> anyio._core._tempfile",shape="record"];
	"anyio._core._tasks" [label="<f0> SourceModule| <f1> anyio._core._tasks",shape="record"];
	"anyio._core._synchronization" [label="<f0> SourceModule| <f1> anyio._core._synchronization",shape="record"];
	"anyio._core._subprocesses" [label="<f0> SourceModule| <f1> anyio._core._subprocesses",shape="record"];
	"anyio._core._streams" [label="<f0> SourceModule| <f1> anyio._core._streams",shape="record"];
	"anyio._core._sockets" [label="<f0> SourceModule| <f1> anyio._core._sockets",shape="record"];
	"anyio.streams.tls" [label="<f0> SourceModule| <f1> anyio.streams.tls",shape="record"];
	"anyio.streams.stapled" [label="<f0> SourceModule| <f1> anyio.streams.stapled",shape="record"];
	"anyio._core._signals" [label="<f0> SourceModule| <f1> anyio._core._signals",shape="record"];
	"anyio._core._resources" [label="<f0> SourceModule| <f1> anyio._core._resources",shape="record"];
	"anyio._core._fileio" [label="<f0> SourceModule| <f1> anyio._core._fileio",shape="record"];
	"anyio._core._exceptions" [label="<f0> SourceModule| <f1> anyio._core._exceptions",shape="record"];
	"anyio._core._eventloop" [label="<f0> SourceModule| <f1> anyio._core._eventloop",shape="record"];
	"anyio.to_thread" [label="<f0> SourceModule| <f1> anyio.to_thread",shape="record"];
	"httpcore._sync" [label="<f0> Package| <f1> httpcore._sync",shape="record"];
	"httpcore._sync.socks_proxy" [label="<f0> SourceModule| <f1> httpcore._sync.socks_proxy",shape="record"];
	"httpcore._trace" [label="<f0> SourceModule| <f1> httpcore._trace",shape="record"];
	"httpcore._synchronization" [label="<f0> SourceModule| <f1> httpcore._synchronization",shape="record"];
	"socksio" [label="<f0> MissingModule| <f1> socksio",shape="record"];
	"httpcore._sync.http2" [label="<f0> SourceModule| <f1> httpcore._sync.http2",shape="record"];
	"'h2.settings'" [label="<f0> MissingModule| <f1> 'h2.settings'",shape="record"];
	"'h2.exceptions'" [label="<f0> MissingModule| <f1> 'h2.exceptions'",shape="record"];
	"'h2.config'" [label="<f0> MissingModule| <f1> 'h2.config'",shape="record"];
	"httpcore._sync.interfaces" [label="<f0> SourceModule| <f1> httpcore._sync.interfaces",shape="record"];
	"httpcore._sync.http_proxy" [label="<f0> SourceModule| <f1> httpcore._sync.http_proxy",shape="record"];
	"httpcore._sync.http11" [label="<f0> SourceModule| <f1> httpcore._sync.http11",shape="record"];
	"h11" [label="<f0> Package| <f1> h11",shape="record"];
	"h11._version" [label="<f0> SourceModule| <f1> h11._version",shape="record"];
	"h11._util" [label="<f0> SourceModule| <f1> h11._util",shape="record"];
	"h11._state" [label="<f0> SourceModule| <f1> h11._state",shape="record"];
	"h11._events" [label="<f0> SourceModule| <f1> h11._events",shape="record"];
	"h11._headers" [label="<f0> SourceModule| <f1> h11._headers",shape="record"];
	"h11._abnf" [label="<f0> SourceModule| <f1> h11._abnf",shape="record"];
	"h11._connection" [label="<f0> SourceModule| <f1> h11._connection",shape="record"];
	"h11._writers" [label="<f0> SourceModule| <f1> h11._writers",shape="record"];
	"h11._receivebuffer" [label="<f0> SourceModule| <f1> h11._receivebuffer",shape="record"];
	"h11._readers" [label="<f0> SourceModule| <f1> h11._readers",shape="record"];
	"httpcore._sync.connection_pool" [label="<f0> SourceModule| <f1> httpcore._sync.connection_pool",shape="record"];
	"httpcore._sync.connection" [label="<f0> SourceModule| <f1> httpcore._sync.connection",shape="record"];
	"httpcore._ssl" [label="<f0> SourceModule| <f1> httpcore._ssl",shape="record"];
	"httpcore._models" [label="<f0> SourceModule| <f1> httpcore._models",shape="record"];
	"httpcore._exceptions" [label="<f0> SourceModule| <f1> httpcore._exceptions",shape="record"];
	"httpcore._backends.sync" [label="<f0> SourceModule| <f1> httpcore._backends.sync",shape="record"];
	"httpcore._backends.mock" [label="<f0> SourceModule| <f1> httpcore._backends.mock",shape="record"];
	"httpcore._backends.base" [label="<f0> SourceModule| <f1> httpcore._backends.base",shape="record"];
	"httpcore._async" [label="<f0> Package| <f1> httpcore._async",shape="record"];
	"httpcore._async.socks_proxy" [label="<f0> SourceModule| <f1> httpcore._async.socks_proxy",shape="record"];
	"httpcore._backends.auto" [label="<f0> SourceModule| <f1> httpcore._backends.auto",shape="record"];
	"httpcore._async.http2" [label="<f0> SourceModule| <f1> httpcore._async.http2",shape="record"];
	"httpcore._async.interfaces" [label="<f0> SourceModule| <f1> httpcore._async.interfaces",shape="record"];
	"httpcore._async.http_proxy" [label="<f0> SourceModule| <f1> httpcore._async.http_proxy",shape="record"];
	"httpcore._async.http11" [label="<f0> SourceModule| <f1> httpcore._async.http11",shape="record"];
	"httpcore._async.connection_pool" [label="<f0> SourceModule| <f1> httpcore._async.connection_pool",shape="record"];
	"httpcore._async.connection" [label="<f0> SourceModule| <f1> httpcore._async.connection",shape="record"];
	"httpcore._api" [label="<f0> SourceModule| <f1> httpcore._api",shape="record"];
	"'rich.table'" [label="<f0> MissingModule| <f1> 'rich.table'",shape="record"];
	"'rich.syntax'" [label="<f0> MissingModule| <f1> 'rich.syntax'",shape="record"];
	"'rich.progress'" [label="<f0> MissingModule| <f1> 'rich.progress'",shape="record"];
	"'rich.markup'" [label="<f0> MissingModule| <f1> 'rich.markup'",shape="record"];
	"'rich.console'" [label="<f0> MissingModule| <f1> 'rich.console'",shape="record"];
	"'pygments.util'" [label="<f0> MissingModule| <f1> 'pygments.util'",shape="record"];
	"pygments" [label="<f0> MissingModule| <f1> pygments",shape="record"];
	"click" [label="<f0> MissingModule| <f1> click",shape="record"];
	"httpx._urls" [label="<f0> SourceModule| <f1> httpx._urls",shape="record"];
	"httpx._utils" [label="<f0> SourceModule| <f1> httpx._utils",shape="record"];
	"httpx._urlparse" [label="<f0> SourceModule| <f1> httpx._urlparse",shape="record"];
	"httpx._types" [label="<f0> SourceModule| <f1> httpx._types",shape="record"];
	"httpx._transports" [label="<f0> Package| <f1> httpx._transports",shape="record"];
	"httpx._transports.wsgi" [label="<f0> SourceModule| <f1> httpx._transports.wsgi",shape="record"];
	"'_typeshed.wsgi'" [label="<f0> MissingModule| <f1> '_typeshed.wsgi'",shape="record"];
	"httpx._transports.mock" [label="<f0> SourceModule| <f1> httpx._transports.mock",shape="record"];
	"httpx._transports.default" [label="<f0> SourceModule| <f1> httpx._transports.default",shape="record"];
	"httpx._transports.base" [label="<f0> SourceModule| <f1> httpx._transports.base",shape="record"];
	"httpx._transports.asgi" [label="<f0> SourceModule| <f1> httpx._transports.asgi",shape="record"];
	"httpx._status_codes" [label="<f0> SourceModule| <f1> httpx._status_codes",shape="record"];
	"httpx._models" [label="<f0> SourceModule| <f1> httpx._models",shape="record"];
	"httpx._multipart" [label="<f0> SourceModule| <f1> httpx._multipart",shape="record"];
	"httpx._decoders" [label="<f0> SourceModule| <f1> httpx._decoders",shape="record"];
	"httpx._exceptions" [label="<f0> SourceModule| <f1> httpx._exceptions",shape="record"];
	"httpx._content" [label="<f0> SourceModule| <f1> httpx._content",shape="record"];
	"httpx._config" [label="<f0> SourceModule| <f1> httpx._config",shape="record"];
	"httpx._client" [label="<f0> SourceModule| <f1> httpx._client",shape="record"];
	"httpx._auth" [label="<f0> SourceModule| <f1> httpx._auth",shape="record"];
	"httpx._api" [label="<f0> SourceModule| <f1> httpx._api",shape="record"];
	"httpx.__version__" [label="<f0> SourceModule| <f1> httpx.__version__",shape="record"];
	"langsmith.run_helpers" [label="<f0> SourceModule| <f1> langsmith.run_helpers",shape="record"];
	"langsmith" [label="<f0> Package| <f1> langsmith",shape="record"];
	"langsmith.async_client" [label="<f0> SourceModule| <f1> langsmith.async_client",shape="record"];
	"langsmith._testing" [label="<f0> SourceModule| <f1> langsmith._testing",shape="record"];
	"langsmith._expect" [label="<f0> SourceModule| <f1> langsmith._expect",shape="record"];
	"langsmith._internal._embedding_distance" [label="<f0> SourceModule| <f1> langsmith._internal._embedding_distance",shape="record"];
	"langsmith._internal._edit_distance" [label="<f0> SourceModule| <f1> langsmith._internal._edit_distance",shape="record"];
	"langchain_core.callbacks.streaming_stdout" [label="<f0> SourceModule| <f1> langchain_core.callbacks.streaming_stdout",shape="record"];
	"langchain_core.callbacks.stdout" [label="<f0> SourceModule| <f1> langchain_core.callbacks.stdout",shape="record"];
	"langchain_core.callbacks.file" [label="<f0> SourceModule| <f1> langchain_core.callbacks.file",shape="record"];
	"langchain_core.callbacks.base" [label="<f0> SourceModule| <f1> langchain_core.callbacks.base",shape="record"];
	"langchain_core.language_models.fake_chat_models" [label="<f0> SourceModule| <f1> langchain_core.language_models.fake_chat_models",shape="record"];
	"langchain_core.language_models.fake" [label="<f0> SourceModule| <f1> langchain_core.language_models.fake",shape="record"];
	"langchain_core.language_models.chat_models" [label="<f0> SourceModule| <f1> langchain_core.language_models.chat_models",shape="record"];
	"langchain_core.rate_limiters" [label="<f0> SourceModule| <f1> langchain_core.rate_limiters",shape="record"];
	"langchain_core.language_models._utils" [label="<f0> SourceModule| <f1> langchain_core.language_models._utils",shape="record"];
	"langchain_core.language_models.base" [label="<f0> SourceModule| <f1> langchain_core.language_models.base",shape="record"];
	"langchain_text_splitters" [label="<f0> Package| <f1> langchain_text_splitters",shape="record"];
	"langchain_text_splitters.spacy" [label="<f0> SourceModule| <f1> langchain_text_splitters.spacy",shape="record"];
	"'spacy.lang'" [label="<f0> MissingModule| <f1> 'spacy.lang'",shape="record"];
	"spacy" [label="<f0> MissingModule| <f1> spacy",shape="record"];
	"langchain_text_splitters.sentence_transformers" [label="<f0> SourceModule| <f1> langchain_text_splitters.sentence_transformers",shape="record"];
	"sentence_transformers" [label="<f0> MissingModule| <f1> sentence_transformers",shape="record"];
	"langchain_text_splitters.python" [label="<f0> SourceModule| <f1> langchain_text_splitters.python",shape="record"];
	"langchain_text_splitters.nltk" [label="<f0> SourceModule| <f1> langchain_text_splitters.nltk",shape="record"];
	"'nltk.tokenize'" [label="<f0> MissingModule| <f1> 'nltk.tokenize'",shape="record"];
	"langchain_text_splitters.markdown" [label="<f0> SourceModule| <f1> langchain_text_splitters.markdown",shape="record"];
	"langchain_text_splitters.latex" [label="<f0> SourceModule| <f1> langchain_text_splitters.latex",shape="record"];
	"langchain_text_splitters.konlpy" [label="<f0> SourceModule| <f1> langchain_text_splitters.konlpy",shape="record"];
	"konlpy" [label="<f0> MissingModule| <f1> konlpy",shape="record"];
	"langchain_text_splitters.jsx" [label="<f0> SourceModule| <f1> langchain_text_splitters.jsx",shape="record"];
	"langchain_text_splitters.json" [label="<f0> SourceModule| <f1> langchain_text_splitters.json",shape="record"];
	"langchain_text_splitters.html" [label="<f0> SourceModule| <f1> langchain_text_splitters.html",shape="record"];
	"'nltk.corpus'" [label="<f0> MissingModule| <f1> 'nltk.corpus'",shape="record"];
	"nltk" [label="<f0> MissingModule| <f1> nltk",shape="record"];
	"'bs4.element'" [label="<f0> MissingModule| <f1> 'bs4.element'",shape="record"];
	"langchain_text_splitters.character" [label="<f0> SourceModule| <f1> langchain_text_splitters.character",shape="record"];
	"langchain_text_splitters.base" [label="<f0> SourceModule| <f1> langchain_text_splitters.base",shape="record"];
	"langchain_core.exceptions" [label="<f0> SourceModule| <f1> langchain_core.exceptions",shape="record"];
	"langchain_core.messages.tool" [label="<f0> SourceModule| <f1> langchain_core.messages.tool",shape="record"];
	"langchain_core.utils._merge" [label="<f0> SourceModule| <f1> langchain_core.utils._merge",shape="record"];
	"langchain_core.messages.system" [label="<f0> SourceModule| <f1> langchain_core.messages.system",shape="record"];
	"langchain_core.messages.modifier" [label="<f0> SourceModule| <f1> langchain_core.messages.modifier",shape="record"];
	"langchain_core.messages.human" [label="<f0> SourceModule| <f1> langchain_core.messages.human",shape="record"];
	"langchain_core.messages.function" [label="<f0> SourceModule| <f1> langchain_core.messages.function",shape="record"];
	"langchain_core.messages.content_blocks" [label="<f0> SourceModule| <f1> langchain_core.messages.content_blocks",shape="record"];
	"langchain_core.messages.chat" [label="<f0> SourceModule| <f1> langchain_core.messages.chat",shape="record"];
	"langchain_core.messages.base" [label="<f0> SourceModule| <f1> langchain_core.messages.base",shape="record"];
	"langchain_core.messages.ai" [label="<f0> SourceModule| <f1> langchain_core.messages.ai",shape="record"];
	"langchain_core.utils.usage" [label="<f0> SourceModule| <f1> langchain_core.utils.usage",shape="record"];
	"langchain_core.load.load" [label="<f0> SourceModule| <f1> langchain_core.load.load",shape="record"];
	"langchain_core.load.mapping" [label="<f0> SourceModule| <f1> langchain_core.load.mapping",shape="record"];
	"langchain_core.callbacks.manager" [label="<f0> SourceModule| <f1> langchain_core.callbacks.manager",shape="record"];
	"langchain_core.runnables.history" [label="<f0> SourceModule| <f1> langchain_core.runnables.history",shape="record"];
	"langchain_core.chat_history" [label="<f0> SourceModule| <f1> langchain_core.chat_history",shape="record"];
	"langchain_core.runnables.fallbacks" [label="<f0> SourceModule| <f1> langchain_core.runnables.fallbacks",shape="record"];
	"langchain_core.runnables.config" [label="<f0> SourceModule| <f1> langchain_core.runnables.config",shape="record"];
	"langchain_core.runnables.branch" [label="<f0> SourceModule| <f1> langchain_core.runnables.branch",shape="record"];
	"langchain_core.beta.runnables.context" [label="<f0> SourceModule| <f1> langchain_core.beta.runnables.context",shape="record"];
	"langchain_core.beta.runnables" [label="<f0> Package| <f1> langchain_core.beta.runnables",shape="record"];
	"langchain_core.beta" [label="<f0> Package| <f1> langchain_core.beta",shape="record"];
	"langchain_core.runnables.base" [label="<f0> SourceModule| <f1> langchain_core.runnables.base",shape="record"];
	"langchain_core.tracers.event_stream" [label="<f0> SourceModule| <f1> langchain_core.tracers.event_stream",shape="record"];
	"langchain_core.tracers.root_listeners" [label="<f0> SourceModule| <f1> langchain_core.tracers.root_listeners",shape="record"];
	"langchain_core.runnables.retry" [label="<f0> SourceModule| <f1> langchain_core.runnables.retry",shape="record"];
	"langchain_core.outputs" [label="<f0> Package| <f1> langchain_core.outputs",shape="record"];
	"langchain_core.outputs.run_info" [label="<f0> SourceModule| <f1> langchain_core.outputs.run_info",shape="record"];
	"langchain_core.outputs.llm_result" [label="<f0> SourceModule| <f1> langchain_core.outputs.llm_result",shape="record"];
	"langchain_core.outputs.generation" [label="<f0> SourceModule| <f1> langchain_core.outputs.generation",shape="record"];
	"langchain_core.outputs.chat_result" [label="<f0> SourceModule| <f1> langchain_core.outputs.chat_result",shape="record"];
	"langchain_core.outputs.chat_generation" [label="<f0> SourceModule| <f1> langchain_core.outputs.chat_generation",shape="record"];
	"langchain_community.vectorstores" [label="<f0> Package| <f1> langchain_community.vectorstores",shape="record"];
	"langchain_community.vectorstores.zilliz" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.zilliz",shape="record"];
	"pymilvus" [label="<f0> MissingModule| <f1> pymilvus",shape="record"];
	"langchain_community.vectorstores.zep_cloud" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.zep_cloud",shape="record"];
	"'zep_cloud.client'" [label="<f0> MissingModule| <f1> 'zep_cloud.client'",shape="record"];
	"zep_cloud" [label="<f0> MissingModule| <f1> zep_cloud",shape="record"];
	"langchain_community.vectorstores.zep" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.zep",shape="record"];
	"zep_python" [label="<f0> MissingModule| <f1> zep_python",shape="record"];
	"'zep_python.document'" [label="<f0> MissingModule| <f1> 'zep_python.document'",shape="record"];
	"langchain_community.vectorstores.yellowbrick" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.yellowbrick",shape="record"];
	"'psycopg2.extras'" [label="<f0> MissingModule| <f1> 'psycopg2.extras'",shape="record"];
	"'psycopg2.extensions'" [label="<f0> MissingModule| <f1> 'psycopg2.extensions'",shape="record"];
	"langchain_community.docstore.document" [label="<f0> SourceModule| <f1> langchain_community.docstore.document",shape="record"];
	"langchain_community.vectorstores.weaviate" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.weaviate",shape="record"];
	"'weaviate.util'" [label="<f0> MissingModule| <f1> 'weaviate.util'",shape="record"];
	"weaviate" [label="<f0> MissingModule| <f1> weaviate",shape="record"];
	"langchain_community.vectorstores.utils" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.utils",shape="record"];
	"langchain_community.vectorstores.vlite" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vlite",shape="record"];
	"'vlite.utils'" [label="<f0> MissingModule| <f1> 'vlite.utils'",shape="record"];
	"vlite" [label="<f0> MissingModule| <f1> vlite",shape="record"];
	"langchain_community.vectorstores.vespa" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vespa",shape="record"];
	"'vespa.application'" [label="<f0> MissingModule| <f1> 'vespa.application'",shape="record"];
	"langchain_community.vectorstores.vectara" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vectara",shape="record"];
	"langchain_community.vectorstores.vearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vearch",shape="record"];
	"vearch_cluster" [label="<f0> MissingModule| <f1> vearch_cluster",shape="record"];
	"vearch" [label="<f0> MissingModule| <f1> vearch",shape="record"];
	"langchain_community.vectorstores.vdms" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vdms",shape="record"];
	"vdms" [label="<f0> MissingModule| <f1> vdms",shape="record"];
	"langchain_community.vectorstores.vald" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vald",shape="record"];
	"'vald.v1'" [label="<f0> MissingModule| <f1> 'vald.v1'",shape="record"];
	"vald" [label="<f0> MissingModule| <f1> vald",shape="record"];
	"grpc" [label="<f0> Package| <f1> grpc",shape="record"];
	"grpc.aio" [label="<f0> Package| <f1> grpc.aio",shape="record"];
	"grpc.aio._typing" [label="<f0> SourceModule| <f1> grpc.aio._typing",shape="record"];
	"grpc.aio._server" [label="<f0> SourceModule| <f1> grpc.aio._server",shape="record"];
	"grpc.aio._metadata" [label="<f0> SourceModule| <f1> grpc.aio._metadata",shape="record"];
	"grpc.aio._interceptor" [label="<f0> SourceModule| <f1> grpc.aio._interceptor",shape="record"];
	"grpc.aio._utils" [label="<f0> SourceModule| <f1> grpc.aio._utils",shape="record"];
	"grpc.aio._channel" [label="<f0> SourceModule| <f1> grpc.aio._channel",shape="record"];
	"grpc.aio._call" [label="<f0> SourceModule| <f1> grpc.aio._call",shape="record"];
	"grpc.aio._base_server" [label="<f0> SourceModule| <f1> grpc.aio._base_server",shape="record"];
	"grpc.aio._base_channel" [label="<f0> SourceModule| <f1> grpc.aio._base_channel",shape="record"];
	"grpc.aio._base_call" [label="<f0> SourceModule| <f1> grpc.aio._base_call",shape="record"];
	"grpc_reflection" [label="<f0> MissingModule| <f1> grpc_reflection",shape="record"];
	"grpc_health" [label="<f0> MissingModule| <f1> grpc_health",shape="record"];
	"grpc_tools" [label="<f0> MissingModule| <f1> grpc_tools",shape="record"];
	"grpc._server" [label="<f0> SourceModule| <f1> grpc._server",shape="record"];
	"grpc._typing" [label="<f0> SourceModule| <f1> grpc._typing",shape="record"];
	"grpc.experimental" [label="<f0> Package| <f1> grpc.experimental",shape="record"];
	"grpc.experimental.aio" [label="<f0> Package| <f1> grpc.experimental.aio",shape="record"];
	"grpc._simple_stubs" [label="<f0> SourceModule| <f1> grpc._simple_stubs",shape="record"];
	"grpc._channel" [label="<f0> SourceModule| <f1> grpc._channel",shape="record"];
	"grpc._auth" [label="<f0> SourceModule| <f1> grpc._auth",shape="record"];
	"grpc._plugin_wrapping" [label="<f0> SourceModule| <f1> grpc._plugin_wrapping",shape="record"];
	"grpc._utilities" [label="<f0> SourceModule| <f1> grpc._utilities",shape="record"];
	"grpc._grpcio_metadata" [label="<f0> SourceModule| <f1> grpc._grpcio_metadata",shape="record"];
	"grpc._runtime_protos" [label="<f0> SourceModule| <f1> grpc._runtime_protos",shape="record"];
	"'grpc_tools.protoc'" [label="<f0> MissingModule| <f1> 'grpc_tools.protoc'",shape="record"];
	"grpc._cython.cygrpc" [label="<f0> Extension| <f1> grpc._cython.cygrpc",shape="record"];
	"grpc._cython" [label="<f0> Package| <f1> grpc._cython",shape="record"];
	"grpc._observability" [label="<f0> SourceModule| <f1> grpc._observability",shape="record"];
	"grpc._interceptor" [label="<f0> SourceModule| <f1> grpc._interceptor",shape="record"];
	"grpc._compression" [label="<f0> SourceModule| <f1> grpc._compression",shape="record"];
	"grpc._common" [label="<f0> SourceModule| <f1> grpc._common",shape="record"];
	"langchain_community.vectorstores.usearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.usearch",shape="record"];
	"langchain_community.docstore.in_memory" [label="<f0> SourceModule| <f1> langchain_community.docstore.in_memory",shape="record"];
	"langchain_community.docstore.base" [label="<f0> SourceModule| <f1> langchain_community.docstore.base",shape="record"];
	"langchain_community.vectorstores.upstash" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.upstash",shape="record"];
	"'upstash_vector.types'" [label="<f0> MissingModule| <f1> 'upstash_vector.types'",shape="record"];
	"upstash_vector" [label="<f0> MissingModule| <f1> upstash_vector",shape="record"];
	"langchain_community.vectorstores.typesense" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.typesense",shape="record"];
	"'typesense.exceptions'" [label="<f0> MissingModule| <f1> 'typesense.exceptions'",shape="record"];
	"'typesense.collection'" [label="<f0> MissingModule| <f1> 'typesense.collection'",shape="record"];
	"typesense" [label="<f0> MissingModule| <f1> typesense",shape="record"];
	"langchain_community.vectorstores.timescalevector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.timescalevector",shape="record"];
	"timescale_vector" [label="<f0> MissingModule| <f1> timescale_vector",shape="record"];
	"langchain_community.vectorstores.tiledb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tiledb",shape="record"];
	"langchain_community.vectorstores.tigris" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tigris",shape="record"];
	"'tigrisdb.types'" [label="<f0> MissingModule| <f1> 'tigrisdb.types'",shape="record"];
	"tigrisdb" [label="<f0> MissingModule| <f1> tigrisdb",shape="record"];
	"langchain_community.vectorstores.tidb_vector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tidb_vector",shape="record"];
	"'tidb_vector.integrations'" [label="<f0> MissingModule| <f1> 'tidb_vector.integrations'",shape="record"];
	"tidb_vector" [label="<f0> MissingModule| <f1> tidb_vector",shape="record"];
	"langchain_community.vectorstores.thirdai_neuraldb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.thirdai_neuraldb",shape="record"];
	"thirdai" [label="<f0> MissingModule| <f1> thirdai",shape="record"];
	"langchain_community.vectorstores.tencentvectordb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tencentvectordb",shape="record"];
	"langchain_core.structured_query" [label="<f0> SourceModule| <f1> langchain_core.structured_query",shape="record"];
	"langchain.retrievers.self_query.tencentvectordb" [label="<f0> SourceModule| <f1> langchain.retrievers.self_query.tencentvectordb",shape="record"];
	"langchain.retrievers.self_query" [label="<f0> Package| <f1> langchain.retrievers.self_query",shape="record"];
	"langchain_community.query_constructors.tencentvectordb" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.tencentvectordb",shape="record"];
	"langchain_community.query_constructors" [label="<f0> Package| <f1> langchain_community.query_constructors",shape="record"];
	"langchain.chains.query_constructor.parser" [label="<f0> SourceModule| <f1> langchain.chains.query_constructor.parser",shape="record"];
	"langchain.chains.query_constructor" [label="<f0> Package| <f1> langchain.chains.query_constructor",shape="record"];
	"lark" [label="<f0> MissingModule| <f1> lark",shape="record"];
	"langchain.chains.query_constructor.base" [label="<f0> SourceModule| <f1> langchain.chains.query_constructor.base",shape="record"];
	"langchain.chains.query_constructor.schema" [label="<f0> SourceModule| <f1> langchain.chains.query_constructor.schema",shape="record"];
	"langchain.chains.query_constructor.prompt" [label="<f0> SourceModule| <f1> langchain.chains.query_constructor.prompt",shape="record"];
	"langchain_core.prompts.few_shot" [label="<f0> SourceModule| <f1> langchain_core.prompts.few_shot",shape="record"];
	"langchain_core.example_selectors" [label="<f0> Package| <f1> langchain_core.example_selectors",shape="record"];
	"langchain_core.example_selectors.semantic_similarity" [label="<f0> SourceModule| <f1> langchain_core.example_selectors.semantic_similarity",shape="record"];
	"langchain_core.example_selectors.length_based" [label="<f0> SourceModule| <f1> langchain_core.example_selectors.length_based",shape="record"];
	"langchain_core.example_selectors.base" [label="<f0> SourceModule| <f1> langchain_core.example_selectors.base",shape="record"];
	"langchain_community.vectorstores.tair" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tair",shape="record"];
	"tair" [label="<f0> MissingModule| <f1> tair",shape="record"];
	"langchain_community.vectorstores.tablestore" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tablestore",shape="record"];
	"tablestore" [label="<f0> MissingModule| <f1> tablestore",shape="record"];
	"langchain_community.vectorstores.surrealdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.surrealdb",shape="record"];
	"'surrealdb.ws'" [label="<f0> MissingModule| <f1> 'surrealdb.ws'",shape="record"];
	"surrealdb" [label="<f0> MissingModule| <f1> surrealdb",shape="record"];
	"langchain_community.vectorstores.supabase" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.supabase",shape="record"];
	"supabase" [label="<f0> MissingModule| <f1> supabase",shape="record"];
	"langchain_community.vectorstores.starrocks" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.starrocks",shape="record"];
	"pymysql" [label="<f0> MissingModule| <f1> pymysql",shape="record"];
	"pydantic_settings" [label="<f0> Package| <f1> pydantic_settings",shape="record"];
	"pydantic_settings.version" [label="<f0> SourceModule| <f1> pydantic_settings.version",shape="record"];
	"pydantic_settings.sources" [label="<f0> Package| <f1> pydantic_settings.sources",shape="record"];
	"pydantic_settings.sources.types" [label="<f0> SourceModule| <f1> pydantic_settings.sources.types",shape="record"];
	"pydantic_settings.sources.providers.yaml" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.yaml",shape="record"];
	"pydantic_settings.sources.providers" [label="<f0> Package| <f1> pydantic_settings.sources.providers",shape="record"];
	"pydantic_settings.sources.providers.toml" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.toml",shape="record"];
	"pydantic_settings.sources.providers.secrets" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.secrets",shape="record"];
	"pydantic_settings.utils" [label="<f0> SourceModule| <f1> pydantic_settings.utils",shape="record"];
	"pydantic_settings.sources.providers.pyproject" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.pyproject",shape="record"];
	"pydantic_settings.sources.providers.json" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.json",shape="record"];
	"pydantic_settings.sources.providers.gcp" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.gcp",shape="record"];
	"'google.cloud.secretmanager'" [label="<f0> MissingModule| <f1> 'google.cloud.secretmanager'",shape="record"];
	"pydantic_settings.sources.providers.env" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.env",shape="record"];
	"pydantic_settings.sources.utils" [label="<f0> SourceModule| <f1> pydantic_settings.sources.utils",shape="record"];
	"pydantic_settings.sources.providers.dotenv" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.dotenv",shape="record"];
	"pydantic_settings.sources.providers.cli" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.cli",shape="record"];
	"pydantic_settings.sources.providers.azure" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.azure",shape="record"];
	"'azure.keyvault'" [label="<f0> MissingModule| <f1> 'azure.keyvault'",shape="record"];
	"'azure.core'" [label="<f0> MissingModule| <f1> 'azure.core'",shape="record"];
	"pydantic_settings.sources.providers.aws" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.aws",shape="record"];
	"mypy_boto3_secretsmanager" [label="<f0> MissingModule| <f1> mypy_boto3_secretsmanager",shape="record"];
	"boto3" [label="<f0> MissingModule| <f1> boto3",shape="record"];
	"pydantic_settings.sources.base" [label="<f0> SourceModule| <f1> pydantic_settings.sources.base",shape="record"];
	"pydantic_settings.main" [label="<f0> SourceModule| <f1> pydantic_settings.main",shape="record"];
	"pydantic_settings.exceptions" [label="<f0> SourceModule| <f1> pydantic_settings.exceptions",shape="record"];
	"langchain_community.vectorstores.sqlitevss" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.sqlitevss",shape="record"];
	"sqlite_vss" [label="<f0> MissingModule| <f1> sqlite_vss",shape="record"];
	"langchain_community.vectorstores.sqlitevec" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.sqlitevec",shape="record"];
	"sqlite_vec" [label="<f0> MissingModule| <f1> sqlite_vec",shape="record"];
	"langchain_community.vectorstores.sklearn" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.sklearn",shape="record"];
	"langchain_community.vectorstores.singlestoredb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.singlestoredb",shape="record"];
	"singlestoredb" [label="<f0> MissingModule| <f1> singlestoredb",shape="record"];
	"langchain_community.vectorstores.semadb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.semadb",shape="record"];
	"langchain_community.vectorstores.scann" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.scann",shape="record"];
	"langchain_community.vectorstores.rocksetdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.rocksetdb",shape="record"];
	"'rockset.models'" [label="<f0> MissingModule| <f1> 'rockset.models'",shape="record"];
	"rockset" [label="<f0> MissingModule| <f1> rockset",shape="record"];
	"langchain_community.vectorstores.relyt" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.relyt",shape="record"];
	"'pgvecto_rs.sqlalchemy'" [label="<f0> MissingModule| <f1> 'pgvecto_rs.sqlalchemy'",shape="record"];
	"pgvecto_rs" [label="<f0> MissingModule| <f1> pgvecto_rs",shape="record"];
	"sqlalchemy.ext.declarative" [label="<f0> Package| <f1> sqlalchemy.ext.declarative",shape="record"];
	"sqlalchemy.ext.declarative.extensions" [label="<f0> SourceModule| <f1> sqlalchemy.ext.declarative.extensions",shape="record"];
	"langchain_community.vectorstores.redis" [label="<f0> Package| <f1> langchain_community.vectorstores.redis",shape="record"];
	"langchain_community.vectorstores.redis.filters" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.redis.filters",shape="record"];
	"langchain_community.utilities.redis" [label="<f0> SourceModule| <f1> langchain_community.utilities.redis",shape="record"];
	"'redis.cluster'" [label="<f0> MissingModule| <f1> 'redis.cluster'",shape="record"];
	"redis" [label="<f0> MissingModule| <f1> redis",shape="record"];
	"'redis.client'" [label="<f0> MissingModule| <f1> 'redis.client'",shape="record"];
	"langchain_community.vectorstores.redis.base" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.redis.base",shape="record"];
	"langchain_community.vectorstores.redis.schema" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.redis.schema",shape="record"];
	"'redis.commands'" [label="<f0> MissingModule| <f1> 'redis.commands'",shape="record"];
	"langchain_community.vectorstores.redis.constants" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.redis.constants",shape="record"];
	"langchain_community.vectorstores.qdrant" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.qdrant",shape="record"];
	"'qdrant_client.local'" [label="<f0> MissingModule| <f1> 'qdrant_client.local'",shape="record"];
	"'qdrant_client.http'" [label="<f0> MissingModule| <f1> 'qdrant_client.http'",shape="record"];
	"'qdrant_client.conversions'" [label="<f0> MissingModule| <f1> 'qdrant_client.conversions'",shape="record"];
	"qdrant_client" [label="<f0> MissingModule| <f1> qdrant_client",shape="record"];
	"langchain_community.vectorstores.pinecone" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.pinecone",shape="record"];
	"pinecone" [label="<f0> MissingModule| <f1> pinecone",shape="record"];
	"langchain_community.vectorstores.pgvector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.pgvector",shape="record"];
	"pgvector" [label="<f0> MissingModule| <f1> pgvector",shape="record"];
	"langchain_community.vectorstores.pgembedding" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.pgembedding",shape="record"];
	"langchain_community.vectorstores.pathway" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.pathway",shape="record"];
	"langchain_community.vectorstores.oraclevs" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.oraclevs",shape="record"];
	"langchain_community.vectorstores.opensearch_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.opensearch_vector_search",shape="record"];
	"'opensearchpy.helpers'" [label="<f0> MissingModule| <f1> 'opensearchpy.helpers'",shape="record"];
	"'opensearchpy.exceptions'" [label="<f0> MissingModule| <f1> 'opensearchpy.exceptions'",shape="record"];
	"opensearchpy" [label="<f0> MissingModule| <f1> opensearchpy",shape="record"];
	"langchain_community.vectorstores.myscale" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.myscale",shape="record"];
	"clickhouse_connect" [label="<f0> MissingModule| <f1> clickhouse_connect",shape="record"];
	"langchain_community.vectorstores.mongodb_atlas" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.mongodb_atlas",shape="record"];
	"'pymongo.driver_info'" [label="<f0> MissingModule| <f1> 'pymongo.driver_info'",shape="record"];
	"pymongo" [label="<f0> MissingModule| <f1> pymongo",shape="record"];
	"'pymongo.collection'" [label="<f0> MissingModule| <f1> 'pymongo.collection'",shape="record"];
	"langchain_community.vectorstores.momento_vector_index" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.momento_vector_index",shape="record"];
	"'momento.responses'" [label="<f0> MissingModule| <f1> 'momento.responses'",shape="record"];
	"'momento.requests'" [label="<f0> MissingModule| <f1> 'momento.requests'",shape="record"];
	"momento" [label="<f0> MissingModule| <f1> momento",shape="record"];
	"langchain_community.vectorstores.milvus" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.milvus",shape="record"];
	"'pymilvus.client'" [label="<f0> MissingModule| <f1> 'pymilvus.client'",shape="record"];
	"'pymilvus.orm'" [label="<f0> MissingModule| <f1> 'pymilvus.orm'",shape="record"];
	"langchain_community.vectorstores.meilisearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.meilisearch",shape="record"];
	"meilisearch" [label="<f0> MissingModule| <f1> meilisearch",shape="record"];
	"langchain_community.vectorstores.matching_engine" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.matching_engine",shape="record"];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint",shape="record"];
	"google.protobuf.field_mask_pb2" [label="<f0> SourceModule| <f1> google.protobuf.field_mask_pb2",shape="record"];
	"google.protobuf.internal.builder" [label="<f0> SourceModule| <f1> google.protobuf.internal.builder",shape="record"];
	"google.protobuf.service_reflection" [label="<f0> SourceModule| <f1> google.protobuf.service_reflection",shape="record"];
	"google.protobuf.reflection" [label="<f0> SourceModule| <f1> google.protobuf.reflection",shape="record"];
	"google.protobuf.message_factory" [label="<f0> SourceModule| <f1> google.protobuf.message_factory",shape="record"];
	"google.protobuf.pyext.cpp_message" [label="<f0> SourceModule| <f1> google.protobuf.pyext.cpp_message",shape="record"];
	"google.protobuf.pyext._message" [label="<f0> MissingModule| <f1> google.protobuf.pyext._message",shape="record"];
	"google.protobuf.pyext" [label="<f0> Package| <f1> google.protobuf.pyext",shape="record"];
	"google.protobuf.internal.api_implementation" [label="<f0> SourceModule| <f1> google.protobuf.internal.api_implementation",shape="record"];
	"google.protobuf.enable_deterministic_proto_serialization" [label="<f0> MissingModule| <f1> google.protobuf.enable_deterministic_proto_serialization",shape="record"];
	"google._upb._message" [label="<f0> Extension| <f1> google._upb._message",shape="record"];
	"google._upb" [label="<f0> NamespacePackage| <f1> google._upb",shape="record"];
	"google.protobuf.internal._api_implementation" [label="<f0> MissingModule| <f1> google.protobuf.internal._api_implementation",shape="record"];
	"google.protobuf.message" [label="<f0> SourceModule| <f1> google.protobuf.message",shape="record"];
	"google.protobuf.internal.python_message" [label="<f0> SourceModule| <f1> google.protobuf.internal.python_message",shape="record"];
	"google.protobuf.internal.wire_format" [label="<f0> SourceModule| <f1> google.protobuf.internal.wire_format",shape="record"];
	"google.protobuf.internal.well_known_types" [label="<f0> SourceModule| <f1> google.protobuf.internal.well_known_types",shape="record"];
	"google.protobuf.internal.field_mask" [label="<f0> SourceModule| <f1> google.protobuf.internal.field_mask",shape="record"];
	"google.protobuf.internal.type_checkers" [label="<f0> SourceModule| <f1> google.protobuf.internal.type_checkers",shape="record"];
	"google.protobuf.internal.message_listener" [label="<f0> SourceModule| <f1> google.protobuf.internal.message_listener",shape="record"];
	"google.protobuf.internal.extension_dict" [label="<f0> SourceModule| <f1> google.protobuf.internal.extension_dict",shape="record"];
	"google.protobuf.internal.encoder" [label="<f0> SourceModule| <f1> google.protobuf.internal.encoder",shape="record"];
	"google.protobuf.internal.decoder" [label="<f0> SourceModule| <f1> google.protobuf.internal.decoder",shape="record"];
	"google.protobuf.internal.containers" [label="<f0> SourceModule| <f1> google.protobuf.internal.containers",shape="record"];
	"google.protobuf.text_format" [label="<f0> SourceModule| <f1> google.protobuf.text_format",shape="record"];
	"google.protobuf.unknown_fields" [label="<f0> SourceModule| <f1> google.protobuf.unknown_fields",shape="record"];
	"google.protobuf.text_encoding" [label="<f0> SourceModule| <f1> google.protobuf.text_encoding",shape="record"];
	"google.protobuf.internal.enum_type_wrapper" [label="<f0> SourceModule| <f1> google.protobuf.internal.enum_type_wrapper",shape="record"];
	"google.protobuf.internal" [label="<f0> Package| <f1> google.protobuf.internal",shape="record"];
	"google.protobuf.internal.python_edition_defaults" [label="<f0> SourceModule| <f1> google.protobuf.internal.python_edition_defaults",shape="record"];
	"google.protobuf.symbol_database" [label="<f0> SourceModule| <f1> google.protobuf.symbol_database",shape="record"];
	"google.protobuf.runtime_version" [label="<f0> SourceModule| <f1> google.protobuf.runtime_version",shape="record"];
	"google.protobuf.descriptor_pool" [label="<f0> SourceModule| <f1> google.protobuf.descriptor_pool",shape="record"];
	"google.protobuf.descriptor_pb2" [label="<f0> SourceModule| <f1> google.protobuf.descriptor_pb2",shape="record"];
	"google.protobuf.descriptor_database" [label="<f0> SourceModule| <f1> google.protobuf.descriptor_database",shape="record"];
	"google.protobuf.descriptor" [label="<f0> SourceModule| <f1> google.protobuf.descriptor",shape="record"];
	"google.protobuf" [label="<f0> Package| <f1> google.protobuf",shape="record"];
	"google.protobuf.wrappers_pb2" [label="<f0> SourceModule| <f1> google.protobuf.wrappers_pb2",shape="record"];
	"google.protobuf.struct_pb2" [label="<f0> SourceModule| <f1> google.protobuf.struct_pb2",shape="record"];
	"google.protobuf.empty_pb2" [label="<f0> SourceModule| <f1> google.protobuf.empty_pb2",shape="record"];
	"google.protobuf.timestamp_pb2" [label="<f0> SourceModule| <f1> google.protobuf.timestamp_pb2",shape="record"];
	"google.protobuf.any_pb2" [label="<f0> SourceModule| <f1> google.protobuf.any_pb2",shape="record"];
	"google.protobuf.duration_pb2" [label="<f0> SourceModule| <f1> google.protobuf.duration_pb2",shape="record"];
	"google.cloud.aiplatform.matching_engine._protos.match_service_pb2_grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.matching_engine._protos.match_service_pb2_grpc",shape="record"];
	"google.cloud.aiplatform.matching_engine._protos.match_service_pb2" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.matching_engine._protos.match_service_pb2",shape="record"];
	"google.rpc.status_pb2" [label="<f0> SourceModule| <f1> google.rpc.status_pb2",shape="record"];
	"google.rpc" [label="<f0> NamespacePackage| <f1> google.rpc",shape="record"];
	"google.rpc.code_pb2" [label="<f0> SourceModule| <f1> google.rpc.code_pb2",shape="record"];
	"google.rpc.error_details_pb2" [label="<f0> SourceModule| <f1> google.rpc.error_details_pb2",shape="record"];
	"google.cloud.aiplatform.matching_engine._protos" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.matching_engine._protos",shape="record"];
	"google.cloud.aiplatform.compat.types.encryption_spec" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.encryption_spec",shape="record"];
	"google.cloud.aiplatform.compat.types.service_networking" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.service_networking",shape="record"];
	"google.cloud.aiplatform.compat.types.matching_engine_index_endpoint" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.matching_engine_index_endpoint",shape="record"];
	"google.cloud.aiplatform.compat.types.machine_resources" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.machine_resources",shape="record"];
	"google.cloud.aiplatform.compat.types" [label="<f0> Package| <f1> google.cloud.aiplatform.compat.types",shape="record"];
	"google.cloud.aiplatform.compat.types.training_pipeline" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.training_pipeline",shape="record"];
	"google.cloud.aiplatform.compat.types.schedule" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.schedule",shape="record"];
	"google.cloud.aiplatform.compat.types.matching_engine_index" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.matching_engine_index",shape="record"];
	"google.cloud.aiplatform.compat.types.matching_engine_deployed_index_ref" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.matching_engine_deployed_index_ref",shape="record"];
	"google.cloud.aiplatform.compat.types.index_service" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.index_service",shape="record"];
	"google.cloud.aiplatform.compat.types.featurestore" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.featurestore",shape="record"];
	"google.cloud.aiplatform.compat.types.feature" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.feature",shape="record"];
	"google.cloud.aiplatform.compat.types.types" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.types",shape="record"];
	"google.cloud.aiplatform.compat.types.featurestore_online_service" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.featurestore_online_service",shape="record"];
	"google.cloud.aiplatform.compat.types.featurestore_service" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.featurestore_service",shape="record"];
	"google.cloud.aiplatform.compat.types.feature_selector" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.feature_selector",shape="record"];
	"google.cloud.aiplatform.compat.types.entity_type" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.entity_type",shape="record"];
	"google.cloud.aiplatform.compat.types.dataset_service" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.dataset_service",shape="record"];
	"google.cloud.aiplatform.compat.types.dataset" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.dataset",shape="record"];
	"google.cloud.aiplatform.compat.types.pipeline_job" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.pipeline_job",shape="record"];
	"google.cloud.aiplatform.compat.types.pipeline_failure_policy" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.pipeline_failure_policy",shape="record"];
	"google.cloud.aiplatform.compat.types.env_var" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.env_var",shape="record"];
	"google.cloud.aiplatform.compat.types.model_service" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.model_service",shape="record"];
	"google.cloud.aiplatform.compat.types.model" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.model",shape="record"];
	"google.cloud.aiplatform.compat.types.deployed_model_ref" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.deployed_model_ref",shape="record"];
	"google.cloud.aiplatform.compat.types.deployment_resource_pool" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.deployment_resource_pool",shape="record"];
	"google.cloud.aiplatform.compat.types.metadata_store" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.metadata_store",shape="record"];
	"google.cloud.aiplatform.compat.types.event" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.event",shape="record"];
	"google.cloud.aiplatform.compat.types.metadata_service" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.metadata_service",shape="record"];
	"google.cloud.aiplatform.compat.types.lineage_subgraph" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.lineage_subgraph",shape="record"];
	"google.cloud.aiplatform.compat.types.context" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.context",shape="record"];
	"google.cloud.aiplatform.compat.types.endpoint" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.endpoint",shape="record"];
	"google.cloud.aiplatform.compat.types.manual_batch_tuning_parameters" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.manual_batch_tuning_parameters",shape="record"];
	"google.cloud.aiplatform.compat.types.tensorboard_time_series" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.tensorboard_time_series",shape="record"];
	"google.cloud.aiplatform.compat.types.tensorboard_service" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.tensorboard_service",shape="record"];
	"google.cloud.aiplatform.compat.types.tensorboard_run" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.tensorboard_run",shape="record"];
	"google.cloud.aiplatform.compat.types.tensorboard_experiment" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.tensorboard_experiment",shape="record"];
	"google.cloud.aiplatform.compat.types.tensorboard_data" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.tensorboard_data",shape="record"];
	"google.cloud.aiplatform.compat.types.tensorboard" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.tensorboard",shape="record"];
	"google.cloud.aiplatform.compat.types.artifact" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.artifact",shape="record"];
	"google.cloud.aiplatform.compat.types.model_deployment_monitoring_job" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.model_deployment_monitoring_job",shape="record"];
	"google.cloud.aiplatform.compat.types.study" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.study",shape="record"];
	"google.cloud.aiplatform.compat.types.hyperparameter_tuning_job" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.hyperparameter_tuning_job",shape="record"];
	"google.cloud.aiplatform.compat.types.job_state" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.job_state",shape="record"];
	"google.cloud.aiplatform.compat.types.io" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.io",shape="record"];
	"google.cloud.aiplatform.compat.types.execution" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.execution",shape="record"];
	"google.cloud.aiplatform.compat.types.custom_job" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.custom_job",shape="record"];
	"google.cloud.aiplatform.compat.types.completion_stats" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.completion_stats",shape="record"];
	"google.cloud.aiplatform.compat.types.batch_prediction_job" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.batch_prediction_job",shape="record"];
	"google.cloud.aiplatform.compat.types.explanation_metadata" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.explanation_metadata",shape="record"];
	"google.cloud.aiplatform.compat.types.explanation" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.explanation",shape="record"];
	"google.cloud.aiplatform.compat.types.pipeline_state" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.pipeline_state",shape="record"];
	"google.cloud.aiplatform.compat.types.accelerator_type" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.types.accelerator_type",shape="record"];
	"google.cloud.aiplatform.compat" [label="<f0> Package| <f1> google.cloud.aiplatform.compat",shape="record"];
	"google.cloud.aiplatform.compat.services" [label="<f0> Package| <f1> google.cloud.aiplatform.compat.services",shape="record"];
	"google.cloud.aiplatform.compat.services.model_garden_service_client" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.services.model_garden_service_client",shape="record"];
	"google.cloud.aiplatform.compat.services.tensorboard_service_client" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.services.tensorboard_service_client",shape="record"];
	"google.cloud.aiplatform.compat.services.featurestore_service_client" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.services.featurestore_service_client",shape="record"];
	"google.cloud.aiplatform.compat.services.dataset_service_client" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.services.dataset_service_client",shape="record"];
	"google.cloud.aiplatform.compat.services.deployment_resource_pool_service_client" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.services.deployment_resource_pool_service_client",shape="record"];
	"google.cloud.aiplatform.compat.services.endpoint_service_client" [label="<f0> MissingModule| <f1> google.cloud.aiplatform.compat.services.endpoint_service_client",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.async_client",shape="record"];
	"google.api_core.client_logging" [label="<f0> SourceModule| <f1> google.api_core.client_logging",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_base",shape="record"];
	"google.api_core.path_template" [label="<f0> SourceModule| <f1> google.api_core.path_template",shape="record"];
	"google.api_core.rest_helpers" [label="<f0> SourceModule| <f1> google.api_core.rest_helpers",shape="record"];
	"google.auth.aio.credentials" [label="<f0> SourceModule| <f1> google.auth.aio.credentials",shape="record"];
	"google.auth.aio" [label="<f0> Package| <f1> google.auth.aio",shape="record"];
	"google.api_core.rest_streaming_async" [label="<f0> SourceModule| <f1> google.api_core.rest_streaming_async",shape="record"];
	"google.api_core._rest_streaming_base" [label="<f0> SourceModule| <f1> google.api_core._rest_streaming_base",shape="record"];
	"google.auth.aio.transport" [label="<f0> Package| <f1> google.auth.aio.transport",shape="record"];
	"google.auth.aio.transport.sessions" [label="<f0> SourceModule| <f1> google.auth.aio.transport.sessions",shape="record"];
	"google.auth.aio.transport.aiohttp" [label="<f0> SourceModule| <f1> google.auth.aio.transport.aiohttp",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest",shape="record"];
	"google.api_core.rest_streaming" [label="<f0> SourceModule| <f1> google.api_core.rest_streaming",shape="record"];
	"google.api_core.retry" [label="<f0> Package| <f1> google.api_core.retry",shape="record"];
	"google.api_core.datetime_helpers" [label="<f0> SourceModule| <f1> google.api_core.datetime_helpers",shape="record"];
	"google.api_core.retry.retry_streaming_async" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_streaming_async",shape="record"];
	"google.api_core.retry.retry_streaming" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_streaming",shape="record"];
	"google.api_core.retry.retry_unary_async" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_unary_async",shape="record"];
	"google.api_core.retry.retry_unary" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_unary",shape="record"];
	"google.api_core.retry.retry_base" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_base",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc",shape="record"];
	"google.api_core.grpc_helpers" [label="<f0> SourceModule| <f1> google.api_core.grpc_helpers",shape="record"];
	"grpc_gcp" [label="<f0> MissingModule| <f1> grpc_gcp",shape="record"];
	"proto" [label="<f0> Package| <f1> proto",shape="record"];
	"proto.version" [label="<f0> SourceModule| <f1> proto.version",shape="record"];
	"proto.primitives" [label="<f0> SourceModule| <f1> proto.primitives",shape="record"];
	"proto.modules" [label="<f0> SourceModule| <f1> proto.modules",shape="record"];
	"proto.message" [label="<f0> SourceModule| <f1> proto.message",shape="record"];
	"proto.utils" [label="<f0> SourceModule| <f1> proto.utils",shape="record"];
	"proto.marshal" [label="<f0> Package| <f1> proto.marshal",shape="record"];
	"proto.marshal.marshal" [label="<f0> SourceModule| <f1> proto.marshal.marshal",shape="record"];
	"proto.marshal.rules.field_mask" [label="<f0> SourceModule| <f1> proto.marshal.rules.field_mask",shape="record"];
	"proto.marshal.rules.wrappers" [label="<f0> SourceModule| <f1> proto.marshal.rules.wrappers",shape="record"];
	"proto.marshal.rules.struct" [label="<f0> SourceModule| <f1> proto.marshal.rules.struct",shape="record"];
	"proto.marshal.collections.repeated" [label="<f0> SourceModule| <f1> proto.marshal.collections.repeated",shape="record"];
	"proto.marshal.collections.maps" [label="<f0> SourceModule| <f1> proto.marshal.collections.maps",shape="record"];
	"proto.marshal.rules.dates" [label="<f0> SourceModule| <f1> proto.marshal.rules.dates",shape="record"];
	"proto.marshal.rules.stringy_numbers" [label="<f0> SourceModule| <f1> proto.marshal.rules.stringy_numbers",shape="record"];
	"proto.marshal.rules.bytes" [label="<f0> SourceModule| <f1> proto.marshal.rules.bytes",shape="record"];
	"proto.marshal.rules" [label="<f0> Package| <f1> proto.marshal.rules",shape="record"];
	"proto.marshal.collections" [label="<f0> Package| <f1> proto.marshal.collections",shape="record"];
	"proto.marshal.compat" [label="<f0> SourceModule| <f1> proto.marshal.compat",shape="record"];
	"proto.fields" [label="<f0> SourceModule| <f1> proto.fields",shape="record"];
	"proto.enums" [label="<f0> SourceModule| <f1> proto.enums",shape="record"];
	"proto.marshal.rules.enums" [label="<f0> SourceModule| <f1> proto.marshal.rules.enums",shape="record"];
	"proto._package_info" [label="<f0> SourceModule| <f1> proto._package_info",shape="record"];
	"proto._file_info" [label="<f0> SourceModule| <f1> proto._file_info",shape="record"];
	"proto.marshal.rules.message" [label="<f0> SourceModule| <f1> proto.marshal.rules.message",shape="record"];
	"proto.datetime_helpers" [label="<f0> SourceModule| <f1> proto.datetime_helpers",shape="record"];
	"google.protobuf.json_format" [label="<f0> SourceModule| <f1> google.protobuf.json_format",shape="record"];
	"google.auth.transport.grpc" [label="<f0> SourceModule| <f1> google.auth.transport.grpc",shape="record"];
	"google.api_core.operations_v1" [label="<f0> Package| <f1> google.api_core.operations_v1",shape="record"];
	"google.api_core.operations_v1.operations_rest_client_async" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.operations_rest_client_async",shape="record"];
	"google.api_core.operations_v1.abstract_operations_base_client" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.abstract_operations_base_client",shape="record"];
	"google.api_core.operations_v1.transports.base" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.transports.base",shape="record"];
	"google.api_core.operations_v1.transports" [label="<f0> Package| <f1> google.api_core.operations_v1.transports",shape="record"];
	"google.api_core.version" [label="<f0> SourceModule| <f1> google.api_core.version",shape="record"];
	"google.api_core.operations_v1.pagers_async" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.pagers_async",shape="record"];
	"google.api_core.operations_v1.pagers_base" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.pagers_base",shape="record"];
	"google.api_core.operations_v1.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.transports.rest_asyncio",shape="record"];
	"google.api_core.operations_v1.transports.rest" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.transports.rest",shape="record"];
	"google.api_core.operations_v1.operations_client" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.operations_client",shape="record"];
	"google.api_core.timeout" [label="<f0> SourceModule| <f1> google.api_core.timeout",shape="record"];
	"google.api_core.page_iterator" [label="<f0> SourceModule| <f1> google.api_core.page_iterator",shape="record"];
	"google.api_core.operations_v1.operations_async_client" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.operations_async_client",shape="record"];
	"google.api_core.page_iterator_async" [label="<f0> SourceModule| <f1> google.api_core.page_iterator_async",shape="record"];
	"google.api_core.operations_v1.abstract_operations_client" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.abstract_operations_client",shape="record"];
	"google.api_core.operations_v1.pagers" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.pagers",shape="record"];
	"google.api_core.grpc_helpers_async" [label="<f0> SourceModule| <f1> google.api_core.grpc_helpers_async",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.base",shape="record"];
	"google.longrunning.operations_pb2" [label="<f0> SourceModule| <f1> google.longrunning.operations_pb2",shape="record"];
	"google.longrunning.operations_proto_pb2" [label="<f0> SourceModule| <f1> google.longrunning.operations_proto_pb2",shape="record"];
	"google.api.client_pb2" [label="<f0> SourceModule| <f1> google.api.client_pb2",shape="record"];
	"google.api.launch_stage_pb2" [label="<f0> SourceModule| <f1> google.api.launch_stage_pb2",shape="record"];
	"google.api.annotations_pb2" [label="<f0> SourceModule| <f1> google.api.annotations_pb2",shape="record"];
	"google.api.http_pb2" [label="<f0> SourceModule| <f1> google.api.http_pb2",shape="record"];
	"google.api" [label="<f0> NamespacePackage| <f1> google.api",shape="record"];
	"google.api.resource_pb2" [label="<f0> SourceModule| <f1> google.api.resource_pb2",shape="record"];
	"google.api.field_behavior_pb2" [label="<f0> SourceModule| <f1> google.api.field_behavior_pb2",shape="record"];
	"google.api.httpbody_pb2" [label="<f0> SourceModule| <f1> google.api.httpbody_pb2",shape="record"];
	"google.longrunning.operations_grpc_pb2" [label="<f0> SourceModule| <f1> google.longrunning.operations_grpc_pb2",shape="record"];
	"google.longrunning.operations_pb2_grpc" [label="<f0> SourceModule| <f1> google.longrunning.operations_pb2_grpc",shape="record"];
	"google.longrunning" [label="<f0> NamespacePackage| <f1> google.longrunning",shape="record"];
	"google.iam.v1.policy_pb2" [label="<f0> SourceModule| <f1> google.iam.v1.policy_pb2",shape="record"];
	"google.type.expr_pb2" [label="<f0> SourceModule| <f1> google.type.expr_pb2",shape="record"];
	"google.type" [label="<f0> NamespacePackage| <f1> google.type",shape="record"];
	"google.type.interval_pb2" [label="<f0> SourceModule| <f1> google.type.interval_pb2",shape="record"];
	"google.type.money_pb2" [label="<f0> SourceModule| <f1> google.type.money_pb2",shape="record"];
	"google.type.date_pb2" [label="<f0> SourceModule| <f1> google.type.date_pb2",shape="record"];
	"google.type.latlng_pb2" [label="<f0> SourceModule| <f1> google.type.latlng_pb2",shape="record"];
	"google.iam.v1.iam_policy_pb2" [label="<f0> SourceModule| <f1> google.iam.v1.iam_policy_pb2",shape="record"];
	"google.iam.v1.options_pb2" [label="<f0> SourceModule| <f1> google.iam.v1.options_pb2",shape="record"];
	"google.iam.v1" [label="<f0> Package| <f1> google.iam.v1",shape="record"];
	"google.iam" [label="<f0> NamespacePackage| <f1> google.iam",shape="record"];
	"google.cloud.location.locations_pb2" [label="<f0> SourceModule| <f1> google.cloud.location.locations_pb2",shape="record"];
	"google.cloud.location" [label="<f0> NamespacePackage| <f1> google.cloud.location",shape="record"];
	"google.cloud.aiplatform_v1.types.vertex_rag_data_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.vertex_rag_data_service",shape="record"];
	"google.cloud.aiplatform_v1.types.vertex_rag_data" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.vertex_rag_data",shape="record"];
	"google.cloud.aiplatform_v1.types.api_auth" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.api_auth",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.pagers",shape="record"];
	"google.api_core.operation_async" [label="<f0> SourceModule| <f1> google.api_core.operation_async",shape="record"];
	"google.api_core.future.async_future" [label="<f0> SourceModule| <f1> google.api_core.future.async_future",shape="record"];
	"google.api_core.future.base" [label="<f0> SourceModule| <f1> google.api_core.future.base",shape="record"];
	"google.api_core.future" [label="<f0> Package| <f1> google.api_core.future",shape="record"];
	"google.api_core.future.polling" [label="<f0> SourceModule| <f1> google.api_core.future.polling",shape="record"];
	"google.api_core.future._helpers" [label="<f0> SourceModule| <f1> google.api_core.future._helpers",shape="record"];
	"google.api_core.protobuf_helpers" [label="<f0> SourceModule| <f1> google.api_core.protobuf_helpers",shape="record"];
	"google.api_core.operation" [label="<f0> SourceModule| <f1> google.api_core.operation",shape="record"];
	"google.api_core.retry_async" [label="<f0> SourceModule| <f1> google.api_core.retry_async",shape="record"];
	"google.api_core.gapic_v1" [label="<f0> Package| <f1> google.api_core.gapic_v1",shape="record"];
	"google.api_core.gapic_v1.routing_header" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.routing_header",shape="record"];
	"google.api_core.gapic_v1.method_async" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.method_async",shape="record"];
	"google.api_core.gapic_v1.method" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.method",shape="record"];
	"google.api_core.gapic_v1.config_async" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.config_async",shape="record"];
	"google.api_core.gapic_v1.config" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.config",shape="record"];
	"google.api_core.gapic_v1.client_info" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.client_info",shape="record"];
	"google.api_core.client_info" [label="<f0> SourceModule| <f1> google.api_core.client_info",shape="record"];
	"google.api_core.exceptions" [label="<f0> SourceModule| <f1> google.api_core.exceptions",shape="record"];
	"grpc_status.rpc_status" [label="<f0> SourceModule| <f1> grpc_status.rpc_status",shape="record"];
	"grpc_status._async" [label="<f0> SourceModule| <f1> grpc_status._async",shape="record"];
	"grpc_status._common" [label="<f0> SourceModule| <f1> grpc_status._common",shape="record"];
	"grpc_status" [label="<f0> Package| <f1> grpc_status",shape="record"];
	"google.api_core" [label="<f0> Package| <f1> google.api_core",shape="record"];
	"google.api_core.universe" [label="<f0> SourceModule| <f1> google.api_core.universe",shape="record"];
	"google.api_core.client_options" [label="<f0> SourceModule| <f1> google.api_core.client_options",shape="record"];
	"google.cloud.aiplatform_v1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.gapic_version",shape="record"];
	"google.cloud.aiplatform_v1" [label="<f0> Package| <f1> google.cloud.aiplatform_v1",shape="record"];
	"google.cloud.aiplatform_v1.types.vertex_rag_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.vertex_rag_service",shape="record"];
	"google.cloud.aiplatform_v1.types.value" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.value",shape="record"];
	"google.cloud.aiplatform_v1.types.user_action_reference" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.user_action_reference",shape="record"];
	"google.cloud.aiplatform_v1.types.unmanaged_container_model" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.unmanaged_container_model",shape="record"];
	"google.cloud.aiplatform_v1.types.tuning_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.tuning_job",shape="record"];
	"google.cloud.aiplatform_v1.types.tool" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.tool",shape="record"];
	"google.cloud.aiplatform_v1.types.saved_query" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.saved_query",shape="record"];
	"google.cloud.aiplatform_v1.types.reasoning_engine_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.reasoning_engine_service",shape="record"];
	"google.cloud.aiplatform_v1.types.reasoning_engine_execution_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.reasoning_engine_execution_service",shape="record"];
	"google.cloud.aiplatform_v1.types.reasoning_engine" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.reasoning_engine",shape="record"];
	"google.cloud.aiplatform_v1.types.openapi" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.openapi",shape="record"];
	"google.cloud.aiplatform_v1.types.notebook_software_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.notebook_software_config",shape="record"];
	"google.cloud.aiplatform_v1.types.notebook_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.notebook_service",shape="record"];
	"google.cloud.aiplatform_v1.types.notebook_runtime_template_ref" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.notebook_runtime_template_ref",shape="record"];
	"google.cloud.aiplatform_v1.types.notebook_runtime" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.notebook_runtime",shape="record"];
	"google.cloud.aiplatform_v1.types.notebook_idle_shutdown_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.notebook_idle_shutdown_config",shape="record"];
	"google.cloud.aiplatform_v1.types.notebook_execution_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.notebook_execution_job",shape="record"];
	"google.cloud.aiplatform_v1.types.notebook_euc_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.notebook_euc_config",shape="record"];
	"google.cloud.aiplatform_v1.types.network_spec" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.network_spec",shape="record"];
	"google.cloud.aiplatform_v1.types.nas_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.nas_job",shape="record"];
	"google.cloud.aiplatform_v1.types.model_garden_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.model_garden_service",shape="record"];
	"google.cloud.aiplatform_v1.types.migration_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.migration_service",shape="record"];
	"google.cloud.aiplatform_v1.types.migratable_resource" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.migratable_resource",shape="record"];
	"google.cloud.aiplatform_v1.types.match_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.match_service",shape="record"];
	"google.cloud.aiplatform_v1.types.llm_utility_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.llm_utility_service",shape="record"];
	"google.cloud.aiplatform_v1.types.index_endpoint_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.index_endpoint_service",shape="record"];
	"google.cloud.aiplatform_v1.types.genai_tuning_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.genai_tuning_service",shape="record"];
	"google.cloud.aiplatform_v1.types.gen_ai_cache_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.gen_ai_cache_service",shape="record"];
	"google.cloud.aiplatform_v1.types.featurestore_monitoring" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.featurestore_monitoring",shape="record"];
	"google.cloud.aiplatform_v1.types.evaluation_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.evaluation_service",shape="record"];
	"google.cloud.aiplatform_v1.types.evaluated_annotation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.evaluated_annotation",shape="record"];
	"google.cloud.aiplatform_v1.types.dataset_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.dataset_version",shape="record"];
	"google.cloud.aiplatform_v1.types.content" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.content",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.notebook_service",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.notebook_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.notebook_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.notebook_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.migration_service",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.migration_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.migration_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.migration_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.match_service",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.match_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.match_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.match_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.match_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.match_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.match_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.match_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.match_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.llm_utility_service",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.llm_utility_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_tuning_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.evaluation_service",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.evaluation_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.evaluation_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.evaluation_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.evaluation_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.evaluation_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.vertex_rag_data_service",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service",shape="record"];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vertex_rag_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.vizier_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.vizier_service",shape="record"];
	"google.cloud.aiplatform_v1.services.vizier_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.vizier_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.tensorboard_service",shape="record"];
	"google.cloud.aiplatform_v1.services.tensorboard_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.tensorboard_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service",shape="record"];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.specialist_pool_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.schedule_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.schedule_service",shape="record"];
	"google.cloud.aiplatform_v1.services.schedule_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.schedule_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service",shape="record"];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.reasoning_engine_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.prediction_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.prediction_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.prediction_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.prediction_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.prediction_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.prediction_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.prediction_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.prediction_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.prediction_service",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.pipeline_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.pipeline_service",shape="record"];
	"google.cloud.aiplatform_v1.services.pipeline_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.pipeline_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service",shape="record"];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.persistent_resource_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.model_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.model_service",shape="record"];
	"google.cloud.aiplatform_v1.services.model_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_garden_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.model_garden_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_garden_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_garden_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.model_garden_service",shape="record"];
	"google.cloud.aiplatform_v1.services.model_garden_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.model_garden_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.metadata_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.metadata_service",shape="record"];
	"google.cloud.aiplatform_v1.services.metadata_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.metadata_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.job_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.job_service",shape="record"];
	"google.cloud.aiplatform_v1.services.job_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.job_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service",shape="record"];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_endpoint_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.index_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.index_service",shape="record"];
	"google.cloud.aiplatform_v1.services.index_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.index_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service",shape="record"];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.gen_ai_cache_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.featurestore_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.featurestore_service",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service",shape="record"];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.featurestore_online_serving_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.feature_registry_service",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_registry_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_registry_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_admin_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service",shape="record"];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.feature_online_store_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.endpoint_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.endpoint_service",shape="record"];
	"google.cloud.aiplatform_v1.services.endpoint_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.endpoint_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service",shape="record"];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.deployment_resource_pool_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.client",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.dataset_service.transports",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.services.dataset_service",shape="record"];
	"google.cloud.aiplatform_v1.services.dataset_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.services.dataset_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.gapic_version",shape="record"];
	"google.cloud.aiplatform_v1beta1" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.vertex_rag_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.vertex_rag_data_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.vertex_rag_data",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.value" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.value",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.user_action_reference" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.user_action_reference",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.unmanaged_container_model" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.unmanaged_container_model",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.ui_pipeline_spec" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.ui_pipeline_spec",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.tuning_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.tuning_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.tool" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.tool",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.session_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.session_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.session" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.session",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.saved_query" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.saved_query",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.reasoning_engine_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_execution_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.reasoning_engine_execution_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.reasoning_engine",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.openapi" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.openapi",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.notebook_software_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.notebook_software_config",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.notebook_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.notebook_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime_template_ref" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.notebook_runtime_template_ref",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.notebook_runtime",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.notebook_idle_shutdown_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.notebook_idle_shutdown_config",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.notebook_execution_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.notebook_execution_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.notebook_euc_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.notebook_euc_config",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.network_spec" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.network_spec",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.nas_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.nas_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.migration_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.migration_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.migratable_resource" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.migratable_resource",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.llm_utility_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.llm_utility_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.index_endpoint_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.genai_tuning_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.genai_tuning_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.extension_registry_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.extension_registry_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.extension_execution_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.extension_execution_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.extension" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.extension",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.example_store_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.example_store_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.example_store" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.example_store",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.example" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.example",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.evaluation_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.evaluation_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.evaluated_annotation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.evaluated_annotation",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.dataset_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.dataset_version",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.content" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.content",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.api_auth" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.api_auth",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.session_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.session_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.session_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.session_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.notebook_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.migration_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.migration_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.migration_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.llm_utility_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.evaluation_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vizier_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.tensorboard_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.specialist_pool_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.schedule_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.prediction_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.prediction_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.pipeline_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.persistent_resource_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_monitoring_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.model_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.model_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.metadata_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.match_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.match_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.match_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.match_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.match_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.match_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.match_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.job_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.job_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.job_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.job_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_endpoint_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.index_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.index_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.index_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.index_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_registry_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.feature_online_store_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_registry_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.extension_execution_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.example_store_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.endpoint_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.client",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.transports",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.transports.base",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.pagers" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.pagers",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.async_client" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.services.dataset_service.async_client",shape="record"];
	"google.cloud.aiplatform_v1.types.vizier_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.vizier_service",shape="record"];
	"google.cloud.aiplatform_v1.types.types" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.types",shape="record"];
	"google.cloud.aiplatform_v1.types.training_pipeline" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.training_pipeline",shape="record"];
	"google.cloud.aiplatform_v1.types.tensorboard_time_series" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.tensorboard_time_series",shape="record"];
	"google.cloud.aiplatform_v1.types.tensorboard_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.tensorboard_service",shape="record"];
	"google.cloud.aiplatform_v1.types.tensorboard_run" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.tensorboard_run",shape="record"];
	"google.cloud.aiplatform_v1.types.tensorboard_experiment" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.tensorboard_experiment",shape="record"];
	"google.cloud.aiplatform_v1.types.tensorboard_data" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.tensorboard_data",shape="record"];
	"google.cloud.aiplatform_v1.types.tensorboard" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.tensorboard",shape="record"];
	"google.cloud.aiplatform_v1.types.study" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.study",shape="record"];
	"google.cloud.aiplatform_v1.types.specialist_pool_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.specialist_pool_service",shape="record"];
	"google.cloud.aiplatform_v1.types.specialist_pool" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.specialist_pool",shape="record"];
	"google.cloud.aiplatform_v1.types.service_networking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.service_networking",shape="record"];
	"google.cloud.aiplatform_v1.types.schedule_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.schedule_service",shape="record"];
	"google.cloud.aiplatform_v1.types.schedule" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.schedule",shape="record"];
	"google.cloud.aiplatform_v1.types.reservation_affinity" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.reservation_affinity",shape="record"];
	"google.cloud.aiplatform_v1.types.publisher_model" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.publisher_model",shape="record"];
	"google.cloud.aiplatform_v1.types.prediction_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.prediction_service",shape="record"];
	"google.cloud.aiplatform_v1.types.pipeline_state" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.pipeline_state",shape="record"];
	"google.cloud.aiplatform_v1.types.pipeline_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.pipeline_service",shape="record"];
	"google.cloud.aiplatform_v1.types.pipeline_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.pipeline_job",shape="record"];
	"google.cloud.aiplatform_v1.types.pipeline_failure_policy" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.pipeline_failure_policy",shape="record"];
	"google.cloud.aiplatform_v1.types.persistent_resource_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.persistent_resource_service",shape="record"];
	"google.cloud.aiplatform_v1.types.persistent_resource" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.persistent_resource",shape="record"];
	"google.cloud.aiplatform_v1.types.operation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.operation",shape="record"];
	"google.cloud.aiplatform_v1.types.model_monitoring" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.model_monitoring",shape="record"];
	"google.cloud.aiplatform_v1.types.model_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.model_service",shape="record"];
	"google.cloud.aiplatform_v1.types.model_deployment_monitoring_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.model_deployment_monitoring_job",shape="record"];
	"google.cloud.aiplatform_v1.types.model_evaluation_slice" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.model_evaluation_slice",shape="record"];
	"google.cloud.aiplatform_v1.types.model_evaluation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.model_evaluation",shape="record"];
	"google.cloud.aiplatform_v1.types.model" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.model",shape="record"];
	"google.cloud.aiplatform_v1.types.metadata_store" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.metadata_store",shape="record"];
	"google.cloud.aiplatform_v1.types.metadata_schema" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.metadata_schema",shape="record"];
	"google.cloud.aiplatform_v1.types.metadata_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.metadata_service",shape="record"];
	"google.cloud.aiplatform_v1.types.manual_batch_tuning_parameters" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.manual_batch_tuning_parameters",shape="record"];
	"google.cloud.aiplatform_v1.types.machine_resources" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.machine_resources",shape="record"];
	"google.cloud.aiplatform_v1.types.lineage_subgraph" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.lineage_subgraph",shape="record"];
	"google.cloud.aiplatform_v1.types.job_state" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.job_state",shape="record"];
	"google.cloud.aiplatform_v1.types.job_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.job_service",shape="record"];
	"google.cloud.aiplatform_v1.types.io" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.io",shape="record"];
	"google.cloud.aiplatform_v1.types.index_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.index_service",shape="record"];
	"google.cloud.aiplatform_v1.types.index_endpoint" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.index_endpoint",shape="record"];
	"google.cloud.aiplatform_v1.types.index" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.index",shape="record"];
	"google.cloud.aiplatform_v1.types.hyperparameter_tuning_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.hyperparameter_tuning_job",shape="record"];
	"google.cloud.aiplatform_v1.types.featurestore_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.featurestore_service",shape="record"];
	"google.cloud.aiplatform_v1.types.featurestore_online_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.featurestore_online_service",shape="record"];
	"google.cloud.aiplatform_v1.types.featurestore" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.featurestore",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_view_sync" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_view_sync",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_view" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_view",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_selector" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_selector",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_registry_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_registry_service",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_online_store_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_online_store_service",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_online_store_admin_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_online_store_admin_service",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_online_store" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_online_store",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_monitoring_stats" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_monitoring_stats",shape="record"];
	"google.cloud.aiplatform_v1.types.feature_group" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature_group",shape="record"];
	"google.cloud.aiplatform_v1.types.feature" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.feature",shape="record"];
	"google.cloud.aiplatform_v1.types.explanation_metadata" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.explanation_metadata",shape="record"];
	"google.cloud.aiplatform_v1.types.explanation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.explanation",shape="record"];
	"google.cloud.aiplatform_v1.types.execution" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.execution",shape="record"];
	"google.cloud.aiplatform_v1.types.event" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.event",shape="record"];
	"google.cloud.aiplatform_v1.types.env_var" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.env_var",shape="record"];
	"google.cloud.aiplatform_v1.types.entity_type" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.entity_type",shape="record"];
	"google.cloud.aiplatform_v1.types.endpoint_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.endpoint_service",shape="record"];
	"google.cloud.aiplatform_v1.types.endpoint" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.endpoint",shape="record"];
	"google.cloud.aiplatform_v1.types.encryption_spec" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.encryption_spec",shape="record"];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.deployment_resource_pool_service",shape="record"];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.deployment_resource_pool",shape="record"];
	"google.cloud.aiplatform_v1.types.deployed_model_ref" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.deployed_model_ref",shape="record"];
	"google.cloud.aiplatform_v1.types.deployed_index_ref" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.deployed_index_ref",shape="record"];
	"google.cloud.aiplatform_v1.types.dataset_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.dataset_service",shape="record"];
	"google.cloud.aiplatform_v1.types.dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.dataset",shape="record"];
	"google.cloud.aiplatform_v1.types.data_labeling_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.data_labeling_job",shape="record"];
	"google.cloud.aiplatform_v1.types.data_item" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.data_item",shape="record"];
	"google.cloud.aiplatform_v1.types.custom_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.custom_job",shape="record"];
	"google.cloud.aiplatform_v1.types.context" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.context",shape="record"];
	"google.cloud.aiplatform_v1.types.completion_stats" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.completion_stats",shape="record"];
	"google.cloud.aiplatform_v1.types.cached_content" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.cached_content",shape="record"];
	"google.cloud.aiplatform_v1.types.batch_prediction_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.batch_prediction_job",shape="record"];
	"google.cloud.aiplatform_v1.types.artifact" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.artifact",shape="record"];
	"google.cloud.aiplatform_v1.types.annotation_spec" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.annotation_spec",shape="record"];
	"google.cloud.aiplatform_v1.types.annotation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.annotation",shape="record"];
	"google.cloud.aiplatform_v1.types.accelerator_type" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1.types.accelerator_type",shape="record"];
	"google.cloud.aiplatform_v1.types" [label="<f0> Package| <f1> google.cloud.aiplatform_v1.types",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.vizier_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.vizier_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.types" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.types",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.training_pipeline" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.training_pipeline",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_time_series" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.tensorboard_time_series",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.tensorboard_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_run" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.tensorboard_run",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_experiment" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.tensorboard_experiment",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_data" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.tensorboard_data",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.tensorboard" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.tensorboard",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.study" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.study",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.specialist_pool_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.specialist_pool",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.schedule_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.schedule_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.schedule" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.schedule",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.service_networking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.service_networking",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.reservation_affinity" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.reservation_affinity",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.publisher_model" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.publisher_model",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.prediction_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.prediction_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.pipeline_state" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.pipeline_state",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.pipeline_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.pipeline_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.pipeline_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.pipeline_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.pipeline_failure_policy" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.pipeline_failure_policy",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.persistent_resource_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.persistent_resource",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.operation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.operation",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_stats" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_monitoring_stats",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_spec" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_monitoring_spec",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_monitoring_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_monitoring_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_alert" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_monitoring_alert",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_monitoring",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_monitor" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_monitor",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_garden_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_garden_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_deployment_monitoring_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_deployment_monitoring_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation_slice" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_evaluation_slice",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model_evaluation",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.model" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.model",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.metadata_store" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.metadata_store",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.metadata_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.metadata_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.metadata_schema" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.metadata_schema",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.match_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.match_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.manual_batch_tuning_parameters" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.manual_batch_tuning_parameters",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.machine_resources" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.machine_resources",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.lineage_subgraph" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.lineage_subgraph",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.job_state" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.job_state",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.job_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.job_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.index_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.index_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.io" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.io",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.hyperparameter_tuning_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.hyperparameter_tuning_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.index_endpoint",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.index" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.index",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.gen_ai_cache_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.gen_ai_cache_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.featurestore_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.featurestore_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.featurestore_online_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.featurestore_online_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.featurestore_monitoring" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.featurestore_monitoring",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.featurestore" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.featurestore",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_view_sync" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_view_sync",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_view" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_view",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_selector" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_selector",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_registry_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_registry_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_online_store_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_admin_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_online_store_admin_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_online_store",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_monitoring_stats" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_monitoring_stats",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_monitor_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_monitor",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature_group" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature_group",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.feature" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.feature",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.explanation_metadata" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.explanation_metadata",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.explanation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.explanation",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.execution" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.execution",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.event" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.event",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.env_var" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.env_var",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.entity_type" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.entity_type",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.endpoint_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.endpoint_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.endpoint" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.endpoint",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.encryption_spec" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.encryption_spec",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.deployment_resource_pool_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.deployment_resource_pool",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.deployed_model_ref" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.deployed_model_ref",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.deployed_index_ref" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.deployed_index_ref",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.dataset_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.dataset_service",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.dataset",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.data_labeling_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.data_labeling_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.data_item" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.data_item",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.custom_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.custom_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.context" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.context",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.completion_stats" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.completion_stats",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.cached_content" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.cached_content",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.batch_prediction_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.batch_prediction_job",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.artifact" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.artifact",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.annotation_spec" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.annotation_spec",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.annotation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.annotation",shape="record"];
	"google.cloud.aiplatform_v1beta1.types.accelerator_type" [label="<f0> SourceModule| <f1> google.cloud.aiplatform_v1beta1.types.accelerator_type",shape="record"];
	"google.cloud.aiplatform_v1beta1.types" [label="<f0> Package| <f1> google.cloud.aiplatform_v1beta1.types",shape="record"];
	"google.cloud.aiplatform.utils" [label="<f0> Package| <f1> google.cloud.aiplatform.utils",shape="record"];
	"google.cloud.aiplatform.utils.column_transformations_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.column_transformations_utils",shape="record"];
	"google.cloud.aiplatform.datasets" [label="<f0> Package| <f1> google.cloud.aiplatform.datasets",shape="record"];
	"google.cloud.aiplatform.datasets.video_dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.datasets.video_dataset",shape="record"];
	"google.cloud.aiplatform.schema" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.schema",shape="record"];
	"google.cloud.aiplatform.datasets.text_dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.datasets.text_dataset",shape="record"];
	"google.cloud.aiplatform.datasets.image_dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.datasets.image_dataset",shape="record"];
	"google.cloud.aiplatform.datasets.time_series_dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.datasets.time_series_dataset",shape="record"];
	"google.cloud.aiplatform.datasets.tabular_dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.datasets.tabular_dataset",shape="record"];
	"google.cloud.bigquery" [label="<f0> Package| <f1> google.cloud.bigquery",shape="record"];
	"google.cloud.bigquery.magics.magics" [label="<f0> SourceModule| <f1> google.cloud.bigquery.magics.magics",shape="record"];
	"google.cloud.bigquery.magics.line_arg_parser" [label="<f0> Package| <f1> google.cloud.bigquery.magics.line_arg_parser",shape="record"];
	"google.cloud.bigquery.magics.line_arg_parser.visitors" [label="<f0> SourceModule| <f1> google.cloud.bigquery.magics.line_arg_parser.visitors",shape="record"];
	"google.cloud.bigquery.magics.line_arg_parser.parser" [label="<f0> SourceModule| <f1> google.cloud.bigquery.magics.line_arg_parser.parser",shape="record"];
	"google.cloud.bigquery.magics.line_arg_parser.lexer" [label="<f0> SourceModule| <f1> google.cloud.bigquery.magics.line_arg_parser.lexer",shape="record"];
	"google.cloud.bigquery.magics.line_arg_parser.exceptions" [label="<f0> SourceModule| <f1> google.cloud.bigquery.magics.line_arg_parser.exceptions",shape="record"];
	"google.cloud.bigquery.magics" [label="<f0> Package| <f1> google.cloud.bigquery.magics",shape="record"];
	"google.cloud.bigquery.dbapi._helpers" [label="<f0> SourceModule| <f1> google.cloud.bigquery.dbapi._helpers",shape="record"];
	"google.cloud.bigquery.dbapi.exceptions" [label="<f0> SourceModule| <f1> google.cloud.bigquery.dbapi.exceptions",shape="record"];
	"google.cloud.bigquery.dbapi" [label="<f0> Package| <f1> google.cloud.bigquery.dbapi",shape="record"];
	"google.cloud.bigquery.dbapi.types" [label="<f0> SourceModule| <f1> google.cloud.bigquery.dbapi.types",shape="record"];
	"google.cloud.bigquery.dbapi.connection" [label="<f0> SourceModule| <f1> google.cloud.bigquery.dbapi.connection",shape="record"];
	"google.cloud.bigquery.dbapi.cursor" [label="<f0> SourceModule| <f1> google.cloud.bigquery.dbapi.cursor",shape="record"];
	"google.cloud.exceptions" [label="<f0> Package| <f1> google.cloud.exceptions",shape="record"];
	"google.cloud.bigquery_storage" [label="<f0> MissingModule| <f1> google.cloud.bigquery_storage",shape="record"];
	"bigquery_magics" [label="<f0> MissingModule| <f1> bigquery_magics",shape="record"];
	"google.cloud.bigquery.encryption_configuration" [label="<f0> SourceModule| <f1> google.cloud.bigquery.encryption_configuration",shape="record"];
	"google.cloud.bigquery.table" [label="<f0> SourceModule| <f1> google.cloud.bigquery.table",shape="record"];
	"google.cloud.bigquery._tqdm_helpers" [label="<f0> SourceModule| <f1> google.cloud.bigquery._tqdm_helpers",shape="record"];
	"google.cloud._helpers" [label="<f0> Package| <f1> google.cloud._helpers",shape="record"];
	"shapely.wkt" [label="<f0> SourceModule| <f1> shapely.wkt",shape="record"];
	"shapely" [label="<f0> Package| <f1> shapely",shape="record"];
	"shapely._geos" [label="<f0> Extension| <f1> shapely._geos",shape="record"];
	"shapely.prepared" [label="<f0> SourceModule| <f1> shapely.prepared",shape="record"];
	"shapely.wkb" [label="<f0> SourceModule| <f1> shapely.wkb",shape="record"];
	"shapely._version" [label="<f0> SourceModule| <f1> shapely._version",shape="record"];
	"shapely.geometry" [label="<f0> Package| <f1> shapely.geometry",shape="record"];
	"shapely.geometry.point" [label="<f0> SourceModule| <f1> shapely.geometry.point",shape="record"];
	"shapely.geometry.multipolygon" [label="<f0> SourceModule| <f1> shapely.geometry.multipolygon",shape="record"];
	"shapely.geometry.multipoint" [label="<f0> SourceModule| <f1> shapely.geometry.multipoint",shape="record"];
	"shapely.geometry.multilinestring" [label="<f0> SourceModule| <f1> shapely.geometry.multilinestring",shape="record"];
	"shapely.geometry.linestring" [label="<f0> SourceModule| <f1> shapely.geometry.linestring",shape="record"];
	"shapely.geometry.geo" [label="<f0> SourceModule| <f1> shapely.geometry.geo",shape="record"];
	"shapely.geometry.polygon" [label="<f0> SourceModule| <f1> shapely.geometry.polygon",shape="record"];
	"shapely.algorithms.cga" [label="<f0> SourceModule| <f1> shapely.algorithms.cga",shape="record"];
	"shapely.algorithms" [label="<f0> Package| <f1> shapely.algorithms",shape="record"];
	"shapely.geometry.collection" [label="<f0> SourceModule| <f1> shapely.geometry.collection",shape="record"];
	"shapely.geometry.base" [label="<f0> SourceModule| <f1> shapely.geometry.base",shape="record"];
	"shapely.coords" [label="<f0> SourceModule| <f1> shapely.coords",shape="record"];
	"shapely.io" [label="<f0> SourceModule| <f1> shapely.io",shape="record"];
	"shapely.decorators" [label="<f0> SourceModule| <f1> shapely.decorators",shape="record"];
	"shapely._ragged_array" [label="<f0> SourceModule| <f1> shapely._ragged_array",shape="record"];
	"shapely._enum" [label="<f0> SourceModule| <f1> shapely._enum",shape="record"];
	"shapely.strtree" [label="<f0> SourceModule| <f1> shapely.strtree",shape="record"];
	"shapely.coordinates" [label="<f0> SourceModule| <f1> shapely.coordinates",shape="record"];
	"shapely.linear" [label="<f0> SourceModule| <f1> shapely.linear",shape="record"];
	"shapely.set_operations" [label="<f0> SourceModule| <f1> shapely.set_operations",shape="record"];
	"shapely.measurement" [label="<f0> SourceModule| <f1> shapely.measurement",shape="record"];
	"shapely.predicates" [label="<f0> SourceModule| <f1> shapely.predicates",shape="record"];
	"shapely.constructive" [label="<f0> SourceModule| <f1> shapely.constructive",shape="record"];
	"shapely.algorithms._oriented_envelope" [label="<f0> SourceModule| <f1> shapely.algorithms._oriented_envelope",shape="record"];
	"shapely.affinity" [label="<f0> SourceModule| <f1> shapely.affinity",shape="record"];
	"shapely.creation" [label="<f0> SourceModule| <f1> shapely.creation",shape="record"];
	"shapely._geometry" [label="<f0> SourceModule| <f1> shapely._geometry",shape="record"];
	"shapely._geometry_helpers" [label="<f0> Extension| <f1> shapely._geometry_helpers",shape="record"];
	"shapely.errors" [label="<f0> SourceModule| <f1> shapely.errors",shape="record"];
	"shapely.lib" [label="<f0> Extension| <f1> shapely.lib",shape="record"];
	"geopandas" [label="<f0> MissingModule| <f1> geopandas",shape="record"];
	"db_dtypes" [label="<f0> MissingModule| <f1> db_dtypes",shape="record"];
	"google.cloud.bigquery.routine" [label="<f0> Package| <f1> google.cloud.bigquery.routine",shape="record"];
	"google.cloud.bigquery.routine.routine" [label="<f0> SourceModule| <f1> google.cloud.bigquery.routine.routine",shape="record"];
	"google.cloud.bigquery.retry" [label="<f0> SourceModule| <f1> google.cloud.bigquery.retry",shape="record"];
	"google.cloud.bigquery.query" [label="<f0> SourceModule| <f1> google.cloud.bigquery.query",shape="record"];
	"google.cloud.bigquery.model" [label="<f0> SourceModule| <f1> google.cloud.bigquery.model",shape="record"];
	"google.cloud.bigquery.job.base" [label="<f0> SourceModule| <f1> google.cloud.bigquery.job.base",shape="record"];
	"google.cloud.bigquery.format_options" [label="<f0> SourceModule| <f1> google.cloud.bigquery.format_options",shape="record"];
	"google.cloud.bigquery.external_config" [label="<f0> SourceModule| <f1> google.cloud.bigquery.external_config",shape="record"];
	"google.cloud.bigquery.enums" [label="<f0> SourceModule| <f1> google.cloud.bigquery.enums",shape="record"];
	"google.cloud.bigquery.dataset" [label="<f0> SourceModule| <f1> google.cloud.bigquery.dataset",shape="record"];
	"google.cloud.bigquery.client" [label="<f0> SourceModule| <f1> google.cloud.bigquery.client",shape="record"];
	"google.cloud.bigquery.opentelemetry_tracing" [label="<f0> SourceModule| <f1> google.cloud.bigquery.opentelemetry_tracing",shape="record"];
	"'opentelemetry.trace'" [label="<f0> MissingModule| <f1> 'opentelemetry.trace'",shape="record"];
	"'opentelemetry.instrumentation'" [label="<f0> MissingModule| <f1> 'opentelemetry.instrumentation'",shape="record"];
	"opentelemetry" [label="<f0> MissingModule| <f1> opentelemetry",shape="record"];
	"google.cloud.bigquery._http" [label="<f0> SourceModule| <f1> google.cloud.bigquery._http",shape="record"];
	"google.cloud._http" [label="<f0> Package| <f1> google.cloud._http",shape="record"];
	"google.cloud.version" [label="<f0> SourceModule| <f1> google.cloud.version",shape="record"];
	"'google.cloud.bigquery_storage_v1'" [label="<f0> MissingModule| <f1> 'google.cloud.bigquery_storage_v1'",shape="record"];
	"google.cloud.client" [label="<f0> Package| <f1> google.cloud.client",shape="record"];
	"google.api_core.iam" [label="<f0> SourceModule| <f1> google.api_core.iam",shape="record"];
	"google.resumable_media.requests" [label="<f0> Package| <f1> google.resumable_media.requests",shape="record"];
	"google.resumable_media.requests.upload" [label="<f0> SourceModule| <f1> google.resumable_media.requests.upload",shape="record"];
	"google.resumable_media.requests.download" [label="<f0> SourceModule| <f1> google.resumable_media.requests.download",shape="record"];
	"google.resumable_media.requests._request_helpers" [label="<f0> SourceModule| <f1> google.resumable_media.requests._request_helpers",shape="record"];
	"google.cloud.bigquery._job_helpers" [label="<f0> SourceModule| <f1> google.cloud.bigquery._job_helpers",shape="record"];
	"google.cloud.bigquery.job" [label="<f0> Package| <f1> google.cloud.bigquery.job",shape="record"];
	"google.cloud.bigquery.job.query" [label="<f0> SourceModule| <f1> google.cloud.bigquery.job.query",shape="record"];
	"google.cloud.bigquery.job.load" [label="<f0> SourceModule| <f1> google.cloud.bigquery.job.load",shape="record"];
	"google.cloud.bigquery.job.extract" [label="<f0> SourceModule| <f1> google.cloud.bigquery.job.extract",shape="record"];
	"google.cloud.bigquery.job.copy_" [label="<f0> SourceModule| <f1> google.cloud.bigquery.job.copy_",shape="record"];
	"google.cloud.bigquery._pandas_helpers" [label="<f0> SourceModule| <f1> google.cloud.bigquery._pandas_helpers",shape="record"];
	"pandas_gbq" [label="<f0> MissingModule| <f1> pandas_gbq",shape="record"];
	"google.cloud.bigquery._versions_helpers" [label="<f0> SourceModule| <f1> google.cloud.bigquery._versions_helpers",shape="record"];
	"google.cloud.bigquery.exceptions" [label="<f0> SourceModule| <f1> google.cloud.bigquery.exceptions",shape="record"];
	"google.cloud.bigquery._pyarrow_helpers" [label="<f0> SourceModule| <f1> google.cloud.bigquery._pyarrow_helpers",shape="record"];
	"google.cloud.bigquery.schema" [label="<f0> SourceModule| <f1> google.cloud.bigquery.schema",shape="record"];
	"google.cloud.bigquery.standard_sql" [label="<f0> SourceModule| <f1> google.cloud.bigquery.standard_sql",shape="record"];
	"google.cloud.bigquery._helpers" [label="<f0> SourceModule| <f1> google.cloud.bigquery._helpers",shape="record"];
	"google.cloud.bigquery.version" [label="<f0> SourceModule| <f1> google.cloud.bigquery.version",shape="record"];
	"google.cloud.aiplatform.datasets.column_names_dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.datasets.column_names_dataset",shape="record"];
	"google.cloud.aiplatform.datasets.dataset" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.datasets.dataset",shape="record"];
	"google.cloud.aiplatform.datasets._datasources" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.datasets._datasources",shape="record"];
	"google.cloud.aiplatform.utils.featurestore_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.featurestore_utils",shape="record"];
	"google.cloud.aiplatform.utils.autologging_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.autologging_utils",shape="record"];
	"mlflow" [label="<f0> MissingModule| <f1> mlflow",shape="record"];
	"google.cloud.aiplatform.utils.yaml_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.yaml_utils",shape="record"];
	"google.cloud.aiplatform.constants.pipeline" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.constants.pipeline",shape="record"];
	"google.cloud.aiplatform.utils.pipeline_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.pipeline_utils",shape="record"];
	"google.cloud.aiplatform.utils.prediction_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.prediction_utils",shape="record"];
	"google.cloud.aiplatform.constants.prediction" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.constants.prediction",shape="record"];
	"google.cloud.aiplatform.utils.path_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.path_utils",shape="record"];
	"google.cloud.aiplatform.utils._ipython_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils._ipython_utils",shape="record"];
	"vertexai.preview.tuning.sft" [label="<f0> SourceModule| <f1> vertexai.preview.tuning.sft",shape="record"];
	"vertexai.tuning._tuning" [label="<f0> SourceModule| <f1> vertexai.tuning._tuning",shape="record"];
	"vertexai.tuning" [label="<f0> Package| <f1> vertexai.tuning",shape="record"];
	"vertexai" [label="<f0> Package| <f1> vertexai",shape="record"];
	"google.cloud.aiplatform.version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.version",shape="record"];
	"vertexai.generative_models" [label="<f0> Package| <f1> vertexai.generative_models",shape="record"];
	"vertexai.generative_models._function_calling_utils" [label="<f0> SourceModule| <f1> vertexai.generative_models._function_calling_utils",shape="record"];
	"docstring_parser" [label="<f0> Package| <f1> docstring_parser",shape="record"];
	"docstring_parser.util" [label="<f0> SourceModule| <f1> docstring_parser.util",shape="record"];
	"docstring_parser.parser" [label="<f0> SourceModule| <f1> docstring_parser.parser",shape="record"];
	"docstring_parser.attrdoc" [label="<f0> SourceModule| <f1> docstring_parser.attrdoc",shape="record"];
	"docstring_parser.rest" [label="<f0> SourceModule| <f1> docstring_parser.rest",shape="record"];
	"docstring_parser.numpydoc" [label="<f0> SourceModule| <f1> docstring_parser.numpydoc",shape="record"];
	"docstring_parser.google" [label="<f0> SourceModule| <f1> docstring_parser.google",shape="record"];
	"docstring_parser.epydoc" [label="<f0> SourceModule| <f1> docstring_parser.epydoc",shape="record"];
	"docstring_parser.common" [label="<f0> SourceModule| <f1> docstring_parser.common",shape="record"];
	"vertexai.generative_models._generative_models" [label="<f0> SourceModule| <f1> vertexai.generative_models._generative_models",shape="record"];
	"PIL.Image" [label="<f0> SourceModule| <f1> PIL.Image",shape="record"];
	"PIL.XpmImagePlugin" [label="<f0> SourceModule| <f1> PIL.XpmImagePlugin",shape="record"];
	"PIL.XbmImagePlugin" [label="<f0> SourceModule| <f1> PIL.XbmImagePlugin",shape="record"];
	"PIL.XVThumbImagePlugin" [label="<f0> SourceModule| <f1> PIL.XVThumbImagePlugin",shape="record"];
	"PIL.WmfImagePlugin" [label="<f0> SourceModule| <f1> PIL.WmfImagePlugin",shape="record"];
	"PIL.WebPImagePlugin" [label="<f0> SourceModule| <f1> PIL.WebPImagePlugin",shape="record"];
	"PIL._webp" [label="<f0> Extension| <f1> PIL._webp",shape="record"];
	"PIL.TgaImagePlugin" [label="<f0> SourceModule| <f1> PIL.TgaImagePlugin",shape="record"];
	"PIL.SunImagePlugin" [label="<f0> SourceModule| <f1> PIL.SunImagePlugin",shape="record"];
	"PIL.SpiderImagePlugin" [label="<f0> SourceModule| <f1> PIL.SpiderImagePlugin",shape="record"];
	"PIL.ImageTk" [label="<f0> SourceModule| <f1> PIL.ImageTk",shape="record"];
	"PIL._imagingtk" [label="<f0> Extension| <f1> PIL._imagingtk",shape="record"];
	"PIL.SgiImagePlugin" [label="<f0> SourceModule| <f1> PIL.SgiImagePlugin",shape="record"];
	"PIL.QoiImagePlugin" [label="<f0> SourceModule| <f1> PIL.QoiImagePlugin",shape="record"];
	"PIL.PsdImagePlugin" [label="<f0> SourceModule| <f1> PIL.PsdImagePlugin",shape="record"];
	"PIL.PixarImagePlugin" [label="<f0> SourceModule| <f1> PIL.PixarImagePlugin",shape="record"];
	"PIL.PdfImagePlugin" [label="<f0> SourceModule| <f1> PIL.PdfImagePlugin",shape="record"];
	"PIL.features" [label="<f0> SourceModule| <f1> PIL.features",shape="record"];
	"PIL.PdfParser" [label="<f0> SourceModule| <f1> PIL.PdfParser",shape="record"];
	"PIL.ImageSequence" [label="<f0> SourceModule| <f1> PIL.ImageSequence",shape="record"];
	"PIL.PcxImagePlugin" [label="<f0> SourceModule| <f1> PIL.PcxImagePlugin",shape="record"];
	"PIL.PcdImagePlugin" [label="<f0> SourceModule| <f1> PIL.PcdImagePlugin",shape="record"];
	"PIL.PalmImagePlugin" [label="<f0> SourceModule| <f1> PIL.PalmImagePlugin",shape="record"];
	"PIL.MspImagePlugin" [label="<f0> SourceModule| <f1> PIL.MspImagePlugin",shape="record"];
	"PIL.MpoImagePlugin" [label="<f0> SourceModule| <f1> PIL.MpoImagePlugin",shape="record"];
	"PIL.MpegImagePlugin" [label="<f0> SourceModule| <f1> PIL.MpegImagePlugin",shape="record"];
	"PIL.MicImagePlugin" [label="<f0> SourceModule| <f1> PIL.MicImagePlugin",shape="record"];
	"olefile" [label="<f0> MissingModule| <f1> olefile",shape="record"];
	"PIL.McIdasImagePlugin" [label="<f0> SourceModule| <f1> PIL.McIdasImagePlugin",shape="record"];
	"PIL.Jpeg2KImagePlugin" [label="<f0> SourceModule| <f1> PIL.Jpeg2KImagePlugin",shape="record"];
	"PIL.IptcImagePlugin" [label="<f0> SourceModule| <f1> PIL.IptcImagePlugin",shape="record"];
	"PIL.ImtImagePlugin" [label="<f0> SourceModule| <f1> PIL.ImtImagePlugin",shape="record"];
	"PIL.ImImagePlugin" [label="<f0> SourceModule| <f1> PIL.ImImagePlugin",shape="record"];
	"PIL.IcoImagePlugin" [label="<f0> SourceModule| <f1> PIL.IcoImagePlugin",shape="record"];
	"PIL.IcnsImagePlugin" [label="<f0> SourceModule| <f1> PIL.IcnsImagePlugin",shape="record"];
	"PIL.Hdf5StubImagePlugin" [label="<f0> SourceModule| <f1> PIL.Hdf5StubImagePlugin",shape="record"];
	"PIL.GribStubImagePlugin" [label="<f0> SourceModule| <f1> PIL.GribStubImagePlugin",shape="record"];
	"PIL.GbrImagePlugin" [label="<f0> SourceModule| <f1> PIL.GbrImagePlugin",shape="record"];
	"PIL.FtexImagePlugin" [label="<f0> SourceModule| <f1> PIL.FtexImagePlugin",shape="record"];
	"PIL.FpxImagePlugin" [label="<f0> SourceModule| <f1> PIL.FpxImagePlugin",shape="record"];
	"PIL.FliImagePlugin" [label="<f0> SourceModule| <f1> PIL.FliImagePlugin",shape="record"];
	"PIL.FitsImagePlugin" [label="<f0> SourceModule| <f1> PIL.FitsImagePlugin",shape="record"];
	"PIL.EpsImagePlugin" [label="<f0> SourceModule| <f1> PIL.EpsImagePlugin",shape="record"];
	"PIL.DdsImagePlugin" [label="<f0> SourceModule| <f1> PIL.DdsImagePlugin",shape="record"];
	"PIL.DcxImagePlugin" [label="<f0> SourceModule| <f1> PIL.DcxImagePlugin",shape="record"];
	"PIL.CurImagePlugin" [label="<f0> SourceModule| <f1> PIL.CurImagePlugin",shape="record"];
	"PIL.BufrStubImagePlugin" [label="<f0> SourceModule| <f1> PIL.BufrStubImagePlugin",shape="record"];
	"PIL.BlpImagePlugin" [label="<f0> SourceModule| <f1> PIL.BlpImagePlugin",shape="record"];
	"PIL.AvifImagePlugin" [label="<f0> SourceModule| <f1> PIL.AvifImagePlugin",shape="record"];
	"PIL._avif" [label="<f0> MissingModule| <f1> PIL._avif",shape="record"];
	"PIL.ImageShow" [label="<f0> SourceModule| <f1> PIL.ImageShow",shape="record"];
	"PIL.ImageColor" [label="<f0> SourceModule| <f1> PIL.ImageColor",shape="record"];
	"PIL.ImageCms" [label="<f0> SourceModule| <f1> PIL.ImageCms",shape="record"];
	"PIL.ImageWin" [label="<f0> SourceModule| <f1> PIL.ImageWin",shape="record"];
	"PIL._imagingcms" [label="<f0> Extension| <f1> PIL._imagingcms",shape="record"];
	"PIL.PngImagePlugin" [label="<f0> SourceModule| <f1> PIL.PngImagePlugin",shape="record"];
	"PIL.ImageChops" [label="<f0> SourceModule| <f1> PIL.ImageChops",shape="record"];
	"PIL.PpmImagePlugin" [label="<f0> SourceModule| <f1> PIL.PpmImagePlugin",shape="record"];
	"PIL.JpegImagePlugin" [label="<f0> SourceModule| <f1> PIL.JpegImagePlugin",shape="record"];
	"PIL.JpegPresets" [label="<f0> SourceModule| <f1> PIL.JpegPresets",shape="record"];
	"PIL.GifImagePlugin" [label="<f0> SourceModule| <f1> PIL.GifImagePlugin",shape="record"];
	"PIL.ImageOps" [label="<f0> SourceModule| <f1> PIL.ImageOps",shape="record"];
	"PIL.ImageMath" [label="<f0> SourceModule| <f1> PIL.ImageMath",shape="record"];
	"PIL._imagingmath" [label="<f0> Extension| <f1> PIL._imagingmath",shape="record"];
	"PIL.BmpImagePlugin" [label="<f0> SourceModule| <f1> PIL.BmpImagePlugin",shape="record"];
	"PIL._typing" [label="<f0> SourceModule| <f1> PIL._typing",shape="record"];
	"PIL.TiffImagePlugin" [label="<f0> SourceModule| <f1> PIL.TiffImagePlugin",shape="record"];
	"PIL.ImageQt" [label="<f0> SourceModule| <f1> PIL.ImageQt",shape="record"];
	"PIL.ImagePalette" [label="<f0> SourceModule| <f1> PIL.ImagePalette",shape="record"];
	"PIL.PaletteFile" [label="<f0> SourceModule| <f1> PIL.PaletteFile",shape="record"];
	"PIL.GimpPaletteFile" [label="<f0> SourceModule| <f1> PIL.GimpPaletteFile",shape="record"];
	"PIL.GimpGradientFile" [label="<f0> SourceModule| <f1> PIL.GimpGradientFile",shape="record"];
	"PIL.ImageFilter" [label="<f0> SourceModule| <f1> PIL.ImageFilter",shape="record"];
	"PIL.ImageFile" [label="<f0> SourceModule| <f1> PIL.ImageFile",shape="record"];
	"PIL._imaging" [label="<f0> Extension| <f1> PIL._imaging",shape="record"];
	"defusedxml" [label="<f0> MissingModule| <f1> defusedxml",shape="record"];
	"PIL._util" [label="<f0> SourceModule| <f1> PIL._util",shape="record"];
	"PIL._deprecate" [label="<f0> SourceModule| <f1> PIL._deprecate",shape="record"];
	"PIL._binary" [label="<f0> SourceModule| <f1> PIL._binary",shape="record"];
	"PIL.TiffTags" [label="<f0> SourceModule| <f1> PIL.TiffTags",shape="record"];
	"PIL.ImageMode" [label="<f0> SourceModule| <f1> PIL.ImageMode",shape="record"];
	"PIL.ExifTags" [label="<f0> SourceModule| <f1> PIL.ExifTags",shape="record"];
	"PIL" [label="<f0> Package| <f1> PIL",shape="record"];
	"PIL.ImageDraw2" [label="<f0> SourceModule| <f1> PIL.ImageDraw2",shape="record"];
	"PIL.ImagePath" [label="<f0> SourceModule| <f1> PIL.ImagePath",shape="record"];
	"PIL.ImageFont" [label="<f0> SourceModule| <f1> PIL.ImageFont",shape="record"];
	"PIL._imagingft" [label="<f0> Extension| <f1> PIL._imagingft",shape="record"];
	"PIL.ImageDraw" [label="<f0> SourceModule| <f1> PIL.ImageDraw",shape="record"];
	"PIL._version" [label="<f0> SourceModule| <f1> PIL._version",shape="record"];
	"vertexai.caching" [label="<f0> Package| <f1> vertexai.caching",shape="record"];
	"vertexai.caching._caching" [label="<f0> SourceModule| <f1> vertexai.caching._caching",shape="record"];
	"google.cloud.aiplatform.jobs" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.jobs",shape="record"];
	"google.cloud.aiplatform._publisher_models" [label="<f0> SourceModule| <f1> google.cloud.aiplatform._publisher_models",shape="record"];
	"google.cloud.aiplatform.model_monitoring" [label="<f0> Package| <f1> google.cloud.aiplatform.model_monitoring",shape="record"];
	"google.cloud.aiplatform.model_monitoring.schedule" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.model_monitoring.schedule",shape="record"];
	"google.cloud.aiplatform.model_monitoring.sampling" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.model_monitoring.sampling",shape="record"];
	"google.cloud.aiplatform.model_monitoring.objective" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.model_monitoring.objective",shape="record"];
	"google.cloud.aiplatform.model_monitoring.alert" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.model_monitoring.alert",shape="record"];
	"google.cloud.aiplatform.hyperparameter_tuning" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.hyperparameter_tuning",shape="record"];
	"google.cloud.aiplatform.metadata.constants" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.constants",shape="record"];
	"vertexai.tuning._supervised_tuning" [label="<f0> SourceModule| <f1> vertexai.tuning._supervised_tuning",shape="record"];
	"vertexai.preview.tuning" [label="<f0> Package| <f1> vertexai.preview.tuning",shape="record"];
	"vertexai.preview" [label="<f0> Package| <f1> vertexai.preview",shape="record"];
	"google.cloud.aiplatform.metadata.metadata" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.metadata",shape="record"];
	"google.cloud.aiplatform._mlflow_plugin._vertex_mlflow_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform._mlflow_plugin._vertex_mlflow_tracking",shape="record"];
	"google.cloud.aiplatform._mlflow_plugin" [label="<f0> Package| <f1> google.cloud.aiplatform._mlflow_plugin",shape="record"];
	"'mlflow.store'" [label="<f0> MissingModule| <f1> 'mlflow.store'",shape="record"];
	"'mlflow.tracking'" [label="<f0> MissingModule| <f1> 'mlflow.tracking'",shape="record"];
	"google.cloud.aiplatform.tensorboard.tensorboard_resource" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.tensorboard.tensorboard_resource",shape="record"];
	"google.cloud.aiplatform.tensorboard" [label="<f0> Package| <f1> google.cloud.aiplatform.tensorboard",shape="record"];
	"google.cloud.aiplatform.tensorboard.uploader_tracker" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.tensorboard.uploader_tracker",shape="record"];
	"google.cloud.aiplatform.tensorboard.uploader" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.tensorboard.uploader",shape="record"];
	"'tensorboard.util'" [label="<f0> MissingModule| <f1> 'tensorboard.util'",shape="record"];
	"'tensorboard.plugins'" [label="<f0> MissingModule| <f1> 'tensorboard.plugins'",shape="record"];
	"'tensorboard.compat'" [label="<f0> MissingModule| <f1> 'tensorboard.compat'",shape="record"];
	"'tensorboard.backend'" [label="<f0> MissingModule| <f1> 'tensorboard.backend'",shape="record"];
	"tensorflow" [label="<f0> MissingModule| <f1> tensorflow",shape="record"];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader",shape="record"];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.tensorboard.plugins.tf_profiler",shape="record"];
	"google.cloud.aiplatform.tensorboard.plugins" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.tensorboard.plugins",shape="record"];
	"google.cloud.aiplatform.tensorboard.uploader_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.tensorboard.uploader_utils",shape="record"];
	"absl" [label="<f0> MissingModule| <f1> absl",shape="record"];
	"google.cloud.aiplatform.tensorboard.uploader_constants" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.tensorboard.uploader_constants",shape="record"];
	"google.cloud.aiplatform.tensorboard.upload_tracker" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.tensorboard.upload_tracker",shape="record"];
	"google.cloud.aiplatform.tensorboard.logdir_loader" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.tensorboard.logdir_loader",shape="record"];
	"tensorboard" [label="<f0> MissingModule| <f1> tensorboard",shape="record"];
	"google.cloud.aiplatform.metadata.schema.google.artifact_schema" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.schema.google.artifact_schema",shape="record"];
	"google.cloud.aiplatform.models" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.models",shape="record"];
	"requests_toolbelt.adapters.socket_options" [label="<f0> SourceModule| <f1> requests_toolbelt.adapters.socket_options",shape="record"];
	"google.cloud.aiplatform.preview.models" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.preview.models",shape="record"];
	"google.cloud.aiplatform.preview" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.preview",shape="record"];
	"google.cloud.aiplatform.prediction" [label="<f0> Package| <f1> google.cloud.aiplatform.prediction",shape="record"];
	"google.cloud.aiplatform.prediction.serializer" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.prediction.serializer",shape="record"];
	"fastapi" [label="<f0> MissingModule| <f1> fastapi",shape="record"];
	"google.cloud.aiplatform.prediction.predictor" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.prediction.predictor",shape="record"];
	"google.cloud.aiplatform.prediction.local_model" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.prediction.local_model",shape="record"];
	"google.cloud.aiplatform.docker_utils.utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.docker_utils.utils",shape="record"];
	"docker" [label="<f0> MissingModule| <f1> docker",shape="record"];
	"google.cloud.aiplatform.docker_utils.local_util" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.docker_utils.local_util",shape="record"];
	"google.cloud.aiplatform.docker_utils.errors" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.docker_utils.errors",shape="record"];
	"google.cloud.aiplatform.docker_utils.build" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.docker_utils.build",shape="record"];
	"google.cloud.aiplatform.docker_utils" [label="<f0> Package| <f1> google.cloud.aiplatform.docker_utils",shape="record"];
	"google.cloud.aiplatform.docker_utils.run" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.docker_utils.run",shape="record"];
	"google.cloud.aiplatform.helpers" [label="<f0> Package| <f1> google.cloud.aiplatform.helpers",shape="record"];
	"google.cloud.aiplatform.helpers.container_uri_builders" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.helpers.container_uri_builders",shape="record"];
	"google.cloud.aiplatform.prediction.local_endpoint" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.prediction.local_endpoint",shape="record"];
	"google.cloud.aiplatform.prediction.handler" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.prediction.handler",shape="record"];
	"google.cloud.aiplatform.prediction.handler_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.prediction.handler_utils",shape="record"];
	"starlette" [label="<f0> MissingModule| <f1> starlette",shape="record"];
	"google.cloud.aiplatform.metadata.schema.utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.schema.utils",shape="record"];
	"google.cloud.aiplatform.metadata.schema.base_artifact" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.schema.base_artifact",shape="record"];
	"google.cloud.aiplatform.metadata.artifact" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.artifact",shape="record"];
	"google.cloud.aiplatform.metadata.utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.utils",shape="record"];
	"google.cloud.aiplatform.metadata.resource" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.resource",shape="record"];
	"google.cloud.aiplatform.metadata.metadata_store" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.metadata_store",shape="record"];
	"google.cloud.aiplatform.metadata.schema" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.metadata.schema",shape="record"];
	"google.cloud.aiplatform.metadata._models" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata._models",shape="record"];
	"'sklearn.v1_0_2'" [label="<f0> MissingModule| <f1> 'sklearn.v1_0_2'",shape="record"];
	"xgboost" [label="<f0> MissingModule| <f1> xgboost",shape="record"];
	"sklearn" [label="<f0> MissingModule| <f1> sklearn",shape="record"];
	"google.cloud.aiplatform.explain" [label="<f0> Package| <f1> google.cloud.aiplatform.explain",shape="record"];
	"google.cloud.aiplatform.metadata.schema.google" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.metadata.schema.google",shape="record"];
	"google.cloud.aiplatform.metadata.execution" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.execution",shape="record"];
	"google.cloud.aiplatform.metadata.context" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.context",shape="record"];
	"google.cloud.aiplatform.pipeline_jobs" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.pipeline_jobs",shape="record"];
	"kfp" [label="<f0> MissingModule| <f1> kfp",shape="record"];
	"google.cloud.aiplatform.model_evaluation" [label="<f0> Package| <f1> google.cloud.aiplatform.model_evaluation",shape="record"];
	"google.cloud.aiplatform.model_evaluation.model_evaluation_job" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.model_evaluation.model_evaluation_job",shape="record"];
	"google.cloud.aiplatform._pipeline_based_service.pipeline_based_service" [label="<f0> SourceModule| <f1> google.cloud.aiplatform._pipeline_based_service.pipeline_based_service",shape="record"];
	"google.cloud.aiplatform._pipeline_based_service" [label="<f0> Package| <f1> google.cloud.aiplatform._pipeline_based_service",shape="record"];
	"google.cloud.aiplatform.model_evaluation.model_evaluation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.model_evaluation.model_evaluation",shape="record"];
	"google.cloud.aiplatform.metadata.experiment_run_resource" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.experiment_run_resource",shape="record"];
	"google.cloud.aiplatform.metadata.experiment_resources" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.metadata.experiment_resources",shape="record"];
	"google.cloud.aiplatform.metadata" [label="<f0> Package| <f1> google.cloud.aiplatform.metadata",shape="record"];
	"google.cloud.aiplatform.utils.rest_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.rest_utils",shape="record"];
	"google.cloud.aiplatform.utils._explanation_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils._explanation_utils",shape="record"];
	"google.cloud.aiplatform.utils.gcs_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.gcs_utils",shape="record"];
	"google.cloud.aiplatform.utils.resource_manager_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.resource_manager_utils",shape="record"];
	"google.cloud.resourcemanager" [label="<f0> Package| <f1> google.cloud.resourcemanager",shape="record"];
	"google.cloud.resourcemanager_v3.types.tag_values" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.types.tag_values",shape="record"];
	"google.cloud.resourcemanager_v3.types" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.types",shape="record"];
	"google.cloud.resourcemanager_v3" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.tag_values",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.pagers" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_values.pagers",shape="record"];
	"google.cloud.resourcemanager_v3.services" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.tag_keys",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.pagers" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_keys.pagers",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.tag_holds",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.pagers" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_holds.pagers",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.tag_bindings",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.pagers" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.pagers",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.projects",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.pagers" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.projects.pagers",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.organizations",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.pagers" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.organizations.pagers",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.folders",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.pagers" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.folders.pagers",shape="record"];
	"google.cloud.resourcemanager_v3.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.gapic_version",shape="record"];
	"google.cloud.resourcemanager_v3.types.tag_keys" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.types.tag_keys",shape="record"];
	"google.cloud.resourcemanager_v3.types.tag_holds" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.types.tag_holds",shape="record"];
	"google.cloud.resourcemanager_v3.types.tag_bindings" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.types.tag_bindings",shape="record"];
	"google.cloud.resourcemanager_v3.types.projects" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.types.projects",shape="record"];
	"google.cloud.resourcemanager_v3.types.organizations" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.types.organizations",shape="record"];
	"google.cloud.resourcemanager_v3.types.folders" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.types.folders",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_values.client",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_values.transports.rest",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.transports" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.tag_values.transports",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_values.transports.rest_base",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_values.transports.grpc",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_values.transports.base",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_values.async_client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_values.async_client",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_keys.client",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_keys.transports.rest",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.tag_keys.transports",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_keys.transports.rest_base",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_keys.transports.base",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_keys.async_client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_keys.async_client",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_holds.client",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_holds.transports.rest",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.tag_holds.transports",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_holds.transports.rest_base",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_holds.transports.base",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_holds.async_client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_holds.async_client",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.client",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.transports",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest_base",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.transports.base",shape="record"];
	"google.cloud.resourcemanager_v3.services.tag_bindings.async_client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.tag_bindings.async_client",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.projects.client",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.projects.transports.rest",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.transports" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.projects.transports",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.projects.transports.rest_base",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.projects.transports.grpc",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.transports.base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.projects.transports.base",shape="record"];
	"google.cloud.resourcemanager_v3.services.projects.async_client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.projects.async_client",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.organizations.client",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.organizations.transports.rest",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.transports" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.organizations.transports",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.organizations.transports.rest_base",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.organizations.transports.grpc",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.transports.base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.organizations.transports.base",shape="record"];
	"google.cloud.resourcemanager_v3.services.organizations.async_client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.organizations.async_client",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.folders.client",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.folders.transports.rest",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.transports" [label="<f0> Package| <f1> google.cloud.resourcemanager_v3.services.folders.transports",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest_base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.folders.transports.rest_base",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.folders.transports.grpc",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.transports.base" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.folders.transports.base",shape="record"];
	"google.cloud.resourcemanager_v3.services.folders.async_client" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager_v3.services.folders.async_client",shape="record"];
	"google.cloud.resourcemanager.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.resourcemanager.gapic_version",shape="record"];
	"google.cloud.aiplatform.utils.worker_spec_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.worker_spec_utils",shape="record"];
	"google.cloud.aiplatform.utils.source_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.source_utils",shape="record"];
	"google.cloud.aiplatform.utils.console_utils" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.console_utils",shape="record"];
	"google.cloud.aiplatform.constants.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.constants.base",shape="record"];
	"google.cloud.aiplatform.constants" [label="<f0> Package| <f1> google.cloud.aiplatform.constants",shape="record"];
	"google.cloud.aiplatform.constants.schedule" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.constants.schedule",shape="record"];
	"google.cloud.aiplatform.matching_engine" [label="<f0> Package| <f1> google.cloud.aiplatform.matching_engine",shape="record"];
	"google.cloud.aiplatform.matching_engine.matching_engine_index" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.matching_engine.matching_engine_index",shape="record"];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.matching_engine.matching_engine_index_config",shape="record"];
	"google.cloud.aiplatform.initializer" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.initializer",shape="record"];
	"google.cloud.aiplatform.telemetry" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.telemetry",shape="record"];
	"google.cloud.aiplatform.base" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.base",shape="record"];
	"google.cloud.aiplatform" [label="<f0> Package| <f1> google.cloud.aiplatform",shape="record"];
	"google.cloud.aiplatform._streaming_prediction" [label="<f0> SourceModule| <f1> google.cloud.aiplatform._streaming_prediction",shape="record"];
	"google.cloud.aiplatform.training_jobs" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.training_jobs",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.export_evaluated_data_items_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.export_evaluated_data_items_config",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_object_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_object_tracking",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_action_recognition" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_action_recognition",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_sentiment" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_sentiment",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_extraction" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_extraction",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_tables" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_tables",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_segmentation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_segmentation",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_object_detection" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_object_detection",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.trainingjob",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition",shape="record"];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.trainingjob.definition.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1.schema" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.prediction",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_object_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_object_tracking",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_action_recognition" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_action_recognition",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_sentiment" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_sentiment",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_extraction" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_extraction",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_regression" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_regression",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_segmentation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_segmentation",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_object_detection" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_object_detection",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.prediction.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.prediction.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.params",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_object_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_object_tracking",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1.types",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_action_recognition" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_action_recognition",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_segmentation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_segmentation",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_object_detection" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_object_detection",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.params.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.params.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.instance",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_object_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_object_tracking",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1" [label="<f0> Package| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_action_recognition" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_action_recognition",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_sentiment" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_sentiment",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_extraction" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_extraction",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_segmentation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_segmentation",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_object_detection" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_object_detection",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_classification",shape="record"];
	"google.cloud.aiplatform.v1.schema.predict.instance.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1.schema.predict.instance.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.v1",shape="record"];
	"google.cloud.aiplatform.pipeline_job_schedules" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.pipeline_job_schedules",shape="record"];
	"google.cloud.aiplatform.schedules" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.schedules",shape="record"];
	"google.cloud.aiplatform.featurestore" [label="<f0> Package| <f1> google.cloud.aiplatform.featurestore",shape="record"];
	"google.cloud.aiplatform.featurestore.featurestore" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.featurestore.featurestore",shape="record"];
	"google.cloud.aiplatform.featurestore.feature" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.featurestore.feature",shape="record"];
	"google.cloud.aiplatform.featurestore.entity_type" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.featurestore.entity_type",shape="record"];
	"google.cloud.aiplatform.preview.featurestore.entity_type" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.preview.featurestore.entity_type",shape="record"];
	"google.cloud.aiplatform.preview.featurestore" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.preview.featurestore",shape="record"];
	"google.cloud.aiplatform.featurestore._entity_type" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.featurestore._entity_type",shape="record"];
	"google.cloud.aiplatform.gapic" [label="<f0> Package| <f1> google.cloud.aiplatform.gapic",shape="record"];
	"google.cloud.aiplatform.gapic.schema" [label="<f0> Package| <f1> google.cloud.aiplatform.gapic.schema",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_object_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_object_tracking",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_action_recognition" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_action_recognition",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_time_series_forecasting" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_time_series_forecasting",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_sentiment" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_sentiment",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_extraction" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_extraction",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_tables" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_tables",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.export_evaluated_data_items_config" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.export_evaluated_data_items_config",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_segmentation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_segmentation",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_object_detection" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_object_detection",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_object_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_object_tracking",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_action_recognition" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_action_recognition",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.time_series_forecasting" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.time_series_forecasting",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_sentiment" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_sentiment",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_extraction" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_extraction",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_regression" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_regression",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_segmentation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_segmentation",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_object_detection" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_object_detection",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_object_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_object_tracking",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_action_recognition" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_action_recognition",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_segmentation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_segmentation",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_object_detection" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_object_detection",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_object_tracking" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_object_tracking",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_action_recognition" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_action_recognition",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_sentiment" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_sentiment",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_extraction" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_extraction",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_segmentation" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_segmentation",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_object_detection" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_object_detection",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_classification" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_classification",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.prediction.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.params.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.params.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance.gapic_version" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.v1beta1.schema.predict.instance.gapic_version",shape="record"];
	"google.cloud.aiplatform.v1beta1.schema" [label="<f0> Package| <f1> google.cloud.aiplatform.v1beta1.schema",shape="record"];
	"google.cloud.aiplatform.v1beta1" [label="<f0> NamespacePackage| <f1> google.cloud.aiplatform.v1beta1",shape="record"];
	"google.cloud.aiplatform.utils.enhanced_library._decorators" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.enhanced_library._decorators",shape="record"];
	"google.cloud.aiplatform.utils.enhanced_library.value_converter" [label="<f0> SourceModule| <f1> google.cloud.aiplatform.utils.enhanced_library.value_converter",shape="record"];
	"google.cloud.aiplatform.utils.enhanced_library" [label="<f0> Package| <f1> google.cloud.aiplatform.utils.enhanced_library",shape="record"];
	"google.cloud.storage" [label="<f0> Package| <f1> google.cloud.storage",shape="record"];
	"google.cloud.storage.client" [label="<f0> SourceModule| <f1> google.cloud.storage.client",shape="record"];
	"google.cloud.storage.retry" [label="<f0> SourceModule| <f1> google.cloud.storage.retry",shape="record"];
	"google.cloud.storage.constants" [label="<f0> SourceModule| <f1> google.cloud.storage.constants",shape="record"];
	"google.cloud.storage.acl" [label="<f0> SourceModule| <f1> google.cloud.storage.acl",shape="record"];
	"google.cloud.storage.hmac_key" [label="<f0> SourceModule| <f1> google.cloud.storage.hmac_key",shape="record"];
	"google.cloud.storage._signing" [label="<f0> SourceModule| <f1> google.cloud.storage._signing",shape="record"];
	"google.cloud.storage._http" [label="<f0> SourceModule| <f1> google.cloud.storage._http",shape="record"];
	"google.cloud.storage._opentelemetry_tracing" [label="<f0> SourceModule| <f1> google.cloud.storage._opentelemetry_tracing",shape="record"];
	"google.cloud.storage.bucket" [label="<f0> SourceModule| <f1> google.cloud.storage.bucket",shape="record"];
	"google.cloud.storage.notification" [label="<f0> SourceModule| <f1> google.cloud.storage.notification",shape="record"];
	"google.cloud.storage.blob" [label="<f0> SourceModule| <f1> google.cloud.storage.blob",shape="record"];
	"google.cloud.storage.fileio" [label="<f0> SourceModule| <f1> google.cloud.storage.fileio",shape="record"];
	"google.cloud.storage.batch" [label="<f0> SourceModule| <f1> google.cloud.storage.batch",shape="record"];
	"email.mime.multipart" [label="<f0> SourceModule| <f1> email.mime.multipart",shape="record"];
	"email.mime" [label="<f0> Package| <f1> email.mime",shape="record"];
	"email.mime.base" [label="<f0> SourceModule| <f1> email.mime.base",shape="record"];
	"email.mime.application" [label="<f0> SourceModule| <f1> email.mime.application",shape="record"];
	"email.mime.nonmultipart" [label="<f0> SourceModule| <f1> email.mime.nonmultipart",shape="record"];
	"google.cloud.storage._helpers" [label="<f0> SourceModule| <f1> google.cloud.storage._helpers",shape="record"];
	"google.cloud.storage.version" [label="<f0> SourceModule| <f1> google.cloud.storage.version",shape="record"];
	"google.cloud" [label="<f0> NamespacePackage| <f1> google.cloud",shape="record"];
	"google.cloud.discoveryengine_v1beta" [label="<f0> MissingModule| <f1> google.cloud.discoveryengine_v1beta",shape="record"];
	"google.cloud.translate" [label="<f0> MissingModule| <f1> google.cloud.translate",shape="record"];
	"google.cloud.texttospeech" [label="<f0> MissingModule| <f1> google.cloud.texttospeech",shape="record"];
	"google.cloud.documentai" [label="<f0> MissingModule| <f1> google.cloud.documentai",shape="record"];
	"langchain_community.utilities.vertexai" [label="<f0> SourceModule| <f1> langchain_community.utilities.vertexai",shape="record"];
	"vertexai.preview.generative_models" [label="<f0> SourceModule| <f1> vertexai.preview.generative_models",shape="record"];
	"langchain_community.vectorstores.marqo" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.marqo",shape="record"];
	"marqo" [label="<f0> MissingModule| <f1> marqo",shape="record"];
	"langchain_community.vectorstores.manticore_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.manticore_search",shape="record"];
	"'manticoresearch.api_client'" [label="<f0> MissingModule| <f1> 'manticoresearch.api_client'",shape="record"];
	"manticoresearch" [label="<f0> MissingModule| <f1> manticoresearch",shape="record"];
	"langchain_community.vectorstores.llm_rails" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.llm_rails",shape="record"];
	"langchain_community.vectorstores.lantern" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.lantern",shape="record"];
	"langchain_community.vectorstores.lancedb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.lancedb",shape="record"];
	"langchain_community.vectorstores.kinetica" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.kinetica",shape="record"];
	"gpudb" [label="<f0> MissingModule| <f1> gpudb",shape="record"];
	"langchain_community.vectorstores.kdbai" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.kdbai",shape="record"];
	"kdbai_client" [label="<f0> MissingModule| <f1> kdbai_client",shape="record"];
	"langchain_community.vectorstores.inmemory" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.inmemory",shape="record"];
	"langchain_community.vectorstores.infinispanvs" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.infinispanvs",shape="record"];
	"langchain_community.vectorstores.hologres" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.hologres",shape="record"];
	"hologres_vector" [label="<f0> MissingModule| <f1> hologres_vector",shape="record"];
	"langchain_community.vectorstores.hanavector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.hanavector",shape="record"];
	"hdbcli" [label="<f0> MissingModule| <f1> hdbcli",shape="record"];
	"langchain_community.vectorstores.faiss" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.faiss",shape="record"];
	"faiss" [label="<f0> MissingModule| <f1> faiss",shape="record"];
	"langchain_community.vectorstores.epsilla" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.epsilla",shape="record"];
	"pyepsilla" [label="<f0> MissingModule| <f1> pyepsilla",shape="record"];
	"langchain_community.vectorstores.elasticsearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.elasticsearch",shape="record"];
	"'elasticsearch.helpers'" [label="<f0> MissingModule| <f1> 'elasticsearch.helpers'",shape="record"];
	"elasticsearch" [label="<f0> MissingModule| <f1> elasticsearch",shape="record"];
	"langchain_community.vectorstores.elastic_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.elastic_vector_search",shape="record"];
	"'elasticsearch.exceptions'" [label="<f0> MissingModule| <f1> 'elasticsearch.exceptions'",shape="record"];
	"langchain_community.vectorstores.ecloud_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.ecloud_vector_search",shape="record"];
	"langchain_community.vectorstores.duckdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.duckdb",shape="record"];
	"duckdb" [label="<f0> MissingModule| <f1> duckdb",shape="record"];
	"langchain_community.vectorstores.documentdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.documentdb",shape="record"];
	"'bson.objectid'" [label="<f0> MissingModule| <f1> 'bson.objectid'",shape="record"];
	"langchain_community.vectorstores.docarray" [label="<f0> Package| <f1> langchain_community.vectorstores.docarray",shape="record"];
	"langchain_community.vectorstores.docarray.in_memory" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.docarray.in_memory",shape="record"];
	"'docarray.index'" [label="<f0> MissingModule| <f1> 'docarray.index'",shape="record"];
	"langchain_community.vectorstores.docarray.base" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.docarray.base",shape="record"];
	"'docarray.typing'" [label="<f0> MissingModule| <f1> 'docarray.typing'",shape="record"];
	"docarray" [label="<f0> MissingModule| <f1> docarray",shape="record"];
	"langchain_community.vectorstores.docarray.hnsw" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.docarray.hnsw",shape="record"];
	"langchain_community.vectorstores.dingo" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.dingo",shape="record"];
	"dingodb" [label="<f0> MissingModule| <f1> dingodb",shape="record"];
	"langchain_community.vectorstores.deeplake" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.deeplake",shape="record"];
	"'deeplake.util'" [label="<f0> MissingModule| <f1> 'deeplake.util'",shape="record"];
	"'deeplake.core'" [label="<f0> MissingModule| <f1> 'deeplake.core'",shape="record"];
	"deeplake" [label="<f0> MissingModule| <f1> deeplake",shape="record"];
	"langchain_community.vectorstores.databricks_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.databricks_vector_search",shape="record"];
	"'databricks.vector_search'" [label="<f0> MissingModule| <f1> 'databricks.vector_search'",shape="record"];
	"langchain_community.vectorstores.dashvector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.dashvector",shape="record"];
	"dashvector" [label="<f0> MissingModule| <f1> dashvector",shape="record"];
	"langchain_community.vectorstores.couchbase" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.couchbase",shape="record"];
	"'couchbase.vector_search'" [label="<f0> MissingModule| <f1> 'couchbase.vector_search'",shape="record"];
	"'couchbase.options'" [label="<f0> MissingModule| <f1> 'couchbase.options'",shape="record"];
	"'couchbase.search'" [label="<f0> MissingModule| <f1> 'couchbase.search'",shape="record"];
	"'couchbase.exceptions'" [label="<f0> MissingModule| <f1> 'couchbase.exceptions'",shape="record"];
	"'couchbase.cluster'" [label="<f0> MissingModule| <f1> 'couchbase.cluster'",shape="record"];
	"langchain_community.vectorstores.clickhouse" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.clickhouse",shape="record"];
	"langchain_community.vectorstores.clarifai" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.clarifai",shape="record"];
	"clarifai_grpc" [label="<f0> MissingModule| <f1> clarifai_grpc",shape="record"];
	"'clarifai.client'" [label="<f0> MissingModule| <f1> 'clarifai.client'",shape="record"];
	"langchain_community.vectorstores.chroma" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.chroma",shape="record"];
	"'chromadb.utils'" [label="<f0> MissingModule| <f1> 'chromadb.utils'",shape="record"];
	"'chromadb.api'" [label="<f0> MissingModule| <f1> 'chromadb.api'",shape="record"];
	"'chromadb.config'" [label="<f0> MissingModule| <f1> 'chromadb.config'",shape="record"];
	"chromadb" [label="<f0> MissingModule| <f1> chromadb",shape="record"];
	"langchain_community.vectorstores.cassandra" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.cassandra",shape="record"];
	"'cassio.table'" [label="<f0> MissingModule| <f1> 'cassio.table'",shape="record"];
	"langchain_community.utilities.cassandra" [label="<f0> SourceModule| <f1> langchain_community.utilities.cassandra",shape="record"];
	"cassandra" [label="<f0> MissingModule| <f1> cassandra",shape="record"];
	"'cassandra.cluster'" [label="<f0> MissingModule| <f1> 'cassandra.cluster'",shape="record"];
	"langchain_community.vectorstores.bigquery_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.bigquery_vector_search",shape="record"];
	"langchain_community.utils.google" [label="<f0> SourceModule| <f1> langchain_community.utils.google",shape="record"];
	"langchain_community.vectorstores.baiduvectordb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.baiduvectordb",shape="record"];
	"langchain_community.vectorstores.baiducloud_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.baiducloud_vector_search",shape="record"];
	"langchain_community.vectorstores.bagel" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.bagel",shape="record"];
	"'bagel.api'" [label="<f0> MissingModule| <f1> 'bagel.api'",shape="record"];
	"'bagel.config'" [label="<f0> MissingModule| <f1> 'bagel.config'",shape="record"];
	"bagel" [label="<f0> MissingModule| <f1> bagel",shape="record"];
	"langchain_community.vectorstores.azuresearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.azuresearch",shape="record"];
	"'azure.identity'" [label="<f0> MissingModule| <f1> 'azure.identity'",shape="record"];
	"'azure.search'" [label="<f0> MissingModule| <f1> 'azure.search'",shape="record"];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.azure_cosmos_db_no_sql",shape="record"];
	"'azure.cosmos'" [label="<f0> MissingModule| <f1> 'azure.cosmos'",shape="record"];
	"langchain_community.vectorstores.azure_cosmos_db" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.azure_cosmos_db",shape="record"];
	"bson" [label="<f0> MissingModule| <f1> bson",shape="record"];
	"langchain_community.vectorstores.awadb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.awadb",shape="record"];
	"awadb" [label="<f0> MissingModule| <f1> awadb",shape="record"];
	"langchain_community.vectorstores.atlas" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.atlas",shape="record"];
	"nomic" [label="<f0> MissingModule| <f1> nomic",shape="record"];
	"langchain_community.vectorstores.astradb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.astradb",shape="record"];
	"'astrapy.db'" [label="<f0> MissingModule| <f1> 'astrapy.db'",shape="record"];
	"langchain_community.utilities.astradb" [label="<f0> SourceModule| <f1> langchain_community.utilities.astradb",shape="record"];
	"astrapy" [label="<f0> MissingModule| <f1> astrapy",shape="record"];
	"langchain_community.vectorstores.aperturedb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.aperturedb",shape="record"];
	"'aperturedb.ParallelLoader'" [label="<f0> MissingModule| <f1> 'aperturedb.ParallelLoader'",shape="record"];
	"'aperturedb.Descriptors'" [label="<f0> MissingModule| <f1> 'aperturedb.Descriptors'",shape="record"];
	"'aperturedb.Utils'" [label="<f0> MissingModule| <f1> 'aperturedb.Utils'",shape="record"];
	"aperturedb" [label="<f0> MissingModule| <f1> aperturedb",shape="record"];
	"langchain_core.indexing.base" [label="<f0> SourceModule| <f1> langchain_core.indexing.base",shape="record"];
	"langchain_core.indexing" [label="<f0> Package| <f1> langchain_core.indexing",shape="record"];
	"langchain_core.indexing.api" [label="<f0> SourceModule| <f1> langchain_core.indexing.api",shape="record"];
	"langchain_core.document_loaders.base" [label="<f0> SourceModule| <f1> langchain_core.document_loaders.base",shape="record"];
	"langchain_core.document_loaders" [label="<f0> Package| <f1> langchain_core.document_loaders",shape="record"];
	"langchain_core.document_loaders.langsmith" [label="<f0> SourceModule| <f1> langchain_core.document_loaders.langsmith",shape="record"];
	"langchain_core.document_loaders.blob_loaders" [label="<f0> SourceModule| <f1> langchain_core.document_loaders.blob_loaders",shape="record"];
	"langchain_core.documents.base" [label="<f0> SourceModule| <f1> langchain_core.documents.base",shape="record"];
	"langchain_community.vectorstores.apache_doris" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.apache_doris",shape="record"];
	"langchain_community.vectorstores.annoy" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.annoy",shape="record"];
	"langchain_community.vectorstores.analyticdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.analyticdb",shape="record"];
	"langchain_community.vectorstores.alibabacloud_opensearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.alibabacloud_opensearch",shape="record"];
	"'alibabacloud_ha3engine_vector.models'" [label="<f0> MissingModule| <f1> 'alibabacloud_ha3engine_vector.models'",shape="record"];
	"alibabacloud_tea_util" [label="<f0> MissingModule| <f1> alibabacloud_tea_util",shape="record"];
	"alibabacloud_ha3engine_vector" [label="<f0> MissingModule| <f1> alibabacloud_ha3engine_vector",shape="record"];
	"langchain_community.vectorstores.aerospike" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.aerospike",shape="record"];
	"'aerospike_vector_search.types'" [label="<f0> MissingModule| <f1> 'aerospike_vector_search.types'",shape="record"];
	"aerospike_vector_search" [label="<f0> MissingModule| <f1> aerospike_vector_search",shape="record"];
	"langchain_community.utilities" [label="<f0> Package| <f1> langchain_community.utilities",shape="record"];
	"langchain_community.utilities.zapier" [label="<f0> SourceModule| <f1> langchain_community.utilities.zapier",shape="record"];
	"langchain_community.utilities.you" [label="<f0> SourceModule| <f1> langchain_community.utilities.you",shape="record"];
	"langchain_community.utilities.wolfram_alpha" [label="<f0> SourceModule| <f1> langchain_community.utilities.wolfram_alpha",shape="record"];
	"wolframalpha" [label="<f0> MissingModule| <f1> wolframalpha",shape="record"];
	"langchain_community.utilities.wikipedia" [label="<f0> SourceModule| <f1> langchain_community.utilities.wikipedia",shape="record"];
	"wikipedia" [label="<f0> MissingModule| <f1> wikipedia",shape="record"];
	"langchain_community.utilities.twilio" [label="<f0> SourceModule| <f1> langchain_community.utilities.twilio",shape="record"];
	"twilio" [label="<f0> MissingModule| <f1> twilio",shape="record"];
	"langchain_community.utilities.tensorflow_datasets" [label="<f0> SourceModule| <f1> langchain_community.utilities.tensorflow_datasets",shape="record"];
	"tensorflow_datasets" [label="<f0> MissingModule| <f1> tensorflow_datasets",shape="record"];
	"langchain_community.utilities.steam" [label="<f0> SourceModule| <f1> langchain_community.utilities.steam",shape="record"];
	"steamspypi" [label="<f0> MissingModule| <f1> steamspypi",shape="record"];
	"decouple" [label="<f0> MissingModule| <f1> decouple",shape="record"];
	"steam" [label="<f0> MissingModule| <f1> steam",shape="record"];
	"langchain_community.tools.steam.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.steam.prompt",shape="record"];
	"langchain_community.tools.steam" [label="<f0> Package| <f1> langchain_community.tools.steam",shape="record"];
	"langchain_community.tools" [label="<f0> Package| <f1> langchain_community.tools",shape="record"];
	"langchain_community.tools.zenguard.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.zenguard.tool",shape="record"];
	"langchain_community.tools.zenguard" [label="<f0> Package| <f1> langchain_community.tools.zenguard",shape="record"];
	"langchain_community.tools.zapier.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.zapier.tool",shape="record"];
	"langchain_community.tools.zapier" [label="<f0> Package| <f1> langchain_community.tools.zapier",shape="record"];
	"langchain_community.tools.zapier.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.zapier.prompt",shape="record"];
	"langchain_community.tools.youtube.search" [label="<f0> SourceModule| <f1> langchain_community.tools.youtube.search",shape="record"];
	"langchain_community.tools.youtube" [label="<f0> Package| <f1> langchain_community.tools.youtube",shape="record"];
	"youtube_search" [label="<f0> MissingModule| <f1> youtube_search",shape="record"];
	"langchain_community.tools.you.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.you.tool",shape="record"];
	"langchain_community.tools.you" [label="<f0> Package| <f1> langchain_community.tools.you",shape="record"];
	"langchain_community.tools.yahoo_finance_news" [label="<f0> SourceModule| <f1> langchain_community.tools.yahoo_finance_news",shape="record"];
	"yfinance" [label="<f0> MissingModule| <f1> yfinance",shape="record"];
	"langchain_community.document_loaders.web_base" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.web_base",shape="record"];
	"fake_useragent" [label="<f0> MissingModule| <f1> fake_useragent",shape="record"];
	"langchain_community.utils.user_agent" [label="<f0> SourceModule| <f1> langchain_community.utils.user_agent",shape="record"];
	"langchain_community.document_loaders.base" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.base",shape="record"];
	"langchain_community.tools.wolfram_alpha.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.wolfram_alpha.tool",shape="record"];
	"langchain_community.tools.wolfram_alpha" [label="<f0> Package| <f1> langchain_community.tools.wolfram_alpha",shape="record"];
	"langchain_community.tools.wikipedia.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.wikipedia.tool",shape="record"];
	"langchain_community.tools.wikipedia" [label="<f0> Package| <f1> langchain_community.tools.wikipedia",shape="record"];
	"langchain_community.tools.vectorstore.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.vectorstore.tool",shape="record"];
	"langchain_community.tools.vectorstore" [label="<f0> Package| <f1> langchain_community.tools.vectorstore",shape="record"];
	"langchain.chains.qa_with_sources.retrieval" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.retrieval",shape="record"];
	"langchain.chains.qa_with_sources" [label="<f0> Package| <f1> langchain.chains.qa_with_sources",shape="record"];
	"langchain.chains.qa_with_sources.loading" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.loading",shape="record"];
	"langchain.chains.question_answering.map_rerank_prompt" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.map_rerank_prompt",shape="record"];
	"langchain.chains.question_answering" [label="<f0> Package| <f1> langchain.chains.question_answering",shape="record"];
	"langchain.chains.question_answering.chain" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.chain",shape="record"];
	"langchain.chains.ReduceDocumentsChain" [label="<f0> MissingModule| <f1> langchain.chains.ReduceDocumentsChain",shape="record"];
	"langchain.chains.question_answering.stuff_prompt" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.stuff_prompt",shape="record"];
	"langchain.chains.prompt_selector" [label="<f0> SourceModule| <f1> langchain.chains.prompt_selector",shape="record"];
	"langchain.chains.question_answering.refine_prompts" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.refine_prompts",shape="record"];
	"langchain.chains.question_answering.map_reduce_prompt" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.map_reduce_prompt",shape="record"];
	"langchain.chains.combine_documents.refine" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.refine",shape="record"];
	"langchain.chains.combine_documents" [label="<f0> Package| <f1> langchain.chains.combine_documents",shape="record"];
	"langchain.chains.combine_documents.reduce" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.reduce",shape="record"];
	"langchain.chains.combine_documents.map_rerank" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.map_rerank",shape="record"];
	"langchain.chains.combine_documents.map_reduce" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.map_reduce",shape="record"];
	"langchain.chains.combine_documents.base" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.base",shape="record"];
	"langchain.chains.qa_with_sources.stuff_prompt" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.stuff_prompt",shape="record"];
	"langchain.chains.qa_with_sources.refine_prompts" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.refine_prompts",shape="record"];
	"langchain.chains.qa_with_sources.map_reduce_prompt" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.map_reduce_prompt",shape="record"];
	"langchain.chains.qa_with_sources.base" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.base",shape="record"];
	"langchain.chains.combine_documents.stuff" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.stuff",shape="record"];
	"langchain.chains.retrieval_qa.base" [label="<f0> SourceModule| <f1> langchain.chains.retrieval_qa.base",shape="record"];
	"langchain.chains.retrieval_qa" [label="<f0> Package| <f1> langchain.chains.retrieval_qa",shape="record"];
	"langchain_community.llms.openai" [label="<f0> SourceModule| <f1> langchain_community.llms.openai",shape="record"];
	"langchain_community.tools.tavily_search" [label="<f0> Package| <f1> langchain_community.tools.tavily_search",shape="record"];
	"langchain_community.tools.tavily_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.tavily_search.tool",shape="record"];
	"langchain_community.utilities.tavily_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.tavily_search",shape="record"];
	"langchain_community.tools.steamship_image_generation" [label="<f0> Package| <f1> langchain_community.tools.steamship_image_generation",shape="record"];
	"langchain_community.tools.steamship_image_generation.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.steamship_image_generation.tool",shape="record"];
	"steamship" [label="<f0> MissingModule| <f1> steamship",shape="record"];
	"langchain_community.tools.steamship_image_generation.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.steamship_image_generation.utils",shape="record"];
	"'steamship.utils'" [label="<f0> MissingModule| <f1> 'steamship.utils'",shape="record"];
	"'steamship.data'" [label="<f0> MissingModule| <f1> 'steamship.data'",shape="record"];
	"langchain_community.tools.steam.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.steam.tool",shape="record"];
	"langchain_community.tools.stackexchange.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.stackexchange.tool",shape="record"];
	"langchain_community.tools.stackexchange" [label="<f0> Package| <f1> langchain_community.tools.stackexchange",shape="record"];
	"langchain_community.tools.sql_database.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.sql_database.tool",shape="record"];
	"langchain_community.tools.sql_database" [label="<f0> Package| <f1> langchain_community.tools.sql_database",shape="record"];
	"langchain_community.tools.sql_database.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.sql_database.prompt",shape="record"];
	"langchain_community.tools.spark_sql.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.spark_sql.tool",shape="record"];
	"langchain_community.tools.spark_sql" [label="<f0> Package| <f1> langchain_community.tools.spark_sql",shape="record"];
	"langchain_community.tools.spark_sql.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.spark_sql.prompt",shape="record"];
	"langchain_community.tools.sleep.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.sleep.tool",shape="record"];
	"langchain_community.tools.sleep" [label="<f0> Package| <f1> langchain_community.tools.sleep",shape="record"];
	"langchain_community.tools.slack.send_message" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.send_message",shape="record"];
	"langchain_community.tools.slack" [label="<f0> Package| <f1> langchain_community.tools.slack",shape="record"];
	"langchain_community.tools.slack.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.utils",shape="record"];
	"slack_sdk" [label="<f0> MissingModule| <f1> slack_sdk",shape="record"];
	"langchain_community.tools.slack.base" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.base",shape="record"];
	"langchain_community.tools.slack.schedule_message" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.schedule_message",shape="record"];
	"langchain_community.tools.slack.get_message" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.get_message",shape="record"];
	"langchain_community.tools.slack.get_channel" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.get_channel",shape="record"];
	"langchain_community.tools.shell.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.shell.tool",shape="record"];
	"langchain_community.tools.shell" [label="<f0> Package| <f1> langchain_community.tools.shell",shape="record"];
	"langchain_experimental.llm_bash.bash" [label="<f0> SourceModule| <f1> langchain_experimental.llm_bash.bash",shape="record"];
	"langchain_experimental.llm_bash" [label="<f0> Package| <f1> langchain_experimental.llm_bash",shape="record"];
	"langchain_experimental" [label="<f0> Package| <f1> langchain_experimental",shape="record"];
	"pexpect" [label="<f0> MissingModule| <f1> pexpect",shape="record"];
	"langchain_community.tools.searx_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.searx_search.tool",shape="record"];
	"langchain_community.tools.searx_search" [label="<f0> Package| <f1> langchain_community.tools.searx_search",shape="record"];
	"langchain_community.tools.searchapi.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.searchapi.tool",shape="record"];
	"langchain_community.tools.searchapi" [label="<f0> Package| <f1> langchain_community.tools.searchapi",shape="record"];
	"langchain_community.tools.scenexplain.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.scenexplain.tool",shape="record"];
	"langchain_community.tools.scenexplain" [label="<f0> Package| <f1> langchain_community.tools.scenexplain",shape="record"];
	"langchain_community.tools.requests.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.requests.tool",shape="record"];
	"langchain_community.tools.requests" [label="<f0> Package| <f1> langchain_community.tools.requests",shape="record"];
	"langchain_community.tools.reddit_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.reddit_search.tool",shape="record"];
	"langchain_community.tools.reddit_search" [label="<f0> NamespacePackage| <f1> langchain_community.tools.reddit_search",shape="record"];
	"langchain_community.utilities.reddit_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.reddit_search",shape="record"];
	"praw" [label="<f0> MissingModule| <f1> praw",shape="record"];
	"langchain_community.tools.pubmed.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.pubmed.tool",shape="record"];
	"langchain_community.tools.pubmed" [label="<f0> Package| <f1> langchain_community.tools.pubmed",shape="record"];
	"langchain_community.tools.powerbi.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.powerbi.tool",shape="record"];
	"langchain_community.tools.powerbi" [label="<f0> Package| <f1> langchain_community.tools.powerbi",shape="record"];
	"langchain_community.tools.powerbi.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.powerbi.prompt",shape="record"];
	"langchain_community.tools.polygon.ticker_news" [label="<f0> SourceModule| <f1> langchain_community.tools.polygon.ticker_news",shape="record"];
	"langchain_community.tools.polygon" [label="<f0> Package| <f1> langchain_community.tools.polygon",shape="record"];
	"langchain_community.utilities.polygon" [label="<f0> SourceModule| <f1> langchain_community.utilities.polygon",shape="record"];
	"langchain_community.tools.polygon.last_quote" [label="<f0> SourceModule| <f1> langchain_community.tools.polygon.last_quote",shape="record"];
	"langchain_community.tools.polygon.financials" [label="<f0> SourceModule| <f1> langchain_community.tools.polygon.financials",shape="record"];
	"langchain_community.tools.polygon.aggregates" [label="<f0> SourceModule| <f1> langchain_community.tools.polygon.aggregates",shape="record"];
	"langchain_community.tools.plugin" [label="<f0> SourceModule| <f1> langchain_community.tools.plugin",shape="record"];
	"langchain_community.tools.playwright" [label="<f0> Package| <f1> langchain_community.tools.playwright",shape="record"];
	"langchain_community.tools.playwright.navigate_back" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.navigate_back",shape="record"];
	"langchain_community.tools.playwright.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.utils",shape="record"];
	"'playwright.sync_api'" [label="<f0> MissingModule| <f1> 'playwright.sync_api'",shape="record"];
	"'playwright.async_api'" [label="<f0> MissingModule| <f1> 'playwright.async_api'",shape="record"];
	"langchain_community.tools.playwright.base" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.base",shape="record"];
	"langchain_community.tools.playwright.navigate" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.navigate",shape="record"];
	"langchain_community.tools.playwright.get_elements" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.get_elements",shape="record"];
	"langchain_community.tools.playwright.extract_text" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.extract_text",shape="record"];
	"langchain_community.tools.playwright.extract_hyperlinks" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.extract_hyperlinks",shape="record"];
	"langchain_community.tools.playwright.current_page" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.current_page",shape="record"];
	"langchain_community.tools.playwright.click" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.click",shape="record"];
	"langchain_community.tools.openweathermap.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.openweathermap.tool",shape="record"];
	"langchain_community.tools.openweathermap" [label="<f0> Package| <f1> langchain_community.tools.openweathermap",shape="record"];
	"langchain_community.tools.openapi.utils.openapi_utils" [label="<f0> SourceModule| <f1> langchain_community.tools.openapi.utils.openapi_utils",shape="record"];
	"langchain_community.tools.openapi.utils" [label="<f0> Package| <f1> langchain_community.tools.openapi.utils",shape="record"];
	"langchain_community.tools.openapi" [label="<f0> Package| <f1> langchain_community.tools.openapi",shape="record"];
	"langchain_community.utilities.openapi" [label="<f0> SourceModule| <f1> langchain_community.utilities.openapi",shape="record"];
	"openapi_pydantic" [label="<f0> MissingModule| <f1> openapi_pydantic",shape="record"];
	"langchain_community.tools.openapi.utils.api_models" [label="<f0> SourceModule| <f1> langchain_community.tools.openapi.utils.api_models",shape="record"];
	"langchain_community.tools.office365.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.utils",shape="record"];
	"langchain_community.tools.office365" [label="<f0> Package| <f1> langchain_community.tools.office365",shape="record"];
	"O365" [label="<f0> MissingModule| <f1> O365",shape="record"];
	"langchain_community.tools.office365.send_message" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.send_message",shape="record"];
	"langchain_community.tools.office365.base" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.base",shape="record"];
	"langchain_community.tools.office365.send_event" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.send_event",shape="record"];
	"langchain_community.tools.office365.messages_search" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.messages_search",shape="record"];
	"langchain_community.tools.office365.events_search" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.events_search",shape="record"];
	"langchain_community.tools.office365.create_draft_message" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.create_draft_message",shape="record"];
	"langchain_community.tools.nasa.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.nasa.tool",shape="record"];
	"langchain_community.tools.nasa" [label="<f0> Package| <f1> langchain_community.tools.nasa",shape="record"];
	"langchain_community.tools.mojeek_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.mojeek_search.tool",shape="record"];
	"langchain_community.tools.mojeek_search" [label="<f0> Package| <f1> langchain_community.tools.mojeek_search",shape="record"];
	"langchain_community.tools.metaphor_search" [label="<f0> Package| <f1> langchain_community.tools.metaphor_search",shape="record"];
	"langchain_community.tools.metaphor_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.metaphor_search.tool",shape="record"];
	"langchain_community.tools.merriam_webster.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.merriam_webster.tool",shape="record"];
	"langchain_community.tools.merriam_webster" [label="<f0> Package| <f1> langchain_community.tools.merriam_webster",shape="record"];
	"langchain_community.tools.json.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.json.tool",shape="record"];
	"langchain_community.tools.json" [label="<f0> Package| <f1> langchain_community.tools.json",shape="record"];
	"langchain_community.tools.jira.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.jira.tool",shape="record"];
	"langchain_community.tools.jira" [label="<f0> Package| <f1> langchain_community.tools.jira",shape="record"];
	"langchain_community.tools.jina_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.jina_search.tool",shape="record"];
	"langchain_community.tools.jina_search" [label="<f0> Package| <f1> langchain_community.tools.jina_search",shape="record"];
	"langchain_community.utilities.jina_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.jina_search",shape="record"];
	"langchain_community.tools.interaction.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.interaction.tool",shape="record"];
	"langchain_community.tools.interaction" [label="<f0> Package| <f1> langchain_community.tools.interaction",shape="record"];
	"langchain_community.tools.ifttt" [label="<f0> SourceModule| <f1> langchain_community.tools.ifttt",shape="record"];
	"langchain_community.tools.human.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.human.tool",shape="record"];
	"langchain_community.tools.human" [label="<f0> Package| <f1> langchain_community.tools.human",shape="record"];
	"langchain_community.tools.graphql.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.graphql.tool",shape="record"];
	"langchain_community.tools.graphql" [label="<f0> Package| <f1> langchain_community.tools.graphql",shape="record"];
	"langchain_community.tools.google_serper.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_serper.tool",shape="record"];
	"langchain_community.tools.google_serper" [label="<f0> Package| <f1> langchain_community.tools.google_serper",shape="record"];
	"langchain_community.tools.google_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_search.tool",shape="record"];
	"langchain_community.tools.google_search" [label="<f0> Package| <f1> langchain_community.tools.google_search",shape="record"];
	"langchain_community.tools.google_places.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_places.tool",shape="record"];
	"langchain_community.tools.google_places" [label="<f0> Package| <f1> langchain_community.tools.google_places",shape="record"];
	"langchain_community.tools.google_cloud.texttospeech" [label="<f0> SourceModule| <f1> langchain_community.tools.google_cloud.texttospeech",shape="record"];
	"langchain_community.tools.google_cloud" [label="<f0> Package| <f1> langchain_community.tools.google_cloud",shape="record"];
	"langchain_community.tools.google_books" [label="<f0> SourceModule| <f1> langchain_community.tools.google_books",shape="record"];
	"langchain_community.tools.gmail" [label="<f0> Package| <f1> langchain_community.tools.gmail",shape="record"];
	"langchain_community.tools.gmail.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.utils",shape="record"];
	"googleapiclient.discovery" [label="<f0> SourceModule| <f1> googleapiclient.discovery",shape="record"];
	"googleapiclient.discovery_cache" [label="<f0> Package| <f1> googleapiclient.discovery_cache",shape="record"];
	"googleapiclient.discovery_cache.file_cache" [label="<f0> SourceModule| <f1> googleapiclient.discovery_cache.file_cache",shape="record"];
	"'oauth2client.locked_file'" [label="<f0> MissingModule| <f1> 'oauth2client.locked_file'",shape="record"];
	"'oauth2client.contrib'" [label="<f0> MissingModule| <f1> 'oauth2client.contrib'",shape="record"];
	"googleapiclient.discovery_cache.appengine_memcache" [label="<f0> SourceModule| <f1> googleapiclient.discovery_cache.appengine_memcache",shape="record"];
	"googleapiclient.discovery_cache.base" [label="<f0> SourceModule| <f1> googleapiclient.discovery_cache.base",shape="record"];
	"googleapiclient.schema" [label="<f0> SourceModule| <f1> googleapiclient.schema",shape="record"];
	"googleapiclient.model" [label="<f0> SourceModule| <f1> googleapiclient.model",shape="record"];
	"google.api_core.version_header" [label="<f0> SourceModule| <f1> google.api_core.version_header",shape="record"];
	"googleapiclient.version" [label="<f0> SourceModule| <f1> googleapiclient.version",shape="record"];
	"googleapiclient.http" [label="<f0> SourceModule| <f1> googleapiclient.http",shape="record"];
	"googleapiclient.errors" [label="<f0> SourceModule| <f1> googleapiclient.errors",shape="record"];
	"googleapiclient._helpers" [label="<f0> SourceModule| <f1> googleapiclient._helpers",shape="record"];
	"googleapiclient.mimeparse" [label="<f0> SourceModule| <f1> googleapiclient.mimeparse",shape="record"];
	"googleapiclient._auth" [label="<f0> SourceModule| <f1> googleapiclient._auth",shape="record"];
	"'oauth2client.client'" [label="<f0> MissingModule| <f1> 'oauth2client.client'",shape="record"];
	"oauth2client" [label="<f0> MissingModule| <f1> oauth2client",shape="record"];
	"googleapiclient" [label="<f0> Package| <f1> googleapiclient",shape="record"];
	"google_auth_httplib2" [label="<f0> SourceModule| <f1> google_auth_httplib2",shape="record"];
	"uritemplate" [label="<f0> Package| <f1> uritemplate",shape="record"];
	"uritemplate.api" [label="<f0> SourceModule| <f1> uritemplate.api",shape="record"];
	"uritemplate.template" [label="<f0> SourceModule| <f1> uritemplate.template",shape="record"];
	"uritemplate.orderedset" [label="<f0> SourceModule| <f1> uritemplate.orderedset",shape="record"];
	"uritemplate.variable" [label="<f0> SourceModule| <f1> uritemplate.variable",shape="record"];
	"httplib2" [label="<f0> Package| <f1> httplib2",shape="record"];
	"httplib2.certs" [label="<f0> SourceModule| <f1> httplib2.certs",shape="record"];
	"ca_certs_locater" [label="<f0> MissingModule| <f1> ca_certs_locater",shape="record"];
	"httplib2.iri2uri" [label="<f0> SourceModule| <f1> httplib2.iri2uri",shape="record"];
	"httplib2.error" [label="<f0> SourceModule| <f1> httplib2.error",shape="record"];
	"httplib2.auth" [label="<f0> SourceModule| <f1> httplib2.auth",shape="record"];
	"pyparsing" [label="<f0> Package| <f1> pyparsing",shape="record"];
	"pyparsing.common" [label="<f0> SourceModule| <f1> pyparsing.common",shape="record"];
	"pyparsing.testing" [label="<f0> SourceModule| <f1> pyparsing.testing",shape="record"];
	"pyparsing.unicode" [label="<f0> SourceModule| <f1> pyparsing.unicode",shape="record"];
	"pyparsing.helpers" [label="<f0> SourceModule| <f1> pyparsing.helpers",shape="record"];
	"pyparsing.results" [label="<f0> SourceModule| <f1> pyparsing.results",shape="record"];
	"pyparsing.core" [label="<f0> SourceModule| <f1> pyparsing.core",shape="record"];
	"pyparsing.diagram" [label="<f0> Package| <f1> pyparsing.diagram",shape="record"];
	"railroad" [label="<f0> MissingModule| <f1> railroad",shape="record"];
	"pyparsing.actions" [label="<f0> SourceModule| <f1> pyparsing.actions",shape="record"];
	"pyparsing.exceptions" [label="<f0> SourceModule| <f1> pyparsing.exceptions",shape="record"];
	"pyparsing.Word" [label="<f0> MissingModule| <f1> pyparsing.Word",shape="record"];
	"pyparsing.util" [label="<f0> SourceModule| <f1> pyparsing.util",shape="record"];
	"httplib2.socks" [label="<f0> SourceModule| <f1> httplib2.socks",shape="record"];
	"'google_auth_oauthlib.flow'" [label="<f0> MissingModule| <f1> 'google_auth_oauthlib.flow'",shape="record"];
	"langchain_community.tools.gmail.send_message" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.send_message",shape="record"];
	"langchain_community.tools.gmail.base" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.base",shape="record"];
	"email.mime.text" [label="<f0> SourceModule| <f1> email.mime.text",shape="record"];
	"langchain_community.tools.gmail.search" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.search",shape="record"];
	"langchain_community.tools.gmail.get_thread" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.get_thread",shape="record"];
	"langchain_community.tools.gmail.get_message" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.get_message",shape="record"];
	"langchain_community.tools.gmail.create_draft" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.create_draft",shape="record"];
	"langchain_community.tools.financial_datasets.income_statements" [label="<f0> SourceModule| <f1> langchain_community.tools.financial_datasets.income_statements",shape="record"];
	"langchain_community.tools.financial_datasets" [label="<f0> Package| <f1> langchain_community.tools.financial_datasets",shape="record"];
	"langchain_community.utilities.financial_datasets" [label="<f0> SourceModule| <f1> langchain_community.utilities.financial_datasets",shape="record"];
	"langchain_community.tools.financial_datasets.cash_flow_statements" [label="<f0> SourceModule| <f1> langchain_community.tools.financial_datasets.cash_flow_statements",shape="record"];
	"langchain_community.tools.financial_datasets.balance_sheets" [label="<f0> SourceModule| <f1> langchain_community.tools.financial_datasets.balance_sheets",shape="record"];
	"langchain_community.tools.file_management" [label="<f0> Package| <f1> langchain_community.tools.file_management",shape="record"];
	"langchain_community.tools.file_management.write" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.write",shape="record"];
	"langchain_community.tools.file_management.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.utils",shape="record"];
	"langchain_community.tools.file_management.read" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.read",shape="record"];
	"langchain_community.tools.file_management.move" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.move",shape="record"];
	"langchain_community.tools.file_management.list_dir" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.list_dir",shape="record"];
	"langchain_community.tools.file_management.file_search" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.file_search",shape="record"];
	"langchain_community.tools.file_management.delete" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.delete",shape="record"];
	"langchain_community.tools.file_management.copy" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.copy",shape="record"];
	"langchain_community.tools.eleven_labs.text2speech" [label="<f0> SourceModule| <f1> langchain_community.tools.eleven_labs.text2speech",shape="record"];
	"langchain_community.tools.eleven_labs" [label="<f0> Package| <f1> langchain_community.tools.eleven_labs",shape="record"];
	"elevenlabs" [label="<f0> MissingModule| <f1> elevenlabs",shape="record"];
	"langchain_community.tools.edenai" [label="<f0> Package| <f1> langchain_community.tools.edenai",shape="record"];
	"langchain_community.tools.edenai.text_moderation" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.text_moderation",shape="record"];
	"langchain_community.tools.edenai.ocr_invoiceparser" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.ocr_invoiceparser",shape="record"];
	"langchain_community.tools.edenai.ocr_identityparser" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.ocr_identityparser",shape="record"];
	"langchain_community.tools.edenai.image_objectdetection" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.image_objectdetection",shape="record"];
	"langchain_community.tools.edenai.image_explicitcontent" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.image_explicitcontent",shape="record"];
	"langchain_community.tools.edenai.edenai_base_tool" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.edenai_base_tool",shape="record"];
	"langchain_community.tools.edenai.audio_text_to_speech" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.audio_text_to_speech",shape="record"];
	"langchain_community.tools.edenai.audio_speech_to_text" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.audio_speech_to_text",shape="record"];
	"langchain_community.tools.e2b_data_analysis.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.e2b_data_analysis.tool",shape="record"];
	"langchain_community.tools.e2b_data_analysis" [label="<f0> Package| <f1> langchain_community.tools.e2b_data_analysis",shape="record"];
	"'e2b.templates'" [label="<f0> MissingModule| <f1> 'e2b.templates'",shape="record"];
	"e2b" [label="<f0> MissingModule| <f1> e2b",shape="record"];
	"langchain_community.tools.e2b_data_analysis.unparse" [label="<f0> SourceModule| <f1> langchain_community.tools.e2b_data_analysis.unparse",shape="record"];
	"langchain_community.tools.ddg_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.ddg_search.tool",shape="record"];
	"langchain_community.tools.ddg_search" [label="<f0> Package| <f1> langchain_community.tools.ddg_search",shape="record"];
	"langchain_community.tools.dataherald" [label="<f0> Package| <f1> langchain_community.tools.dataherald",shape="record"];
	"langchain_community.tools.dataherald.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.dataherald.tool",shape="record"];
	"langchain_community.tools.convert_to_openai" [label="<f0> SourceModule| <f1> langchain_community.tools.convert_to_openai",shape="record"];
	"langchain_community.tools.connery" [label="<f0> Package| <f1> langchain_community.tools.connery",shape="record"];
	"langchain_community.tools.connery.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.connery.tool",shape="record"];
	"langchain_community.tools.connery.models" [label="<f0> SourceModule| <f1> langchain_community.tools.connery.models",shape="record"];
	"langchain_community.tools.connery.service" [label="<f0> SourceModule| <f1> langchain_community.tools.connery.service",shape="record"];
	"langchain_community.tools.cogniswitch.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.cogniswitch.tool",shape="record"];
	"langchain_community.tools.cogniswitch" [label="<f0> Package| <f1> langchain_community.tools.cogniswitch",shape="record"];
	"langchain_community.tools.cassandra_database.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.cassandra_database.tool",shape="record"];
	"langchain_community.tools.cassandra_database" [label="<f0> Package| <f1> langchain_community.tools.cassandra_database",shape="record"];
	"langchain_community.utilities.cassandra_database" [label="<f0> SourceModule| <f1> langchain_community.utilities.cassandra_database",shape="record"];
	"'cassio.config'" [label="<f0> MissingModule| <f1> 'cassio.config'",shape="record"];
	"langchain_community.tools.brave_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.brave_search.tool",shape="record"];
	"langchain_community.tools.brave_search" [label="<f0> Package| <f1> langchain_community.tools.brave_search",shape="record"];
	"langchain_community.tools.bing_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.bing_search.tool",shape="record"];
	"langchain_community.tools.bing_search" [label="<f0> Package| <f1> langchain_community.tools.bing_search",shape="record"];
	"langchain_community.tools.bearly.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.bearly.tool",shape="record"];
	"langchain_community.tools.bearly" [label="<f0> Package| <f1> langchain_community.tools.bearly",shape="record"];
	"langchain_community.tools.azure_cognitive_services" [label="<f0> Package| <f1> langchain_community.tools.azure_cognitive_services",shape="record"];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.text_analytics_health",shape="record"];
	"'azure.ai'" [label="<f0> MissingModule| <f1> 'azure.ai'",shape="record"];
	"langchain_community.tools.azure_cognitive_services.text2speech" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.text2speech",shape="record"];
	"'azure.cognitiveservices'" [label="<f0> MissingModule| <f1> 'azure.cognitiveservices'",shape="record"];
	"langchain_community.tools.azure_cognitive_services.speech2text" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.speech2text",shape="record"];
	"langchain_community.tools.azure_cognitive_services.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.utils",shape="record"];
	"langchain_community.tools.azure_cognitive_services.image_analysis" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.image_analysis",shape="record"];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.form_recognizer",shape="record"];
	"langchain_community.tools.azure_ai_services" [label="<f0> Package| <f1> langchain_community.tools.azure_ai_services",shape="record"];
	"langchain_community.tools.azure_ai_services.text_to_speech" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.text_to_speech",shape="record"];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.text_analytics_for_health",shape="record"];
	"langchain_community.tools.azure_ai_services.speech_to_text" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.speech_to_text",shape="record"];
	"langchain_community.tools.azure_ai_services.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.utils",shape="record"];
	"langchain_community.tools.azure_ai_services.image_analysis" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.image_analysis",shape="record"];
	"langchain_community.tools.azure_ai_services.document_intelligence" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.document_intelligence",shape="record"];
	"langchain_community.tools.asknews.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.asknews.tool",shape="record"];
	"langchain_community.tools.asknews" [label="<f0> Package| <f1> langchain_community.tools.asknews",shape="record"];
	"langchain_community.tools.arxiv.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.arxiv.tool",shape="record"];
	"langchain_community.tools.arxiv" [label="<f0> Package| <f1> langchain_community.tools.arxiv",shape="record"];
	"langchain_community.tools.ainetwork.value" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.value",shape="record"];
	"langchain_community.tools.ainetwork" [label="<f0> Package| <f1> langchain_community.tools.ainetwork",shape="record"];
	"'ain.types'" [label="<f0> MissingModule| <f1> 'ain.types'",shape="record"];
	"langchain_community.tools.ainetwork.base" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.base",shape="record"];
	"'ain.ain'" [label="<f0> MissingModule| <f1> 'ain.ain'",shape="record"];
	"langchain_community.tools.ainetwork.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.utils",shape="record"];
	"ain" [label="<f0> MissingModule| <f1> ain",shape="record"];
	"langchain_community.tools.ainetwork.transfer" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.transfer",shape="record"];
	"langchain_community.tools.ainetwork.rule" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.rule",shape="record"];
	"langchain_community.tools.ainetwork.owner" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.owner",shape="record"];
	"langchain_community.tools.ainetwork.app" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.app",shape="record"];
	"'ain.utils'" [label="<f0> MissingModule| <f1> 'ain.utils'",shape="record"];
	"langchain_community.utilities.stackexchange" [label="<f0> SourceModule| <f1> langchain_community.utilities.stackexchange",shape="record"];
	"stackapi" [label="<f0> MissingModule| <f1> stackapi",shape="record"];
	"langchain_community.utilities.sql_database" [label="<f0> SourceModule| <f1> langchain_community.utilities.sql_database",shape="record"];
	"cnosdb_connector" [label="<f0> MissingModule| <f1> cnosdb_connector",shape="record"];
	"dbruntime" [label="<f0> MissingModule| <f1> dbruntime",shape="record"];
	"databricks" [label="<f0> MissingModule| <f1> databricks",shape="record"];
	"langchain_community.utilities.spark_sql" [label="<f0> SourceModule| <f1> langchain_community.utilities.spark_sql",shape="record"];
	"'pyspark.sql'" [label="<f0> MissingModule| <f1> 'pyspark.sql'",shape="record"];
	"langchain_community.utilities.serpapi" [label="<f0> SourceModule| <f1> langchain_community.utilities.serpapi",shape="record"];
	"serpapi" [label="<f0> MissingModule| <f1> serpapi",shape="record"];
	"langchain_community.utilities.searx_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.searx_search",shape="record"];
	"langchain_community.utilities.searchapi" [label="<f0> SourceModule| <f1> langchain_community.utilities.searchapi",shape="record"];
	"langchain_community.utilities.scenexplain" [label="<f0> SourceModule| <f1> langchain_community.utilities.scenexplain",shape="record"];
	"langchain_community.utilities.requests" [label="<f0> SourceModule| <f1> langchain_community.utilities.requests",shape="record"];
	"langchain_community.utilities.rememberizer" [label="<f0> SourceModule| <f1> langchain_community.utilities.rememberizer",shape="record"];
	"langchain_community.utilities.pubmed" [label="<f0> SourceModule| <f1> langchain_community.utilities.pubmed",shape="record"];
	"xmltodict" [label="<f0> MissingModule| <f1> xmltodict",shape="record"];
	"langchain_community.utilities.powerbi" [label="<f0> SourceModule| <f1> langchain_community.utilities.powerbi",shape="record"];
	"langchain_community.utilities.portkey" [label="<f0> SourceModule| <f1> langchain_community.utilities.portkey",shape="record"];
	"langchain_community.utilities.passio_nutrition_ai" [label="<f0> SourceModule| <f1> langchain_community.utilities.passio_nutrition_ai",shape="record"];
	"langchain_community.utilities.outline" [label="<f0> SourceModule| <f1> langchain_community.utilities.outline",shape="record"];
	"langchain_community.utilities.oracleai" [label="<f0> SourceModule| <f1> langchain_community.utilities.oracleai",shape="record"];
	"langchain_community.utilities.openweathermap" [label="<f0> SourceModule| <f1> langchain_community.utilities.openweathermap",shape="record"];
	"pyowm" [label="<f0> MissingModule| <f1> pyowm",shape="record"];
	"langchain_community.utilities.nvidia_riva" [label="<f0> SourceModule| <f1> langchain_community.utilities.nvidia_riva",shape="record"];
	"'riva.client'" [label="<f0> MissingModule| <f1> 'riva.client'",shape="record"];
	"riva" [label="<f0> MissingModule| <f1> riva",shape="record"];
	"wave" [label="<f0> SourceModule| <f1> wave",shape="record"];
	"audioop" [label="<f0> Extension| <f1> audioop",shape="record"];
	"chunk" [label="<f0> SourceModule| <f1> chunk",shape="record"];
	"langchain_community.utilities.nasa" [label="<f0> SourceModule| <f1> langchain_community.utilities.nasa",shape="record"];
	"langchain_community.utilities.mojeek_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.mojeek_search",shape="record"];
	"langchain_community.utilities.metaphor_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.metaphor_search",shape="record"];
	"langchain_community.utilities.merriam_webster" [label="<f0> SourceModule| <f1> langchain_community.utilities.merriam_webster",shape="record"];
	"langchain_community.utilities.max_compute" [label="<f0> SourceModule| <f1> langchain_community.utilities.max_compute",shape="record"];
	"odps" [label="<f0> MissingModule| <f1> odps",shape="record"];
	"langchain_community.utilities.jira" [label="<f0> SourceModule| <f1> langchain_community.utilities.jira",shape="record"];
	"atlassian" [label="<f0> MissingModule| <f1> atlassian",shape="record"];
	"langchain_community.utilities.infobip" [label="<f0> SourceModule| <f1> langchain_community.utilities.infobip",shape="record"];
	"langchain_community.utilities.graphql" [label="<f0> SourceModule| <f1> langchain_community.utilities.graphql",shape="record"];
	"'gql.transport'" [label="<f0> MissingModule| <f1> 'gql.transport'",shape="record"];
	"gql" [label="<f0> MissingModule| <f1> gql",shape="record"];
	"langchain_community.utilities.google_trends" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_trends",shape="record"];
	"langchain_community.utilities.google_serper" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_serper",shape="record"];
	"langchain_community.utilities.google_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_search",shape="record"];
	"langchain_community.utilities.google_scholar" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_scholar",shape="record"];
	"langchain_community.utilities.google_places_api" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_places_api",shape="record"];
	"googlemaps" [label="<f0> MissingModule| <f1> googlemaps",shape="record"];
	"langchain_community.utilities.google_lens" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_lens",shape="record"];
	"langchain_community.utilities.google_jobs" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_jobs",shape="record"];
	"langchain_community.utilities.google_finance" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_finance",shape="record"];
	"langchain_community.utilities.google_books" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_books",shape="record"];
	"langchain_community.utilities.golden_query" [label="<f0> SourceModule| <f1> langchain_community.utilities.golden_query",shape="record"];
	"langchain_community.utilities.duckduckgo_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.duckduckgo_search",shape="record"];
	"duckduckgo_search" [label="<f0> MissingModule| <f1> duckduckgo_search",shape="record"];
	"langchain_community.utilities.dria_index" [label="<f0> SourceModule| <f1> langchain_community.utilities.dria_index",shape="record"];
	"dria" [label="<f0> MissingModule| <f1> dria",shape="record"];
	"langchain_community.utilities.dataherald" [label="<f0> SourceModule| <f1> langchain_community.utilities.dataherald",shape="record"];
	"'dataherald.types'" [label="<f0> MissingModule| <f1> 'dataherald.types'",shape="record"];
	"dataherald" [label="<f0> MissingModule| <f1> dataherald",shape="record"];
	"langchain_community.utilities.brave_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.brave_search",shape="record"];
	"langchain_community.utilities.bing_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.bing_search",shape="record"];
	"langchain_community.utilities.bibtex" [label="<f0> SourceModule| <f1> langchain_community.utilities.bibtex",shape="record"];
	"bibtexparser" [label="<f0> MissingModule| <f1> bibtexparser",shape="record"];
	"langchain_community.utilities.awslambda" [label="<f0> SourceModule| <f1> langchain_community.utilities.awslambda",shape="record"];
	"langchain_community.utilities.asknews" [label="<f0> SourceModule| <f1> langchain_community.utilities.asknews",shape="record"];
	"asknews_sdk" [label="<f0> MissingModule| <f1> asknews_sdk",shape="record"];
	"langchain_community.utilities.arxiv" [label="<f0> SourceModule| <f1> langchain_community.utilities.arxiv",shape="record"];
	"fitz" [label="<f0> MissingModule| <f1> fitz",shape="record"];
	"arxiv" [label="<f0> MissingModule| <f1> arxiv",shape="record"];
	"langchain_community.utilities.arcee" [label="<f0> SourceModule| <f1> langchain_community.utilities.arcee",shape="record"];
	"langchain_community.utilities.apify" [label="<f0> SourceModule| <f1> langchain_community.utilities.apify",shape="record"];
	"apify_client" [label="<f0> MissingModule| <f1> apify_client",shape="record"];
	"langchain_community.utilities.alpha_vantage" [label="<f0> SourceModule| <f1> langchain_community.utilities.alpha_vantage",shape="record"];
	"langchain_community.llms.huggingface_pipeline" [label="<f0> SourceModule| <f1> langchain_community.llms.huggingface_pipeline",shape="record"];
	"torch" [label="<f0> MissingModule| <f1> torch",shape="record"];
	"'optimum.intel'" [label="<f0> MissingModule| <f1> 'optimum.intel'",shape="record"];
	"optimum" [label="<f0> MissingModule| <f1> optimum",shape="record"];
	"langchain_community.llms.Writer" [label="<f0> MissingModule| <f1> langchain_community.llms.Writer",shape="record"];
	"langchain_community.llms.StochasticAI" [label="<f0> MissingModule| <f1> langchain_community.llms.StochasticAI",shape="record"];
	"langchain_community.llms.SagemakerEndpoint" [label="<f0> MissingModule| <f1> langchain_community.llms.SagemakerEndpoint",shape="record"];
	"langchain_community.llms.PipelineAI" [label="<f0> MissingModule| <f1> langchain_community.llms.PipelineAI",shape="record"];
	"langchain_community.llms.Petals" [label="<f0> MissingModule| <f1> langchain_community.llms.Petals",shape="record"];
	"langchain_community.llms.OpenAI" [label="<f0> MissingModule| <f1> langchain_community.llms.OpenAI",shape="record"];
	"langchain_community.llms.Modal" [label="<f0> MissingModule| <f1> langchain_community.llms.Modal",shape="record"];
	"langchain_community.llms.LlamaCpp" [label="<f0> MissingModule| <f1> langchain_community.llms.LlamaCpp",shape="record"];
	"langchain_community.llms.HuggingFaceTextGenInference" [label="<f0> MissingModule| <f1> langchain_community.llms.HuggingFaceTextGenInference",shape="record"];
	"langchain_community.llms.HuggingFaceHub" [label="<f0> MissingModule| <f1> langchain_community.llms.HuggingFaceHub",shape="record"];
	"langchain_community.llms.GooseAI" [label="<f0> MissingModule| <f1> langchain_community.llms.GooseAI",shape="record"];
	"langchain_community.llms.ForefrontAI" [label="<f0> MissingModule| <f1> langchain_community.llms.ForefrontAI",shape="record"];
	"langchain_community.llms.Cohere" [label="<f0> MissingModule| <f1> langchain_community.llms.Cohere",shape="record"];
	"langchain_community.llms.CerebriumAI" [label="<f0> MissingModule| <f1> langchain_community.llms.CerebriumAI",shape="record"];
	"langchain_community.llms.Banana" [label="<f0> MissingModule| <f1> langchain_community.llms.Banana",shape="record"];
	"langchain_community.llms.Anthropic" [label="<f0> MissingModule| <f1> langchain_community.llms.Anthropic",shape="record"];
	"langchain_community.llms" [label="<f0> Package| <f1> langchain_community.llms",shape="record"];
	"langchain_community.llms.yi" [label="<f0> SourceModule| <f1> langchain_community.llms.yi",shape="record"];
	"langchain_community.llms.utils" [label="<f0> SourceModule| <f1> langchain_community.llms.utils",shape="record"];
	"langchain_community.llms.you" [label="<f0> SourceModule| <f1> langchain_community.llms.you",shape="record"];
	"sseclient" [label="<f0> MissingModule| <f1> sseclient",shape="record"];
	"langchain_community.llms.sparkllm" [label="<f0> SourceModule| <f1> langchain_community.llms.sparkllm",shape="record"];
	"websocket" [label="<f0> MissingModule| <f1> websocket",shape="record"];
	"wsgiref.handlers" [label="<f0> SourceModule| <f1> wsgiref.handlers",shape="record"];
	"wsgiref" [label="<f0> Package| <f1> wsgiref",shape="record"];
	"wsgiref.headers" [label="<f0> SourceModule| <f1> wsgiref.headers",shape="record"];
	"wsgiref.util" [label="<f0> SourceModule| <f1> wsgiref.util",shape="record"];
	"langchain_community.llms.volcengine_maas" [label="<f0> SourceModule| <f1> langchain_community.llms.volcengine_maas",shape="record"];
	"volcengine" [label="<f0> MissingModule| <f1> volcengine",shape="record"];
	"langchain_community.llms.yuan2" [label="<f0> SourceModule| <f1> langchain_community.llms.yuan2",shape="record"];
	"langchain_community.llms.yandex" [label="<f0> SourceModule| <f1> langchain_community.llms.yandex",shape="record"];
	"'yandex.cloud'" [label="<f0> MissingModule| <f1> 'yandex.cloud'",shape="record"];
	"yandex" [label="<f0> MissingModule| <f1> yandex",shape="record"];
	"langchain_community.llms.xinference" [label="<f0> SourceModule| <f1> langchain_community.llms.xinference",shape="record"];
	"xinference_client" [label="<f0> MissingModule| <f1> xinference_client",shape="record"];
	"'xinference.client'" [label="<f0> MissingModule| <f1> 'xinference.client'",shape="record"];
	"'xinference.model'" [label="<f0> MissingModule| <f1> 'xinference.model'",shape="record"];
	"xinference" [label="<f0> MissingModule| <f1> xinference",shape="record"];
	"langchain_community.llms.writer" [label="<f0> SourceModule| <f1> langchain_community.llms.writer",shape="record"];
	"writerai" [label="<f0> MissingModule| <f1> writerai",shape="record"];
	"langchain_community.llms.weight_only_quantization" [label="<f0> SourceModule| <f1> langchain_community.llms.weight_only_quantization",shape="record"];
	"'intel_extension_for_transformers.utils'" [label="<f0> MissingModule| <f1> 'intel_extension_for_transformers.utils'",shape="record"];
	"intel_extension_for_transformers" [label="<f0> MissingModule| <f1> intel_extension_for_transformers",shape="record"];
	"langchain_community.llms.watsonxllm" [label="<f0> SourceModule| <f1> langchain_community.llms.watsonxllm",shape="record"];
	"ibm_watsonx_ai" [label="<f0> MissingModule| <f1> ibm_watsonx_ai",shape="record"];
	"langchain_community.llms.vllm" [label="<f0> SourceModule| <f1> langchain_community.llms.vllm",shape="record"];
	"vllm" [label="<f0> MissingModule| <f1> vllm",shape="record"];
	"langchain_community.llms.vertexai" [label="<f0> SourceModule| <f1> langchain_community.llms.vertexai",shape="record"];
	"vertexai.preview.language_models" [label="<f0> SourceModule| <f1> vertexai.preview.language_models",shape="record"];
	"vertexai.language_models._evaluatable_language_models" [label="<f0> SourceModule| <f1> vertexai.language_models._evaluatable_language_models",shape="record"];
	"vertexai._model_garden._model_garden_models" [label="<f0> SourceModule| <f1> vertexai._model_garden._model_garden_models",shape="record"];
	"vertexai._model_garden" [label="<f0> NamespacePackage| <f1> vertexai._model_garden",shape="record"];
	"vertexai.language_models" [label="<f0> Package| <f1> vertexai.language_models",shape="record"];
	"vertexai.language_models._distillation" [label="<f0> SourceModule| <f1> vertexai.language_models._distillation",shape="record"];
	"vertexai.language_models._language_models" [label="<f0> SourceModule| <f1> vertexai.language_models._language_models",shape="record"];
	"langchain_community.llms.tongyi" [label="<f0> SourceModule| <f1> langchain_community.llms.tongyi",shape="record"];
	"dashscope" [label="<f0> MissingModule| <f1> dashscope",shape="record"];
	"langchain_community.llms.together" [label="<f0> SourceModule| <f1> langchain_community.llms.together",shape="record"];
	"langchain_community.llms.titan_takeoff" [label="<f0> SourceModule| <f1> langchain_community.llms.titan_takeoff",shape="record"];
	"takeoff_client" [label="<f0> MissingModule| <f1> takeoff_client",shape="record"];
	"langchain_community.llms.textgen" [label="<f0> SourceModule| <f1> langchain_community.llms.textgen",shape="record"];
	"langchain_community.llms.symblai_nebula" [label="<f0> SourceModule| <f1> langchain_community.llms.symblai_nebula",shape="record"];
	"langchain_community.llms.stochasticai" [label="<f0> SourceModule| <f1> langchain_community.llms.stochasticai",shape="record"];
	"langchain_community.llms.self_hosted_hugging_face" [label="<f0> SourceModule| <f1> langchain_community.llms.self_hosted_hugging_face",shape="record"];
	"langchain_community.llms.self_hosted" [label="<f0> SourceModule| <f1> langchain_community.llms.self_hosted",shape="record"];
	"runhouse" [label="<f0> MissingModule| <f1> runhouse",shape="record"];
	"langchain_community.llms.sambanova" [label="<f0> SourceModule| <f1> langchain_community.llms.sambanova",shape="record"];
	"langchain_community.llms.sagemaker_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.sagemaker_endpoint",shape="record"];
	"langchain_community.llms.rwkv" [label="<f0> SourceModule| <f1> langchain_community.llms.rwkv",shape="record"];
	"'rwkv.utils'" [label="<f0> MissingModule| <f1> 'rwkv.utils'",shape="record"];
	"rwkv" [label="<f0> MissingModule| <f1> rwkv",shape="record"];
	"tokenizers" [label="<f0> MissingModule| <f1> tokenizers",shape="record"];
	"langchain_community.llms.replicate" [label="<f0> SourceModule| <f1> langchain_community.llms.replicate",shape="record"];
	"replicate" [label="<f0> MissingModule| <f1> replicate",shape="record"];
	"langchain_community.llms.promptlayer_openai" [label="<f0> SourceModule| <f1> langchain_community.llms.promptlayer_openai",shape="record"];
	"'promptlayer.utils'" [label="<f0> MissingModule| <f1> 'promptlayer.utils'",shape="record"];
	"langchain_community.llms.predictionguard" [label="<f0> SourceModule| <f1> langchain_community.llms.predictionguard",shape="record"];
	"predictionguard" [label="<f0> MissingModule| <f1> predictionguard",shape="record"];
	"langchain_community.llms.predibase" [label="<f0> SourceModule| <f1> langchain_community.llms.predibase",shape="record"];
	"'semantic_version.base'" [label="<f0> MissingModule| <f1> 'semantic_version.base'",shape="record"];
	"'predibase.version'" [label="<f0> MissingModule| <f1> 'predibase.version'",shape="record"];
	"semantic_version" [label="<f0> MissingModule| <f1> semantic_version",shape="record"];
	"'lorax.types'" [label="<f0> MissingModule| <f1> 'lorax.types'",shape="record"];
	"'lorax.errors'" [label="<f0> MissingModule| <f1> 'lorax.errors'",shape="record"];
	"lorax" [label="<f0> MissingModule| <f1> lorax",shape="record"];
	"'predibase.resource'" [label="<f0> MissingModule| <f1> 'predibase.resource'",shape="record"];
	"'predibase.pql'" [label="<f0> MissingModule| <f1> 'predibase.pql'",shape="record"];
	"predibase" [label="<f0> MissingModule| <f1> predibase",shape="record"];
	"langchain_community.llms.pipelineai" [label="<f0> SourceModule| <f1> langchain_community.llms.pipelineai",shape="record"];
	"pipeline" [label="<f0> MissingModule| <f1> pipeline",shape="record"];
	"langchain_community.llms.petals" [label="<f0> SourceModule| <f1> langchain_community.llms.petals",shape="record"];
	"petals" [label="<f0> MissingModule| <f1> petals",shape="record"];
	"langchain_community.llms.pai_eas_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.pai_eas_endpoint",shape="record"];
	"langchain_community.llms.outlines" [label="<f0> SourceModule| <f1> langchain_community.llms.outlines",shape="record"];
	"outlines" [label="<f0> MissingModule| <f1> outlines",shape="record"];
	"'outlines.models'" [label="<f0> MissingModule| <f1> 'outlines.models'",shape="record"];
	"langchain_community.llms.openlm" [label="<f0> SourceModule| <f1> langchain_community.llms.openlm",shape="record"];
	"openlm" [label="<f0> MissingModule| <f1> openlm",shape="record"];
	"langchain_community.llms.openllm" [label="<f0> SourceModule| <f1> langchain_community.llms.openllm",shape="record"];
	"langchain_community.llms.opaqueprompts" [label="<f0> SourceModule| <f1> langchain_community.llms.opaqueprompts",shape="record"];
	"opaqueprompts" [label="<f0> MissingModule| <f1> opaqueprompts",shape="record"];
	"langchain_community.llms.ollama" [label="<f0> SourceModule| <f1> langchain_community.llms.ollama",shape="record"];
	"langchain_community.llms.octoai_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.octoai_endpoint",shape="record"];
	"langchain_community.llms.oci_generative_ai" [label="<f0> SourceModule| <f1> langchain_community.llms.oci_generative_ai",shape="record"];
	"'oci.generative_ai_inference'" [label="<f0> MissingModule| <f1> 'oci.generative_ai_inference'",shape="record"];
	"oci" [label="<f0> MissingModule| <f1> oci",shape="record"];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.oci_data_science_model_deployment_endpoint",shape="record"];
	"ads" [label="<f0> MissingModule| <f1> ads",shape="record"];
	"langchain_community.llms.nlpcloud" [label="<f0> SourceModule| <f1> langchain_community.llms.nlpcloud",shape="record"];
	"nlpcloud" [label="<f0> MissingModule| <f1> nlpcloud",shape="record"];
	"langchain_community.llms.mosaicml" [label="<f0> SourceModule| <f1> langchain_community.llms.mosaicml",shape="record"];
	"langchain_community.llms.modal" [label="<f0> SourceModule| <f1> langchain_community.llms.modal",shape="record"];
	"langchain_community.llms.mlx_pipeline" [label="<f0> SourceModule| <f1> langchain_community.llms.mlx_pipeline",shape="record"];
	"'mlx_lm.utils'" [label="<f0> MissingModule| <f1> 'mlx_lm.utils'",shape="record"];
	"mlx" [label="<f0> MissingModule| <f1> mlx",shape="record"];
	"'mlx_lm.sample_utils'" [label="<f0> MissingModule| <f1> 'mlx_lm.sample_utils'",shape="record"];
	"mlx_lm" [label="<f0> MissingModule| <f1> mlx_lm",shape="record"];
	"langchain_community.llms.mlflow_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.llms.mlflow_ai_gateway",shape="record"];
	"'mlflow.gateway'" [label="<f0> MissingModule| <f1> 'mlflow.gateway'",shape="record"];
	"langchain_community.chat_models.mlflow" [label="<f0> SourceModule| <f1> langchain_community.chat_models.mlflow",shape="record"];
	"'mlflow.deployments'" [label="<f0> MissingModule| <f1> 'mlflow.deployments'",shape="record"];
	"langchain_community.llms.mlflow" [label="<f0> SourceModule| <f1> langchain_community.llms.mlflow",shape="record"];
	"langchain_community.llms.minimax" [label="<f0> SourceModule| <f1> langchain_community.llms.minimax",shape="record"];
	"langchain_community.llms.manifest" [label="<f0> SourceModule| <f1> langchain_community.llms.manifest",shape="record"];
	"manifest" [label="<f0> MissingModule| <f1> manifest",shape="record"];
	"langchain_community.llms.llamafile" [label="<f0> SourceModule| <f1> langchain_community.llms.llamafile",shape="record"];
	"langchain_community.llms.llamacpp" [label="<f0> SourceModule| <f1> langchain_community.llms.llamacpp",shape="record"];
	"llama_cpp" [label="<f0> MissingModule| <f1> llama_cpp",shape="record"];
	"langchain_community.llms.konko" [label="<f0> SourceModule| <f1> langchain_community.llms.konko",shape="record"];
	"konko" [label="<f0> MissingModule| <f1> konko",shape="record"];
	"langchain_community.llms.koboldai" [label="<f0> SourceModule| <f1> langchain_community.llms.koboldai",shape="record"];
	"langchain_community.llms.javelin_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.llms.javelin_ai_gateway",shape="record"];
	"javelin_sdk" [label="<f0> MissingModule| <f1> javelin_sdk",shape="record"];
	"langchain_community.llms.ipex_llm" [label="<f0> SourceModule| <f1> langchain_community.llms.ipex_llm",shape="record"];
	"'transformers.tools'" [label="<f0> MissingModule| <f1> 'transformers.tools'",shape="record"];
	"'transformers.generation'" [label="<f0> MissingModule| <f1> 'transformers.generation'",shape="record"];
	"ipex_llm" [label="<f0> MissingModule| <f1> ipex_llm",shape="record"];
	"langchain_community.llms.human" [label="<f0> SourceModule| <f1> langchain_community.llms.human",shape="record"];
	"langchain_community.llms.huggingface_text_gen_inference" [label="<f0> SourceModule| <f1> langchain_community.llms.huggingface_text_gen_inference",shape="record"];
	"text_generation" [label="<f0> MissingModule| <f1> text_generation",shape="record"];
	"langchain_community.llms.huggingface_hub" [label="<f0> SourceModule| <f1> langchain_community.llms.huggingface_hub",shape="record"];
	"huggingface_hub" [label="<f0> MissingModule| <f1> huggingface_hub",shape="record"];
	"langchain_community.llms.huggingface_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.huggingface_endpoint",shape="record"];
	"langchain_community.llms.gradient_ai" [label="<f0> SourceModule| <f1> langchain_community.llms.gradient_ai",shape="record"];
	"gradientai" [label="<f0> MissingModule| <f1> gradientai",shape="record"];
	"langchain_community.llms.gpt4all" [label="<f0> SourceModule| <f1> langchain_community.llms.gpt4all",shape="record"];
	"gpt4all" [label="<f0> MissingModule| <f1> gpt4all",shape="record"];
	"langchain_community.llms.gooseai" [label="<f0> SourceModule| <f1> langchain_community.llms.gooseai",shape="record"];
	"langchain_community.llms.google_palm" [label="<f0> SourceModule| <f1> langchain_community.llms.google_palm",shape="record"];
	"langchain_community.llms.gigachat" [label="<f0> SourceModule| <f1> langchain_community.llms.gigachat",shape="record"];
	"'gigachat.models'" [label="<f0> MissingModule| <f1> 'gigachat.models'",shape="record"];
	"gigachat" [label="<f0> MissingModule| <f1> gigachat",shape="record"];
	"langchain_community.llms.friendli" [label="<f0> SourceModule| <f1> langchain_community.llms.friendli",shape="record"];
	"friendli" [label="<f0> MissingModule| <f1> friendli",shape="record"];
	"langchain_community.llms.forefrontai" [label="<f0> SourceModule| <f1> langchain_community.llms.forefrontai",shape="record"];
	"langchain_community.llms.fireworks" [label="<f0> SourceModule| <f1> langchain_community.llms.fireworks",shape="record"];
	"'fireworks.client'" [label="<f0> MissingModule| <f1> 'fireworks.client'",shape="record"];
	"langchain_community.llms.fake" [label="<f0> SourceModule| <f1> langchain_community.llms.fake",shape="record"];
	"langchain_community.llms.edenai" [label="<f0> SourceModule| <f1> langchain_community.llms.edenai",shape="record"];
	"langchain_community.llms.deepsparse" [label="<f0> SourceModule| <f1> langchain_community.llms.deepsparse",shape="record"];
	"deepsparse" [label="<f0> MissingModule| <f1> deepsparse",shape="record"];
	"langchain_community.llms.deepinfra" [label="<f0> SourceModule| <f1> langchain_community.llms.deepinfra",shape="record"];
	"langchain_community.chat_models.databricks" [label="<f0> SourceModule| <f1> langchain_community.chat_models.databricks",shape="record"];
	"langchain_community.llms.databricks" [label="<f0> SourceModule| <f1> langchain_community.llms.databricks",shape="record"];
	"cloudpickle" [label="<f0> MissingModule| <f1> cloudpickle",shape="record"];
	"'dbruntime.databricks_repl_context'" [label="<f0> MissingModule| <f1> 'dbruntime.databricks_repl_context'",shape="record"];
	"langchain_community.llms.ctranslate2" [label="<f0> SourceModule| <f1> langchain_community.llms.ctranslate2",shape="record"];
	"ctranslate2" [label="<f0> MissingModule| <f1> ctranslate2",shape="record"];
	"langchain_community.llms.ctransformers" [label="<f0> SourceModule| <f1> langchain_community.llms.ctransformers",shape="record"];
	"ctransformers" [label="<f0> MissingModule| <f1> ctransformers",shape="record"];
	"langchain_community.llms.cohere" [label="<f0> SourceModule| <f1> langchain_community.llms.cohere",shape="record"];
	"cohere" [label="<f0> MissingModule| <f1> cohere",shape="record"];
	"langchain_community.llms.clarifai" [label="<f0> SourceModule| <f1> langchain_community.llms.clarifai",shape="record"];
	"langchain_community.llms.chatglm" [label="<f0> SourceModule| <f1> langchain_community.llms.chatglm",shape="record"];
	"langchain_community.llms.cerebriumai" [label="<f0> SourceModule| <f1> langchain_community.llms.cerebriumai",shape="record"];
	"langchain_community.llms.bittensor" [label="<f0> SourceModule| <f1> langchain_community.llms.bittensor",shape="record"];
	"langchain_community.llms.bigdl_llm" [label="<f0> SourceModule| <f1> langchain_community.llms.bigdl_llm",shape="record"];
	"'bigdl.llm'" [label="<f0> MissingModule| <f1> 'bigdl.llm'",shape="record"];
	"bigdl" [label="<f0> MissingModule| <f1> bigdl",shape="record"];
	"langchain_community.llms.bedrock" [label="<f0> SourceModule| <f1> langchain_community.llms.bedrock",shape="record"];
	"langchain_community.utilities.anthropic" [label="<f0> SourceModule| <f1> langchain_community.utilities.anthropic",shape="record"];
	"langchain_community.llms.beam" [label="<f0> SourceModule| <f1> langchain_community.llms.beam",shape="record"];
	"beam" [label="<f0> MissingModule| <f1> beam",shape="record"];
	"langchain_community.llms.baseten" [label="<f0> SourceModule| <f1> langchain_community.llms.baseten",shape="record"];
	"langchain_community.llms.bananadev" [label="<f0> SourceModule| <f1> langchain_community.llms.bananadev",shape="record"];
	"banana_dev" [label="<f0> MissingModule| <f1> banana_dev",shape="record"];
	"langchain_community.llms.baidu_qianfan_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.baidu_qianfan_endpoint",shape="record"];
	"qianfan" [label="<f0> MissingModule| <f1> qianfan",shape="record"];
	"langchain_community.llms.baichuan" [label="<f0> SourceModule| <f1> langchain_community.llms.baichuan",shape="record"];
	"langchain_community.llms.azureml_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.azureml_endpoint",shape="record"];
	"langchain_community.llms.aviary" [label="<f0> SourceModule| <f1> langchain_community.llms.aviary",shape="record"];
	"langchain_community.llms.arcee" [label="<f0> SourceModule| <f1> langchain_community.llms.arcee",shape="record"];
	"langchain_community.llms.aphrodite" [label="<f0> SourceModule| <f1> langchain_community.llms.aphrodite",shape="record"];
	"aphrodite" [label="<f0> MissingModule| <f1> aphrodite",shape="record"];
	"langchain_community.llms.anyscale" [label="<f0> SourceModule| <f1> langchain_community.llms.anyscale",shape="record"];
	"langchain_community.llms.anthropic" [label="<f0> SourceModule| <f1> langchain_community.llms.anthropic",shape="record"];
	"langchain_community.llms.amazon_api_gateway" [label="<f0> SourceModule| <f1> langchain_community.llms.amazon_api_gateway",shape="record"];
	"langchain_community.llms.aleph_alpha" [label="<f0> SourceModule| <f1> langchain_community.llms.aleph_alpha",shape="record"];
	"aleph_alpha_client" [label="<f0> MissingModule| <f1> aleph_alpha_client",shape="record"];
	"langchain_community.llms.ai21" [label="<f0> SourceModule| <f1> langchain_community.llms.ai21",shape="record"];
	"langchain_community.docstore" [label="<f0> Package| <f1> langchain_community.docstore",shape="record"];
	"langchain_community.docstore.wikipedia" [label="<f0> SourceModule| <f1> langchain_community.docstore.wikipedia",shape="record"];
	"langchain_community.docstore.arbitrary_fn" [label="<f0> SourceModule| <f1> langchain_community.docstore.arbitrary_fn",shape="record"];
	"langchain.chains.VectorDBQAWithSourcesChain" [label="<f0> MissingModule| <f1> langchain.chains.VectorDBQAWithSourcesChain",shape="record"];
	"langchain.chains.VectorDBQA" [label="<f0> MissingModule| <f1> langchain.chains.VectorDBQA",shape="record"];
	"langchain.chains.QAWithSourcesChain" [label="<f0> MissingModule| <f1> langchain.chains.QAWithSourcesChain",shape="record"];
	"langchain.chains.LLMMathChain" [label="<f0> MissingModule| <f1> langchain.chains.LLMMathChain",shape="record"];
	"langchain.chains.LLMCheckerChain" [label="<f0> MissingModule| <f1> langchain.chains.LLMCheckerChain",shape="record"];
	"langchain.chains.LLMChain" [label="<f0> MissingModule| <f1> langchain.chains.LLMChain",shape="record"];
	"langchain.chains.ConversationChain" [label="<f0> MissingModule| <f1> langchain.chains.ConversationChain",shape="record"];
	"langchain.chains" [label="<f0> Package| <f1> langchain.chains",shape="record"];
	"langchain.agents" [label="<f0> Package| <f1> langchain.agents",shape="record"];
	"langchain_community.agent_toolkits.sql.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.sql.base",shape="record"];
	"langchain_community.agent_toolkits.sql" [label="<f0> Package| <f1> langchain_community.agent_toolkits.sql",shape="record"];
	"langchain_community.agent_toolkits" [label="<f0> Package| <f1> langchain_community.agent_toolkits",shape="record"];
	"langchain_community.agent_toolkits.zapier.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.zapier.toolkit",shape="record"];
	"langchain_community.agent_toolkits.zapier" [label="<f0> Package| <f1> langchain_community.agent_toolkits.zapier",shape="record"];
	"langchain_community.agent_toolkits.steam.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.steam.toolkit",shape="record"];
	"langchain_community.agent_toolkits.steam" [label="<f0> Package| <f1> langchain_community.agent_toolkits.steam",shape="record"];
	"langchain_community.agent_toolkits.spark_sql.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.spark_sql.toolkit",shape="record"];
	"langchain_community.agent_toolkits.spark_sql" [label="<f0> Package| <f1> langchain_community.agent_toolkits.spark_sql",shape="record"];
	"langchain_community.agent_toolkits.slack.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.slack.toolkit",shape="record"];
	"langchain_community.agent_toolkits.slack" [label="<f0> Package| <f1> langchain_community.agent_toolkits.slack",shape="record"];
	"langchain_community.agent_toolkits.powerbi.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.powerbi.toolkit",shape="record"];
	"langchain_community.agent_toolkits.powerbi" [label="<f0> Package| <f1> langchain_community.agent_toolkits.powerbi",shape="record"];
	"langchain_community.agent_toolkits.polygon.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.polygon.toolkit",shape="record"];
	"langchain_community.agent_toolkits.polygon" [label="<f0> Package| <f1> langchain_community.agent_toolkits.polygon",shape="record"];
	"langchain_community.agent_toolkits.playwright.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.playwright.toolkit",shape="record"];
	"langchain_community.agent_toolkits.playwright" [label="<f0> Package| <f1> langchain_community.agent_toolkits.playwright",shape="record"];
	"langchain_community.agent_toolkits.openapi.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.openapi.toolkit",shape="record"];
	"langchain_community.agent_toolkits.openapi" [label="<f0> Package| <f1> langchain_community.agent_toolkits.openapi",shape="record"];
	"langchain_community.agent_toolkits.openapi.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.openapi.prompt",shape="record"];
	"langchain_community.agent_toolkits.office365.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.office365.toolkit",shape="record"];
	"langchain_community.agent_toolkits.office365" [label="<f0> Package| <f1> langchain_community.agent_toolkits.office365",shape="record"];
	"langchain_community.agent_toolkits.nla.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.nla.toolkit",shape="record"];
	"langchain_community.agent_toolkits.nla" [label="<f0> Package| <f1> langchain_community.agent_toolkits.nla",shape="record"];
	"langchain_community.agent_toolkits.nla.tool" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.nla.tool",shape="record"];
	"langchain_community.chains.openapi.chain" [label="<f0> SourceModule| <f1> langchain_community.chains.openapi.chain",shape="record"];
	"langchain_community.chains.openapi" [label="<f0> Package| <f1> langchain_community.chains.openapi",shape="record"];
	"langchain_community.chains" [label="<f0> Package| <f1> langchain_community.chains",shape="record"];
	"langchain_community.chains.pebblo_retrieval.base" [label="<f0> SourceModule| <f1> langchain_community.chains.pebblo_retrieval.base",shape="record"];
	"langchain_community.chains.pebblo_retrieval" [label="<f0> Package| <f1> langchain_community.chains.pebblo_retrieval",shape="record"];
	"langchain_community.chains.pebblo_retrieval.utilities" [label="<f0> SourceModule| <f1> langchain_community.chains.pebblo_retrieval.utilities",shape="record"];
	"langchain_community.chains.pebblo_retrieval.models" [label="<f0> SourceModule| <f1> langchain_community.chains.pebblo_retrieval.models",shape="record"];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" [label="<f0> SourceModule| <f1> langchain_community.chains.pebblo_retrieval.enforcement_filters",shape="record"];
	"langchain.chains.api.openapi.response_chain" [label="<f0> SourceModule| <f1> langchain.chains.api.openapi.response_chain",shape="record"];
	"langchain.chains.api.openapi" [label="<f0> Package| <f1> langchain.chains.api.openapi",shape="record"];
	"langchain.chains.api" [label="<f0> Package| <f1> langchain.chains.api",shape="record"];
	"langchain.chains.api.podcast_docs" [label="<f0> SourceModule| <f1> langchain.chains.api.podcast_docs",shape="record"];
	"langchain.chains.api.tmdb_docs" [label="<f0> SourceModule| <f1> langchain.chains.api.tmdb_docs",shape="record"];
	"langchain.chains.api.news_docs" [label="<f0> SourceModule| <f1> langchain.chains.api.news_docs",shape="record"];
	"langchain.chains.api.open_meteo_docs" [label="<f0> SourceModule| <f1> langchain.chains.api.open_meteo_docs",shape="record"];
	"langchain_community.chains.openapi.response_chain" [label="<f0> SourceModule| <f1> langchain_community.chains.openapi.response_chain",shape="record"];
	"langchain.chains.api.openapi.prompts" [label="<f0> SourceModule| <f1> langchain.chains.api.openapi.prompts",shape="record"];
	"langchain_community.chains.openapi.prompts" [label="<f0> SourceModule| <f1> langchain_community.chains.openapi.prompts",shape="record"];
	"langchain.chains.api.openapi.requests_chain" [label="<f0> SourceModule| <f1> langchain.chains.api.openapi.requests_chain",shape="record"];
	"langchain_community.chains.openapi.requests_chain" [label="<f0> SourceModule| <f1> langchain_community.chains.openapi.requests_chain",shape="record"];
	"langchain_community.agent_toolkits.nasa.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.nasa.toolkit",shape="record"];
	"langchain_community.agent_toolkits.nasa" [label="<f0> Package| <f1> langchain_community.agent_toolkits.nasa",shape="record"];
	"langchain_community.tools.nasa.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.nasa.prompt",shape="record"];
	"langchain_community.agent_toolkits.multion.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.multion.toolkit",shape="record"];
	"langchain_community.agent_toolkits.multion" [label="<f0> Package| <f1> langchain_community.agent_toolkits.multion",shape="record"];
	"langchain_community.tools.multion.update_session" [label="<f0> SourceModule| <f1> langchain_community.tools.multion.update_session",shape="record"];
	"langchain_community.tools.multion" [label="<f0> Package| <f1> langchain_community.tools.multion",shape="record"];
	"multion" [label="<f0> MissingModule| <f1> multion",shape="record"];
	"langchain_community.tools.multion.create_session" [label="<f0> SourceModule| <f1> langchain_community.tools.multion.create_session",shape="record"];
	"langchain_community.tools.multion.close_session" [label="<f0> SourceModule| <f1> langchain_community.tools.multion.close_session",shape="record"];
	"langchain_community.agent_toolkits.json.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.json.toolkit",shape="record"];
	"langchain_community.agent_toolkits.json" [label="<f0> Package| <f1> langchain_community.agent_toolkits.json",shape="record"];
	"langchain_community.agent_toolkits.jira.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.jira.toolkit",shape="record"];
	"langchain_community.agent_toolkits.jira" [label="<f0> Package| <f1> langchain_community.agent_toolkits.jira",shape="record"];
	"langchain_community.tools.jira.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.jira.prompt",shape="record"];
	"langchain_community.agent_toolkits.gmail.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.gmail.toolkit",shape="record"];
	"langchain_community.agent_toolkits.gmail" [label="<f0> Package| <f1> langchain_community.agent_toolkits.gmail",shape="record"];
	"langchain_community.agent_toolkits.file_management.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.file_management.toolkit",shape="record"];
	"langchain_community.agent_toolkits.file_management" [label="<f0> Package| <f1> langchain_community.agent_toolkits.file_management",shape="record"];
	"langchain_community.agent_toolkits.connery" [label="<f0> Package| <f1> langchain_community.agent_toolkits.connery",shape="record"];
	"langchain_community.agent_toolkits.connery.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.connery.toolkit",shape="record"];
	"langchain_community.agent_toolkits.cogniswitch.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.cogniswitch.toolkit",shape="record"];
	"langchain_community.agent_toolkits.cogniswitch" [label="<f0> Package| <f1> langchain_community.agent_toolkits.cogniswitch",shape="record"];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.cassandra_database.toolkit",shape="record"];
	"langchain_community.agent_toolkits.cassandra_database" [label="<f0> Package| <f1> langchain_community.agent_toolkits.cassandra_database",shape="record"];
	"langchain_community.agent_toolkits.azure_cognitive_services" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.azure_cognitive_services",shape="record"];
	"langchain_community.agent_toolkits.azure_ai_services" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.azure_ai_services",shape="record"];
	"langchain_community.agent_toolkits.amadeus.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.amadeus.toolkit",shape="record"];
	"langchain_community.agent_toolkits.amadeus" [label="<f0> Package| <f1> langchain_community.agent_toolkits.amadeus",shape="record"];
	"amadeus" [label="<f0> MissingModule| <f1> amadeus",shape="record"];
	"langchain_community.tools.amadeus.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.amadeus.utils",shape="record"];
	"langchain_community.tools.amadeus" [label="<f0> Package| <f1> langchain_community.tools.amadeus",shape="record"];
	"langchain_community.tools.amadeus.flight_search" [label="<f0> SourceModule| <f1> langchain_community.tools.amadeus.flight_search",shape="record"];
	"langchain_community.tools.amadeus.base" [label="<f0> SourceModule| <f1> langchain_community.tools.amadeus.base",shape="record"];
	"langchain_community.tools.amadeus.closest_airport" [label="<f0> SourceModule| <f1> langchain_community.tools.amadeus.closest_airport",shape="record"];
	"langchain_community.agent_toolkits.ainetwork.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.ainetwork.toolkit",shape="record"];
	"langchain_community.agent_toolkits.ainetwork" [label="<f0> Package| <f1> langchain_community.agent_toolkits.ainetwork",shape="record"];
	"langchain.agents.mrkl.prompt" [label="<f0> SourceModule| <f1> langchain.agents.mrkl.prompt",shape="record"];
	"langchain.agents.mrkl" [label="<f0> Package| <f1> langchain.agents.mrkl",shape="record"];
	"langchain_community.agent_toolkits.sql.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.sql.toolkit",shape="record"];
	"langchain_community.agent_toolkits.sql.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.sql.prompt",shape="record"];
	"langchain_community.agent_toolkits.spark_sql.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.spark_sql.base",shape="record"];
	"langchain_community.agent_toolkits.spark_sql.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.spark_sql.prompt",shape="record"];
	"langchain_community.agent_toolkits.powerbi.chat_base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.powerbi.chat_base",shape="record"];
	"langchain.memory" [label="<f0> Package| <f1> langchain.memory",shape="record"];
	"langchain_community.memory.zep_memory" [label="<f0> SourceModule| <f1> langchain_community.memory.zep_memory",shape="record"];
	"langchain_community.memory" [label="<f0> Package| <f1> langchain_community.memory",shape="record"];
	"langchain_community.memory.motorhead_memory" [label="<f0> SourceModule| <f1> langchain_community.memory.motorhead_memory",shape="record"];
	"langchain_community.memory.kg" [label="<f0> SourceModule| <f1> langchain_community.memory.kg",shape="record"];
	"langchain.memory.utils" [label="<f0> SourceModule| <f1> langchain.memory.utils",shape="record"];
	"langchain.memory.prompt" [label="<f0> SourceModule| <f1> langchain.memory.prompt",shape="record"];
	"langchain_community.graphs.networkx_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.networkx_graph",shape="record"];
	"'networkx.drawing'" [label="<f0> MissingModule| <f1> 'networkx.drawing'",shape="record"];
	"langchain_community.graphs" [label="<f0> Package| <f1> langchain_community.graphs",shape="record"];
	"langchain_community.graphs.tigergraph_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.tigergraph_graph",shape="record"];
	"pyTigerGraph" [label="<f0> MissingModule| <f1> pyTigerGraph",shape="record"];
	"langchain_community.graphs.graph_store" [label="<f0> SourceModule| <f1> langchain_community.graphs.graph_store",shape="record"];
	"langchain_community.graphs.graph_document" [label="<f0> SourceModule| <f1> langchain_community.graphs.graph_document",shape="record"];
	"langchain_community.graphs.rdf_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.rdf_graph",shape="record"];
	"'rdflib.query'" [label="<f0> MissingModule| <f1> 'rdflib.query'",shape="record"];
	"'rdflib.exceptions'" [label="<f0> MissingModule| <f1> 'rdflib.exceptions'",shape="record"];
	"'rdflib.plugins'" [label="<f0> MissingModule| <f1> 'rdflib.plugins'",shape="record"];
	"rdflib" [label="<f0> MissingModule| <f1> rdflib",shape="record"];
	"langchain_community.graphs.ontotext_graphdb_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.ontotext_graphdb_graph",shape="record"];
	"langchain_community.graphs.neptune_rdf_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.neptune_rdf_graph",shape="record"];
	"'botocore.auth'" [label="<f0> MissingModule| <f1> 'botocore.auth'",shape="record"];
	"'botocore.awsrequest'" [label="<f0> MissingModule| <f1> 'botocore.awsrequest'",shape="record"];
	"'botocore.config'" [label="<f0> MissingModule| <f1> 'botocore.config'",shape="record"];
	"langchain_community.graphs.neptune_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.neptune_graph",shape="record"];
	"langchain_community.graphs.neo4j_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.neo4j_graph",shape="record"];
	"langchain_community.graphs.nebula_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.nebula_graph",shape="record"];
	"'nebula3.fbthrift'" [label="<f0> MissingModule| <f1> 'nebula3.fbthrift'",shape="record"];
	"'nebula3.gclient'" [label="<f0> MissingModule| <f1> 'nebula3.gclient'",shape="record"];
	"'nebula3.Exception'" [label="<f0> MissingModule| <f1> 'nebula3.Exception'",shape="record"];
	"'nebula3.Config'" [label="<f0> MissingModule| <f1> 'nebula3.Config'",shape="record"];
	"nebula3" [label="<f0> MissingModule| <f1> nebula3",shape="record"];
	"langchain_community.graphs.memgraph_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.memgraph_graph",shape="record"];
	"langchain_community.graphs.kuzu_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.kuzu_graph",shape="record"];
	"kuzu" [label="<f0> MissingModule| <f1> kuzu",shape="record"];
	"langchain_community.graphs.hugegraph" [label="<f0> SourceModule| <f1> langchain_community.graphs.hugegraph",shape="record"];
	"hugegraph" [label="<f0> MissingModule| <f1> hugegraph",shape="record"];
	"langchain_community.graphs.gremlin_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.gremlin_graph",shape="record"];
	"gremlin_python" [label="<f0> MissingModule| <f1> gremlin_python",shape="record"];
	"langchain_community.graphs.falkordb_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.falkordb_graph",shape="record"];
	"falkordb" [label="<f0> MissingModule| <f1> falkordb",shape="record"];
	"langchain_community.graphs.arangodb_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.arangodb_graph",shape="record"];
	"arango" [label="<f0> MissingModule| <f1> arango",shape="record"];
	"langchain_community.chat_message_histories" [label="<f0> Package| <f1> langchain_community.chat_message_histories",shape="record"];
	"langchain_community.chat_message_histories.zep_cloud" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.zep_cloud",shape="record"];
	"langchain_community.chat_message_histories.zep" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.zep",shape="record"];
	"langchain_community.chat_message_histories.xata" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.xata",shape="record"];
	"xata" [label="<f0> MissingModule| <f1> xata",shape="record"];
	"langchain_community.chat_message_histories.upstash_redis" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.upstash_redis",shape="record"];
	"upstash_redis" [label="<f0> MissingModule| <f1> upstash_redis",shape="record"];
	"langchain_community.chat_message_histories.tidb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.tidb",shape="record"];
	"langchain_community.chat_message_histories.streamlit" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.streamlit",shape="record"];
	"streamlit" [label="<f0> MissingModule| <f1> streamlit",shape="record"];
	"langchain_community.chat_message_histories.sql" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.sql",shape="record"];
	"langchain_community.chat_message_histories.singlestoredb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.singlestoredb",shape="record"];
	"langchain_community.chat_message_histories.rocksetdb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.rocksetdb",shape="record"];
	"langchain_community.chat_message_histories.redis" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.redis",shape="record"];
	"langchain_community.chat_message_histories.postgres" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.postgres",shape="record"];
	"'psycopg.rows'" [label="<f0> MissingModule| <f1> 'psycopg.rows'",shape="record"];
	"langchain_community.chat_message_histories.neo4j" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.neo4j",shape="record"];
	"langchain_community.chat_message_histories.mongodb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.mongodb",shape="record"];
	"langchain_community.chat_message_histories.momento" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.momento",shape="record"];
	"langchain_community.chat_message_histories.kafka" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.kafka",shape="record"];
	"'confluent_kafka.admin'" [label="<f0> MissingModule| <f1> 'confluent_kafka.admin'",shape="record"];
	"confluent_kafka" [label="<f0> MissingModule| <f1> confluent_kafka",shape="record"];
	"langchain_community.chat_message_histories.in_memory" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.in_memory",shape="record"];
	"langchain_community.chat_message_histories.firestore" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.firestore",shape="record"];
	"firebase_admin" [label="<f0> MissingModule| <f1> firebase_admin",shape="record"];
	"'google.cloud.firestore'" [label="<f0> MissingModule| <f1> 'google.cloud.firestore'",shape="record"];
	"langchain_community.chat_message_histories.file" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.file",shape="record"];
	"langchain_community.chat_message_histories.elasticsearch" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.elasticsearch",shape="record"];
	"langchain_community.chat_message_histories.dynamodb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.dynamodb",shape="record"];
	"'dynamodb_encryption_sdk.structures'" [label="<f0> MissingModule| <f1> 'dynamodb_encryption_sdk.structures'",shape="record"];
	"'dynamodb_encryption_sdk.material_providers'" [label="<f0> MissingModule| <f1> 'dynamodb_encryption_sdk.material_providers'",shape="record"];
	"'dynamodb_encryption_sdk.identifiers'" [label="<f0> MissingModule| <f1> 'dynamodb_encryption_sdk.identifiers'",shape="record"];
	"dynamodb_encryption_sdk" [label="<f0> MissingModule| <f1> dynamodb_encryption_sdk",shape="record"];
	"'boto3.session'" [label="<f0> MissingModule| <f1> 'boto3.session'",shape="record"];
	"langchain_community.chat_message_histories.cosmos_db" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.cosmos_db",shape="record"];
	"langchain_community.chat_message_histories.cassandra" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.cassandra",shape="record"];
	"langchain_community.chat_message_histories.astradb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.astradb",shape="record"];
	"langchain.memory.vectorstore_token_buffer_memory" [label="<f0> SourceModule| <f1> langchain.memory.vectorstore_token_buffer_memory",shape="record"];
	"langchain.memory.vectorstore" [label="<f0> SourceModule| <f1> langchain.memory.vectorstore",shape="record"];
	"langchain.memory.token_buffer" [label="<f0> SourceModule| <f1> langchain.memory.token_buffer",shape="record"];
	"langchain.memory.summary_buffer" [label="<f0> SourceModule| <f1> langchain.memory.summary_buffer",shape="record"];
	"langchain.memory.summary" [label="<f0> SourceModule| <f1> langchain.memory.summary",shape="record"];
	"langchain.memory.simple" [label="<f0> SourceModule| <f1> langchain.memory.simple",shape="record"];
	"langchain.memory.readonly" [label="<f0> SourceModule| <f1> langchain.memory.readonly",shape="record"];
	"langchain.memory.entity" [label="<f0> SourceModule| <f1> langchain.memory.entity",shape="record"];
	"langchain.memory.combined" [label="<f0> SourceModule| <f1> langchain.memory.combined",shape="record"];
	"langchain.memory.buffer_window" [label="<f0> SourceModule| <f1> langchain.memory.buffer_window",shape="record"];
	"langchain.memory.buffer" [label="<f0> SourceModule| <f1> langchain.memory.buffer",shape="record"];
	"langchain.memory.chat_memory" [label="<f0> SourceModule| <f1> langchain.memory.chat_memory",shape="record"];
	"langchain_community.agent_toolkits.powerbi.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.powerbi.prompt",shape="record"];
	"langchain_community.agent_toolkits.powerbi.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.powerbi.base",shape="record"];
	"langchain_community.agent_toolkits.openapi.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.openapi.base",shape="record"];
	"langchain_community.agent_toolkits.load_tools" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.load_tools",shape="record"];
	"langchain.chains.api.base" [label="<f0> SourceModule| <f1> langchain.chains.api.base",shape="record"];
	"langchain.chains.api.prompt" [label="<f0> SourceModule| <f1> langchain.chains.api.prompt",shape="record"];
	"langchain.chains.llm_math.base" [label="<f0> SourceModule| <f1> langchain.chains.llm_math.base",shape="record"];
	"langchain.chains.llm_math" [label="<f0> Package| <f1> langchain.chains.llm_math",shape="record"];
	"langchain.chains.llm_math.prompt" [label="<f0> SourceModule| <f1> langchain.chains.llm_math.prompt",shape="record"];
	"langchain_community.utilities.dataforseo_api_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.dataforseo_api_search",shape="record"];
	"langchain_community.utilities.dalle_image_generator" [label="<f0> SourceModule| <f1> langchain_community.utilities.dalle_image_generator",shape="record"];
	"langchain_community.tools.memorize.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.memorize.tool",shape="record"];
	"langchain_community.tools.memorize" [label="<f0> Package| <f1> langchain_community.tools.memorize",shape="record"];
	"langchain_community.tools.google_trends.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_trends.tool",shape="record"];
	"langchain_community.tools.google_trends" [label="<f0> Package| <f1> langchain_community.tools.google_trends",shape="record"];
	"langchain_community.tools.google_scholar.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_scholar.tool",shape="record"];
	"langchain_community.tools.google_scholar" [label="<f0> Package| <f1> langchain_community.tools.google_scholar",shape="record"];
	"langchain_community.tools.google_lens.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_lens.tool",shape="record"];
	"langchain_community.tools.google_lens" [label="<f0> Package| <f1> langchain_community.tools.google_lens",shape="record"];
	"langchain_community.tools.google_jobs.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_jobs.tool",shape="record"];
	"langchain_community.tools.google_jobs" [label="<f0> Package| <f1> langchain_community.tools.google_jobs",shape="record"];
	"langchain_community.tools.google_finance.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_finance.tool",shape="record"];
	"langchain_community.tools.google_finance" [label="<f0> Package| <f1> langchain_community.tools.google_finance",shape="record"];
	"langchain_community.tools.golden_query.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.golden_query.tool",shape="record"];
	"langchain_community.tools.golden_query" [label="<f0> Package| <f1> langchain_community.tools.golden_query",shape="record"];
	"langchain_community.tools.dataforseo_api_search" [label="<f0> Package| <f1> langchain_community.tools.dataforseo_api_search",shape="record"];
	"langchain_community.tools.dataforseo_api_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.dataforseo_api_search.tool",shape="record"];
	"mypy_extensions" [label="<f0> SourceModule| <f1> mypy_extensions",shape="record"];
	"langchain_community.agent_toolkits.json.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.json.base",shape="record"];
	"langchain_community.agent_toolkits.json.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.json.prompt",shape="record"];
	"langchain.agents.xml.base" [label="<f0> SourceModule| <f1> langchain.agents.xml.base",shape="record"];
	"langchain.agents.xml" [label="<f0> Package| <f1> langchain.agents.xml",shape="record"];
	"langchain.agents.xml.prompt" [label="<f0> SourceModule| <f1> langchain.agents.xml.prompt",shape="record"];
	"langchain.agents.output_parsers" [label="<f0> Package| <f1> langchain.agents.output_parsers",shape="record"];
	"langchain.agents.output_parsers.xml" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.xml",shape="record"];
	"langchain.agents.output_parsers.tools" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.tools",shape="record"];
	"langchain.agents.output_parsers.self_ask" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.self_ask",shape="record"];
	"langchain.agents.output_parsers.react_single_input" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.react_single_input",shape="record"];
	"langchain.agents.output_parsers.react_json_single_input" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.react_json_single_input",shape="record"];
	"langchain.agents.chat.prompt" [label="<f0> SourceModule| <f1> langchain.agents.chat.prompt",shape="record"];
	"langchain.agents.chat" [label="<f0> Package| <f1> langchain.agents.chat",shape="record"];
	"langchain.agents.output_parsers.openai_functions" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.openai_functions",shape="record"];
	"langchain.agents.output_parsers.json" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.json",shape="record"];
	"langchain.agents.format_scratchpad" [label="<f0> Package| <f1> langchain.agents.format_scratchpad",shape="record"];
	"langchain.agents.format_scratchpad.xml" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.xml",shape="record"];
	"langchain.agents.format_scratchpad.tools" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.tools",shape="record"];
	"langchain.agents.format_scratchpad.openai_functions" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.openai_functions",shape="record"];
	"langchain.agents.format_scratchpad.log_to_messages" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.log_to_messages",shape="record"];
	"langchain.agents.format_scratchpad.log" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.log",shape="record"];
	"langchain.agents.tool_calling_agent.base" [label="<f0> SourceModule| <f1> langchain.agents.tool_calling_agent.base",shape="record"];
	"langchain.agents.tool_calling_agent" [label="<f0> Package| <f1> langchain.agents.tool_calling_agent",shape="record"];
	"langchain.agents.structured_chat.base" [label="<f0> SourceModule| <f1> langchain.agents.structured_chat.base",shape="record"];
	"langchain.agents.structured_chat" [label="<f0> Package| <f1> langchain.agents.structured_chat",shape="record"];
	"langchain.tools.render" [label="<f0> SourceModule| <f1> langchain.tools.render",shape="record"];
	"langchain.tools" [label="<f0> Package| <f1> langchain.tools",shape="record"];
	"langchain.agents.structured_chat.prompt" [label="<f0> SourceModule| <f1> langchain.agents.structured_chat.prompt",shape="record"];
	"langchain.agents.structured_chat.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.structured_chat.output_parser",shape="record"];
	"langchain.agents.self_ask_with_search.base" [label="<f0> SourceModule| <f1> langchain.agents.self_ask_with_search.base",shape="record"];
	"langchain.agents.self_ask_with_search" [label="<f0> Package| <f1> langchain.agents.self_ask_with_search",shape="record"];
	"langchain.agents.utils" [label="<f0> SourceModule| <f1> langchain.agents.utils",shape="record"];
	"langchain.agents.self_ask_with_search.prompt" [label="<f0> SourceModule| <f1> langchain.agents.self_ask_with_search.prompt",shape="record"];
	"langchain.agents.self_ask_with_search.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.self_ask_with_search.output_parser",shape="record"];
	"langchain.agents.react.base" [label="<f0> SourceModule| <f1> langchain.agents.react.base",shape="record"];
	"langchain.agents.react" [label="<f0> Package| <f1> langchain.agents.react",shape="record"];
	"langchain.agents.react.wiki_prompt" [label="<f0> SourceModule| <f1> langchain.agents.react.wiki_prompt",shape="record"];
	"langchain.agents.react.textworld_prompt" [label="<f0> SourceModule| <f1> langchain.agents.react.textworld_prompt",shape="record"];
	"langchain.agents.react.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.react.output_parser",shape="record"];
	"langchain.agents.react.agent" [label="<f0> SourceModule| <f1> langchain.agents.react.agent",shape="record"];
	"langchain.agents.openai_tools.base" [label="<f0> SourceModule| <f1> langchain.agents.openai_tools.base",shape="record"];
	"langchain.agents.openai_tools" [label="<f0> Package| <f1> langchain.agents.openai_tools",shape="record"];
	"langchain.agents.output_parsers.openai_tools" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.openai_tools",shape="record"];
	"langchain.agents.format_scratchpad.openai_tools" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.openai_tools",shape="record"];
	"langchain.agents.openai_functions_multi_agent.base" [label="<f0> SourceModule| <f1> langchain.agents.openai_functions_multi_agent.base",shape="record"];
	"langchain.agents.openai_functions_multi_agent" [label="<f0> Package| <f1> langchain.agents.openai_functions_multi_agent",shape="record"];
	"langchain.agents.openai_functions_agent.base" [label="<f0> SourceModule| <f1> langchain.agents.openai_functions_agent.base",shape="record"];
	"langchain.agents.openai_functions_agent" [label="<f0> Package| <f1> langchain.agents.openai_functions_agent",shape="record"];
	"langchain.agents.mrkl.base" [label="<f0> SourceModule| <f1> langchain.agents.mrkl.base",shape="record"];
	"langchain.agents.mrkl.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.mrkl.output_parser",shape="record"];
	"langchain.agents.loading" [label="<f0> SourceModule| <f1> langchain.agents.loading",shape="record"];
	"langchain.chains.loading" [label="<f0> SourceModule| <f1> langchain.chains.loading",shape="record"];
	"langchain_experimental.sql" [label="<f0> Package| <f1> langchain_experimental.sql",shape="record"];
	"langchain_experimental.sql.base" [label="<f0> SourceModule| <f1> langchain_experimental.sql.base",shape="record"];
	"langchain.chains.sql_database.prompt" [label="<f0> SourceModule| <f1> langchain.chains.sql_database.prompt",shape="record"];
	"langchain.chains.sql_database" [label="<f0> Package| <f1> langchain.chains.sql_database",shape="record"];
	"langchain_core.output_parsers.list" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.list",shape="record"];
	"langchain_experimental.pal_chain" [label="<f0> Package| <f1> langchain_experimental.pal_chain",shape="record"];
	"langchain_experimental.pal_chain.base" [label="<f0> SourceModule| <f1> langchain_experimental.pal_chain.base",shape="record"];
	"langchain_experimental.utilities" [label="<f0> Package| <f1> langchain_experimental.utilities",shape="record"];
	"langchain_experimental.utilities.python" [label="<f0> SourceModule| <f1> langchain_experimental.utilities.python",shape="record"];
	"langchain_experimental.pal_chain.math_prompt" [label="<f0> SourceModule| <f1> langchain_experimental.pal_chain.math_prompt",shape="record"];
	"langchain_experimental.pal_chain.colored_object_prompt" [label="<f0> SourceModule| <f1> langchain_experimental.pal_chain.colored_object_prompt",shape="record"];
	"langchain_experimental.llm_bash.base" [label="<f0> SourceModule| <f1> langchain_experimental.llm_bash.base",shape="record"];
	"langchain_experimental.llm_bash.prompt" [label="<f0> SourceModule| <f1> langchain_experimental.llm_bash.prompt",shape="record"];
	"langchain_community.llms.loading" [label="<f0> SourceModule| <f1> langchain_community.llms.loading",shape="record"];
	"langchain.chains.llm_requests" [label="<f0> SourceModule| <f1> langchain.chains.llm_requests",shape="record"];
	"langchain_community.chains.llm_requests" [label="<f0> SourceModule| <f1> langchain_community.chains.llm_requests",shape="record"];
	"langchain_community.chains.graph_qa.cypher" [label="<f0> SourceModule| <f1> langchain_community.chains.graph_qa.cypher",shape="record"];
	"langchain_community.chains.graph_qa" [label="<f0> Package| <f1> langchain_community.chains.graph_qa",shape="record"];
	"langchain_community.chains.graph_qa.prompts" [label="<f0> SourceModule| <f1> langchain_community.chains.graph_qa.prompts",shape="record"];
	"langchain_community.chains.graph_qa.cypher_utils" [label="<f0> SourceModule| <f1> langchain_community.chains.graph_qa.cypher_utils",shape="record"];
	"langchain.chains.qa_with_sources.vector_db" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.vector_db",shape="record"];
	"langchain.chains.llm_checker.base" [label="<f0> SourceModule| <f1> langchain.chains.llm_checker.base",shape="record"];
	"langchain.chains.llm_checker" [label="<f0> Package| <f1> langchain.chains.llm_checker",shape="record"];
	"langchain.chains.sequential" [label="<f0> SourceModule| <f1> langchain.chains.sequential",shape="record"];
	"langchain.chains.llm_checker.prompt" [label="<f0> SourceModule| <f1> langchain.chains.llm_checker.prompt",shape="record"];
	"langchain.chains.hyde.base" [label="<f0> SourceModule| <f1> langchain.chains.hyde.base",shape="record"];
	"langchain.chains.hyde" [label="<f0> Package| <f1> langchain.chains.hyde",shape="record"];
	"langchain.chains.hyde.prompts" [label="<f0> SourceModule| <f1> langchain.chains.hyde.prompts",shape="record"];
	"langchain_core.prompts.loading" [label="<f0> SourceModule| <f1> langchain_core.prompts.loading",shape="record"];
	"langchain_core.output_parsers.string" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.string",shape="record"];
	"langchain.agents.types" [label="<f0> SourceModule| <f1> langchain.agents.types",shape="record"];
	"langchain.agents.chat.base" [label="<f0> SourceModule| <f1> langchain.agents.chat.base",shape="record"];
	"langchain.agents.chat.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.chat.output_parser",shape="record"];
	"langchain.agents.json_chat.base" [label="<f0> SourceModule| <f1> langchain.agents.json_chat.base",shape="record"];
	"langchain.agents.json_chat" [label="<f0> Package| <f1> langchain.agents.json_chat",shape="record"];
	"langchain.agents.json_chat.prompt" [label="<f0> SourceModule| <f1> langchain.agents.json_chat.prompt",shape="record"];
	"langchain.agents.initialize" [label="<f0> SourceModule| <f1> langchain.agents.initialize",shape="record"];
	"langchain.agents.conversational_chat.base" [label="<f0> SourceModule| <f1> langchain.agents.conversational_chat.base",shape="record"];
	"langchain.agents.conversational_chat" [label="<f0> Package| <f1> langchain.agents.conversational_chat",shape="record"];
	"langchain.agents.conversational_chat.prompt" [label="<f0> SourceModule| <f1> langchain.agents.conversational_chat.prompt",shape="record"];
	"langchain.agents.conversational_chat.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.conversational_chat.output_parser",shape="record"];
	"langchain.agents.conversational.base" [label="<f0> SourceModule| <f1> langchain.agents.conversational.base",shape="record"];
	"langchain.agents.conversational" [label="<f0> Package| <f1> langchain.agents.conversational",shape="record"];
	"langchain.agents.conversational.prompt" [label="<f0> SourceModule| <f1> langchain.agents.conversational.prompt",shape="record"];
	"langchain.agents.conversational.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.conversational.output_parser",shape="record"];
	"langchain.agents.agent_types" [label="<f0> SourceModule| <f1> langchain.agents.agent_types",shape="record"];
	"langchain.agents.agent_toolkits.vectorstore.base" [label="<f0> SourceModule| <f1> langchain.agents.agent_toolkits.vectorstore.base",shape="record"];
	"langchain.agents.agent_toolkits.vectorstore" [label="<f0> Package| <f1> langchain.agents.agent_toolkits.vectorstore",shape="record"];
	"langchain.agents.agent_toolkits" [label="<f0> Package| <f1> langchain.agents.agent_toolkits",shape="record"];
	"langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" [label="<f0> SourceModule| <f1> langchain.agents.agent_toolkits.conversational_retrieval.openai_functions",shape="record"];
	"langchain.agents.agent_toolkits.conversational_retrieval" [label="<f0> Package| <f1> langchain.agents.agent_toolkits.conversational_retrieval",shape="record"];
	"langchain.agents.openai_functions_agent.agent_token_buffer_memory" [label="<f0> SourceModule| <f1> langchain.agents.openai_functions_agent.agent_token_buffer_memory",shape="record"];
	"langchain.agents.agent_toolkits.vectorstore.toolkit" [label="<f0> SourceModule| <f1> langchain.agents.agent_toolkits.vectorstore.toolkit",shape="record"];
	"langchain.agents.agent_toolkits.vectorstore.prompt" [label="<f0> SourceModule| <f1> langchain.agents.agent_toolkits.vectorstore.prompt",shape="record"];
	"langchain.agents.agent_iterator" [label="<f0> SourceModule| <f1> langchain.agents.agent_iterator",shape="record"];
	"langchain.utilities.asyncio" [label="<f0> SourceModule| <f1> langchain.utilities.asyncio",shape="record"];
	"langchain.utilities" [label="<f0> Package| <f1> langchain.utilities",shape="record"];
	"langchain.agents.agent" [label="<f0> SourceModule| <f1> langchain.agents.agent",shape="record"];
	"langchain.agents.tools" [label="<f0> SourceModule| <f1> langchain.agents.tools",shape="record"];
	"langchain._api.interactive_env" [label="<f0> SourceModule| <f1> langchain._api.interactive_env",shape="record"];
	"langchain_google_genai" [label="<f0> Package| <f1> langchain_google_genai",shape="record"];
	"langchain_google_genai.llms" [label="<f0> SourceModule| <f1> langchain_google_genai.llms",shape="record"];
	"langchain_google_genai.google_vector_store" [label="<f0> SourceModule| <f1> langchain_google_genai.google_vector_store",shape="record"];
	"google.ai.generativelanguage" [label="<f0> Package| <f1> google.ai.generativelanguage",shape="record"];
	"google.ai.generativelanguage_v1beta.types.tuned_model" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.tuned_model",shape="record"];
	"google.ai.generativelanguage_v1beta.types" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.types",shape="record"];
	"google.ai.generativelanguage_v1beta" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.text_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.retriever_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.prediction_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.permission_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.model_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.generative_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.file_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.discuss_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.cache_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.gapic_version" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.gapic_version",shape="record"];
	"google.ai.generativelanguage_v1beta.types.text_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.text_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.safety" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.safety",shape="record"];
	"google.ai.generativelanguage_v1beta.types.retriever_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.retriever_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.retriever" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.retriever",shape="record"];
	"google.ai.generativelanguage_v1beta.types.prediction_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.prediction_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.permission_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.permission_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.permission" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.permission",shape="record"];
	"google.ai.generativelanguage_v1beta.types.model_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.model_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.model" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.model",shape="record"];
	"google.ai.generativelanguage_v1beta.types.generative_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.generative_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.file_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.file_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.file" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.file",shape="record"];
	"google.ai.generativelanguage_v1beta.types.discuss_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.discuss_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.content" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.content",shape="record"];
	"google.ai.generativelanguage_v1beta.types.citation" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.citation",shape="record"];
	"google.ai.generativelanguage_v1beta.types.cached_content" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.cached_content",shape="record"];
	"google.ai.generativelanguage_v1beta.types.cache_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.cache_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.async_client",shape="record"];
	"google.ai.generativelanguage.gapic_version" [label="<f0> SourceModule| <f1> google.ai.generativelanguage.gapic_version",shape="record"];
	"google.ai" [label="<f0> NamespacePackage| <f1> google.ai",shape="record"];
	"langchain_google_genai.genai_aqa" [label="<f0> SourceModule| <f1> langchain_google_genai.genai_aqa",shape="record"];
	"langchain_google_genai.embeddings" [label="<f0> SourceModule| <f1> langchain_google_genai.embeddings",shape="record"];
	"langchain_google_genai._common" [label="<f0> SourceModule| <f1> langchain_google_genai._common",shape="record"];
	"langchain_google_genai.chat_models" [label="<f0> SourceModule| <f1> langchain_google_genai.chat_models",shape="record"];
	"langchain_google_genai._image_utils" [label="<f0> SourceModule| <f1> langchain_google_genai._image_utils",shape="record"];
	"filetype" [label="<f0> Package| <f1> filetype",shape="record"];
	"filetype.match" [label="<f0> SourceModule| <f1> filetype.match",shape="record"];
	"filetype.utils" [label="<f0> SourceModule| <f1> filetype.utils",shape="record"];
	"filetype.types" [label="<f0> Package| <f1> filetype.types",shape="record"];
	"filetype.types.base" [label="<f0> SourceModule| <f1> filetype.types.base",shape="record"];
	"filetype.types.video" [label="<f0> SourceModule| <f1> filetype.types.video",shape="record"];
	"filetype.types.isobmff" [label="<f0> SourceModule| <f1> filetype.types.isobmff",shape="record"];
	"filetype.types.image" [label="<f0> SourceModule| <f1> filetype.types.image",shape="record"];
	"filetype.types.font" [label="<f0> SourceModule| <f1> filetype.types.font",shape="record"];
	"filetype.types.document" [label="<f0> SourceModule| <f1> filetype.types.document",shape="record"];
	"filetype.types.application" [label="<f0> SourceModule| <f1> filetype.types.application",shape="record"];
	"filetype.types.audio" [label="<f0> SourceModule| <f1> filetype.types.audio",shape="record"];
	"filetype.types.archive" [label="<f0> SourceModule| <f1> filetype.types.archive",shape="record"];
	"filetype.helpers" [label="<f0> SourceModule| <f1> filetype.helpers",shape="record"];
	"filetype.filetype" [label="<f0> SourceModule| <f1> filetype.filetype",shape="record"];
	"langchain_google_genai._function_utils" [label="<f0> SourceModule| <f1> langchain_google_genai._function_utils",shape="record"];
	"google.generativeai.types.content_types" [label="<f0> SourceModule| <f1> google.generativeai.types.content_types",shape="record"];
	"google.generativeai.protos" [label="<f0> SourceModule| <f1> google.generativeai.protos",shape="record"];
	"google.generativeai.types.file_types" [label="<f0> SourceModule| <f1> google.generativeai.types.file_types",shape="record"];
	"google.generativeai.client" [label="<f0> SourceModule| <f1> google.generativeai.client",shape="record"];
	"google.generativeai.version" [label="<f0> SourceModule| <f1> google.generativeai.version",shape="record"];
	"google.generativeai.types.caching_types" [label="<f0> SourceModule| <f1> google.generativeai.types.caching_types",shape="record"];
	"google.generativeai.types" [label="<f0> Package| <f1> google.generativeai.types",shape="record"];
	"google.generativeai.types.text_types" [label="<f0> SourceModule| <f1> google.generativeai.types.text_types",shape="record"];
	"google.generativeai.string_utils" [label="<f0> SourceModule| <f1> google.generativeai.string_utils",shape="record"];
	"google.generativeai.types.safety_types" [label="<f0> SourceModule| <f1> google.generativeai.types.safety_types",shape="record"];
	"google.generativeai.types.model_types" [label="<f0> SourceModule| <f1> google.generativeai.types.model_types",shape="record"];
	"google.generativeai.types.permission_types" [label="<f0> SourceModule| <f1> google.generativeai.types.permission_types",shape="record"];
	"google.generativeai.utils" [label="<f0> SourceModule| <f1> google.generativeai.utils",shape="record"];
	"google.generativeai.types.helper_types" [label="<f0> SourceModule| <f1> google.generativeai.types.helper_types",shape="record"];
	"google.generativeai.types.generation_types" [label="<f0> SourceModule| <f1> google.generativeai.types.generation_types",shape="record"];
	"google.generativeai.responder" [label="<f0> SourceModule| <f1> google.generativeai.responder",shape="record"];
	"google.generativeai.types.citation_types" [label="<f0> SourceModule| <f1> google.generativeai.types.citation_types",shape="record"];
	"google.generativeai.caching" [label="<f0> SourceModule| <f1> google.generativeai.caching",shape="record"];
	"langchain_google_genai._genai_extension" [label="<f0> SourceModule| <f1> langchain_google_genai._genai_extension",shape="record"];
	"langchain_google_genai._enums" [label="<f0> SourceModule| <f1> langchain_google_genai._enums",shape="record"];
	"langchain_anthropic" [label="<f0> Package| <f1> langchain_anthropic",shape="record"];
	"langchain_anthropic.llms" [label="<f0> SourceModule| <f1> langchain_anthropic.llms",shape="record"];
	"langchain_anthropic.chat_models" [label="<f0> SourceModule| <f1> langchain_anthropic.chat_models",shape="record"];
	"langchain_anthropic.output_parsers" [label="<f0> SourceModule| <f1> langchain_anthropic.output_parsers",shape="record"];
	"langchain_openai" [label="<f0> Package| <f1> langchain_openai",shape="record"];
	"langchain_openai.llms" [label="<f0> Package| <f1> langchain_openai.llms",shape="record"];
	"langchain_openai.llms.base" [label="<f0> SourceModule| <f1> langchain_openai.llms.base",shape="record"];
	"langchain_openai.llms.azure" [label="<f0> SourceModule| <f1> langchain_openai.llms.azure",shape="record"];
	"langchain_openai.embeddings" [label="<f0> Package| <f1> langchain_openai.embeddings",shape="record"];
	"langchain_openai.embeddings.base" [label="<f0> SourceModule| <f1> langchain_openai.embeddings.base",shape="record"];
	"langchain_openai.embeddings.azure" [label="<f0> SourceModule| <f1> langchain_openai.embeddings.azure",shape="record"];
	"langchain_openai.chat_models" [label="<f0> Package| <f1> langchain_openai.chat_models",shape="record"];
	"langchain_openai.chat_models.base" [label="<f0> SourceModule| <f1> langchain_openai.chat_models.base",shape="record"];
	"openai.types.responses" [label="<f0> Package| <f1> openai.types.responses",shape="record"];
	"openai.types" [label="<f0> Package| <f1> openai.types",shape="record"];
	"openai.types.static_file_chunking_strategy_object_param" [label="<f0> SourceModule| <f1> openai.types.static_file_chunking_strategy_object_param",shape="record"];
	"openai.types.eval_stored_completions_data_source_config" [label="<f0> SourceModule| <f1> openai.types.eval_stored_completions_data_source_config",shape="record"];
	"openai.types.shared.metadata" [label="<f0> SourceModule| <f1> openai.types.shared.metadata",shape="record"];
	"openai._models" [label="<f0> SourceModule| <f1> openai._models",shape="record"];
	"openai._constants" [label="<f0> SourceModule| <f1> openai._constants",shape="record"];
	"openai._compat" [label="<f0> SourceModule| <f1> openai._compat",shape="record"];
	"openai._utils" [label="<f0> Package| <f1> openai._utils",shape="record"];
	"openai._utils._reflection" [label="<f0> SourceModule| <f1> openai._utils._reflection",shape="record"];
	"openai._utils._transform" [label="<f0> SourceModule| <f1> openai._utils._transform",shape="record"];
	"openai._files" [label="<f0> SourceModule| <f1> openai._files",shape="record"];
	"openai._utils._streams" [label="<f0> SourceModule| <f1> openai._utils._streams",shape="record"];
	"openai._utils._typing" [label="<f0> SourceModule| <f1> openai._utils._typing",shape="record"];
	"openai._utils._utils" [label="<f0> SourceModule| <f1> openai._utils._utils",shape="record"];
	"openai.lib.azure" [label="<f0> SourceModule| <f1> openai.lib.azure",shape="record"];
	"openai.lib" [label="<f0> Package| <f1> openai.lib",shape="record"];
	"openai.lib._parsing" [label="<f0> Package| <f1> openai.lib._parsing",shape="record"];
	"openai.lib._parsing._completions" [label="<f0> SourceModule| <f1> openai.lib._parsing._completions",shape="record"];
	"openai.types.chat.chat_completion_message_tool_call" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_message_tool_call",shape="record"];
	"openai.types.shared_params" [label="<f0> Package| <f1> openai.types.shared_params",shape="record"];
	"openai.types.shared_params.response_format_json_schema" [label="<f0> SourceModule| <f1> openai.types.shared_params.response_format_json_schema",shape="record"];
	"openai.types.shared_params.response_format_json_object" [label="<f0> SourceModule| <f1> openai.types.shared_params.response_format_json_object",shape="record"];
	"openai.types.shared_params.response_format_text" [label="<f0> SourceModule| <f1> openai.types.shared_params.response_format_text",shape="record"];
	"openai.types.shared_params.function_parameters" [label="<f0> SourceModule| <f1> openai.types.shared_params.function_parameters",shape="record"];
	"openai.types.shared_params.function_definition" [label="<f0> SourceModule| <f1> openai.types.shared_params.function_definition",shape="record"];
	"openai.types.shared_params.comparison_filter" [label="<f0> SourceModule| <f1> openai.types.shared_params.comparison_filter",shape="record"];
	"openai.types.shared_params.reasoning_effort" [label="<f0> SourceModule| <f1> openai.types.shared_params.reasoning_effort",shape="record"];
	"openai.types.shared_params.responses_model" [label="<f0> SourceModule| <f1> openai.types.shared_params.responses_model",shape="record"];
	"openai.types.shared.chat_model" [label="<f0> SourceModule| <f1> openai.types.shared.chat_model",shape="record"];
	"openai.types.shared_params.compound_filter" [label="<f0> SourceModule| <f1> openai.types.shared_params.compound_filter",shape="record"];
	"openai.types.shared_params.chat_model" [label="<f0> SourceModule| <f1> openai.types.shared_params.chat_model",shape="record"];
	"openai.types.shared_params.reasoning" [label="<f0> SourceModule| <f1> openai.types.shared_params.reasoning",shape="record"];
	"openai.types.shared.reasoning_effort" [label="<f0> SourceModule| <f1> openai.types.shared.reasoning_effort",shape="record"];
	"openai.types.shared_params.metadata" [label="<f0> SourceModule| <f1> openai.types.shared_params.metadata",shape="record"];
	"openai.types.chat.completion_create_params" [label="<f0> SourceModule| <f1> openai.types.chat.completion_create_params",shape="record"];
	"openai.types.chat.chat_completion_function_call_option_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_function_call_option_param",shape="record"];
	"openai.types.chat.chat_completion_tool_choice_option_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_tool_choice_option_param",shape="record"];
	"openai.types.chat.chat_completion_named_tool_choice_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_named_tool_choice_param",shape="record"];
	"openai.types.chat.chat_completion_prediction_content_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_prediction_content_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_text_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_text_param",shape="record"];
	"openai.types.chat.chat_completion_stream_options_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_stream_options_param",shape="record"];
	"openai.types.chat.chat_completion_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_message_param",shape="record"];
	"openai.types.chat.chat_completion_developer_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_developer_message_param",shape="record"];
	"openai.types.chat.chat_completion_assistant_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_assistant_message_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_refusal_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_refusal_param",shape="record"];
	"openai.types.chat.chat_completion_message_tool_call_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_message_tool_call_param",shape="record"];
	"openai.types.chat.chat_completion_function_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_function_message_param",shape="record"];
	"openai.types.chat.chat_completion_system_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_system_message_param",shape="record"];
	"openai.types.chat.chat_completion_user_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_user_message_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_input_audio_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_input_audio_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_image_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_image_param",shape="record"];
	"openai.types.chat.chat_completion_tool_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_tool_message_param",shape="record"];
	"openai.types.chat.chat_completion_audio_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_audio_param",shape="record"];
	"openai.types.chat.chat_completion_tool_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_tool_param",shape="record"];
	"openai.types.chat" [label="<f0> Package| <f1> openai.types.chat",shape="record"];
	"openai.types.chat.chat_completion_reasoning_effort" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_reasoning_effort",shape="record"];
	"openai.types.chat.chat_completion_token_logprob" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_token_logprob",shape="record"];
	"openai.types.chat.chat_completion_store_message" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_store_message",shape="record"];
	"openai.types.chat.parsed_function_tool_call" [label="<f0> SourceModule| <f1> openai.types.chat.parsed_function_tool_call",shape="record"];
	"openai.types.chat.completion_update_params" [label="<f0> SourceModule| <f1> openai.types.chat.completion_update_params",shape="record"];
	"openai.types.chat.chat_completion_modality" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_modality",shape="record"];
	"openai.types.chat.chat_completion_message" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_message",shape="record"];
	"openai.types.chat.chat_completion_deleted" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_deleted",shape="record"];
	"openai.types.chat.parsed_chat_completion" [label="<f0> SourceModule| <f1> openai.types.chat.parsed_chat_completion",shape="record"];
	"openai.types.chat.completion_list_params" [label="<f0> SourceModule| <f1> openai.types.chat.completion_list_params",shape="record"];
	"openai.types.chat.chat_completion_chunk" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_chunk",shape="record"];
	"openai.types.chat.chat_completion_audio" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_audio",shape="record"];
	"openai.types.chat.chat_completion_role" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_role",shape="record"];
	"openai.types.chat.chat_completion" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion",shape="record"];
	"openai.lib._pydantic" [label="<f0> SourceModule| <f1> openai.lib._pydantic",shape="record"];
	"openai.lib._tools" [label="<f0> SourceModule| <f1> openai.lib._tools",shape="record"];
	"openai._base_client" [label="<f0> SourceModule| <f1> openai._base_client",shape="record"];
	"openai._legacy_response" [label="<f0> SourceModule| <f1> openai._legacy_response",shape="record"];
	"openai._response" [label="<f0> SourceModule| <f1> openai._response",shape="record"];
	"openai._qs" [label="<f0> SourceModule| <f1> openai._qs",shape="record"];
	"distro" [label="<f0> Package| <f1> distro",shape="record"];
	"distro.distro" [label="<f0> SourceModule| <f1> distro.distro",shape="record"];
	"openai._exceptions" [label="<f0> SourceModule| <f1> openai._exceptions",shape="record"];
	"openai._streaming" [label="<f0> SourceModule| <f1> openai._streaming",shape="record"];
	"openai._client" [label="<f0> SourceModule| <f1> openai._client",shape="record"];
	"openai.resources.vector_stores.vector_stores" [label="<f0> SourceModule| <f1> openai.resources.vector_stores.vector_stores",shape="record"];
	"openai.resources.vector_stores.file_batches" [label="<f0> SourceModule| <f1> openai.resources.vector_stores.file_batches",shape="record"];
	"openai.types.vector_stores.vector_store_file_batch" [label="<f0> SourceModule| <f1> openai.types.vector_stores.vector_store_file_batch",shape="record"];
	"openai.types.vector_stores.vector_store_file" [label="<f0> SourceModule| <f1> openai.types.vector_stores.vector_store_file",shape="record"];
	"openai.types.vector_stores.file_batch_list_files_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_batch_list_files_params",shape="record"];
	"openai.types.vector_stores.file_batch_create_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_batch_create_params",shape="record"];
	"openai.types.vector_stores" [label="<f0> Package| <f1> openai.types.vector_stores",shape="record"];
	"openai.types.vector_stores.vector_store_file_deleted" [label="<f0> SourceModule| <f1> openai.types.vector_stores.vector_store_file_deleted",shape="record"];
	"openai.types.vector_stores.file_content_response" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_content_response",shape="record"];
	"openai.types.vector_stores.file_update_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_update_params",shape="record"];
	"openai.types.vector_stores.file_create_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_create_params",shape="record"];
	"openai.types.vector_stores.file_list_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_list_params",shape="record"];
	"openai.pagination" [label="<f0> SourceModule| <f1> openai.pagination",shape="record"];
	"openai._resource" [label="<f0> SourceModule| <f1> openai._resource",shape="record"];
	"openai.resources.vector_stores.files" [label="<f0> SourceModule| <f1> openai.resources.vector_stores.files",shape="record"];
	"openai.resources.vector_stores" [label="<f0> Package| <f1> openai.resources.vector_stores",shape="record"];
	"openai.resources.fine_tuning.fine_tuning" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.fine_tuning",shape="record"];
	"openai.resources.fine_tuning.checkpoints.checkpoints" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.checkpoints.checkpoints",shape="record"];
	"openai.resources.fine_tuning.checkpoints" [label="<f0> Package| <f1> openai.resources.fine_tuning.checkpoints",shape="record"];
	"openai.resources.fine_tuning.checkpoints.permissions" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.checkpoints.permissions",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_response" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_retrieve_response",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_delete_response" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_delete_response",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_create_response" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_create_response",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_retrieve_params",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_create_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_create_params",shape="record"];
	"openai.types.fine_tuning.checkpoints" [label="<f0> Package| <f1> openai.types.fine_tuning.checkpoints",shape="record"];
	"openai.types.fine_tuning" [label="<f0> Package| <f1> openai.types.fine_tuning",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration_object" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job_wandb_integration_object",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job_wandb_integration",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job_integration" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job_integration",shape="record"];
	"openai.types.fine_tuning.job_list_events_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.job_list_events_params",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job_event" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job_event",shape="record"];
	"openai.types.fine_tuning.job_create_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.job_create_params",shape="record"];
	"openai.types.fine_tuning.job_list_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.job_list_params",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job",shape="record"];
	"openai.resources.fine_tuning.jobs.jobs" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.jobs.jobs",shape="record"];
	"openai.resources.fine_tuning.jobs" [label="<f0> Package| <f1> openai.resources.fine_tuning.jobs",shape="record"];
	"openai.resources.fine_tuning.jobs.checkpoints" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.jobs.checkpoints",shape="record"];
	"openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint",shape="record"];
	"openai.types.fine_tuning.jobs.checkpoint_list_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.jobs.checkpoint_list_params",shape="record"];
	"openai.types.fine_tuning.jobs" [label="<f0> Package| <f1> openai.types.fine_tuning.jobs",shape="record"];
	"openai.resources.fine_tuning" [label="<f0> Package| <f1> openai.resources.fine_tuning",shape="record"];
	"openai.resources.responses.responses" [label="<f0> SourceModule| <f1> openai.resources.responses.responses",shape="record"];
	"openai.lib.streaming.responses._responses" [label="<f0> SourceModule| <f1> openai.lib.streaming.responses._responses",shape="record"];
	"openai.lib.streaming.responses" [label="<f0> Package| <f1> openai.lib.streaming.responses",shape="record"];
	"openai.lib.streaming" [label="<f0> Package| <f1> openai.lib.streaming",shape="record"];
	"openai.lib.streaming._assistants" [label="<f0> SourceModule| <f1> openai.lib.streaming._assistants",shape="record"];
	"openai.types.beta.threads.runs" [label="<f0> Package| <f1> openai.types.beta.threads.runs",shape="record"];
	"openai.types.beta.threads.runs.code_interpreter_tool_call_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.code_interpreter_tool_call_delta",shape="record"];
	"openai.types.beta.threads.runs.message_creation_step_details" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.message_creation_step_details",shape="record"];
	"openai.types.beta.threads.runs.code_interpreter_output_image" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.code_interpreter_output_image",shape="record"];
	"openai.types.beta.threads.runs.run_step_delta_message_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step_delta_message_delta",shape="record"];
	"openai.types.beta.threads.runs.file_search_tool_call_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.file_search_tool_call_delta",shape="record"];
	"openai.types.beta.threads.runs.code_interpreter_tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.code_interpreter_tool_call",shape="record"];
	"openai.types.beta.threads.runs.function_tool_call_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.function_tool_call_delta",shape="record"];
	"openai.types.beta.threads.runs.tool_calls_step_details" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.tool_calls_step_details",shape="record"];
	"openai.types.beta.threads.runs.tool_call_delta_object" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.tool_call_delta_object",shape="record"];
	"openai.types.beta.threads.runs.file_search_tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.file_search_tool_call",shape="record"];
	"openai.types.beta.threads.runs.code_interpreter_logs" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.code_interpreter_logs",shape="record"];
	"openai.types.beta.threads.runs.step_retrieve_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.step_retrieve_params",shape="record"];
	"openai.types.beta.threads.runs.run_step_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step_delta_event",shape="record"];
	"openai.types.beta.threads.runs.function_tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.function_tool_call",shape="record"];
	"openai.types.beta.threads.runs.step_list_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.step_list_params",shape="record"];
	"openai.types.beta.threads.runs.run_step_include" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step_include",shape="record"];
	"openai.types.beta.threads.runs.tool_call_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.tool_call_delta",shape="record"];
	"openai.types.beta.threads.runs.run_step_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step_delta",shape="record"];
	"openai.types.beta.threads.runs.tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.tool_call",shape="record"];
	"openai.types.beta.threads.runs.run_step" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step",shape="record"];
	"openai.types.beta.threads" [label="<f0> Package| <f1> openai.types.beta.threads",shape="record"];
	"openai.types.beta.threads.required_action_function_tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.required_action_function_tool_call",shape="record"];
	"openai.types.beta.threads.run_submit_tool_outputs_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_submit_tool_outputs_params",shape="record"];
	"openai.types.beta.threads.image_file_content_block_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_content_block_param",shape="record"];
	"openai.types.beta.threads.file_citation_delta_annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.file_citation_delta_annotation",shape="record"];
	"openai.types.beta.threads.image_url_content_block_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_content_block_param",shape="record"];
	"openai.types.beta.threads.message_content_part_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_content_part_param",shape="record"];
	"openai.types.beta.threads.file_path_delta_annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.file_path_delta_annotation",shape="record"];
	"openai.types.beta.threads.text_content_block_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text_content_block_param",shape="record"];
	"openai.types.beta.threads.image_file_content_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_content_block",shape="record"];
	"openai.types.beta.threads.file_citation_annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.file_citation_annotation",shape="record"];
	"openai.types.beta.threads.image_url_content_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_content_block",shape="record"];
	"openai.types.beta.threads.image_file_delta_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_delta_block",shape="record"];
	"openai.types.beta.threads.refusal_content_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.refusal_content_block",shape="record"];
	"openai.types.beta.threads.message_update_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_update_params",shape="record"];
	"openai.types.beta.threads.message_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_create_params",shape="record"];
	"openai.types.beta.code_interpreter_tool_param" [label="<f0> SourceModule| <f1> openai.types.beta.code_interpreter_tool_param",shape="record"];
	"openai.types.beta.threads.message_content_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_content_delta",shape="record"];
	"openai.types.beta.threads.image_url_delta_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_delta_block",shape="record"];
	"openai.types.beta.threads.file_path_annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.file_path_annotation",shape="record"];
	"openai.types.beta.threads.refusal_delta_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.refusal_delta_block",shape="record"];
	"openai.types.beta.threads.message_list_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_list_params",shape="record"];
	"openai.types.beta.threads.message_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_delta_event",shape="record"];
	"openai.types.beta.threads.text_content_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text_content_block",shape="record"];
	"openai.types.beta.threads.run_update_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_update_params",shape="record"];
	"openai.types.beta.threads.run_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_create_params",shape="record"];
	"openai.types.beta.assistant_response_format_option_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_response_format_option_param",shape="record"];
	"openai.types.beta.assistant_tool_choice_option_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_option_param",shape="record"];
	"openai.types.beta.assistant_tool_choice_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_param",shape="record"];
	"openai.types.beta.assistant_tool_choice_function_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_function_param",shape="record"];
	"openai.types.beta.assistant_tool_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_param",shape="record"];
	"openai.types.beta.file_search_tool_param" [label="<f0> SourceModule| <f1> openai.types.beta.file_search_tool_param",shape="record"];
	"openai.types.beta.function_tool_param" [label="<f0> SourceModule| <f1> openai.types.beta.function_tool_param",shape="record"];
	"openai.types.beta.threads.text_delta_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text_delta_block",shape="record"];
	"openai.types.beta.threads.image_file_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_param",shape="record"];
	"openai.types.beta.threads.image_file_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_delta",shape="record"];
	"openai.types.beta.threads.annotation_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.annotation_delta",shape="record"];
	"openai.types.beta.threads.run_list_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_list_params",shape="record"];
	"openai.types.beta.threads.message_deleted" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_deleted",shape="record"];
	"openai.types.beta.threads.message_content" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_content",shape="record"];
	"openai.types.beta.threads.image_url_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_param",shape="record"];
	"openai.types.beta.threads.image_url_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_delta",shape="record"];
	"openai.types.beta.threads.message_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_delta",shape="record"];
	"openai.types.beta.threads.text_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text_delta",shape="record"];
	"openai.types.beta.threads.run_status" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_status",shape="record"];
	"openai.types.beta.threads.image_file" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file",shape="record"];
	"openai.types.beta.threads.annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.annotation",shape="record"];
	"openai.types.beta.threads.image_url" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url",shape="record"];
	"openai.types.beta.threads.message" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message",shape="record"];
	"openai.types.beta.code_interpreter_tool" [label="<f0> SourceModule| <f1> openai.types.beta.code_interpreter_tool",shape="record"];
	"openai.types.beta.threads.text" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text",shape="record"];
	"openai.types.beta.threads.run" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run",shape="record"];
	"openai.types.beta.assistant_response_format_option" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_response_format_option",shape="record"];
	"openai.types.shared.response_format_json_schema" [label="<f0> SourceModule| <f1> openai.types.shared.response_format_json_schema",shape="record"];
	"openai.types.shared.response_format_json_object" [label="<f0> SourceModule| <f1> openai.types.shared.response_format_json_object",shape="record"];
	"openai.types.shared.response_format_text" [label="<f0> SourceModule| <f1> openai.types.shared.response_format_text",shape="record"];
	"openai.types.beta.assistant_tool_choice_option" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_option",shape="record"];
	"openai.types.beta.assistant_tool_choice" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice",shape="record"];
	"openai.types.beta.assistant_tool_choice_function" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_function",shape="record"];
	"openai.types.beta.assistant_tool" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool",shape="record"];
	"openai.types.beta.file_search_tool" [label="<f0> SourceModule| <f1> openai.types.beta.file_search_tool",shape="record"];
	"openai.types.beta.function_tool" [label="<f0> SourceModule| <f1> openai.types.beta.function_tool",shape="record"];
	"openai.types.shared.function_definition" [label="<f0> SourceModule| <f1> openai.types.shared.function_definition",shape="record"];
	"openai.types.shared.function_parameters" [label="<f0> SourceModule| <f1> openai.types.shared.function_parameters",shape="record"];
	"openai.types.beta" [label="<f0> Package| <f1> openai.types.beta",shape="record"];
	"openai.types.beta.thread_create_and_run_params" [label="<f0> SourceModule| <f1> openai.types.beta.thread_create_and_run_params",shape="record"];
	"openai.types.beta.assistant_update_params" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_update_params",shape="record"];
	"openai.types.beta.assistant_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_create_params",shape="record"];
	"openai.types.beta.assistant_stream_event" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_stream_event",shape="record"];
	"openai.types.shared.error_object" [label="<f0> SourceModule| <f1> openai.types.shared.error_object",shape="record"];
	"openai.types.beta.assistant_list_params" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_list_params",shape="record"];
	"openai.types.beta.thread_update_params" [label="<f0> SourceModule| <f1> openai.types.beta.thread_update_params",shape="record"];
	"openai.types.beta.thread_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.thread_create_params",shape="record"];
	"openai.types.beta.assistant_deleted" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_deleted",shape="record"];
	"openai.types.beta.thread_deleted" [label="<f0> SourceModule| <f1> openai.types.beta.thread_deleted",shape="record"];
	"openai.types.beta.assistant" [label="<f0> SourceModule| <f1> openai.types.beta.assistant",shape="record"];
	"openai.types.beta.thread" [label="<f0> SourceModule| <f1> openai.types.beta.thread",shape="record"];
	"openai.lib.streaming.responses._events" [label="<f0> SourceModule| <f1> openai.lib.streaming.responses._events",shape="record"];
	"openai.lib.streaming.responses._types" [label="<f0> SourceModule| <f1> openai.lib.streaming.responses._types",shape="record"];
	"openai.lib._parsing._responses" [label="<f0> SourceModule| <f1> openai.lib._parsing._responses",shape="record"];
	"openai.resources.responses.input_items" [label="<f0> SourceModule| <f1> openai.resources.responses.input_items",shape="record"];
	"openai.resources.responses" [label="<f0> Package| <f1> openai.resources.responses",shape="record"];
	"openai.resources.uploads.uploads" [label="<f0> SourceModule| <f1> openai.resources.uploads.uploads",shape="record"];
	"openai.resources.uploads.parts" [label="<f0> SourceModule| <f1> openai.resources.uploads.parts",shape="record"];
	"openai.types.uploads.upload_part" [label="<f0> SourceModule| <f1> openai.types.uploads.upload_part",shape="record"];
	"openai.types.uploads.part_create_params" [label="<f0> SourceModule| <f1> openai.types.uploads.part_create_params",shape="record"];
	"openai.types.uploads" [label="<f0> Package| <f1> openai.types.uploads",shape="record"];
	"openai.resources.uploads" [label="<f0> Package| <f1> openai.resources.uploads",shape="record"];
	"openai.resources.evals.evals" [label="<f0> SourceModule| <f1> openai.resources.evals.evals",shape="record"];
	"openai.resources.evals.runs.runs" [label="<f0> SourceModule| <f1> openai.resources.evals.runs.runs",shape="record"];
	"openai.resources.evals.runs" [label="<f0> Package| <f1> openai.resources.evals.runs",shape="record"];
	"openai.types.evals.run_retrieve_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_retrieve_response",shape="record"];
	"openai.types.evals.create_eval_completions_run_data_source" [label="<f0> SourceModule| <f1> openai.types.evals.create_eval_completions_run_data_source",shape="record"];
	"openai.types.evals.create_eval_jsonl_run_data_source" [label="<f0> SourceModule| <f1> openai.types.evals.create_eval_jsonl_run_data_source",shape="record"];
	"openai.types.evals.eval_api_error" [label="<f0> SourceModule| <f1> openai.types.evals.eval_api_error",shape="record"];
	"openai.types.evals.run_delete_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_delete_response",shape="record"];
	"openai.types.evals.run_create_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_create_response",shape="record"];
	"openai.types.evals.run_cancel_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_cancel_response",shape="record"];
	"openai.types.evals.run_list_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_list_response",shape="record"];
	"openai.types.evals.run_create_params" [label="<f0> SourceModule| <f1> openai.types.evals.run_create_params",shape="record"];
	"openai.types.evals.create_eval_completions_run_data_source_param" [label="<f0> SourceModule| <f1> openai.types.evals.create_eval_completions_run_data_source_param",shape="record"];
	"openai.types.evals.create_eval_jsonl_run_data_source_param" [label="<f0> SourceModule| <f1> openai.types.evals.create_eval_jsonl_run_data_source_param",shape="record"];
	"openai.types.evals.run_list_params" [label="<f0> SourceModule| <f1> openai.types.evals.run_list_params",shape="record"];
	"openai.types.evals" [label="<f0> Package| <f1> openai.types.evals",shape="record"];
	"openai.resources.evals.runs.output_items" [label="<f0> SourceModule| <f1> openai.resources.evals.runs.output_items",shape="record"];
	"openai.types.evals.runs.output_item_retrieve_response" [label="<f0> SourceModule| <f1> openai.types.evals.runs.output_item_retrieve_response",shape="record"];
	"openai.types.evals.runs.output_item_list_response" [label="<f0> SourceModule| <f1> openai.types.evals.runs.output_item_list_response",shape="record"];
	"openai.types.evals.runs.output_item_list_params" [label="<f0> SourceModule| <f1> openai.types.evals.runs.output_item_list_params",shape="record"];
	"openai.types.evals.runs" [label="<f0> Package| <f1> openai.types.evals.runs",shape="record"];
	"openai.resources.evals" [label="<f0> Package| <f1> openai.resources.evals",shape="record"];
	"openai.resources.audio.audio" [label="<f0> SourceModule| <f1> openai.resources.audio.audio",shape="record"];
	"openai.resources.audio.transcriptions" [label="<f0> SourceModule| <f1> openai.resources.audio.transcriptions",shape="record"];
	"openai.types.audio.transcription_create_response" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_create_response",shape="record"];
	"openai.types.audio.transcription_stream_event" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_stream_event",shape="record"];
	"openai.types.audio.transcription_text_delta_event" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_text_delta_event",shape="record"];
	"openai.types.audio.transcription_text_done_event" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_text_done_event",shape="record"];
	"openai.types.audio.transcription_verbose" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_verbose",shape="record"];
	"openai.types.audio.transcription_segment" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_segment",shape="record"];
	"openai.types.audio.transcription_word" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_word",shape="record"];
	"openai.types.audio.transcription_include" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_include",shape="record"];
	"openai.types.audio.transcription" [label="<f0> SourceModule| <f1> openai.types.audio.transcription",shape="record"];
	"openai.types.audio.transcription_create_params" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_create_params",shape="record"];
	"openai.types.audio" [label="<f0> Package| <f1> openai.types.audio",shape="record"];
	"openai.types.audio.translation_create_response" [label="<f0> SourceModule| <f1> openai.types.audio.translation_create_response",shape="record"];
	"openai.types.audio.translation_create_params" [label="<f0> SourceModule| <f1> openai.types.audio.translation_create_params",shape="record"];
	"openai.types.audio.speech_create_params" [label="<f0> SourceModule| <f1> openai.types.audio.speech_create_params",shape="record"];
	"openai.types.audio.translation_verbose" [label="<f0> SourceModule| <f1> openai.types.audio.translation_verbose",shape="record"];
	"openai.types.audio.speech_model" [label="<f0> SourceModule| <f1> openai.types.audio.speech_model",shape="record"];
	"openai.types.audio.translation" [label="<f0> SourceModule| <f1> openai.types.audio.translation",shape="record"];
	"openai.resources.audio.translations" [label="<f0> SourceModule| <f1> openai.resources.audio.translations",shape="record"];
	"openai.resources.audio.speech" [label="<f0> SourceModule| <f1> openai.resources.audio.speech",shape="record"];
	"openai.resources.audio" [label="<f0> Package| <f1> openai.resources.audio",shape="record"];
	"openai.resources.chat.chat" [label="<f0> SourceModule| <f1> openai.resources.chat.chat",shape="record"];
	"openai.resources.chat.completions.completions" [label="<f0> SourceModule| <f1> openai.resources.chat.completions.completions",shape="record"];
	"openai.resources.chat.completions" [label="<f0> Package| <f1> openai.resources.chat.completions",shape="record"];
	"openai.resources.chat.completions.messages" [label="<f0> SourceModule| <f1> openai.resources.chat.completions.messages",shape="record"];
	"openai.types.chat.completions.message_list_params" [label="<f0> SourceModule| <f1> openai.types.chat.completions.message_list_params",shape="record"];
	"openai.types.chat.completions" [label="<f0> Package| <f1> openai.types.chat.completions",shape="record"];
	"openai.resources.chat" [label="<f0> Package| <f1> openai.resources.chat",shape="record"];
	"openai.resources.beta.beta" [label="<f0> SourceModule| <f1> openai.resources.beta.beta",shape="record"];
	"openai.resources.beta.realtime.realtime" [label="<f0> SourceModule| <f1> openai.resources.beta.realtime.realtime",shape="record"];
	"openai.resources.beta.realtime" [label="<f0> Package| <f1> openai.resources.beta.realtime",shape="record"];
	"websockets.exceptions" [label="<f0> SourceModule| <f1> websockets.exceptions",shape="record"];
	"websockets.http11" [label="<f0> SourceModule| <f1> websockets.http11",shape="record"];
	"websockets.version" [label="<f0> SourceModule| <f1> websockets.version",shape="record"];
	"websockets.datastructures" [label="<f0> SourceModule| <f1> websockets.datastructures",shape="record"];
	"websockets.frames" [label="<f0> SourceModule| <f1> websockets.frames",shape="record"];
	"websockets.extensions" [label="<f0> Package| <f1> websockets.extensions",shape="record"];
	"websockets.extensions.base" [label="<f0> SourceModule| <f1> websockets.extensions.base",shape="record"];
	"websockets.typing" [label="<f0> SourceModule| <f1> websockets.typing",shape="record"];
	"websockets.utils" [label="<f0> SourceModule| <f1> websockets.utils",shape="record"];
	"websockets.speedups" [label="<f0> Extension| <f1> websockets.speedups",shape="record"];
	"websockets" [label="<f0> Package| <f1> websockets",shape="record"];
	"websockets.uri" [label="<f0> SourceModule| <f1> websockets.uri",shape="record"];
	"websockets.sync.utils" [label="<f0> SourceModule| <f1> websockets.sync.utils",shape="record"];
	"websockets.sync.server" [label="<f0> SourceModule| <f1> websockets.sync.server",shape="record"];
	"websockets.sync.router" [label="<f0> SourceModule| <f1> websockets.sync.router",shape="record"];
	"'werkzeug.routing'" [label="<f0> MissingModule| <f1> 'werkzeug.routing'",shape="record"];
	"'werkzeug.exceptions'" [label="<f0> MissingModule| <f1> 'werkzeug.exceptions'",shape="record"];
	"websockets.sync.messages" [label="<f0> SourceModule| <f1> websockets.sync.messages",shape="record"];
	"websockets.sync.connection" [label="<f0> SourceModule| <f1> websockets.sync.connection",shape="record"];
	"websockets.sync" [label="<f0> Package| <f1> websockets.sync",shape="record"];
	"websockets.streams" [label="<f0> SourceModule| <f1> websockets.streams",shape="record"];
	"websockets.legacy.server" [label="<f0> SourceModule| <f1> websockets.legacy.server",shape="record"];
	"websockets.legacy.protocol" [label="<f0> SourceModule| <f1> websockets.legacy.protocol",shape="record"];
	"websockets.legacy.http" [label="<f0> SourceModule| <f1> websockets.legacy.http",shape="record"];
	"websockets.legacy.handshake" [label="<f0> SourceModule| <f1> websockets.legacy.handshake",shape="record"];
	"websockets.legacy.framing" [label="<f0> SourceModule| <f1> websockets.legacy.framing",shape="record"];
	"websockets.legacy.exceptions" [label="<f0> SourceModule| <f1> websockets.legacy.exceptions",shape="record"];
	"websockets.legacy.client" [label="<f0> SourceModule| <f1> websockets.legacy.client",shape="record"];
	"websockets.legacy.auth" [label="<f0> SourceModule| <f1> websockets.legacy.auth",shape="record"];
	"websockets.legacy" [label="<f0> Package| <f1> websockets.legacy",shape="record"];
	"websockets.http" [label="<f0> SourceModule| <f1> websockets.http",shape="record"];
	"websockets.headers" [label="<f0> SourceModule| <f1> websockets.headers",shape="record"];
	"websockets.extensions.permessage_deflate" [label="<f0> SourceModule| <f1> websockets.extensions.permessage_deflate",shape="record"];
	"websockets.connection" [label="<f0> SourceModule| <f1> websockets.connection",shape="record"];
	"websockets.cli" [label="<f0> SourceModule| <f1> websockets.cli",shape="record"];
	"websockets.auth" [label="<f0> SourceModule| <f1> websockets.auth",shape="record"];
	"websockets.asyncio.messages" [label="<f0> SourceModule| <f1> websockets.asyncio.messages",shape="record"];
	"websockets.asyncio.connection" [label="<f0> SourceModule| <f1> websockets.asyncio.connection",shape="record"];
	"websockets.asyncio.compatibility" [label="<f0> SourceModule| <f1> websockets.asyncio.compatibility",shape="record"];
	"websockets.asyncio.async_timeout" [label="<f0> SourceModule| <f1> websockets.asyncio.async_timeout",shape="record"];
	"websockets.asyncio" [label="<f0> Package| <f1> websockets.asyncio",shape="record"];
	"websockets.__main__" [label="<f0> SourceModule| <f1> websockets.__main__",shape="record"];
	"websockets.server" [label="<f0> SourceModule| <f1> websockets.server",shape="record"];
	"websockets.protocol" [label="<f0> SourceModule| <f1> websockets.protocol",shape="record"];
	"websockets.client" [label="<f0> SourceModule| <f1> websockets.client",shape="record"];
	"websockets.asyncio.server" [label="<f0> SourceModule| <f1> websockets.asyncio.server",shape="record"];
	"websockets.asyncio.router" [label="<f0> SourceModule| <f1> websockets.asyncio.router",shape="record"];
	"werkzeug" [label="<f0> MissingModule| <f1> werkzeug",shape="record"];
	"websockets.imports" [label="<f0> SourceModule| <f1> websockets.imports",shape="record"];
	"websockets.asyncio.client" [label="<f0> SourceModule| <f1> websockets.asyncio.client",shape="record"];
	"'python_socks.async_'" [label="<f0> MissingModule| <f1> 'python_socks.async_'",shape="record"];
	"python_socks" [label="<f0> MissingModule| <f1> python_socks",shape="record"];
	"websockets.sync.client" [label="<f0> SourceModule| <f1> websockets.sync.client",shape="record"];
	"'python_socks.sync'" [label="<f0> MissingModule| <f1> 'python_socks.sync'",shape="record"];
	"openai.types.beta.realtime.realtime_client_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_client_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_truncate_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_truncate_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_retrieve_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_retrieve_event_param",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_commit_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_commit_event_param",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_append_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_append_event_param",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_clear_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_clear_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_delete_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_delete_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_create_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_create_event_param",shape="record"];
	"openai.types.beta.realtime.response_cancel_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_cancel_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_content_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_content_param",shape="record"];
	"openai.types.beta.realtime.realtime_server_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_server_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event",shape="record"];
	"openai.types.beta.realtime.response_function_call_arguments_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_function_call_arguments_delta_event",shape="record"];
	"openai.types.beta.realtime.response_function_call_arguments_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_function_call_arguments_done_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_speech_stopped_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_speech_stopped_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_speech_started_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_speech_started_event",shape="record"];
	"openai.types.beta.realtime.response_audio_transcript_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_audio_transcript_delta_event",shape="record"];
	"openai.types.beta.realtime.response_audio_transcript_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_audio_transcript_done_event",shape="record"];
	"openai.types.beta.realtime.transcription_session_updated_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session_updated_event",shape="record"];
	"openai.types.beta.realtime.transcription_session" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_committed_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_committed_event",shape="record"];
	"openai.types.beta.realtime.response_content_part_added_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_content_part_added_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_truncated_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_truncated_event",shape="record"];
	"openai.types.beta.realtime.response_output_item_added_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_output_item_added_event",shape="record"];
	"openai.types.beta.realtime.response_content_part_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_content_part_done_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_cleared_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_cleared_event",shape="record"];
	"openai.types.beta.realtime.response_output_item_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_output_item_done_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_deleted_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_deleted_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_created_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_created_event",shape="record"];
	"openai.types.beta.realtime.response_audio_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_audio_delta_event",shape="record"];
	"openai.types.beta.realtime.conversation_created_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_created_event",shape="record"];
	"openai.types.beta.realtime.response_text_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_text_delta_event",shape="record"];
	"openai.types.beta.realtime.response_audio_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_audio_done_event",shape="record"];
	"openai.types.beta.realtime.rate_limits_updated_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.rate_limits_updated_event",shape="record"];
	"openai.types.beta.realtime.response_text_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_text_done_event",shape="record"];
	"openai.types.beta.realtime.response_created_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_created_event",shape="record"];
	"openai.types.beta.realtime.realtime_response" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_response",shape="record"];
	"openai.types.beta.realtime.realtime_response_status" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_response_status",shape="record"];
	"openai.types.beta.realtime.realtime_response_usage" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_response_usage",shape="record"];
	"openai.types.beta.realtime.session_updated_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_updated_event",shape="record"];
	"openai.types.beta.realtime.session" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session",shape="record"];
	"openai.types.beta.realtime.session_created_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_created_event",shape="record"];
	"openai.types.beta.realtime.response_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_done_event",shape="record"];
	"openai.types.beta.realtime.conversation_item" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item",shape="record"];
	"openai.types.beta.realtime.conversation_item_content" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_content",shape="record"];
	"openai.types.beta.realtime.error_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.error_event",shape="record"];
	"openai.types.beta.realtime.realtime_client_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_client_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_truncate_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_truncate_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_retrieve_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_retrieve_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_commit_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_commit_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_append_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_append_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_clear_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_clear_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_delete_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_delete_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_create_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_create_event",shape="record"];
	"openai.types.beta.realtime.transcription_session_update" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session_update",shape="record"];
	"openai.types.beta.realtime.response_create_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_create_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_with_reference" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_with_reference",shape="record"];
	"openai.types.beta.realtime.response_cancel_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_cancel_event",shape="record"];
	"openai.types.beta.realtime.session_update_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_update_event",shape="record"];
	"openai.resources.beta.realtime.transcription_sessions" [label="<f0> SourceModule| <f1> openai.resources.beta.realtime.transcription_sessions",shape="record"];
	"openai.types.beta.realtime.transcription_session_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session_create_params",shape="record"];
	"openai.types.beta.realtime.transcription_session_update_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session_update_param",shape="record"];
	"openai.types.beta.realtime.response_create_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_create_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_with_reference_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_with_reference_param",shape="record"];
	"openai.types.beta.realtime.session_update_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_update_event_param",shape="record"];
	"openai.types.beta.realtime" [label="<f0> Package| <f1> openai.types.beta.realtime",shape="record"];
	"openai.types.beta.realtime.session_create_response" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_create_response",shape="record"];
	"openai.types.beta.realtime.realtime_connect_params" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_connect_params",shape="record"];
	"openai.types.beta.realtime.session_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_create_params",shape="record"];
	"openai.resources.beta.realtime.sessions" [label="<f0> SourceModule| <f1> openai.resources.beta.realtime.sessions",shape="record"];
	"openai.resources.beta.threads.threads" [label="<f0> SourceModule| <f1> openai.resources.beta.threads.threads",shape="record"];
	"openai.resources.beta.threads" [label="<f0> Package| <f1> openai.resources.beta.threads",shape="record"];
	"openai.resources.beta.threads.runs" [label="<f0> Package| <f1> openai.resources.beta.threads.runs",shape="record"];
	"openai.resources.beta.threads.runs.steps" [label="<f0> SourceModule| <f1> openai.resources.beta.threads.runs.steps",shape="record"];
	"openai.resources.beta.threads.runs.runs" [label="<f0> SourceModule| <f1> openai.resources.beta.threads.runs.runs",shape="record"];
	"openai.resources.beta.threads.messages" [label="<f0> SourceModule| <f1> openai.resources.beta.threads.messages",shape="record"];
	"openai.resources.beta.assistants" [label="<f0> SourceModule| <f1> openai.resources.beta.assistants",shape="record"];
	"openai.resources.beta.chat.chat" [label="<f0> SourceModule| <f1> openai.resources.beta.chat.chat",shape="record"];
	"openai.resources.beta.chat" [label="<f0> Package| <f1> openai.resources.beta.chat",shape="record"];
	"openai.resources.beta.chat.completions" [label="<f0> SourceModule| <f1> openai.resources.beta.chat.completions",shape="record"];
	"openai.lib.streaming.chat" [label="<f0> Package| <f1> openai.lib.streaming.chat",shape="record"];
	"openai.lib.streaming.chat._completions" [label="<f0> SourceModule| <f1> openai.lib.streaming.chat._completions",shape="record"];
	"openai.lib.streaming._deltas" [label="<f0> SourceModule| <f1> openai.lib.streaming._deltas",shape="record"];
	"jiter.from_json" [label="<f0> MissingModule| <f1> jiter.from_json",shape="record"];
	"jiter" [label="<f0> Package| <f1> jiter",shape="record"];
	"jiter.jiter" [label="<f0> Extension| <f1> jiter.jiter",shape="record"];
	"openai.lib.streaming.chat._events" [label="<f0> SourceModule| <f1> openai.lib.streaming.chat._events",shape="record"];
	"openai.lib.streaming.chat._types" [label="<f0> SourceModule| <f1> openai.lib.streaming.chat._types",shape="record"];
	"openai.resources.beta" [label="<f0> Package| <f1> openai.resources.beta",shape="record"];
	"openai.resources.moderations" [label="<f0> SourceModule| <f1> openai.resources.moderations",shape="record"];
	"openai.resources.completions" [label="<f0> SourceModule| <f1> openai.resources.completions",shape="record"];
	"openai.resources.embeddings" [label="<f0> SourceModule| <f1> openai.resources.embeddings",shape="record"];
	"openai._extras" [label="<f0> Package| <f1> openai._extras",shape="record"];
	"openai._extras.sounddevice_proxy" [label="<f0> SourceModule| <f1> openai._extras.sounddevice_proxy",shape="record"];
	"sounddevice" [label="<f0> MissingModule| <f1> sounddevice",shape="record"];
	"openai._extras._common" [label="<f0> SourceModule| <f1> openai._extras._common",shape="record"];
	"openai._extras.pandas_proxy" [label="<f0> SourceModule| <f1> openai._extras.pandas_proxy",shape="record"];
	"openai._extras.numpy_proxy" [label="<f0> SourceModule| <f1> openai._extras.numpy_proxy",shape="record"];
	"openai.resources.batches" [label="<f0> SourceModule| <f1> openai.resources.batches",shape="record"];
	"openai.resources.models" [label="<f0> SourceModule| <f1> openai.resources.models",shape="record"];
	"openai.resources.images" [label="<f0> SourceModule| <f1> openai.resources.images",shape="record"];
	"openai.resources.files" [label="<f0> SourceModule| <f1> openai.resources.files",shape="record"];
	"openai.resources" [label="<f0> Package| <f1> openai.resources",shape="record"];
	"openai._version" [label="<f0> SourceModule| <f1> openai._version",shape="record"];
	"openai._utils._proxy" [label="<f0> SourceModule| <f1> openai._utils._proxy",shape="record"];
	"openai._utils._sync" [label="<f0> SourceModule| <f1> openai._utils._sync",shape="record"];
	"openai._utils._logs" [label="<f0> SourceModule| <f1> openai._utils._logs",shape="record"];
	"openai._types" [label="<f0> SourceModule| <f1> openai._types",shape="record"];
	"openai.types.static_file_chunking_strategy_object" [label="<f0> SourceModule| <f1> openai.types.static_file_chunking_strategy_object",shape="record"];
	"openai.types.static_file_chunking_strategy_param" [label="<f0> SourceModule| <f1> openai.types.static_file_chunking_strategy_param",shape="record"];
	"openai.types.other_file_chunking_strategy_object" [label="<f0> SourceModule| <f1> openai.types.other_file_chunking_strategy_object",shape="record"];
	"openai.types.moderation_multi_modal_input_param" [label="<f0> SourceModule| <f1> openai.types.moderation_multi_modal_input_param",shape="record"];
	"openai.types.eval_text_similarity_grader_param" [label="<f0> SourceModule| <f1> openai.types.eval_text_similarity_grader_param",shape="record"];
	"openai.types.auto_file_chunking_strategy_param" [label="<f0> SourceModule| <f1> openai.types.auto_file_chunking_strategy_param",shape="record"];
	"openai.types.moderation_image_url_input_param" [label="<f0> SourceModule| <f1> openai.types.moderation_image_url_input_param",shape="record"];
	"openai.types.eval_string_check_grader_param" [label="<f0> SourceModule| <f1> openai.types.eval_string_check_grader_param",shape="record"];
	"openai.types.eval_custom_data_source_config" [label="<f0> SourceModule| <f1> openai.types.eval_custom_data_source_config",shape="record"];
	"openai.types.static_file_chunking_strategy" [label="<f0> SourceModule| <f1> openai.types.static_file_chunking_strategy",shape="record"];
	"openai.types.websocket_connection_options" [label="<f0> SourceModule| <f1> openai.types.websocket_connection_options",shape="record"];
	"openai.types.vector_store_search_response" [label="<f0> SourceModule| <f1> openai.types.vector_store_search_response",shape="record"];
	"openai.types.file_chunking_strategy_param" [label="<f0> SourceModule| <f1> openai.types.file_chunking_strategy_param",shape="record"];
	"openai.types.moderation_text_input_param" [label="<f0> SourceModule| <f1> openai.types.moderation_text_input_param",shape="record"];
	"openai.types.eval_text_similarity_grader" [label="<f0> SourceModule| <f1> openai.types.eval_text_similarity_grader",shape="record"];
	"openai.types.moderation_create_response" [label="<f0> SourceModule| <f1> openai.types.moderation_create_response",shape="record"];
	"openai.types.create_embedding_response" [label="<f0> SourceModule| <f1> openai.types.create_embedding_response",shape="record"];
	"openai.types.eval_string_check_grader" [label="<f0> SourceModule| <f1> openai.types.eval_string_check_grader",shape="record"];
	"openai.types.eval_label_model_grader" [label="<f0> SourceModule| <f1> openai.types.eval_label_model_grader",shape="record"];
	"openai.types.file_chunking_strategy" [label="<f0> SourceModule| <f1> openai.types.file_chunking_strategy",shape="record"];
	"openai.types.eval_retrieve_response" [label="<f0> SourceModule| <f1> openai.types.eval_retrieve_response",shape="record"];
	"openai.types.audio_response_format" [label="<f0> SourceModule| <f1> openai.types.audio_response_format",shape="record"];
	"openai.types.vector_store_deleted" [label="<f0> SourceModule| <f1> openai.types.vector_store_deleted",shape="record"];
	"openai.types.eval_update_response" [label="<f0> SourceModule| <f1> openai.types.eval_update_response",shape="record"];
	"openai.types.eval_delete_response" [label="<f0> SourceModule| <f1> openai.types.eval_delete_response",shape="record"];
	"openai.types.eval_create_response" [label="<f0> SourceModule| <f1> openai.types.eval_create_response",shape="record"];
	"openai.types.batch_request_counts" [label="<f0> SourceModule| <f1> openai.types.batch_request_counts",shape="record"];
	"openai.types.eval_list_response" [label="<f0> SourceModule| <f1> openai.types.eval_list_response",shape="record"];
	"openai.types.completion_choice" [label="<f0> SourceModule| <f1> openai.types.completion_choice",shape="record"];
	"openai.types.moderation_model" [label="<f0> SourceModule| <f1> openai.types.moderation_model",shape="record"];
	"openai.types.completion_usage" [label="<f0> SourceModule| <f1> openai.types.completion_usage",shape="record"];
	"openai.types.images_response" [label="<f0> SourceModule| <f1> openai.types.images_response",shape="record"];
	"openai.types.embedding_model" [label="<f0> SourceModule| <f1> openai.types.embedding_model",shape="record"];
	"openai.types.model_deleted" [label="<f0> SourceModule| <f1> openai.types.model_deleted",shape="record"];
	"openai.types.vector_store" [label="<f0> SourceModule| <f1> openai.types.vector_store",shape="record"];
	"openai.types.file_purpose" [label="<f0> SourceModule| <f1> openai.types.file_purpose",shape="record"];
	"openai.types.file_deleted" [label="<f0> SourceModule| <f1> openai.types.file_deleted",shape="record"];
	"openai.types.file_content" [label="<f0> SourceModule| <f1> openai.types.file_content",shape="record"];
	"openai.types.image_model" [label="<f0> SourceModule| <f1> openai.types.image_model",shape="record"];
	"openai.types.file_object" [label="<f0> SourceModule| <f1> openai.types.file_object",shape="record"];
	"openai.types.batch_error" [label="<f0> SourceModule| <f1> openai.types.batch_error",shape="record"];
	"openai.types.audio_model" [label="<f0> SourceModule| <f1> openai.types.audio_model",shape="record"];
	"openai.types.moderation" [label="<f0> SourceModule| <f1> openai.types.moderation",shape="record"];
	"openai.types.completion" [label="<f0> SourceModule| <f1> openai.types.completion",shape="record"];
	"openai.types.chat_model" [label="<f0> SourceModule| <f1> openai.types.chat_model",shape="record"];
	"openai.types.embedding" [label="<f0> SourceModule| <f1> openai.types.embedding",shape="record"];
	"openai.types.upload" [label="<f0> SourceModule| <f1> openai.types.upload",shape="record"];
	"openai.types.shared" [label="<f0> Package| <f1> openai.types.shared",shape="record"];
	"openai.types.shared.comparison_filter" [label="<f0> SourceModule| <f1> openai.types.shared.comparison_filter",shape="record"];
	"openai.types.shared.responses_model" [label="<f0> SourceModule| <f1> openai.types.shared.responses_model",shape="record"];
	"openai.types.shared.compound_filter" [label="<f0> SourceModule| <f1> openai.types.shared.compound_filter",shape="record"];
	"openai.types.shared.all_models" [label="<f0> SourceModule| <f1> openai.types.shared.all_models",shape="record"];
	"openai.types.shared.reasoning" [label="<f0> SourceModule| <f1> openai.types.shared.reasoning",shape="record"];
	"openai.types.model" [label="<f0> SourceModule| <f1> openai.types.model",shape="record"];
	"openai.types.image" [label="<f0> SourceModule| <f1> openai.types.image",shape="record"];
	"openai.types.batch" [label="<f0> SourceModule| <f1> openai.types.batch",shape="record"];
	"openai.types.vector_store_update_params" [label="<f0> SourceModule| <f1> openai.types.vector_store_update_params",shape="record"];
	"openai.types.vector_store_search_params" [label="<f0> SourceModule| <f1> openai.types.vector_store_search_params",shape="record"];
	"openai.types.vector_store_create_params" [label="<f0> SourceModule| <f1> openai.types.vector_store_create_params",shape="record"];
	"openai.types.vector_store_list_params" [label="<f0> SourceModule| <f1> openai.types.vector_store_list_params",shape="record"];
	"openai.types.moderation_create_params" [label="<f0> SourceModule| <f1> openai.types.moderation_create_params",shape="record"];
	"openai.types.completion_create_params" [label="<f0> SourceModule| <f1> openai.types.completion_create_params",shape="record"];
	"openai.types.embedding_create_params" [label="<f0> SourceModule| <f1> openai.types.embedding_create_params",shape="record"];
	"openai.types.upload_complete_params" [label="<f0> SourceModule| <f1> openai.types.upload_complete_params",shape="record"];
	"openai.types.upload_create_params" [label="<f0> SourceModule| <f1> openai.types.upload_create_params",shape="record"];
	"openai.types.batch_create_params" [label="<f0> SourceModule| <f1> openai.types.batch_create_params",shape="record"];
	"openai.types.batch_list_params" [label="<f0> SourceModule| <f1> openai.types.batch_list_params",shape="record"];
	"openai.types.image_create_variation_params" [label="<f0> SourceModule| <f1> openai.types.image_create_variation_params",shape="record"];
	"openai.types.image_generate_params" [label="<f0> SourceModule| <f1> openai.types.image_generate_params",shape="record"];
	"openai.types.image_edit_params" [label="<f0> SourceModule| <f1> openai.types.image_edit_params",shape="record"];
	"openai.types.file_create_params" [label="<f0> SourceModule| <f1> openai.types.file_create_params",shape="record"];
	"openai.types.file_list_params" [label="<f0> SourceModule| <f1> openai.types.file_list_params",shape="record"];
	"openai.types.eval_update_params" [label="<f0> SourceModule| <f1> openai.types.eval_update_params",shape="record"];
	"openai.types.eval_create_params" [label="<f0> SourceModule| <f1> openai.types.eval_create_params",shape="record"];
	"openai.types.eval_list_params" [label="<f0> SourceModule| <f1> openai.types.eval_list_params",shape="record"];
	"openai.types.responses.response_computer_tool_call_output_screenshot_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call_output_screenshot_param",shape="record"];
	"openai.types.responses.response_code_interpreter_call_interpreting_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_interpreting_event",shape="record"];
	"openai.types.responses.response_code_interpreter_call_in_progress_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_in_progress_event",shape="record"];
	"openai.types.responses.response_code_interpreter_call_code_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_code_delta_event",shape="record"];
	"openai.types.responses.response_code_interpreter_call_completed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_completed_event",shape="record"];
	"openai.types.responses.response_code_interpreter_call_code_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_code_done_event",shape="record"];
	"openai.types.responses.response_format_text_json_schema_config_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_format_text_json_schema_config_param",shape="record"];
	"openai.types.responses.response_computer_tool_call_output_screenshot" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call_output_screenshot",shape="record"];
	"openai.types.responses.response_function_call_arguments_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_call_arguments_delta_event",shape="record"];
	"openai.types.responses.response_reasoning_summary_text_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_reasoning_summary_text_delta_event",shape="record"];
	"openai.types.responses.response_reasoning_summary_part_added_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_reasoning_summary_part_added_event",shape="record"];
	"openai.types.responses.response_function_call_arguments_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_call_arguments_done_event",shape="record"];
	"openai.types.responses.response_file_search_call_in_progress_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_call_in_progress_event",shape="record"];
	"openai.types.responses.response_web_search_call_in_progress_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_web_search_call_in_progress_event",shape="record"];
	"openai.types.responses.response_reasoning_summary_text_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_reasoning_summary_text_done_event",shape="record"];
	"openai.types.responses.response_reasoning_summary_part_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_reasoning_summary_part_done_event",shape="record"];
	"openai.types.responses.response_input_message_content_list_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_message_content_list_param",shape="record"];
	"openai.types.responses.response_file_search_call_searching_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_call_searching_event",shape="record"];
	"openai.types.responses.response_file_search_call_completed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_call_completed_event",shape="record"];
	"openai.types.responses.response_web_search_call_searching_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_web_search_call_searching_event",shape="record"];
	"openai.types.responses.response_web_search_call_completed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_web_search_call_completed_event",shape="record"];
	"openai.types.responses.response_function_tool_call_output_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_tool_call_output_item",shape="record"];
	"openai.types.responses.response_format_text_json_schema_config" [label="<f0> SourceModule| <f1> openai.types.responses.response_format_text_json_schema_config",shape="record"];
	"openai.types.responses.response_computer_tool_call_output_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call_output_item",shape="record"];
	"openai.types.responses.response_audio_transcript_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_audio_transcript_delta_event",shape="record"];
	"openai.types.responses.response_text_annotation_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_annotation_delta_event",shape="record"];
	"openai.types.responses.response_file_search_tool_call_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_tool_call_param",shape="record"];
	"openai.types.responses.response_audio_transcript_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_audio_transcript_done_event",shape="record"];
	"openai.types.responses.response_input_message_content_list" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_message_content_list",shape="record"];
	"openai.types.responses.response_code_interpreter_tool_call" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_tool_call",shape="record"];
	"openai.types.responses.response_function_web_search_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_web_search_param",shape="record"];
	"openai.types.responses.response_function_tool_call_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_tool_call_param",shape="record"];
	"openai.types.responses.response_format_text_config_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_format_text_config_param",shape="record"];
	"openai.types.responses.response_content_part_added_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_content_part_added_event",shape="record"];
	"openai.types.responses.response_computer_tool_call_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call_param",shape="record"];
	"openai.types.responses.response_output_item_added_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_item_added_event",shape="record"];
	"openai.types.responses.response_function_tool_call_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_tool_call_item",shape="record"];
	"openai.types.responses.response_content_part_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_content_part_done_event",shape="record"];
	"openai.types.responses.response_output_item_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_item_done_event",shape="record"];
	"openai.types.responses.response_file_search_tool_call" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_tool_call",shape="record"];
	"openai.types.responses.response_reasoning_item_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_reasoning_item_param",shape="record"];
	"openai.types.responses.response_output_refusal_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_refusal_param",shape="record"];
	"openai.types.responses.response_output_message_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_message_param",shape="record"];
	"openai.types.responses.response_refusal_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_refusal_delta_event",shape="record"];
	"openai.types.responses.response_input_content_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_content_param",shape="record"];
	"openai.types.responses.response_function_web_search" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_web_search",shape="record"];
	"openai.types.responses.response_refusal_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_refusal_done_event",shape="record"];
	"openai.types.responses.response_input_message_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_message_item",shape="record"];
	"openai.types.responses.response_function_tool_call" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_tool_call",shape="record"];
	"openai.types.responses.response_format_text_config" [label="<f0> SourceModule| <f1> openai.types.responses.response_format_text_config",shape="record"];
	"openai.types.responses.response_computer_tool_call" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call",shape="record"];
	"openai.types.responses.tool_choice_function_param" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_function_param",shape="record"];
	"openai.types.responses.response_text_config_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_config_param",shape="record"];
	"openai.types.responses.response_output_text_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_text_param",shape="record"];
	"openai.types.responses.response_input_image_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_image_param",shape="record"];
	"openai.types.responses.response_in_progress_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_in_progress_event",shape="record"];
	"openai.types.responses.response_audio_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_audio_delta_event",shape="record"];
	"openai.types.responses.response_text_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_delta_event",shape="record"];
	"openai.types.responses.response_input_text_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_text_param",shape="record"];
	"openai.types.responses.response_input_item_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_item_param",shape="record"];
	"openai.types.responses.response_input_file_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_file_param",shape="record"];
	"openai.types.responses.response_incomplete_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_incomplete_event",shape="record"];
	"openai.types.responses.response_audio_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_audio_done_event",shape="record"];
	"openai.types.responses.response_text_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_done_event",shape="record"];
	"openai.types.responses.response_retrieve_params" [label="<f0> SourceModule| <f1> openai.types.responses.response_retrieve_params",shape="record"];
	"openai.types.responses.response_completed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_completed_event",shape="record"];
	"openai.types.responses.easy_input_message_param" [label="<f0> SourceModule| <f1> openai.types.responses.easy_input_message_param",shape="record"];
	"openai.types.responses.tool_choice_types_param" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_types_param",shape="record"];
	"openai.types.responses.response_reasoning_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_reasoning_item",shape="record"];
	"openai.types.responses.response_output_refusal" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_refusal",shape="record"];
	"openai.types.responses.response_output_message" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_message",shape="record"];
	"openai.types.responses.response_input_content" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_content",shape="record"];
	"openai.types.responses.response_created_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_created_event",shape="record"];
	"openai.types.responses.response_create_params" [label="<f0> SourceModule| <f1> openai.types.responses.response_create_params",shape="record"];
	"openai.types.responses.input_item_list_params" [label="<f0> SourceModule| <f1> openai.types.responses.input_item_list_params",shape="record"];
	"openai.types.responses.file_search_tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.file_search_tool_param",shape="record"];
	"openai.types.responses.web_search_tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.web_search_tool_param",shape="record"];
	"openai.types.responses.response_stream_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_stream_event",shape="record"];
	"openai.types.responses.response_failed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_failed_event",shape="record"];
	"openai.types.responses.tool_choice_function" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_function",shape="record"];
	"openai.types.responses.response_text_config" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_config",shape="record"];
	"openai.types.responses.response_output_text" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_text",shape="record"];
	"openai.types.responses.response_output_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_item",shape="record"];
	"openai.types.responses.response_input_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_param",shape="record"];
	"openai.types.responses.response_input_image" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_image",shape="record"];
	"openai.types.responses.response_error_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_error_event",shape="record"];
	"openai.types.responses.tool_choice_options" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_options",shape="record"];
	"openai.types.responses.response_input_text" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_text",shape="record"];
	"openai.types.responses.response_input_file" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_file",shape="record"];
	"openai.types.responses.response_includable" [label="<f0> SourceModule| <f1> openai.types.responses.response_includable",shape="record"];
	"openai.types.responses.function_tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.function_tool_param",shape="record"];
	"openai.types.responses.computer_tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.computer_tool_param",shape="record"];
	"openai.types.responses.response_item_list" [label="<f0> SourceModule| <f1> openai.types.responses.response_item_list",shape="record"];
	"openai.types.responses.easy_input_message" [label="<f0> SourceModule| <f1> openai.types.responses.easy_input_message",shape="record"];
	"openai.types.responses.tool_choice_types" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_types",shape="record"];
	"openai.types.responses.file_search_tool" [label="<f0> SourceModule| <f1> openai.types.responses.file_search_tool",shape="record"];
	"openai.types.responses.web_search_tool" [label="<f0> SourceModule| <f1> openai.types.responses.web_search_tool",shape="record"];
	"openai.types.responses.response_status" [label="<f0> SourceModule| <f1> openai.types.responses.response_status",shape="record"];
	"openai.types.responses.parsed_response" [label="<f0> SourceModule| <f1> openai.types.responses.parsed_response",shape="record"];
	"openai.types.responses.response_usage" [label="<f0> SourceModule| <f1> openai.types.responses.response_usage",shape="record"];
	"openai.types.responses.response_error" [label="<f0> SourceModule| <f1> openai.types.responses.response_error",shape="record"];
	"openai.types.responses.response_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_item",shape="record"];
	"openai.types.responses.function_tool" [label="<f0> SourceModule| <f1> openai.types.responses.function_tool",shape="record"];
	"openai.types.responses.computer_tool" [label="<f0> SourceModule| <f1> openai.types.responses.computer_tool",shape="record"];
	"openai.types.responses.tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.tool_param",shape="record"];
	"openai.types.responses.response" [label="<f0> SourceModule| <f1> openai.types.responses.response",shape="record"];
	"openai.types.responses.tool" [label="<f0> SourceModule| <f1> openai.types.responses.tool",shape="record"];
	"langchain_openai.chat_models.azure" [label="<f0> SourceModule| <f1> langchain_openai.chat_models.azure",shape="record"];
	"anthropic" [label="<f0> Package| <f1> anthropic",shape="record"];
	"anthropic.lib.streaming" [label="<f0> Package| <f1> anthropic.lib.streaming",shape="record"];
	"anthropic.lib" [label="<f0> Package| <f1> anthropic.lib",shape="record"];
	"anthropic.lib.streaming._beta_messages" [label="<f0> SourceModule| <f1> anthropic.lib.streaming._beta_messages",shape="record"];
	"anthropic.types.beta" [label="<f0> Package| <f1> anthropic.types.beta",shape="record"];
	"anthropic.types.beta.beta_citation_content_block_location_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_citation_content_block_location_param",shape="record"];
	"anthropic.types.beta.beta_content_block_source_content_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_content_block_source_content_param",shape="record"];
	"anthropic.types.beta.beta_tool_computer_use_20250124_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_computer_use_20250124_param",shape="record"];
	"anthropic.types.beta.beta_tool_computer_use_20241022_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_computer_use_20241022_param",shape="record"];
	"anthropic.types.beta.beta_tool_text_editor_20250124_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_text_editor_20250124_param",shape="record"];
	"anthropic.types.beta.beta_tool_text_editor_20241022_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_text_editor_20241022_param",shape="record"];
	"anthropic.types.beta.beta_citation_content_block_location" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_citation_content_block_location",shape="record"];
	"anthropic.types.beta.beta_thinking_config_disabled_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_thinking_config_disabled_param",shape="record"];
	"anthropic.types.beta.beta_thinking_config_enabled_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_thinking_config_enabled_param",shape="record"];
	"anthropic.types.beta.beta_redacted_thinking_block_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_redacted_thinking_block_param",shape="record"];
	"anthropic.types.beta.beta_raw_content_block_start_event" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_raw_content_block_start_event",shape="record"];
	"anthropic.types.beta.beta_raw_content_block_delta_event" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_raw_content_block_delta_event",shape="record"];
	"anthropic.types.beta.beta_cache_control_ephemeral_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_cache_control_ephemeral_param",shape="record"];
	"anthropic.types.beta.beta_raw_content_block_stop_event" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_raw_content_block_stop_event",shape="record"];
	"anthropic.types.beta.beta_citation_page_location_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_citation_page_location_param",shape="record"];
	"anthropic.types.beta.beta_citation_char_location_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_citation_char_location_param",shape="record"];
	"anthropic.types.beta.beta_content_block_source_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_content_block_source_param",shape="record"];
	"anthropic.types.beta.beta_base64_image_source_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_base64_image_source_param",shape="record"];
	"anthropic.types.beta.beta_tool_bash_20250124_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_bash_20250124_param",shape="record"];
	"anthropic.types.beta.beta_tool_bash_20241022_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_bash_20241022_param",shape="record"];
	"anthropic.types.beta.beta_raw_message_stream_event" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_raw_message_stream_event",shape="record"];
	"anthropic.types.beta.beta_tool_result_block_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_result_block_param",shape="record"];
	"anthropic.types.beta.beta_redacted_thinking_block" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_redacted_thinking_block",shape="record"];
	"anthropic.types.beta.beta_raw_message_start_event" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_raw_message_start_event",shape="record"];
	"anthropic.types.beta.beta_raw_message_delta_event" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_raw_message_delta_event",shape="record"];
	"anthropic.types.beta.beta_raw_content_block_delta" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_raw_content_block_delta",shape="record"];
	"anthropic.types.beta.beta_plain_text_source_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_plain_text_source_param",shape="record"];
	"anthropic.types.beta.beta_base64_pdf_source_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_base64_pdf_source_param",shape="record"];
	"anthropic.types.beta.message_count_tokens_params" [label="<f0> SourceModule| <f1> anthropic.types.beta.message_count_tokens_params",shape="record"];
	"anthropic.types.anthropic_beta_param" [label="<f0> SourceModule| <f1> anthropic.types.anthropic_beta_param",shape="record"];
	"anthropic.types.model_param" [label="<f0> SourceModule| <f1> anthropic.types.model_param",shape="record"];
	"anthropic.types.beta.beta_url_image_source_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_url_image_source_param",shape="record"];
	"anthropic.types.beta.beta_tool_choice_tool_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_choice_tool_param",shape="record"];
	"anthropic.types.beta.beta_tool_choice_none_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_choice_none_param",shape="record"];
	"anthropic.types.beta.beta_tool_choice_auto_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_choice_auto_param",shape="record"];
	"anthropic.types.beta.beta_raw_message_stop_event" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_raw_message_stop_event",shape="record"];
	"anthropic.types.beta.beta_citations_config_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_citations_config_param",shape="record"];
	"anthropic.types.beta.beta_citation_page_location" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_citation_page_location",shape="record"];
	"anthropic.types.beta.beta_citation_char_location" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_citation_char_location",shape="record"];
	"anthropic.types.beta.beta_base64_pdf_block_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_base64_pdf_block_param",shape="record"];
	"anthropic.types.beta.beta_tool_choice_any_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_choice_any_param",shape="record"];
	"anthropic.types.beta.beta_thinking_config_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_thinking_config_param",shape="record"];
	"anthropic.types.beta.beta_url_pdf_source_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_url_pdf_source_param",shape="record"];
	"anthropic.types.beta.beta_tool_use_block_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_use_block_param",shape="record"];
	"anthropic.types.beta.beta_thinking_block_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_thinking_block_param",shape="record"];
	"anthropic.types.beta.beta_message_tokens_count" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_message_tokens_count",shape="record"];
	"anthropic.types.beta.beta_text_citation_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_text_citation_param",shape="record"];
	"anthropic.types.beta.beta_message_delta_usage" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_message_delta_usage",shape="record"];
	"anthropic.types.beta.beta_content_block_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_content_block_param",shape="record"];
	"anthropic.types.beta.beta_tool_choice_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_choice_param",shape="record"];
	"anthropic.types.beta.beta_image_block_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_image_block_param",shape="record"];
	"anthropic.types.beta.message_create_params" [label="<f0> SourceModule| <f1> anthropic.types.beta.message_create_params",shape="record"];
	"anthropic.types.beta.beta_tool_union_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_union_param",shape="record"];
	"anthropic.types.beta.beta_text_block_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_text_block_param",shape="record"];
	"anthropic.types.beta.beta_input_json_delta" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_input_json_delta",shape="record"];
	"anthropic.types.beta.beta_signature_delta" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_signature_delta",shape="record"];
	"anthropic.types.beta.beta_citations_delta" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_citations_delta",shape="record"];
	"anthropic.types.beta.beta_tool_use_block" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_use_block",shape="record"];
	"anthropic.types.beta.beta_thinking_delta" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_thinking_delta",shape="record"];
	"anthropic.types.beta.beta_thinking_block" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_thinking_block",shape="record"];
	"anthropic.types.beta.beta_metadata_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_metadata_param",shape="record"];
	"anthropic.types.beta.beta_text_citation" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_text_citation",shape="record"];
	"anthropic.types.beta.beta_message_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_message_param",shape="record"];
	"anthropic.types.beta.beta_content_block" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_content_block",shape="record"];
	"anthropic.types.beta.model_list_params" [label="<f0> SourceModule| <f1> anthropic.types.beta.model_list_params",shape="record"];
	"anthropic.types.beta.beta_stop_reason" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_stop_reason",shape="record"];
	"anthropic.types.beta.beta_tool_param" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_tool_param",shape="record"];
	"anthropic.types.beta.beta_text_delta" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_text_delta",shape="record"];
	"anthropic.types.beta.beta_text_block" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_text_block",shape="record"];
	"anthropic.types.beta.beta_model_info" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_model_info",shape="record"];
	"anthropic.types.beta.beta_message" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_message",shape="record"];
	"anthropic.types.model" [label="<f0> SourceModule| <f1> anthropic.types.model",shape="record"];
	"anthropic.types.beta.beta_usage" [label="<f0> SourceModule| <f1> anthropic.types.beta.beta_usage",shape="record"];
	"anthropic._streaming" [label="<f0> SourceModule| <f1> anthropic._streaming",shape="record"];
	"anthropic.lib.streaming._beta_types" [label="<f0> SourceModule| <f1> anthropic.lib.streaming._beta_types",shape="record"];
	"anthropic._utils._transform" [label="<f0> SourceModule| <f1> anthropic._utils._transform",shape="record"];
	"anthropic._compat" [label="<f0> SourceModule| <f1> anthropic._compat",shape="record"];
	"anthropic._utils._typing" [label="<f0> SourceModule| <f1> anthropic._utils._typing",shape="record"];
	"anthropic._files" [label="<f0> SourceModule| <f1> anthropic._files",shape="record"];
	"anthropic._utils._utils" [label="<f0> SourceModule| <f1> anthropic._utils._utils",shape="record"];
	"anthropic.lib.streaming._messages" [label="<f0> SourceModule| <f1> anthropic.lib.streaming._messages",shape="record"];
	"anthropic.lib.streaming._types" [label="<f0> SourceModule| <f1> anthropic.lib.streaming._types",shape="record"];
	"anthropic.types.citations_delta" [label="<f0> SourceModule| <f1> anthropic.types.citations_delta",shape="record"];
	"anthropic.types.citation_content_block_location" [label="<f0> SourceModule| <f1> anthropic.types.citation_content_block_location",shape="record"];
	"anthropic.types.citation_page_location" [label="<f0> SourceModule| <f1> anthropic.types.citation_page_location",shape="record"];
	"anthropic.types.citation_char_location" [label="<f0> SourceModule| <f1> anthropic.types.citation_char_location",shape="record"];
	"anthropic.lib.bedrock" [label="<f0> Package| <f1> anthropic.lib.bedrock",shape="record"];
	"anthropic.lib.bedrock._client" [label="<f0> SourceModule| <f1> anthropic.lib.bedrock._client",shape="record"];
	"anthropic.lib.bedrock._auth" [label="<f0> SourceModule| <f1> anthropic.lib.bedrock._auth",shape="record"];
	"anthropic.resources.completions" [label="<f0> SourceModule| <f1> anthropic.resources.completions",shape="record"];
	"anthropic.resources" [label="<f0> Package| <f1> anthropic.resources",shape="record"];
	"anthropic.resources.models" [label="<f0> SourceModule| <f1> anthropic.resources.models",shape="record"];
	"anthropic.types.model_info" [label="<f0> SourceModule| <f1> anthropic.types.model_info",shape="record"];
	"anthropic.pagination" [label="<f0> SourceModule| <f1> anthropic.pagination",shape="record"];
	"anthropic.types.model_list_params" [label="<f0> SourceModule| <f1> anthropic.types.model_list_params",shape="record"];
	"anthropic.resources.beta" [label="<f0> Package| <f1> anthropic.resources.beta",shape="record"];
	"anthropic.resources.beta.messages" [label="<f0> Package| <f1> anthropic.resources.beta.messages",shape="record"];
	"anthropic.resources.beta.messages.messages" [label="<f0> SourceModule| <f1> anthropic.resources.beta.messages.messages",shape="record"];
	"anthropic.resources.messages.messages" [label="<f0> SourceModule| <f1> anthropic.resources.messages.messages",shape="record"];
	"anthropic.types.message_count_tokens_tool_param" [label="<f0> SourceModule| <f1> anthropic.types.message_count_tokens_tool_param",shape="record"];
	"anthropic.types.tool_text_editor_20250124_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_text_editor_20250124_param",shape="record"];
	"anthropic.types.cache_control_ephemeral_param" [label="<f0> SourceModule| <f1> anthropic.types.cache_control_ephemeral_param",shape="record"];
	"anthropic.types.tool_bash_20250124_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_bash_20250124_param",shape="record"];
	"anthropic.types.tool_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_param",shape="record"];
	"anthropic.types.raw_message_stream_event" [label="<f0> SourceModule| <f1> anthropic.types.raw_message_stream_event",shape="record"];
	"anthropic.types.raw_content_block_start_event" [label="<f0> SourceModule| <f1> anthropic.types.raw_content_block_start_event",shape="record"];
	"anthropic.types.redacted_thinking_block" [label="<f0> SourceModule| <f1> anthropic.types.redacted_thinking_block",shape="record"];
	"anthropic.types.tool_use_block" [label="<f0> SourceModule| <f1> anthropic.types.tool_use_block",shape="record"];
	"anthropic.types.thinking_block" [label="<f0> SourceModule| <f1> anthropic.types.thinking_block",shape="record"];
	"anthropic.types.text_block" [label="<f0> SourceModule| <f1> anthropic.types.text_block",shape="record"];
	"anthropic.types.text_citation" [label="<f0> SourceModule| <f1> anthropic.types.text_citation",shape="record"];
	"anthropic.types.raw_content_block_delta_event" [label="<f0> SourceModule| <f1> anthropic.types.raw_content_block_delta_event",shape="record"];
	"anthropic.types.raw_content_block_delta" [label="<f0> SourceModule| <f1> anthropic.types.raw_content_block_delta",shape="record"];
	"anthropic.types.input_json_delta" [label="<f0> SourceModule| <f1> anthropic.types.input_json_delta",shape="record"];
	"anthropic.types.signature_delta" [label="<f0> SourceModule| <f1> anthropic.types.signature_delta",shape="record"];
	"anthropic.types.thinking_delta" [label="<f0> SourceModule| <f1> anthropic.types.thinking_delta",shape="record"];
	"anthropic.types.text_delta" [label="<f0> SourceModule| <f1> anthropic.types.text_delta",shape="record"];
	"anthropic.types.raw_content_block_stop_event" [label="<f0> SourceModule| <f1> anthropic.types.raw_content_block_stop_event",shape="record"];
	"anthropic.types.raw_message_start_event" [label="<f0> SourceModule| <f1> anthropic.types.raw_message_start_event",shape="record"];
	"anthropic.types.raw_message_delta_event" [label="<f0> SourceModule| <f1> anthropic.types.raw_message_delta_event",shape="record"];
	"anthropic.types.message_delta_usage" [label="<f0> SourceModule| <f1> anthropic.types.message_delta_usage",shape="record"];
	"anthropic.types.stop_reason" [label="<f0> SourceModule| <f1> anthropic.types.stop_reason",shape="record"];
	"anthropic.types.raw_message_stop_event" [label="<f0> SourceModule| <f1> anthropic.types.raw_message_stop_event",shape="record"];
	"anthropic.types.thinking_config_param" [label="<f0> SourceModule| <f1> anthropic.types.thinking_config_param",shape="record"];
	"anthropic.types.thinking_config_disabled_param" [label="<f0> SourceModule| <f1> anthropic.types.thinking_config_disabled_param",shape="record"];
	"anthropic.types.thinking_config_enabled_param" [label="<f0> SourceModule| <f1> anthropic.types.thinking_config_enabled_param",shape="record"];
	"anthropic.types.message_tokens_count" [label="<f0> SourceModule| <f1> anthropic.types.message_tokens_count",shape="record"];
	"anthropic.types.tool_choice_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_choice_param",shape="record"];
	"anthropic.types.tool_choice_tool_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_choice_tool_param",shape="record"];
	"anthropic.types.tool_choice_none_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_choice_none_param",shape="record"];
	"anthropic.types.tool_choice_auto_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_choice_auto_param",shape="record"];
	"anthropic.types.tool_choice_any_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_choice_any_param",shape="record"];
	"anthropic.types.tool_union_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_union_param",shape="record"];
	"anthropic.types.text_block_param" [label="<f0> SourceModule| <f1> anthropic.types.text_block_param",shape="record"];
	"anthropic.types.text_citation_param" [label="<f0> SourceModule| <f1> anthropic.types.text_citation_param",shape="record"];
	"anthropic.types.citation_content_block_location_param" [label="<f0> SourceModule| <f1> anthropic.types.citation_content_block_location_param",shape="record"];
	"anthropic.types.citation_page_location_param" [label="<f0> SourceModule| <f1> anthropic.types.citation_page_location_param",shape="record"];
	"anthropic.types.citation_char_location_param" [label="<f0> SourceModule| <f1> anthropic.types.citation_char_location_param",shape="record"];
	"anthropic.types.message_param" [label="<f0> SourceModule| <f1> anthropic.types.message_param",shape="record"];
	"anthropic.types.redacted_thinking_block_param" [label="<f0> SourceModule| <f1> anthropic.types.redacted_thinking_block_param",shape="record"];
	"anthropic.types.tool_result_block_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_result_block_param",shape="record"];
	"anthropic.types.tool_use_block_param" [label="<f0> SourceModule| <f1> anthropic.types.tool_use_block_param",shape="record"];
	"anthropic.types.thinking_block_param" [label="<f0> SourceModule| <f1> anthropic.types.thinking_block_param",shape="record"];
	"anthropic.types.document_block_param" [label="<f0> SourceModule| <f1> anthropic.types.document_block_param",shape="record"];
	"anthropic.types.content_block_source_param" [label="<f0> SourceModule| <f1> anthropic.types.content_block_source_param",shape="record"];
	"anthropic.types.content_block_source_content_param" [label="<f0> SourceModule| <f1> anthropic.types.content_block_source_content_param",shape="record"];
	"anthropic.types.plain_text_source_param" [label="<f0> SourceModule| <f1> anthropic.types.plain_text_source_param",shape="record"];
	"anthropic.types.base64_pdf_source_param" [label="<f0> SourceModule| <f1> anthropic.types.base64_pdf_source_param",shape="record"];
	"anthropic.types.citations_config_param" [label="<f0> SourceModule| <f1> anthropic.types.citations_config_param",shape="record"];
	"anthropic.types.url_pdf_source_param" [label="<f0> SourceModule| <f1> anthropic.types.url_pdf_source_param",shape="record"];
	"anthropic.types.image_block_param" [label="<f0> SourceModule| <f1> anthropic.types.image_block_param",shape="record"];
	"anthropic.types.base64_image_source_param" [label="<f0> SourceModule| <f1> anthropic.types.base64_image_source_param",shape="record"];
	"anthropic.types.url_image_source_param" [label="<f0> SourceModule| <f1> anthropic.types.url_image_source_param",shape="record"];
	"anthropic.types.content_block" [label="<f0> SourceModule| <f1> anthropic.types.content_block",shape="record"];
	"anthropic.types.message" [label="<f0> SourceModule| <f1> anthropic.types.message",shape="record"];
	"anthropic.types.usage" [label="<f0> SourceModule| <f1> anthropic.types.usage",shape="record"];
	"anthropic.resources.messages.batches" [label="<f0> SourceModule| <f1> anthropic.resources.messages.batches",shape="record"];
	"anthropic.types.messages.message_batch_individual_response" [label="<f0> SourceModule| <f1> anthropic.types.messages.message_batch_individual_response",shape="record"];
	"anthropic.types.messages.message_batch_result" [label="<f0> SourceModule| <f1> anthropic.types.messages.message_batch_result",shape="record"];
	"anthropic.types.messages.message_batch_succeeded_result" [label="<f0> SourceModule| <f1> anthropic.types.messages.message_batch_succeeded_result",shape="record"];
	"anthropic.types.messages.message_batch_canceled_result" [label="<f0> SourceModule| <f1> anthropic.types.messages.message_batch_canceled_result",shape="record"];
	"anthropic.types.messages.message_batch_expired_result" [label="<f0> SourceModule| <f1> anthropic.types.messages.message_batch_expired_result",shape="record"];
	"anthropic.types.messages.message_batch_errored_result" [label="<f0> SourceModule| <f1> anthropic.types.messages.message_batch_errored_result",shape="record"];
	"anthropic.types.shared.error_response" [label="<f0> SourceModule| <f1> anthropic.types.shared.error_response",shape="record"];
	"anthropic.types.shared" [label="<f0> Package| <f1> anthropic.types.shared",shape="record"];
	"anthropic.types.shared.invalid_request_error" [label="<f0> SourceModule| <f1> anthropic.types.shared.invalid_request_error",shape="record"];
	"anthropic.types.shared.gateway_timeout_error" [label="<f0> SourceModule| <f1> anthropic.types.shared.gateway_timeout_error",shape="record"];
	"anthropic.types.shared.authentication_error" [label="<f0> SourceModule| <f1> anthropic.types.shared.authentication_error",shape="record"];
	"anthropic.types.shared.rate_limit_error" [label="<f0> SourceModule| <f1> anthropic.types.shared.rate_limit_error",shape="record"];
	"anthropic.types.shared.permission_error" [label="<f0> SourceModule| <f1> anthropic.types.shared.permission_error",shape="record"];
	"anthropic.types.shared.overloaded_error" [label="<f0> SourceModule| <f1> anthropic.types.shared.overloaded_error",shape="record"];
	"anthropic.types.shared.api_error_object" [label="<f0> SourceModule| <f1> anthropic.types.shared.api_error_object",shape="record"];
	"anthropic.types.shared.not_found_error" [label="<f0> SourceModule| <f1> anthropic.types.shared.not_found_error",shape="record"];
	"anthropic.types.shared.billing_error" [label="<f0> SourceModule| <f1> anthropic.types.shared.billing_error",shape="record"];
	"anthropic.types.shared.error_object" [label="<f0> SourceModule| <f1> anthropic.types.shared.error_object",shape="record"];
	"anthropic.types.messages.deleted_message_batch" [label="<f0> SourceModule| <f1> anthropic.types.messages.deleted_message_batch",shape="record"];
	"anthropic.types.messages.message_batch" [label="<f0> SourceModule| <f1> anthropic.types.messages.message_batch",shape="record"];
	"anthropic.types.messages.message_batch_request_counts" [label="<f0> SourceModule| <f1> anthropic.types.messages.message_batch_request_counts",shape="record"];
	"anthropic._decoders.jsonl" [label="<f0> SourceModule| <f1> anthropic._decoders.jsonl",shape="record"];
	"anthropic._decoders" [label="<f0> NamespacePackage| <f1> anthropic._decoders",shape="record"];
	"anthropic.types.messages.batch_create_params" [label="<f0> SourceModule| <f1> anthropic.types.messages.batch_create_params",shape="record"];
	"anthropic.types.messages.batch_list_params" [label="<f0> SourceModule| <f1> anthropic.types.messages.batch_list_params",shape="record"];
	"anthropic.types.messages" [label="<f0> Package| <f1> anthropic.types.messages",shape="record"];
	"anthropic.types.message_count_tokens_params" [label="<f0> SourceModule| <f1> anthropic.types.message_count_tokens_params",shape="record"];
	"anthropic.types.message_create_params" [label="<f0> SourceModule| <f1> anthropic.types.message_create_params",shape="record"];
	"anthropic.resources.beta.messages.batches" [label="<f0> SourceModule| <f1> anthropic.resources.beta.messages.batches",shape="record"];
	"anthropic.types.beta.messages.beta_message_batch_individual_response" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_message_batch_individual_response",shape="record"];
	"anthropic.types.beta.messages.beta_message_batch_result" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_message_batch_result",shape="record"];
	"anthropic.types.beta.messages.beta_message_batch_succeeded_result" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_message_batch_succeeded_result",shape="record"];
	"anthropic.types.beta.messages.beta_message_batch_canceled_result" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_message_batch_canceled_result",shape="record"];
	"anthropic.types.beta.messages.beta_message_batch_expired_result" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_message_batch_expired_result",shape="record"];
	"anthropic.types.beta.messages.beta_message_batch_errored_result" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_message_batch_errored_result",shape="record"];
	"anthropic.types.beta_error_response" [label="<f0> SourceModule| <f1> anthropic.types.beta_error_response",shape="record"];
	"anthropic.types.beta_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_error",shape="record"];
	"anthropic.types.beta_invalid_request_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_invalid_request_error",shape="record"];
	"anthropic.types.beta_gateway_timeout_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_gateway_timeout_error",shape="record"];
	"anthropic.types.beta_authentication_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_authentication_error",shape="record"];
	"anthropic.types.beta_rate_limit_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_rate_limit_error",shape="record"];
	"anthropic.types.beta_permission_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_permission_error",shape="record"];
	"anthropic.types.beta_overloaded_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_overloaded_error",shape="record"];
	"anthropic.types.beta_not_found_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_not_found_error",shape="record"];
	"anthropic.types.beta_billing_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_billing_error",shape="record"];
	"anthropic.types.beta_api_error" [label="<f0> SourceModule| <f1> anthropic.types.beta_api_error",shape="record"];
	"anthropic.types.beta.messages.beta_deleted_message_batch" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_deleted_message_batch",shape="record"];
	"anthropic.types.beta.messages.beta_message_batch" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_message_batch",shape="record"];
	"anthropic.types.beta.messages.beta_message_batch_request_counts" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.beta_message_batch_request_counts",shape="record"];
	"anthropic.types.beta.messages.batch_create_params" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.batch_create_params",shape="record"];
	"anthropic.types.beta.messages.batch_list_params" [label="<f0> SourceModule| <f1> anthropic.types.beta.messages.batch_list_params",shape="record"];
	"anthropic.types.beta.messages" [label="<f0> Package| <f1> anthropic.types.beta.messages",shape="record"];
	"anthropic.resources.beta.models" [label="<f0> SourceModule| <f1> anthropic.resources.beta.models",shape="record"];
	"anthropic.resources.beta.beta" [label="<f0> SourceModule| <f1> anthropic.resources.beta.beta",shape="record"];
	"anthropic.types.metadata_param" [label="<f0> SourceModule| <f1> anthropic.types.metadata_param",shape="record"];
	"anthropic.types.completion" [label="<f0> SourceModule| <f1> anthropic.types.completion",shape="record"];
	"anthropic._resource" [label="<f0> SourceModule| <f1> anthropic._resource",shape="record"];
	"anthropic.types.completion_create_params" [label="<f0> SourceModule| <f1> anthropic.types.completion_create_params",shape="record"];
	"anthropic.resources.messages" [label="<f0> Package| <f1> anthropic.resources.messages",shape="record"];
	"anthropic.lib.bedrock._stream_decoder" [label="<f0> SourceModule| <f1> anthropic.lib.bedrock._stream_decoder",shape="record"];
	"'botocore.parsers'" [label="<f0> MissingModule| <f1> 'botocore.parsers'",shape="record"];
	"'botocore.loaders'" [label="<f0> MissingModule| <f1> 'botocore.loaders'",shape="record"];
	"'botocore.eventstream'" [label="<f0> MissingModule| <f1> 'botocore.eventstream'",shape="record"];
	"'botocore.model'" [label="<f0> MissingModule| <f1> 'botocore.model'",shape="record"];
	"anthropic.lib.bedrock._beta" [label="<f0> SourceModule| <f1> anthropic.lib.bedrock._beta",shape="record"];
	"anthropic.lib.bedrock._beta_messages" [label="<f0> SourceModule| <f1> anthropic.lib.bedrock._beta_messages",shape="record"];
	"anthropic.lib.vertex" [label="<f0> Package| <f1> anthropic.lib.vertex",shape="record"];
	"anthropic.lib.vertex._client" [label="<f0> SourceModule| <f1> anthropic.lib.vertex._client",shape="record"];
	"anthropic.lib.vertex._beta" [label="<f0> SourceModule| <f1> anthropic.lib.vertex._beta",shape="record"];
	"anthropic.lib.vertex._beta_messages" [label="<f0> SourceModule| <f1> anthropic.lib.vertex._beta_messages",shape="record"];
	"anthropic.lib.vertex._auth" [label="<f0> SourceModule| <f1> anthropic.lib.vertex._auth",shape="record"];
	"anthropic.lib._extras" [label="<f0> Package| <f1> anthropic.lib._extras",shape="record"];
	"anthropic.lib._extras._google_auth" [label="<f0> SourceModule| <f1> anthropic.lib._extras._google_auth",shape="record"];
	"anthropic.lib._extras._common" [label="<f0> SourceModule| <f1> anthropic.lib._extras._common",shape="record"];
	"anthropic._utils._logs" [label="<f0> SourceModule| <f1> anthropic._utils._logs",shape="record"];
	"anthropic._base_client" [label="<f0> SourceModule| <f1> anthropic._base_client",shape="record"];
	"anthropic._qs" [label="<f0> SourceModule| <f1> anthropic._qs",shape="record"];
	"anthropic._constants" [label="<f0> SourceModule| <f1> anthropic._constants",shape="record"];
	"anthropic._response" [label="<f0> SourceModule| <f1> anthropic._response",shape="record"];
	"anthropic._version" [label="<f0> SourceModule| <f1> anthropic._version",shape="record"];
	"anthropic._models" [label="<f0> SourceModule| <f1> anthropic._models",shape="record"];
	"anthropic._client" [label="<f0> SourceModule| <f1> anthropic._client",shape="record"];
	"anthropic._utils" [label="<f0> Package| <f1> anthropic._utils",shape="record"];
	"anthropic._utils._reflection" [label="<f0> SourceModule| <f1> anthropic._utils._reflection",shape="record"];
	"anthropic._utils._streams" [label="<f0> SourceModule| <f1> anthropic._utils._streams",shape="record"];
	"anthropic._utils._proxy" [label="<f0> SourceModule| <f1> anthropic._utils._proxy",shape="record"];
	"anthropic._utils._sync" [label="<f0> SourceModule| <f1> anthropic._utils._sync",shape="record"];
	"anthropic._types" [label="<f0> SourceModule| <f1> anthropic._types",shape="record"];
	"anthropic.types" [label="<f0> Package| <f1> anthropic.types",shape="record"];
	"anthropic.types.content_block_start_event" [label="<f0> SourceModule| <f1> anthropic.types.content_block_start_event",shape="record"];
	"anthropic.types.content_block_delta_event" [label="<f0> SourceModule| <f1> anthropic.types.content_block_delta_event",shape="record"];
	"anthropic.types.content_block_stop_event" [label="<f0> SourceModule| <f1> anthropic.types.content_block_stop_event",shape="record"];
	"anthropic.types.message_stream_event" [label="<f0> SourceModule| <f1> anthropic.types.message_stream_event",shape="record"];
	"anthropic.types.message_start_event" [label="<f0> SourceModule| <f1> anthropic.types.message_start_event",shape="record"];
	"anthropic.types.message_delta_event" [label="<f0> SourceModule| <f1> anthropic.types.message_delta_event",shape="record"];
	"anthropic.types.content_block_param" [label="<f0> SourceModule| <f1> anthropic.types.content_block_param",shape="record"];
	"anthropic.types.message_stop_event" [label="<f0> SourceModule| <f1> anthropic.types.message_stop_event",shape="record"];
	"anthropic._legacy_response" [label="<f0> SourceModule| <f1> anthropic._legacy_response",shape="record"];
	"anthropic._exceptions" [label="<f0> SourceModule| <f1> anthropic._exceptions",shape="record"];
	"openai" [label="<f0> Package| <f1> openai",shape="record"];
	"openai._module_client" [label="<f0> SourceModule| <f1> openai._module_client",shape="record"];
	"openai.lib._old_api" [label="<f0> SourceModule| <f1> openai.lib._old_api",shape="record"];
	"openai.version" [label="<f0> SourceModule| <f1> openai.version",shape="record"];
	"langchain_core.output_parsers" [label="<f0> Package| <f1> langchain_core.output_parsers",shape="record"];
	"langchain_core.output_parsers.xml" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.xml",shape="record"];
	"langchain_core.output_parsers.pydantic" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.pydantic",shape="record"];
	"langchain_core.prompts" [label="<f0> Package| <f1> langchain_core.prompts",shape="record"];
	"langchain_core.prompts.pipeline" [label="<f0> SourceModule| <f1> langchain_core.prompts.pipeline",shape="record"];
	"langchain_core.prompts.few_shot_with_templates" [label="<f0> SourceModule| <f1> langchain_core.prompts.few_shot_with_templates",shape="record"];
	"docx" [label="<f0> Package| <f1> docx",shape="record"];
	"docx.parts.styles" [label="<f0> SourceModule| <f1> docx.parts.styles",shape="record"];
	"docx.parts" [label="<f0> Package| <f1> docx.parts",shape="record"];
	"docx.opc.package" [label="<f0> SourceModule| <f1> docx.opc.package",shape="record"];
	"docx.opc.coreprops" [label="<f0> SourceModule| <f1> docx.opc.coreprops",shape="record"];
	"docx.oxml.coreprops" [label="<f0> SourceModule| <f1> docx.oxml.coreprops",shape="record"];
	"docx.oxml" [label="<f0> Package| <f1> docx.oxml",shape="record"];
	"docx.oxml.text.parfmt" [label="<f0> SourceModule| <f1> docx.oxml.text.parfmt",shape="record"];
	"docx.oxml.text" [label="<f0> Package| <f1> docx.oxml.text",shape="record"];
	"docx.oxml.simpletypes" [label="<f0> SourceModule| <f1> docx.oxml.simpletypes",shape="record"];
	"docx.exceptions" [label="<f0> SourceModule| <f1> docx.exceptions",shape="record"];
	"docx.enum.text" [label="<f0> SourceModule| <f1> docx.enum.text",shape="record"];
	"docx.enum" [label="<f0> Package| <f1> docx.enum",shape="record"];
	"docx.enum.base" [label="<f0> SourceModule| <f1> docx.enum.base",shape="record"];
	"docx.oxml.text.paragraph" [label="<f0> SourceModule| <f1> docx.oxml.text.paragraph",shape="record"];
	"docx.oxml.text.font" [label="<f0> SourceModule| <f1> docx.oxml.text.font",shape="record"];
	"docx.enum.dml" [label="<f0> SourceModule| <f1> docx.enum.dml",shape="record"];
	"docx.oxml.table" [label="<f0> SourceModule| <f1> docx.oxml.table",shape="record"];
	"docx.enum.table" [label="<f0> SourceModule| <f1> docx.enum.table",shape="record"];
	"docx.oxml.styles" [label="<f0> SourceModule| <f1> docx.oxml.styles",shape="record"];
	"docx.enum.style" [label="<f0> SourceModule| <f1> docx.enum.style",shape="record"];
	"docx.oxml.settings" [label="<f0> SourceModule| <f1> docx.oxml.settings",shape="record"];
	"docx.oxml.section" [label="<f0> SourceModule| <f1> docx.oxml.section",shape="record"];
	"docx.enum.section" [label="<f0> SourceModule| <f1> docx.enum.section",shape="record"];
	"docx.oxml.numbering" [label="<f0> SourceModule| <f1> docx.oxml.numbering",shape="record"];
	"docx.oxml.document" [label="<f0> SourceModule| <f1> docx.oxml.document",shape="record"];
	"docx.oxml.text.run" [label="<f0> SourceModule| <f1> docx.oxml.text.run",shape="record"];
	"docx.oxml.text.pagebreak" [label="<f0> SourceModule| <f1> docx.oxml.text.pagebreak",shape="record"];
	"docx.oxml.text.hyperlink" [label="<f0> SourceModule| <f1> docx.oxml.text.hyperlink",shape="record"];
	"docx.oxml.shared" [label="<f0> SourceModule| <f1> docx.oxml.shared",shape="record"];
	"docx.oxml.shape" [label="<f0> SourceModule| <f1> docx.oxml.shape",shape="record"];
	"docx.oxml.drawing" [label="<f0> SourceModule| <f1> docx.oxml.drawing",shape="record"];
	"docx.oxml.xmlchemy" [label="<f0> SourceModule| <f1> docx.oxml.xmlchemy",shape="record"];
	"docx.oxml.exceptions" [label="<f0> SourceModule| <f1> docx.oxml.exceptions",shape="record"];
	"docx.oxml.ns" [label="<f0> SourceModule| <f1> docx.oxml.ns",shape="record"];
	"docx.shared" [label="<f0> SourceModule| <f1> docx.shared",shape="record"];
	"docx.parts.story" [label="<f0> SourceModule| <f1> docx.parts.story",shape="record"];
	"docx.styles.style" [label="<f0> SourceModule| <f1> docx.styles.style",shape="record"];
	"docx.text.parfmt" [label="<f0> SourceModule| <f1> docx.text.parfmt",shape="record"];
	"docx.text" [label="<f0> Package| <f1> docx.text",shape="record"];
	"docx.text.tabstops" [label="<f0> SourceModule| <f1> docx.text.tabstops",shape="record"];
	"docx.text.font" [label="<f0> SourceModule| <f1> docx.text.font",shape="record"];
	"docx.dml.color" [label="<f0> SourceModule| <f1> docx.dml.color",shape="record"];
	"docx.dml" [label="<f0> Package| <f1> docx.dml",shape="record"];
	"docx.styles" [label="<f0> Package| <f1> docx.styles",shape="record"];
	"docx.image.image" [label="<f0> SourceModule| <f1> docx.image.image",shape="record"];
	"docx.image" [label="<f0> Package| <f1> docx.image",shape="record"];
	"docx.image.tiff" [label="<f0> SourceModule| <f1> docx.image.tiff",shape="record"];
	"docx.image.helpers" [label="<f0> SourceModule| <f1> docx.image.helpers",shape="record"];
	"docx.image.constants" [label="<f0> SourceModule| <f1> docx.image.constants",shape="record"];
	"docx.image.png" [label="<f0> SourceModule| <f1> docx.image.png",shape="record"];
	"docx.image.jpeg" [label="<f0> SourceModule| <f1> docx.image.jpeg",shape="record"];
	"docx.image.gif" [label="<f0> SourceModule| <f1> docx.image.gif",shape="record"];
	"docx.image.bmp" [label="<f0> SourceModule| <f1> docx.image.bmp",shape="record"];
	"docx.image.exceptions" [label="<f0> SourceModule| <f1> docx.image.exceptions",shape="record"];
	"docx.types" [label="<f0> SourceModule| <f1> docx.types",shape="record"];
	"docx.opc.rel" [label="<f0> SourceModule| <f1> docx.opc.rel",shape="record"];
	"docx.opc.oxml" [label="<f0> SourceModule| <f1> docx.opc.oxml",shape="record"];
	"docx.opc.pkgwriter" [label="<f0> SourceModule| <f1> docx.opc.pkgwriter",shape="record"];
	"docx.opc.spec" [label="<f0> SourceModule| <f1> docx.opc.spec",shape="record"];
	"docx.opc.shared" [label="<f0> SourceModule| <f1> docx.opc.shared",shape="record"];
	"docx.opc.phys_pkg" [label="<f0> SourceModule| <f1> docx.opc.phys_pkg",shape="record"];
	"docx.opc.exceptions" [label="<f0> SourceModule| <f1> docx.opc.exceptions",shape="record"];
	"docx.opc.pkgreader" [label="<f0> SourceModule| <f1> docx.opc.pkgreader",shape="record"];
	"docx.opc" [label="<f0> Package| <f1> docx.opc",shape="record"];
	"docx.styles.styles" [label="<f0> SourceModule| <f1> docx.styles.styles",shape="record"];
	"docx.styles.latent" [label="<f0> SourceModule| <f1> docx.styles.latent",shape="record"];
	"docx.oxml.parser" [label="<f0> SourceModule| <f1> docx.oxml.parser",shape="record"];
	"docx.opc.packuri" [label="<f0> SourceModule| <f1> docx.opc.packuri",shape="record"];
	"docx.parts.settings" [label="<f0> SourceModule| <f1> docx.parts.settings",shape="record"];
	"docx.package" [label="<f0> SourceModule| <f1> docx.package",shape="record"];
	"docx.settings" [label="<f0> SourceModule| <f1> docx.settings",shape="record"];
	"docx.parts.numbering" [label="<f0> SourceModule| <f1> docx.parts.numbering",shape="record"];
	"docx.parts.image" [label="<f0> SourceModule| <f1> docx.parts.image",shape="record"];
	"docx.parts.hdrftr" [label="<f0> SourceModule| <f1> docx.parts.hdrftr",shape="record"];
	"docx.parts.document" [label="<f0> SourceModule| <f1> docx.parts.document",shape="record"];
	"docx.shape" [label="<f0> SourceModule| <f1> docx.shape",shape="record"];
	"docx.enum.shape" [label="<f0> SourceModule| <f1> docx.enum.shape",shape="record"];
	"docx.document" [label="<f0> SourceModule| <f1> docx.document",shape="record"];
	"docx.text.paragraph" [label="<f0> SourceModule| <f1> docx.text.paragraph",shape="record"];
	"docx.text.run" [label="<f0> SourceModule| <f1> docx.text.run",shape="record"];
	"docx.drawing" [label="<f0> Package| <f1> docx.drawing",shape="record"];
	"docx.text.pagebreak" [label="<f0> SourceModule| <f1> docx.text.pagebreak",shape="record"];
	"docx.text.hyperlink" [label="<f0> SourceModule| <f1> docx.text.hyperlink",shape="record"];
	"docx.table" [label="<f0> SourceModule| <f1> docx.table",shape="record"];
	"docx.section" [label="<f0> SourceModule| <f1> docx.section",shape="record"];
	"docx.blkcntnr" [label="<f0> SourceModule| <f1> docx.blkcntnr",shape="record"];
	"docx.opc.parts.coreprops" [label="<f0> SourceModule| <f1> docx.opc.parts.coreprops",shape="record"];
	"docx.opc.parts" [label="<f0> Package| <f1> docx.opc.parts",shape="record"];
	"docx.opc.constants" [label="<f0> SourceModule| <f1> docx.opc.constants",shape="record"];
	"docx.opc.part" [label="<f0> SourceModule| <f1> docx.opc.part",shape="record"];
	"docx.api" [label="<f0> SourceModule| <f1> docx.api",shape="record"];
	"langchain_community.document_loaders" [label="<f0> Package| <f1> langchain_community.document_loaders",shape="record"];
	"langchain_community.document_loaders.yuque" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.yuque",shape="record"];
	"langchain_community.document_loaders.youtube" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.youtube",shape="record"];
	"pytube" [label="<f0> MissingModule| <f1> pytube",shape="record"];
	"youtube_transcript_api" [label="<f0> MissingModule| <f1> youtube_transcript_api",shape="record"];
	"langchain_community.document_loaders.xorbits" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.xorbits",shape="record"];
	"xorbits" [label="<f0> MissingModule| <f1> xorbits",shape="record"];
	"langchain_community.document_loaders.xml" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.xml",shape="record"];
	"'unstructured.partition'" [label="<f0> MissingModule| <f1> 'unstructured.partition'",shape="record"];
	"langchain_community.document_loaders.word_document" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.word_document",shape="record"];
	"magic" [label="<f0> MissingModule| <f1> magic",shape="record"];
	"'unstructured.file_utils'" [label="<f0> MissingModule| <f1> 'unstructured.file_utils'",shape="record"];
	"docx2txt" [label="<f0> MissingModule| <f1> docx2txt",shape="record"];
	"langchain_community.document_loaders.wikipedia" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.wikipedia",shape="record"];
	"langchain_community.document_loaders.whatsapp_chat" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.whatsapp_chat",shape="record"];
	"langchain_community.document_loaders.weather" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.weather",shape="record"];
	"langchain_community.document_loaders.vsdx" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.vsdx",shape="record"];
	"langchain_community.document_loaders.parsers" [label="<f0> Package| <f1> langchain_community.document_loaders.parsers",shape="record"];
	"langchain_community.document_loaders.parsers.vsdx" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.vsdx",shape="record"];
	"langchain_community.document_loaders.parsers.pdf" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.pdf",shape="record"];
	"'textractor.entities'" [label="<f0> MissingModule| <f1> 'textractor.entities'",shape="record"];
	"textractcaller" [label="<f0> MissingModule| <f1> textractcaller",shape="record"];
	"pypdfium2.raw" [label="<f0> SourceModule| <f1> pypdfium2.raw",shape="record"];
	"pypdfium2_raw.bindings" [label="<f0> SourceModule| <f1> pypdfium2_raw.bindings",shape="record"];
	"pypdfium2_raw" [label="<f0> Package| <f1> pypdfium2_raw",shape="record"];
	"'pymupdf.table'" [label="<f0> MissingModule| <f1> 'pymupdf.table'",shape="record"];
	"pdfminer.image" [label="<f0> SourceModule| <f1> pdfminer.image",shape="record"];
	"pdfminer.pdftypes" [label="<f0> SourceModule| <f1> pdfminer.pdftypes",shape="record"];
	"pdfminer.pdfdocument" [label="<f0> SourceModule| <f1> pdfminer.pdfdocument",shape="record"];
	"pdfminer._saslprep" [label="<f0> SourceModule| <f1> pdfminer._saslprep",shape="record"];
	"stringprep" [label="<f0> SourceModule| <f1> stringprep",shape="record"];
	"pdfminer.psexceptions" [label="<f0> SourceModule| <f1> pdfminer.psexceptions",shape="record"];
	"pdfminer.pdfparser" [label="<f0> SourceModule| <f1> pdfminer.pdfparser",shape="record"];
	"pdfminer.casting" [label="<f0> SourceModule| <f1> pdfminer.casting",shape="record"];
	"pdfminer.data_structures" [label="<f0> SourceModule| <f1> pdfminer.data_structures",shape="record"];
	"pdfminer.arcfour" [label="<f0> SourceModule| <f1> pdfminer.arcfour",shape="record"];
	"pdfminer.runlength" [label="<f0> SourceModule| <f1> pdfminer.runlength",shape="record"];
	"pdfminer.lzw" [label="<f0> SourceModule| <f1> pdfminer.lzw",shape="record"];
	"pdfminer.ccitt" [label="<f0> SourceModule| <f1> pdfminer.ccitt",shape="record"];
	"pygame" [label="<f0> MissingModule| <f1> pygame",shape="record"];
	"pdfminer.ascii85" [label="<f0> SourceModule| <f1> pdfminer.ascii85",shape="record"];
	"pdfminer.settings" [label="<f0> SourceModule| <f1> pdfminer.settings",shape="record"];
	"pdfminer.pdfexceptions" [label="<f0> SourceModule| <f1> pdfminer.pdfexceptions",shape="record"];
	"pdfminer.pdfcolor" [label="<f0> SourceModule| <f1> pdfminer.pdfcolor",shape="record"];
	"pdfminer.jbig2" [label="<f0> SourceModule| <f1> pdfminer.jbig2",shape="record"];
	"pdfminer.pdfinterp" [label="<f0> SourceModule| <f1> pdfminer.pdfinterp",shape="record"];
	"pdfminer.pdffont" [label="<f0> SourceModule| <f1> pdfminer.pdffont",shape="record"];
	"pdfminer.fontmetrics" [label="<f0> SourceModule| <f1> pdfminer.fontmetrics",shape="record"];
	"pdfminer.encodingdb" [label="<f0> SourceModule| <f1> pdfminer.encodingdb",shape="record"];
	"pdfminer.latin_enc" [label="<f0> SourceModule| <f1> pdfminer.latin_enc",shape="record"];
	"pdfminer.glyphlist" [label="<f0> SourceModule| <f1> pdfminer.glyphlist",shape="record"];
	"pdfminer.pdfdevice" [label="<f0> SourceModule| <f1> pdfminer.pdfdevice",shape="record"];
	"pdfminer.cmapdb" [label="<f0> SourceModule| <f1> pdfminer.cmapdb",shape="record"];
	"pdfminer.layout" [label="<f0> SourceModule| <f1> pdfminer.layout",shape="record"];
	"pdfminer.converter" [label="<f0> SourceModule| <f1> pdfminer.converter",shape="record"];
	"pdfminer" [label="<f0> Package| <f1> pdfminer",shape="record"];
	"pdfminer.pdfpage" [label="<f0> SourceModule| <f1> pdfminer.pdfpage",shape="record"];
	"pdfminer.psparser" [label="<f0> SourceModule| <f1> pdfminer.psparser",shape="record"];
	"pdfminer.utils" [label="<f0> SourceModule| <f1> pdfminer.utils",shape="record"];
	"rapidocr_onnxruntime" [label="<f0> MissingModule| <f1> rapidocr_onnxruntime",shape="record"];
	"textractor" [label="<f0> MissingModule| <f1> textractor",shape="record"];
	"pypdfium2" [label="<f0> Package| <f1> pypdfium2",shape="record"];
	"pypdfium2.internal" [label="<f0> Package| <f1> pypdfium2.internal",shape="record"];
	"pypdfium2.internal.utils" [label="<f0> SourceModule| <f1> pypdfium2.internal.utils",shape="record"];
	"pypdfium2.internal.consts" [label="<f0> SourceModule| <f1> pypdfium2.internal.consts",shape="record"];
	"pypdfium2.internal.bases" [label="<f0> SourceModule| <f1> pypdfium2.internal.bases",shape="record"];
	"pypdfium2._helpers" [label="<f0> Package| <f1> pypdfium2._helpers",shape="record"];
	"pypdfium2._helpers.textpage" [label="<f0> SourceModule| <f1> pypdfium2._helpers.textpage",shape="record"];
	"pypdfium2._helpers.pageobjects" [label="<f0> SourceModule| <f1> pypdfium2._helpers.pageobjects",shape="record"];
	"pypdfium2._helpers.page" [label="<f0> SourceModule| <f1> pypdfium2._helpers.page",shape="record"];
	"pypdfium2._helpers.attachment" [label="<f0> SourceModule| <f1> pypdfium2._helpers.attachment",shape="record"];
	"pypdfium2._helpers.document" [label="<f0> SourceModule| <f1> pypdfium2._helpers.document",shape="record"];
	"pypdfium2._helpers.bitmap" [label="<f0> SourceModule| <f1> pypdfium2._helpers.bitmap",shape="record"];
	"pypdfium2._helpers.matrix" [label="<f0> SourceModule| <f1> pypdfium2._helpers.matrix",shape="record"];
	"pypdfium2._helpers.misc" [label="<f0> SourceModule| <f1> pypdfium2._helpers.misc",shape="record"];
	"pypdfium2._helpers.unsupported" [label="<f0> SourceModule| <f1> pypdfium2._helpers.unsupported",shape="record"];
	"pypdfium2.version" [label="<f0> SourceModule| <f1> pypdfium2.version",shape="record"];
	"pypdfium2._library_scope" [label="<f0> SourceModule| <f1> pypdfium2._library_scope",shape="record"];
	"pymupdf" [label="<f0> MissingModule| <f1> pymupdf",shape="record"];
	"pdfplumber" [label="<f0> Package| <f1> pdfplumber",shape="record"];
	"pdfplumber.repair" [label="<f0> SourceModule| <f1> pdfplumber.repair",shape="record"];
	"pdfplumber.pdf" [label="<f0> SourceModule| <f1> pdfplumber.pdf",shape="record"];
	"pdfplumber.utils.exceptions" [label="<f0> SourceModule| <f1> pdfplumber.utils.exceptions",shape="record"];
	"pdfplumber.structure" [label="<f0> SourceModule| <f1> pdfplumber.structure",shape="record"];
	"pdfplumber.utils.geometry" [label="<f0> SourceModule| <f1> pdfplumber.utils.geometry",shape="record"];
	"pdfplumber.utils.clustering" [label="<f0> SourceModule| <f1> pdfplumber.utils.clustering",shape="record"];
	"pdfplumber.page" [label="<f0> SourceModule| <f1> pdfplumber.page",shape="record"];
	"pdfplumber.display" [label="<f0> SourceModule| <f1> pdfplumber.display",shape="record"];
	"pdfplumber.utils.text" [label="<f0> SourceModule| <f1> pdfplumber.utils.text",shape="record"];
	"pdfplumber.utils.generic" [label="<f0> SourceModule| <f1> pdfplumber.utils.generic",shape="record"];
	"pdfplumber.table" [label="<f0> SourceModule| <f1> pdfplumber.table",shape="record"];
	"pdfplumber.container" [label="<f0> SourceModule| <f1> pdfplumber.container",shape="record"];
	"pdfplumber.convert" [label="<f0> SourceModule| <f1> pdfplumber.convert",shape="record"];
	"pdfplumber._typing" [label="<f0> SourceModule| <f1> pdfplumber._typing",shape="record"];
	"pdfplumber._version" [label="<f0> SourceModule| <f1> pdfplumber._version",shape="record"];
	"pdfplumber.utils" [label="<f0> Package| <f1> pdfplumber.utils",shape="record"];
	"pdfplumber.utils.pdfinternals" [label="<f0> SourceModule| <f1> pdfplumber.utils.pdfinternals",shape="record"];
	"langchain_community.document_loaders.parsers.language" [label="<f0> Package| <f1> langchain_community.document_loaders.parsers.language",shape="record"];
	"langchain_community.document_loaders.parsers.language.language_parser" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.language_parser",shape="record"];
	"langchain_community.document_loaders.parsers.language.typescript" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.typescript",shape="record"];
	"tree_sitter_languages" [label="<f0> MissingModule| <f1> tree_sitter_languages",shape="record"];
	"tree_sitter" [label="<f0> MissingModule| <f1> tree_sitter",shape="record"];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.tree_sitter_segmenter",shape="record"];
	"langchain_community.document_loaders.parsers.language.code_segmenter" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.code_segmenter",shape="record"];
	"langchain_community.document_loaders.parsers.language.sql" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.sql",shape="record"];
	"langchain_community.document_loaders.parsers.language.scala" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.scala",shape="record"];
	"langchain_community.document_loaders.parsers.language.rust" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.rust",shape="record"];
	"langchain_community.document_loaders.parsers.language.ruby" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.ruby",shape="record"];
	"langchain_community.document_loaders.parsers.language.python" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.python",shape="record"];
	"langchain_community.document_loaders.parsers.language.php" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.php",shape="record"];
	"langchain_community.document_loaders.parsers.language.perl" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.perl",shape="record"];
	"langchain_community.document_loaders.parsers.language.lua" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.lua",shape="record"];
	"langchain_community.document_loaders.parsers.language.kotlin" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.kotlin",shape="record"];
	"langchain_community.document_loaders.parsers.language.javascript" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.javascript",shape="record"];
	"esprima" [label="<f0> MissingModule| <f1> esprima",shape="record"];
	"langchain_community.document_loaders.parsers.language.java" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.java",shape="record"];
	"langchain_community.document_loaders.parsers.language.go" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.go",shape="record"];
	"langchain_community.document_loaders.parsers.language.elixir" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.elixir",shape="record"];
	"langchain_community.document_loaders.parsers.language.csharp" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.csharp",shape="record"];
	"langchain_community.document_loaders.parsers.language.cpp" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.cpp",shape="record"];
	"langchain_community.document_loaders.parsers.language.cobol" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.cobol",shape="record"];
	"langchain_community.document_loaders.parsers.language.c" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.c",shape="record"];
	"langchain_community.document_loaders.parsers.images" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.images",shape="record"];
	"pytesseract" [label="<f0> MissingModule| <f1> pytesseract",shape="record"];
	"langchain_community.document_loaders.parsers.html" [label="<f0> Package| <f1> langchain_community.document_loaders.parsers.html",shape="record"];
	"langchain_community.document_loaders.parsers.html.bs4" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.html.bs4",shape="record"];
	"langchain_community.document_loaders.parsers.grobid" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.grobid",shape="record"];
	"langchain_community.document_loaders.parsers.docai" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.docai",shape="record"];
	"'google.cloud.documentai_toolbox'" [label="<f0> MissingModule| <f1> 'google.cloud.documentai_toolbox'",shape="record"];
	"'google.cloud.documentai_v1'" [label="<f0> MissingModule| <f1> 'google.cloud.documentai_v1'",shape="record"];
	"'google.cloud.documentai'" [label="<f0> MissingModule| <f1> 'google.cloud.documentai'",shape="record"];
	"langchain_community.document_loaders.parsers.doc_intelligence" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.doc_intelligence",shape="record"];
	"langchain_community.document_loaders.parsers.audio" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.audio",shape="record"];
	"pydub" [label="<f0> MissingModule| <f1> pydub",shape="record"];
	"faster_whisper" [label="<f0> MissingModule| <f1> faster_whisper",shape="record"];
	"'speechkit.stt'" [label="<f0> MissingModule| <f1> 'speechkit.stt'",shape="record"];
	"speechkit" [label="<f0> MissingModule| <f1> speechkit",shape="record"];
	"librosa" [label="<f0> MissingModule| <f1> librosa",shape="record"];
	"langchain_community.document_loaders.url_selenium" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.url_selenium",shape="record"];
	"'selenium.common'" [label="<f0> MissingModule| <f1> 'selenium.common'",shape="record"];
	"'selenium.webdriver'" [label="<f0> MissingModule| <f1> 'selenium.webdriver'",shape="record"];
	"unstructured" [label="<f0> MissingModule| <f1> unstructured",shape="record"];
	"selenium" [label="<f0> MissingModule| <f1> selenium",shape="record"];
	"langchain_community.document_loaders.url_playwright" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.url_playwright",shape="record"];
	"playwright" [label="<f0> MissingModule| <f1> playwright",shape="record"];
	"langchain_community.document_loaders.url" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.url",shape="record"];
	"'unstructured.__version__'" [label="<f0> MissingModule| <f1> 'unstructured.__version__'",shape="record"];
	"langchain_community.document_loaders.unstructured" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.unstructured",shape="record"];
	"langchain_community.document_loaders.twitter" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.twitter",shape="record"];
	"tweepy" [label="<f0> MissingModule| <f1> tweepy",shape="record"];
	"langchain_community.document_loaders.tsv" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tsv",shape="record"];
	"langchain_community.document_loaders.trello" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.trello",shape="record"];
	"trello" [label="<f0> MissingModule| <f1> trello",shape="record"];
	"langchain_community.document_loaders.toml" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.toml",shape="record"];
	"langchain_community.document_loaders.tomarkdown" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tomarkdown",shape="record"];
	"langchain_community.document_loaders.tidb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tidb",shape="record"];
	"langchain_community.document_loaders.text" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.text",shape="record"];
	"langchain_community.document_loaders.helpers" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.helpers",shape="record"];
	"langchain_community.document_loaders.tensorflow_datasets" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tensorflow_datasets",shape="record"];
	"langchain_community.document_loaders.tencent_cos_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tencent_cos_file",shape="record"];
	"qcloud_cos" [label="<f0> MissingModule| <f1> qcloud_cos",shape="record"];
	"langchain_community.document_loaders.tencent_cos_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tencent_cos_directory",shape="record"];
	"langchain_community.document_loaders.telegram" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.telegram",shape="record"];
	"nest_asyncio" [label="<f0> MissingModule| <f1> nest_asyncio",shape="record"];
	"'telethon.sync'" [label="<f0> MissingModule| <f1> 'telethon.sync'",shape="record"];
	"telethon" [label="<f0> MissingModule| <f1> telethon",shape="record"];
	"langchain_community.document_loaders.surrealdb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.surrealdb",shape="record"];
	"langchain_community.document_loaders.stripe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.stripe",shape="record"];
	"langchain_community.document_loaders.srt" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.srt",shape="record"];
	"pysrt" [label="<f0> MissingModule| <f1> pysrt",shape="record"];
	"langchain_community.document_loaders.sql_database" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.sql_database",shape="record"];
	"langchain_community.document_loaders.spreedly" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.spreedly",shape="record"];
	"langchain_community.document_loaders.spider" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.spider",shape="record"];
	"spider" [label="<f0> MissingModule| <f1> spider",shape="record"];
	"langchain_community.document_loaders.snowflake_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.snowflake_loader",shape="record"];
	"snowflake" [label="<f0> MissingModule| <f1> snowflake",shape="record"];
	"langchain_community.document_loaders.slack_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.slack_directory",shape="record"];
	"langchain_community.document_loaders.sitemap" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.sitemap",shape="record"];
	"langchain_community.document_loaders.sharepoint" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.sharepoint",shape="record"];
	"'O365.drive'" [label="<f0> MissingModule| <f1> 'O365.drive'",shape="record"];
	"langchain_community.document_loaders.base_o365" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.base_o365",shape="record"];
	"langchain_community.document_loaders.parsers.registry" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.registry",shape="record"];
	"langchain_community.document_loaders.parsers.txt" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.txt",shape="record"];
	"langchain_community.document_loaders.parsers.msword" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.msword",shape="record"];
	"langchain_community.document_loaders.parsers.generic" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.generic",shape="record"];
	"langchain_community.document_loaders.blob_loaders.schema" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blob_loaders.schema",shape="record"];
	"langchain_community.document_loaders.blob_loaders.file_system" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blob_loaders.file_system",shape="record"];
	"langchain_community.document_loaders.scrapingant" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.scrapingant",shape="record"];
	"scrapingant_client" [label="<f0> MissingModule| <f1> scrapingant_client",shape="record"];
	"langchain_community.document_loaders.scrapfly" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.scrapfly",shape="record"];
	"scrapfly" [label="<f0> MissingModule| <f1> scrapfly",shape="record"];
	"langchain_community.document_loaders.s3_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.s3_file",shape="record"];
	"langchain_community.document_loaders.s3_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.s3_directory",shape="record"];
	"langchain_community.document_loaders.rtf" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.rtf",shape="record"];
	"langchain_community.document_loaders.rst" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.rst",shape="record"];
	"langchain_community.document_loaders.rss" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.rss",shape="record"];
	"feedparser" [label="<f0> MissingModule| <f1> feedparser",shape="record"];
	"listparser" [label="<f0> MissingModule| <f1> listparser",shape="record"];
	"langchain_community.document_loaders.rocksetdb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.rocksetdb",shape="record"];
	"langchain_community.document_loaders.roam" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.roam",shape="record"];
	"langchain_community.document_loaders.reddit" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.reddit",shape="record"];
	"langchain_community.document_loaders.recursive_url_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.recursive_url_loader",shape="record"];
	"langchain_core.utils.html" [label="<f0> SourceModule| <f1> langchain_core.utils.html",shape="record"];
	"langchain_community.document_loaders.readthedocs" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.readthedocs",shape="record"];
	"langchain_community.document_loaders.python" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.python",shape="record"];
	"langchain_community.document_loaders.pyspark_dataframe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.pyspark_dataframe",shape="record"];
	"pyspark" [label="<f0> MissingModule| <f1> pyspark",shape="record"];
	"langchain_community.document_loaders.pubmed" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.pubmed",shape="record"];
	"langchain_community.document_loaders.psychic" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.psychic",shape="record"];
	"psychicapi" [label="<f0> MissingModule| <f1> psychicapi",shape="record"];
	"langchain_community.document_loaders.powerpoint" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.powerpoint",shape="record"];
	"langchain_community.document_loaders.polars_dataframe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.polars_dataframe",shape="record"];
	"polars" [label="<f0> MissingModule| <f1> polars",shape="record"];
	"langchain_community.document_loaders.pebblo" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.pebblo",shape="record"];
	"langchain_community.utilities.pebblo" [label="<f0> SourceModule| <f1> langchain_community.utilities.pebblo",shape="record"];
	"langchain_community.document_loaders.pdf" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.pdf",shape="record"];
	"pyzerox" [label="<f0> MissingModule| <f1> pyzerox",shape="record"];
	"'dedoc.utils'" [label="<f0> MissingModule| <f1> 'dedoc.utils'",shape="record"];
	"pdfminer.high_level" [label="<f0> SourceModule| <f1> pdfminer.high_level",shape="record"];
	"'textractor.data'" [label="<f0> MissingModule| <f1> 'textractor.data'",shape="record"];
	"langchain_community.document_loaders.org_mode" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.org_mode",shape="record"];
	"langchain_community.document_loaders.oracleai" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.oracleai",shape="record"];
	"html.parser" [label="<f0> SourceModule| <f1> html.parser",shape="record"];
	"_markupbase" [label="<f0> SourceModule| <f1> _markupbase",shape="record"];
	"langchain_community.document_loaders.oracleadb_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.oracleadb_loader",shape="record"];
	"langchain_community.document_loaders.open_city_data" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.open_city_data",shape="record"];
	"sodapy" [label="<f0> MissingModule| <f1> sodapy",shape="record"];
	"langchain_community.document_loaders.onedrive_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.onedrive_file",shape="record"];
	"langchain_community.document_loaders.onedrive" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.onedrive",shape="record"];
	"langchain_community.document_loaders.odt" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.odt",shape="record"];
	"langchain_community.document_loaders.obsidian" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.obsidian",shape="record"];
	"langchain_community.document_loaders.obs_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.obs_file",shape="record"];
	"obs" [label="<f0> MissingModule| <f1> obs",shape="record"];
	"langchain_community.document_loaders.obs_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.obs_directory",shape="record"];
	"langchain_community.document_loaders.notiondb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.notiondb",shape="record"];
	"langchain_community.document_loaders.notion" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.notion",shape="record"];
	"langchain_community.document_loaders.notebook" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.notebook",shape="record"];
	"langchain_community.document_loaders.news" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.news",shape="record"];
	"newspaper" [label="<f0> MissingModule| <f1> newspaper",shape="record"];
	"langchain_community.document_loaders.needle" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.needle",shape="record"];
	"'needle.v1'" [label="<f0> MissingModule| <f1> 'needle.v1'",shape="record"];
	"needle" [label="<f0> MissingModule| <f1> needle",shape="record"];
	"langchain_community.document_loaders.mongodb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.mongodb",shape="record"];
	"motor" [label="<f0> MissingModule| <f1> motor",shape="record"];
	"langchain_community.document_loaders.modern_treasury" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.modern_treasury",shape="record"];
	"langchain_community.document_loaders.mhtml" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.mhtml",shape="record"];
	"langchain_community.document_loaders.merge" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.merge",shape="record"];
	"langchain_community.document_loaders.mediawikidump" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.mediawikidump",shape="record"];
	"mwparserfromhell" [label="<f0> MissingModule| <f1> mwparserfromhell",shape="record"];
	"mwxml" [label="<f0> MissingModule| <f1> mwxml",shape="record"];
	"langchain_community.document_loaders.max_compute" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.max_compute",shape="record"];
	"langchain_community.document_loaders.mastodon" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.mastodon",shape="record"];
	"mastodon" [label="<f0> MissingModule| <f1> mastodon",shape="record"];
	"langchain_community.document_loaders.markdown" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.markdown",shape="record"];
	"langchain_community.document_loaders.llmsherpa" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.llmsherpa",shape="record"];
	"'llmsherpa.readers'" [label="<f0> MissingModule| <f1> 'llmsherpa.readers'",shape="record"];
	"llmsherpa" [label="<f0> MissingModule| <f1> llmsherpa",shape="record"];
	"langchain_community.document_loaders.larksuite" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.larksuite",shape="record"];
	"langchain_community.document_loaders.lakefs" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.lakefs",shape="record"];
	"langchain_community.document_loaders.kinetica_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.kinetica_loader",shape="record"];
	"langchain_community.document_loaders.json_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.json_loader",shape="record"];
	"jq" [label="<f0> MissingModule| <f1> jq",shape="record"];
	"langchain_community.document_loaders.joplin" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.joplin",shape="record"];
	"langchain_community.document_loaders.iugu" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.iugu",shape="record"];
	"langchain_community.document_loaders.imsdb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.imsdb",shape="record"];
	"langchain_community.document_loaders.image_captions" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.image_captions",shape="record"];
	"langchain_community.document_loaders.image" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.image",shape="record"];
	"langchain_community.document_loaders.ifixit" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.ifixit",shape="record"];
	"langchain_community.document_loaders.hugging_face_model" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.hugging_face_model",shape="record"];
	"langchain_community.document_loaders.hugging_face_dataset" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.hugging_face_dataset",shape="record"];
	"langchain_community.document_loaders.html_bs" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.html_bs",shape="record"];
	"langchain_community.document_loaders.html" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.html",shape="record"];
	"langchain_community.document_loaders.hn" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.hn",shape="record"];
	"langchain_community.document_loaders.gutenberg" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.gutenberg",shape="record"];
	"langchain_community.document_loaders.googledrive" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.googledrive",shape="record"];
	"PyPDF2" [label="<f0> MissingModule| <f1> PyPDF2",shape="record"];
	"google_auth_oauthlib" [label="<f0> MissingModule| <f1> google_auth_oauthlib",shape="record"];
	"langchain_community.document_loaders.google_speech_to_text" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.google_speech_to_text",shape="record"];
	"'google.cloud.speech_v2'" [label="<f0> MissingModule| <f1> 'google.cloud.speech_v2'",shape="record"];
	"langchain_community.document_loaders.glue_catalog" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.glue_catalog",shape="record"];
	"langchain_community.document_loaders.github" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.github",shape="record"];
	"langchain_community.document_loaders.gitbook" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.gitbook",shape="record"];
	"langchain_community.document_loaders.git" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.git",shape="record"];
	"git" [label="<f0> MissingModule| <f1> git",shape="record"];
	"langchain_community.document_loaders.geodataframe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.geodataframe",shape="record"];
	"langchain_community.document_loaders.gcs_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.gcs_file",shape="record"];
	"langchain_community.document_loaders.gcs_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.gcs_directory",shape="record"];
	"langchain_community.document_loaders.firecrawl" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.firecrawl",shape="record"];
	"firecrawl" [label="<f0> MissingModule| <f1> firecrawl",shape="record"];
	"langchain_community.document_loaders.figma" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.figma",shape="record"];
	"langchain_community.document_loaders.fauna" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.fauna",shape="record"];
	"'fauna.encoding'" [label="<f0> MissingModule| <f1> 'fauna.encoding'",shape="record"];
	"'fauna.client'" [label="<f0> MissingModule| <f1> 'fauna.client'",shape="record"];
	"fauna" [label="<f0> MissingModule| <f1> fauna",shape="record"];
	"langchain_community.document_loaders.facebook_chat" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.facebook_chat",shape="record"];
	"langchain_community.document_loaders.excel" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.excel",shape="record"];
	"langchain_community.document_loaders.evernote" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.evernote",shape="record"];
	"html2text" [label="<f0> MissingModule| <f1> html2text",shape="record"];
	"langchain_community.document_loaders.etherscan" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.etherscan",shape="record"];
	"langchain_community.document_loaders.epub" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.epub",shape="record"];
	"langchain_community.document_loaders.email" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.email",shape="record"];
	"extract_msg" [label="<f0> MissingModule| <f1> extract_msg",shape="record"];
	"langchain_community.document_loaders.duckdb_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.duckdb_loader",shape="record"];
	"langchain_community.document_loaders.dropbox" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.dropbox",shape="record"];
	"'dropbox.files'" [label="<f0> MissingModule| <f1> 'dropbox.files'",shape="record"];
	"dropbox" [label="<f0> MissingModule| <f1> dropbox",shape="record"];
	"langchain_community.document_loaders.docusaurus" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.docusaurus",shape="record"];
	"langchain_community.document_loaders.docugami" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.docugami",shape="record"];
	"'dgml_utils.segmentation'" [label="<f0> MissingModule| <f1> 'dgml_utils.segmentation'",shape="record"];
	"dgml_utils" [label="<f0> MissingModule| <f1> dgml_utils",shape="record"];
	"langchain_community.document_loaders.doc_intelligence" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.doc_intelligence",shape="record"];
	"langchain_community.document_loaders.discord" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.discord",shape="record"];
	"langchain_community.document_loaders.directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.directory",shape="record"];
	"langchain_community.document_loaders.diffbot" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.diffbot",shape="record"];
	"langchain_community.document_loaders.dedoc" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.dedoc",shape="record"];
	"dedoc" [label="<f0> MissingModule| <f1> dedoc",shape="record"];
	"langchain_community.document_loaders.dataframe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.dataframe",shape="record"];
	"modin" [label="<f0> MissingModule| <f1> modin",shape="record"];
	"langchain_community.document_loaders.datadog_logs" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.datadog_logs",shape="record"];
	"'datadog_api_client.v2'" [label="<f0> MissingModule| <f1> 'datadog_api_client.v2'",shape="record"];
	"datadog_api_client" [label="<f0> MissingModule| <f1> datadog_api_client",shape="record"];
	"langchain_community.document_loaders.cube_semantic" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.cube_semantic",shape="record"];
	"langchain_community.document_loaders.csv_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.csv_loader",shape="record"];
	"langchain_community.document_loaders.couchbase" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.couchbase",shape="record"];
	"couchbase" [label="<f0> MissingModule| <f1> couchbase",shape="record"];
	"langchain_community.document_loaders.conllu" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.conllu",shape="record"];
	"langchain_community.document_loaders.confluence" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.confluence",shape="record"];
	"svglib" [label="<f0> MissingModule| <f1> svglib",shape="record"];
	"reportlab" [label="<f0> MissingModule| <f1> reportlab",shape="record"];
	"pdf2image" [label="<f0> MissingModule| <f1> pdf2image",shape="record"];
	"markdownify" [label="<f0> MissingModule| <f1> markdownify",shape="record"];
	"langchain_community.document_loaders.concurrent" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.concurrent",shape="record"];
	"langchain_community.document_loaders.generic" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.generic",shape="record"];
	"langchain_community.document_loaders.college_confidential" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.college_confidential",shape="record"];
	"langchain_community.document_loaders.chromium" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.chromium",shape="record"];
	"langchain_community.document_loaders.chm" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.chm",shape="record"];
	"chm" [label="<f0> MissingModule| <f1> chm",shape="record"];
	"langchain_community.document_loaders.chatgpt" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.chatgpt",shape="record"];
	"langchain_community.document_loaders.cassandra" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.cassandra",shape="record"];
	"cassio" [label="<f0> MissingModule| <f1> cassio",shape="record"];
	"'cassandra.query'" [label="<f0> MissingModule| <f1> 'cassandra.query'",shape="record"];
	"'cassandra.pool'" [label="<f0> MissingModule| <f1> 'cassandra.pool'",shape="record"];
	"langchain_community.document_loaders.browserless" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.browserless",shape="record"];
	"langchain_community.document_loaders.browserbase" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.browserbase",shape="record"];
	"browserbase" [label="<f0> MissingModule| <f1> browserbase",shape="record"];
	"langchain_community.document_loaders.brave_search" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.brave_search",shape="record"];
	"langchain_community.document_loaders.blockchain" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blockchain",shape="record"];
	"langchain_community.document_loaders.blob_loaders" [label="<f0> Package| <f1> langchain_community.document_loaders.blob_loaders",shape="record"];
	"langchain_community.document_loaders.blob_loaders.youtube_audio" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blob_loaders.youtube_audio",shape="record"];
	"yt_dlp" [label="<f0> MissingModule| <f1> yt_dlp",shape="record"];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blob_loaders.cloud_blob_loader",shape="record"];
	"cloudpathlib" [label="<f0> MissingModule| <f1> cloudpathlib",shape="record"];
	"langchain_community.document_loaders.blackboard" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blackboard",shape="record"];
	"langchain_community.document_loaders.bilibili" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.bilibili",shape="record"];
	"bilibili_api" [label="<f0> MissingModule| <f1> bilibili_api",shape="record"];
	"langchain_community.document_loaders.bigquery" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.bigquery",shape="record"];
	"langchain_community.document_loaders.bibtex" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.bibtex",shape="record"];
	"langchain_community.document_loaders.azure_blob_storage_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.azure_blob_storage_file",shape="record"];
	"azure" [label="<f0> MissingModule| <f1> azure",shape="record"];
	"langchain_community.document_loaders.azure_blob_storage_container" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.azure_blob_storage_container",shape="record"];
	"'azure.storage'" [label="<f0> MissingModule| <f1> 'azure.storage'",shape="record"];
	"langchain_community.document_loaders.azure_ai_data" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.azure_ai_data",shape="record"];
	"azureml" [label="<f0> MissingModule| <f1> azureml",shape="record"];
	"langchain_community.document_loaders.azlyrics" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.azlyrics",shape="record"];
	"langchain_community.document_loaders.athena" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.athena",shape="record"];
	"langchain_community.document_loaders.async_html" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.async_html",shape="record"];
	"langchain_community.document_loaders.astradb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.astradb",shape="record"];
	"langchain_community.document_loaders.assemblyai" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.assemblyai",shape="record"];
	"assemblyai" [label="<f0> MissingModule| <f1> assemblyai",shape="record"];
	"langchain_community.document_loaders.arxiv" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.arxiv",shape="record"];
	"langchain_community.document_loaders.arcgis_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.arcgis_loader",shape="record"];
	"arcgis" [label="<f0> MissingModule| <f1> arcgis",shape="record"];
	"langchain_community.document_loaders.apify_dataset" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.apify_dataset",shape="record"];
	"langchain_community.document_loaders.airtable" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.airtable",shape="record"];
	"pyairtable" [label="<f0> MissingModule| <f1> pyairtable",shape="record"];
	"langchain_community.document_loaders.airbyte_json" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.airbyte_json",shape="record"];
	"langchain_community.document_loaders.airbyte" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.airbyte",shape="record"];
	"'airbyte_cdk.sources'" [label="<f0> MissingModule| <f1> 'airbyte_cdk.sources'",shape="record"];
	"airbyte_cdk" [label="<f0> MissingModule| <f1> airbyte_cdk",shape="record"];
	"langchain_community.document_loaders.acreom" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.acreom",shape="record"];
	"pypdf" [label="<f0> Package| <f1> pypdf",shape="record"];
	"pypdf.papersizes" [label="<f0> SourceModule| <f1> pypdf.papersizes",shape="record"];
	"pypdf.pagerange" [label="<f0> SourceModule| <f1> pypdf.pagerange",shape="record"];
	"pypdf.errors" [label="<f0> SourceModule| <f1> pypdf.errors",shape="record"];
	"pypdf.constants" [label="<f0> SourceModule| <f1> pypdf.constants",shape="record"];
	"pypdf._writer" [label="<f0> SourceModule| <f1> pypdf._writer",shape="record"];
	"pypdf.xmp" [label="<f0> SourceModule| <f1> pypdf.xmp",shape="record"];
	"pypdf.types" [label="<f0> SourceModule| <f1> pypdf.types",shape="record"];
	"pypdf.generic._outline" [label="<f0> SourceModule| <f1> pypdf.generic._outline",shape="record"];
	"pypdf.generic._data_structures" [label="<f0> SourceModule| <f1> pypdf.generic._data_structures",shape="record"];
	"pypdf.filters" [label="<f0> SourceModule| <f1> pypdf.filters",shape="record"];
	"pypdf._xobj_image_helpers" [label="<f0> SourceModule| <f1> pypdf._xobj_image_helpers",shape="record"];
	"pypdf._codecs._codecs" [label="<f0> SourceModule| <f1> pypdf._codecs._codecs",shape="record"];
	"pypdf._codecs" [label="<f0> Package| <f1> pypdf._codecs",shape="record"];
	"pypdf._codecs.zapfding" [label="<f0> SourceModule| <f1> pypdf._codecs.zapfding",shape="record"];
	"pypdf._codecs.symbol" [label="<f0> SourceModule| <f1> pypdf._codecs.symbol",shape="record"];
	"pypdf._codecs.std" [label="<f0> SourceModule| <f1> pypdf._codecs.std",shape="record"];
	"pypdf._codecs.pdfdoc" [label="<f0> SourceModule| <f1> pypdf._codecs.pdfdoc",shape="record"];
	"pypdf._codecs.adobe_glyphs" [label="<f0> SourceModule| <f1> pypdf._codecs.adobe_glyphs",shape="record"];
	"pypdf.generic._utils" [label="<f0> SourceModule| <f1> pypdf.generic._utils",shape="record"];
	"pypdf.generic._image_inline" [label="<f0> SourceModule| <f1> pypdf.generic._image_inline",shape="record"];
	"pypdf.generic._fit" [label="<f0> SourceModule| <f1> pypdf.generic._fit",shape="record"];
	"pypdf._protocols" [label="<f0> SourceModule| <f1> pypdf._protocols",shape="record"];
	"pypdf.generic._base" [label="<f0> SourceModule| <f1> pypdf.generic._base",shape="record"];
	"pypdf.generic" [label="<f0> Package| <f1> pypdf.generic",shape="record"];
	"pypdf.generic._viewerpref" [label="<f0> SourceModule| <f1> pypdf.generic._viewerpref",shape="record"];
	"pypdf.generic._rectangle" [label="<f0> SourceModule| <f1> pypdf.generic._rectangle",shape="record"];
	"pypdf.generic._files" [label="<f0> SourceModule| <f1> pypdf.generic._files",shape="record"];
	"pypdf._utils" [label="<f0> SourceModule| <f1> pypdf._utils",shape="record"];
	"pypdf._page_labels" [label="<f0> SourceModule| <f1> pypdf._page_labels",shape="record"];
	"pypdf._cmap" [label="<f0> SourceModule| <f1> pypdf._cmap",shape="record"];
	"pypdf._version" [label="<f0> SourceModule| <f1> pypdf._version",shape="record"];
	"pypdf._reader" [label="<f0> SourceModule| <f1> pypdf._reader",shape="record"];
	"pypdf._page" [label="<f0> SourceModule| <f1> pypdf._page",shape="record"];
	"pypdf._text_extraction._layout_mode" [label="<f0> Package| <f1> pypdf._text_extraction._layout_mode",shape="record"];
	"pypdf._text_extraction._layout_mode._font" [label="<f0> SourceModule| <f1> pypdf._text_extraction._layout_mode._font",shape="record"];
	"pypdf._text_extraction._layout_mode._font_widths" [label="<f0> SourceModule| <f1> pypdf._text_extraction._layout_mode._font_widths",shape="record"];
	"pypdf._text_extraction._layout_mode._fixed_width_page" [label="<f0> SourceModule| <f1> pypdf._text_extraction._layout_mode._fixed_width_page",shape="record"];
	"pypdf._text_extraction._layout_mode._text_state_params" [label="<f0> SourceModule| <f1> pypdf._text_extraction._layout_mode._text_state_params",shape="record"];
	"pypdf._text_extraction._layout_mode._text_state_manager" [label="<f0> SourceModule| <f1> pypdf._text_extraction._layout_mode._text_state_manager",shape="record"];
	"pypdf._text_extraction" [label="<f0> Package| <f1> pypdf._text_extraction",shape="record"];
	"pypdf._merger" [label="<f0> SourceModule| <f1> pypdf._merger",shape="record"];
	"pypdf._encryption" [label="<f0> SourceModule| <f1> pypdf._encryption",shape="record"];
	"pypdf._doc_common" [label="<f0> SourceModule| <f1> pypdf._doc_common",shape="record"];
	"pypdf._crypt_providers" [label="<f0> Package| <f1> pypdf._crypt_providers",shape="record"];
	"pypdf._crypt_providers._fallback" [label="<f0> SourceModule| <f1> pypdf._crypt_providers._fallback",shape="record"];
	"pypdf._crypt_providers._pycryptodome" [label="<f0> SourceModule| <f1> pypdf._crypt_providers._pycryptodome",shape="record"];
	"'Crypto.Util'" [label="<f0> MissingModule| <f1> 'Crypto.Util'",shape="record"];
	"'Crypto.Cipher'" [label="<f0> MissingModule| <f1> 'Crypto.Cipher'",shape="record"];
	"Crypto" [label="<f0> MissingModule| <f1> Crypto",shape="record"];
	"pypdf._crypt_providers._cryptography" [label="<f0> SourceModule| <f1> pypdf._crypt_providers._cryptography",shape="record"];
	"pypdf._crypt_providers._base" [label="<f0> SourceModule| <f1> pypdf._crypt_providers._base",shape="record"];
	"langchain_community.embeddings" [label="<f0> Package| <f1> langchain_community.embeddings",shape="record"];
	"langchain_community.embeddings.zhipuai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.zhipuai",shape="record"];
	"zhipuai" [label="<f0> MissingModule| <f1> zhipuai",shape="record"];
	"langchain_community.embeddings.yandex" [label="<f0> SourceModule| <f1> langchain_community.embeddings.yandex",shape="record"];
	"langchain_community.embeddings.xinference" [label="<f0> SourceModule| <f1> langchain_community.embeddings.xinference",shape="record"];
	"langchain_community.embeddings.voyageai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.voyageai",shape="record"];
	"langchain_community.embeddings.volcengine" [label="<f0> SourceModule| <f1> langchain_community.embeddings.volcengine",shape="record"];
	"'volcengine.maas'" [label="<f0> MissingModule| <f1> 'volcengine.maas'",shape="record"];
	"langchain_community.embeddings.vertexai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.vertexai",shape="record"];
	"langchain_community.embeddings.titan_takeoff" [label="<f0> SourceModule| <f1> langchain_community.embeddings.titan_takeoff",shape="record"];
	"langchain_community.embeddings.textembed" [label="<f0> SourceModule| <f1> langchain_community.embeddings.textembed",shape="record"];
	"langchain_community.embeddings.tensorflow_hub" [label="<f0> SourceModule| <f1> langchain_community.embeddings.tensorflow_hub",shape="record"];
	"tensorflow_text" [label="<f0> MissingModule| <f1> tensorflow_text",shape="record"];
	"tensorflow_hub" [label="<f0> MissingModule| <f1> tensorflow_hub",shape="record"];
	"langchain_community.embeddings.sparkllm" [label="<f0> SourceModule| <f1> langchain_community.embeddings.sparkllm",shape="record"];
	"langchain_community.embeddings.spacy_embeddings" [label="<f0> SourceModule| <f1> langchain_community.embeddings.spacy_embeddings",shape="record"];
	"langchain_community.embeddings.solar" [label="<f0> SourceModule| <f1> langchain_community.embeddings.solar",shape="record"];
	"langchain_community.embeddings.sentence_transformer" [label="<f0> SourceModule| <f1> langchain_community.embeddings.sentence_transformer",shape="record"];
	"langchain_community.embeddings.self_hosted_hugging_face" [label="<f0> SourceModule| <f1> langchain_community.embeddings.self_hosted_hugging_face",shape="record"];
	"InstructorEmbedding" [label="<f0> MissingModule| <f1> InstructorEmbedding",shape="record"];
	"langchain_community.embeddings.self_hosted" [label="<f0> SourceModule| <f1> langchain_community.embeddings.self_hosted",shape="record"];
	"langchain_community.embeddings.sambanova" [label="<f0> SourceModule| <f1> langchain_community.embeddings.sambanova",shape="record"];
	"langchain_community.embeddings.sagemaker_endpoint" [label="<f0> SourceModule| <f1> langchain_community.embeddings.sagemaker_endpoint",shape="record"];
	"langchain_community.embeddings.premai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.premai",shape="record"];
	"'premai.models'" [label="<f0> MissingModule| <f1> 'premai.models'",shape="record"];
	"premai" [label="<f0> MissingModule| <f1> premai",shape="record"];
	"langchain_community.embeddings.ovhcloud" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ovhcloud",shape="record"];
	"langchain_community.embeddings.oracleai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.oracleai",shape="record"];
	"langchain_community.embeddings.optimum_intel" [label="<f0> SourceModule| <f1> langchain_community.embeddings.optimum_intel",shape="record"];
	"langchain_community.embeddings.openvino" [label="<f0> SourceModule| <f1> langchain_community.embeddings.openvino",shape="record"];
	"langchain_community.embeddings.ollama" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ollama",shape="record"];
	"langchain_community.embeddings.octoai_embeddings" [label="<f0> SourceModule| <f1> langchain_community.embeddings.octoai_embeddings",shape="record"];
	"langchain_community.embeddings.oci_generative_ai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.oci_generative_ai",shape="record"];
	"langchain_community.embeddings.nlpcloud" [label="<f0> SourceModule| <f1> langchain_community.embeddings.nlpcloud",shape="record"];
	"langchain_community.embeddings.nemo" [label="<f0> SourceModule| <f1> langchain_community.embeddings.nemo",shape="record"];
	"langchain_community.embeddings.naver" [label="<f0> SourceModule| <f1> langchain_community.embeddings.naver",shape="record"];
	"langchain_community.embeddings.mosaicml" [label="<f0> SourceModule| <f1> langchain_community.embeddings.mosaicml",shape="record"];
	"langchain_community.embeddings.modelscope_hub" [label="<f0> SourceModule| <f1> langchain_community.embeddings.modelscope_hub",shape="record"];
	"'modelscope.utils'" [label="<f0> MissingModule| <f1> 'modelscope.utils'",shape="record"];
	"modelscope" [label="<f0> MissingModule| <f1> modelscope",shape="record"];
	"langchain_community.embeddings.model2vec" [label="<f0> SourceModule| <f1> langchain_community.embeddings.model2vec",shape="record"];
	"model2vec" [label="<f0> MissingModule| <f1> model2vec",shape="record"];
	"langchain_community.embeddings.mlflow_gateway" [label="<f0> SourceModule| <f1> langchain_community.embeddings.mlflow_gateway",shape="record"];
	"langchain_community.embeddings.mlflow" [label="<f0> SourceModule| <f1> langchain_community.embeddings.mlflow",shape="record"];
	"langchain_community.embeddings.minimax" [label="<f0> SourceModule| <f1> langchain_community.embeddings.minimax",shape="record"];
	"langchain_community.embeddings.localai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.localai",shape="record"];
	"langchain_community.embeddings.llm_rails" [label="<f0> SourceModule| <f1> langchain_community.embeddings.llm_rails",shape="record"];
	"langchain_community.embeddings.llamafile" [label="<f0> SourceModule| <f1> langchain_community.embeddings.llamafile",shape="record"];
	"langchain_community.embeddings.llamacpp" [label="<f0> SourceModule| <f1> langchain_community.embeddings.llamacpp",shape="record"];
	"langchain_community.embeddings.laser" [label="<f0> SourceModule| <f1> langchain_community.embeddings.laser",shape="record"];
	"laser_encoders" [label="<f0> MissingModule| <f1> laser_encoders",shape="record"];
	"langchain_community.embeddings.johnsnowlabs" [label="<f0> SourceModule| <f1> langchain_community.embeddings.johnsnowlabs",shape="record"];
	"nlu" [label="<f0> MissingModule| <f1> nlu",shape="record"];
	"johnsnowlabs" [label="<f0> MissingModule| <f1> johnsnowlabs",shape="record"];
	"langchain_community.embeddings.jina" [label="<f0> SourceModule| <f1> langchain_community.embeddings.jina",shape="record"];
	"langchain_community.embeddings.javelin_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.embeddings.javelin_ai_gateway",shape="record"];
	"langchain_community.embeddings.itrex" [label="<f0> SourceModule| <f1> langchain_community.embeddings.itrex",shape="record"];
	"'intel_extension_for_transformers.transformers'" [label="<f0> MissingModule| <f1> 'intel_extension_for_transformers.transformers'",shape="record"];
	"langchain_community.embeddings.ipex_llm" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ipex_llm",shape="record"];
	"'ipex_llm.transformers'" [label="<f0> MissingModule| <f1> 'ipex_llm.transformers'",shape="record"];
	"langchain_community.embeddings.infinity_local" [label="<f0> SourceModule| <f1> langchain_community.embeddings.infinity_local",shape="record"];
	"infinity_emb" [label="<f0> MissingModule| <f1> infinity_emb",shape="record"];
	"langchain_community.embeddings.infinity" [label="<f0> SourceModule| <f1> langchain_community.embeddings.infinity",shape="record"];
	"langchain_community.embeddings.hunyuan" [label="<f0> SourceModule| <f1> langchain_community.embeddings.hunyuan",shape="record"];
	"'tencentcloud.hunyuan'" [label="<f0> MissingModule| <f1> 'tencentcloud.hunyuan'",shape="record"];
	"'tencentcloud.common'" [label="<f0> MissingModule| <f1> 'tencentcloud.common'",shape="record"];
	"langchain_community.embeddings.huggingface_hub" [label="<f0> SourceModule| <f1> langchain_community.embeddings.huggingface_hub",shape="record"];
	"langchain_community.embeddings.huggingface" [label="<f0> SourceModule| <f1> langchain_community.embeddings.huggingface",shape="record"];
	"langchain_community.embeddings.gradient_ai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.gradient_ai",shape="record"];
	"langchain_community.embeddings.gpt4all" [label="<f0> SourceModule| <f1> langchain_community.embeddings.gpt4all",shape="record"];
	"langchain_community.embeddings.google_palm" [label="<f0> SourceModule| <f1> langchain_community.embeddings.google_palm",shape="record"];
	"langchain_community.embeddings.gigachat" [label="<f0> SourceModule| <f1> langchain_community.embeddings.gigachat",shape="record"];
	"langchain_community.embeddings.fastembed" [label="<f0> SourceModule| <f1> langchain_community.embeddings.fastembed",shape="record"];
	"langchain_community.embeddings.fake" [label="<f0> SourceModule| <f1> langchain_community.embeddings.fake",shape="record"];
	"langchain_community.embeddings.ernie" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ernie",shape="record"];
	"langchain_community.embeddings.embaas" [label="<f0> SourceModule| <f1> langchain_community.embeddings.embaas",shape="record"];
	"langchain_community.embeddings.elasticsearch" [label="<f0> SourceModule| <f1> langchain_community.embeddings.elasticsearch",shape="record"];
	"'elasticsearch.client'" [label="<f0> MissingModule| <f1> 'elasticsearch.client'",shape="record"];
	"langchain_community.embeddings.edenai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.edenai",shape="record"];
	"langchain_community.embeddings.deepinfra" [label="<f0> SourceModule| <f1> langchain_community.embeddings.deepinfra",shape="record"];
	"langchain_community.embeddings.databricks" [label="<f0> SourceModule| <f1> langchain_community.embeddings.databricks",shape="record"];
	"langchain_community.embeddings.dashscope" [label="<f0> SourceModule| <f1> langchain_community.embeddings.dashscope",shape="record"];
	"langchain_community.embeddings.cohere" [label="<f0> SourceModule| <f1> langchain_community.embeddings.cohere",shape="record"];
	"langchain_community.embeddings.clova" [label="<f0> SourceModule| <f1> langchain_community.embeddings.clova",shape="record"];
	"langchain_community.embeddings.clarifai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.clarifai",shape="record"];
	"clarifai" [label="<f0> MissingModule| <f1> clarifai",shape="record"];
	"langchain_community.embeddings.bookend" [label="<f0> SourceModule| <f1> langchain_community.embeddings.bookend",shape="record"];
	"langchain_community.embeddings.bedrock" [label="<f0> SourceModule| <f1> langchain_community.embeddings.bedrock",shape="record"];
	"langchain_community.embeddings.baidu_qianfan_endpoint" [label="<f0> SourceModule| <f1> langchain_community.embeddings.baidu_qianfan_endpoint",shape="record"];
	"langchain_community.embeddings.baichuan" [label="<f0> SourceModule| <f1> langchain_community.embeddings.baichuan",shape="record"];
	"langchain_community.embeddings.azure_openai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.azure_openai",shape="record"];
	"langchain_community.embeddings.awa" [label="<f0> SourceModule| <f1> langchain_community.embeddings.awa",shape="record"];
	"langchain_community.embeddings.ascend" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ascend",shape="record"];
	"torch_npu" [label="<f0> MissingModule| <f1> torch_npu",shape="record"];
	"langchain_community.embeddings.anyscale" [label="<f0> SourceModule| <f1> langchain_community.embeddings.anyscale",shape="record"];
	"langchain_community.embeddings.aleph_alpha" [label="<f0> SourceModule| <f1> langchain_community.embeddings.aleph_alpha",shape="record"];
	"langchain_community.chat_models" [label="<f0> Package| <f1> langchain_community.chat_models",shape="record"];
	"langchain_community.chat_models.zhipuai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.zhipuai",shape="record"];
	"jwt" [label="<f0> MissingModule| <f1> jwt",shape="record"];
	"httpx_sse" [label="<f0> Package| <f1> httpx_sse",shape="record"];
	"httpx_sse._models" [label="<f0> SourceModule| <f1> httpx_sse._models",shape="record"];
	"httpx_sse._exceptions" [label="<f0> SourceModule| <f1> httpx_sse._exceptions",shape="record"];
	"httpx_sse._api" [label="<f0> SourceModule| <f1> httpx_sse._api",shape="record"];
	"httpx_sse._decoders" [label="<f0> SourceModule| <f1> httpx_sse._decoders",shape="record"];
	"langchain_community.chat_models.yuan2" [label="<f0> SourceModule| <f1> langchain_community.chat_models.yuan2",shape="record"];
	"langchain_community.chat_models.yi" [label="<f0> SourceModule| <f1> langchain_community.chat_models.yi",shape="record"];
	"langchain_community.chat_models.yandex" [label="<f0> SourceModule| <f1> langchain_community.chat_models.yandex",shape="record"];
	"langchain_community.chat_models.volcengine_maas" [label="<f0> SourceModule| <f1> langchain_community.chat_models.volcengine_maas",shape="record"];
	"langchain_community.chat_models.vertexai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.vertexai",shape="record"];
	"langchain_community.chat_models.tongyi" [label="<f0> SourceModule| <f1> langchain_community.chat_models.tongyi",shape="record"];
	"langchain_community.chat_models.symblai_nebula" [label="<f0> SourceModule| <f1> langchain_community.chat_models.symblai_nebula",shape="record"];
	"langchain_community.chat_models.sparkllm" [label="<f0> SourceModule| <f1> langchain_community.chat_models.sparkllm",shape="record"];
	"langchain_community.chat_models.solar" [label="<f0> SourceModule| <f1> langchain_community.chat_models.solar",shape="record"];
	"langchain_community.llms.solar" [label="<f0> SourceModule| <f1> langchain_community.llms.solar",shape="record"];
	"langchain_community.chat_models.snowflake" [label="<f0> SourceModule| <f1> langchain_community.chat_models.snowflake",shape="record"];
	"'snowflake.snowpark'" [label="<f0> MissingModule| <f1> 'snowflake.snowpark'",shape="record"];
	"langchain_community.chat_models.sambanova" [label="<f0> SourceModule| <f1> langchain_community.chat_models.sambanova",shape="record"];
	"langchain_community.chat_models.reka" [label="<f0> SourceModule| <f1> langchain_community.chat_models.reka",shape="record"];
	"reka" [label="<f0> MissingModule| <f1> reka",shape="record"];
	"langchain_community.chat_models.promptlayer_openai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.promptlayer_openai",shape="record"];
	"promptlayer" [label="<f0> MissingModule| <f1> promptlayer",shape="record"];
	"langchain_community.chat_models.premai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.premai",shape="record"];
	"langchain_community.chat_models.perplexity" [label="<f0> SourceModule| <f1> langchain_community.chat_models.perplexity",shape="record"];
	"langchain_community.chat_models.pai_eas_endpoint" [label="<f0> SourceModule| <f1> langchain_community.chat_models.pai_eas_endpoint",shape="record"];
	"langchain_community.chat_models.outlines" [label="<f0> SourceModule| <f1> langchain_community.chat_models.outlines",shape="record"];
	"langchain_community.chat_models.ollama" [label="<f0> SourceModule| <f1> langchain_community.chat_models.ollama",shape="record"];
	"langchain_community.chat_models.octoai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.octoai",shape="record"];
	"langchain_community.chat_models.oci_generative_ai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.oci_generative_ai",shape="record"];
	"langchain_community.chat_models.oci_data_science" [label="<f0> SourceModule| <f1> langchain_community.chat_models.oci_data_science",shape="record"];
	"langchain_community.chat_models.naver" [label="<f0> SourceModule| <f1> langchain_community.chat_models.naver",shape="record"];
	"langchain_community.chat_models.moonshot" [label="<f0> SourceModule| <f1> langchain_community.chat_models.moonshot",shape="record"];
	"langchain_community.llms.moonshot" [label="<f0> SourceModule| <f1> langchain_community.llms.moonshot",shape="record"];
	"langchain_community.chat_models.mlx" [label="<f0> SourceModule| <f1> langchain_community.chat_models.mlx",shape="record"];
	"'mlx.core'" [label="<f0> MissingModule| <f1> 'mlx.core'",shape="record"];
	"langchain_community.chat_models.mlflow_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.chat_models.mlflow_ai_gateway",shape="record"];
	"langchain_community.chat_models.minimax" [label="<f0> SourceModule| <f1> langchain_community.chat_models.minimax",shape="record"];
	"langchain_community.chat_models.maritalk" [label="<f0> SourceModule| <f1> langchain_community.chat_models.maritalk",shape="record"];
	"langchain_community.chat_models.llamacpp" [label="<f0> SourceModule| <f1> langchain_community.chat_models.llamacpp",shape="record"];
	"langchain_community.chat_models.llama_edge" [label="<f0> SourceModule| <f1> langchain_community.chat_models.llama_edge",shape="record"];
	"langchain_community.chat_models.litellm_router" [label="<f0> SourceModule| <f1> langchain_community.chat_models.litellm_router",shape="record"];
	"'litellm.utils'" [label="<f0> MissingModule| <f1> 'litellm.utils'",shape="record"];
	"langchain_community.chat_models.litellm" [label="<f0> SourceModule| <f1> langchain_community.chat_models.litellm",shape="record"];
	"litellm" [label="<f0> MissingModule| <f1> litellm",shape="record"];
	"langchain_community.chat_models.konko" [label="<f0> SourceModule| <f1> langchain_community.chat_models.konko",shape="record"];
	"langchain_community.chat_models.kinetica" [label="<f0> SourceModule| <f1> langchain_community.chat_models.kinetica",shape="record"];
	"langchain_community.chat_models.jinachat" [label="<f0> SourceModule| <f1> langchain_community.chat_models.jinachat",shape="record"];
	"langchain_community.chat_models.javelin_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.chat_models.javelin_ai_gateway",shape="record"];
	"langchain_community.chat_models.hunyuan" [label="<f0> SourceModule| <f1> langchain_community.chat_models.hunyuan",shape="record"];
	"tencentcloud" [label="<f0> MissingModule| <f1> tencentcloud",shape="record"];
	"langchain_community.chat_models.human" [label="<f0> SourceModule| <f1> langchain_community.chat_models.human",shape="record"];
	"langchain_community.chat_models.huggingface" [label="<f0> SourceModule| <f1> langchain_community.chat_models.huggingface",shape="record"];
	"langchain_community.chat_models.gpt_router" [label="<f0> SourceModule| <f1> langchain_community.chat_models.gpt_router",shape="record"];
	"'gpt_router.client'" [label="<f0> MissingModule| <f1> 'gpt_router.client'",shape="record"];
	"'gpt_router.models'" [label="<f0> MissingModule| <f1> 'gpt_router.models'",shape="record"];
	"gpt_router" [label="<f0> MissingModule| <f1> gpt_router",shape="record"];
	"langchain_community.chat_models.google_palm" [label="<f0> SourceModule| <f1> langchain_community.chat_models.google_palm",shape="record"];
	"langchain_community.chat_models.gigachat" [label="<f0> SourceModule| <f1> langchain_community.chat_models.gigachat",shape="record"];
	"langchain_community.chat_models.friendli" [label="<f0> SourceModule| <f1> langchain_community.chat_models.friendli",shape="record"];
	"langchain_community.chat_models.fireworks" [label="<f0> SourceModule| <f1> langchain_community.chat_models.fireworks",shape="record"];
	"fireworks" [label="<f0> MissingModule| <f1> fireworks",shape="record"];
	"langchain_community.chat_models.fake" [label="<f0> SourceModule| <f1> langchain_community.chat_models.fake",shape="record"];
	"langchain_community.chat_models.everlyai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.everlyai",shape="record"];
	"langchain_community.chat_models.ernie" [label="<f0> SourceModule| <f1> langchain_community.chat_models.ernie",shape="record"];
	"langchain_community.chat_models.edenai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.edenai",shape="record"];
	"langchain_community.chat_models.deepinfra" [label="<f0> SourceModule| <f1> langchain_community.chat_models.deepinfra",shape="record"];
	"langchain_community.chat_models.coze" [label="<f0> SourceModule| <f1> langchain_community.chat_models.coze",shape="record"];
	"langchain_community.chat_models.cohere" [label="<f0> SourceModule| <f1> langchain_community.chat_models.cohere",shape="record"];
	"langchain_community.chat_models.bedrock" [label="<f0> SourceModule| <f1> langchain_community.chat_models.bedrock",shape="record"];
	"langchain_community.chat_models.meta" [label="<f0> SourceModule| <f1> langchain_community.chat_models.meta",shape="record"];
	"langchain_community.chat_models.baidu_qianfan_endpoint" [label="<f0> SourceModule| <f1> langchain_community.chat_models.baidu_qianfan_endpoint",shape="record"];
	"langchain_community.chat_models.baichuan" [label="<f0> SourceModule| <f1> langchain_community.chat_models.baichuan",shape="record"];
	"langchain_community.chat_models.azure_openai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.azure_openai",shape="record"];
	"langchain_community.chat_models.anyscale" [label="<f0> SourceModule| <f1> langchain_community.chat_models.anyscale",shape="record"];
	"langchain_community.chat_models.anthropic" [label="<f0> SourceModule| <f1> langchain_community.chat_models.anthropic",shape="record"];
	"langchain.retrievers.VectorStoreRetriever" [label="<f0> MissingModule| <f1> langchain.retrievers.VectorStoreRetriever",shape="record"];
	"langchain.retrievers" [label="<f0> Package| <f1> langchain.retrievers",shape="record"];
	"langchain_community.retrievers" [label="<f0> Package| <f1> langchain_community.retrievers",shape="record"];
	"langchain_community.retrievers.zilliz" [label="<f0> SourceModule| <f1> langchain_community.retrievers.zilliz",shape="record"];
	"langchain_community.retrievers.zep_cloud" [label="<f0> SourceModule| <f1> langchain_community.retrievers.zep_cloud",shape="record"];
	"langchain_community.retrievers.zep" [label="<f0> SourceModule| <f1> langchain_community.retrievers.zep",shape="record"];
	"'zep_python.memory'" [label="<f0> MissingModule| <f1> 'zep_python.memory'",shape="record"];
	"langchain_community.retrievers.you" [label="<f0> SourceModule| <f1> langchain_community.retrievers.you",shape="record"];
	"langchain_community.retrievers.wikipedia" [label="<f0> SourceModule| <f1> langchain_community.retrievers.wikipedia",shape="record"];
	"langchain_community.retrievers.web_research" [label="<f0> SourceModule| <f1> langchain_community.retrievers.web_research",shape="record"];
	"langchain_community.document_transformers" [label="<f0> Package| <f1> langchain_community.document_transformers",shape="record"];
	"langchain_community.document_transformers.openai_functions" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.openai_functions",shape="record"];
	"langchain_community.document_transformers.nuclia_text_transform" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.nuclia_text_transform",shape="record"];
	"langchain_community.tools.nuclia.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.nuclia.tool",shape="record"];
	"langchain_community.tools.nuclia" [label="<f0> Package| <f1> langchain_community.tools.nuclia",shape="record"];
	"nucliadb_protos" [label="<f0> MissingModule| <f1> nucliadb_protos",shape="record"];
	"langchain_community.document_transformers.markdownify" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.markdownify",shape="record"];
	"langchain_community.document_transformers.long_context_reorder" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.long_context_reorder",shape="record"];
	"langchain_community.document_transformers.html2text" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.html2text",shape="record"];
	"langchain_community.document_transformers.google_translate" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.google_translate",shape="record"];
	"langchain_community.document_transformers.embeddings_redundant_filter" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.embeddings_redundant_filter",shape="record"];
	"'sklearn.cluster'" [label="<f0> MissingModule| <f1> 'sklearn.cluster'",shape="record"];
	"langchain_community.document_transformers.doctran_text_translate" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.doctran_text_translate",shape="record"];
	"doctran" [label="<f0> MissingModule| <f1> doctran",shape="record"];
	"langchain_community.document_transformers.doctran_text_qa" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.doctran_text_qa",shape="record"];
	"langchain_community.document_transformers.doctran_text_extract" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.doctran_text_extract",shape="record"];
	"langchain_community.document_transformers.beautiful_soup_transformer" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.beautiful_soup_transformer",shape="record"];
	"langchain_community.retrievers.weaviate_hybrid_search" [label="<f0> SourceModule| <f1> langchain_community.retrievers.weaviate_hybrid_search",shape="record"];
	"langchain_community.retrievers.vespa_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.vespa_retriever",shape="record"];
	"vespa" [label="<f0> MissingModule| <f1> vespa",shape="record"];
	"langchain_community.retrievers.thirdai_neuraldb" [label="<f0> SourceModule| <f1> langchain_community.retrievers.thirdai_neuraldb",shape="record"];
	"langchain_community.retrievers.tfidf" [label="<f0> SourceModule| <f1> langchain_community.retrievers.tfidf",shape="record"];
	"joblib" [label="<f0> MissingModule| <f1> joblib",shape="record"];
	"'sklearn.metrics'" [label="<f0> MissingModule| <f1> 'sklearn.metrics'",shape="record"];
	"'sklearn.feature_extraction'" [label="<f0> MissingModule| <f1> 'sklearn.feature_extraction'",shape="record"];
	"langchain_community.retrievers.tavily_search_api" [label="<f0> SourceModule| <f1> langchain_community.retrievers.tavily_search_api",shape="record"];
	"tavily" [label="<f0> MissingModule| <f1> tavily",shape="record"];
	"langchain_community.retrievers.svm" [label="<f0> SourceModule| <f1> langchain_community.retrievers.svm",shape="record"];
	"langchain_community.retrievers.remote_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.remote_retriever",shape="record"];
	"langchain_community.retrievers.rememberizer" [label="<f0> SourceModule| <f1> langchain_community.retrievers.rememberizer",shape="record"];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.qdrant_sparse_vector_retriever",shape="record"];
	"langchain_community.retrievers.pubmed" [label="<f0> SourceModule| <f1> langchain_community.retrievers.pubmed",shape="record"];
	"langchain_community.retrievers.pinecone_hybrid_search" [label="<f0> SourceModule| <f1> langchain_community.retrievers.pinecone_hybrid_search",shape="record"];
	"'pinecone_text.hybrid'" [label="<f0> MissingModule| <f1> 'pinecone_text.hybrid'",shape="record"];
	"'pinecone_text.sparse'" [label="<f0> MissingModule| <f1> 'pinecone_text.sparse'",shape="record"];
	"pinecone_text" [label="<f0> MissingModule| <f1> pinecone_text",shape="record"];
	"langchain_community.retrievers.outline" [label="<f0> SourceModule| <f1> langchain_community.retrievers.outline",shape="record"];
	"langchain_community.retrievers.needle" [label="<f0> SourceModule| <f1> langchain_community.retrievers.needle",shape="record"];
	"langchain_community.retrievers.nanopq" [label="<f0> SourceModule| <f1> langchain_community.retrievers.nanopq",shape="record"];
	"nanopq" [label="<f0> MissingModule| <f1> nanopq",shape="record"];
	"langchain_community.retrievers.milvus" [label="<f0> SourceModule| <f1> langchain_community.retrievers.milvus",shape="record"];
	"langchain_community.retrievers.metal" [label="<f0> SourceModule| <f1> langchain_community.retrievers.metal",shape="record"];
	"metal_sdk" [label="<f0> MissingModule| <f1> metal_sdk",shape="record"];
	"langchain_community.retrievers.llama_index" [label="<f0> SourceModule| <f1> langchain_community.retrievers.llama_index",shape="record"];
	"'llama_index.core'" [label="<f0> MissingModule| <f1> 'llama_index.core'",shape="record"];
	"llama_index" [label="<f0> MissingModule| <f1> llama_index",shape="record"];
	"langchain_community.retrievers.knn" [label="<f0> SourceModule| <f1> langchain_community.retrievers.knn",shape="record"];
	"langchain_community.retrievers.kendra" [label="<f0> SourceModule| <f1> langchain_community.retrievers.kendra",shape="record"];
	"langchain_community.retrievers.kay" [label="<f0> SourceModule| <f1> langchain_community.retrievers.kay",shape="record"];
	"kay" [label="<f0> MissingModule| <f1> kay",shape="record"];
	"langchain_community.retrievers.google_vertex_ai_search" [label="<f0> SourceModule| <f1> langchain_community.retrievers.google_vertex_ai_search",shape="record"];
	"'google.cloud.discoveryengine_v1beta'" [label="<f0> MissingModule| <f1> 'google.cloud.discoveryengine_v1beta'",shape="record"];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" [label="<f0> SourceModule| <f1> langchain_community.retrievers.google_cloud_documentai_warehouse",shape="record"];
	"'google.cloud.contentwarehouse_v1'" [label="<f0> MissingModule| <f1> 'google.cloud.contentwarehouse_v1'",shape="record"];
	"langchain_community.retrievers.embedchain" [label="<f0> SourceModule| <f1> langchain_community.retrievers.embedchain",shape="record"];
	"embedchain" [label="<f0> MissingModule| <f1> embedchain",shape="record"];
	"langchain_community.retrievers.elastic_search_bm25" [label="<f0> SourceModule| <f1> langchain_community.retrievers.elastic_search_bm25",shape="record"];
	"langchain_community.retrievers.dria_index" [label="<f0> SourceModule| <f1> langchain_community.retrievers.dria_index",shape="record"];
	"langchain_community.retrievers.docarray" [label="<f0> SourceModule| <f1> langchain_community.retrievers.docarray",shape="record"];
	"langchain_community.retrievers.cohere_rag_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.cohere_rag_retriever",shape="record"];
	"langchain_community.retrievers.chatgpt_plugin_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.chatgpt_plugin_retriever",shape="record"];
	"langchain_community.retrievers.chaindesk" [label="<f0> SourceModule| <f1> langchain_community.retrievers.chaindesk",shape="record"];
	"langchain_community.retrievers.breebs" [label="<f0> SourceModule| <f1> langchain_community.retrievers.breebs",shape="record"];
	"langchain_community.retrievers.bm25" [label="<f0> SourceModule| <f1> langchain_community.retrievers.bm25",shape="record"];
	"rank_bm25" [label="<f0> MissingModule| <f1> rank_bm25",shape="record"];
	"langchain_community.retrievers.bedrock" [label="<f0> SourceModule| <f1> langchain_community.retrievers.bedrock",shape="record"];
	"'botocore.exceptions'" [label="<f0> MissingModule| <f1> 'botocore.exceptions'",shape="record"];
	"'botocore.client'" [label="<f0> MissingModule| <f1> 'botocore.client'",shape="record"];
	"langchain_community.retrievers.azure_ai_search" [label="<f0> SourceModule| <f1> langchain_community.retrievers.azure_ai_search",shape="record"];
	"langchain_community.retrievers.asknews" [label="<f0> SourceModule| <f1> langchain_community.retrievers.asknews",shape="record"];
	"'asknews_sdk.dto'" [label="<f0> MissingModule| <f1> 'asknews_sdk.dto'",shape="record"];
	"langchain_community.retrievers.arxiv" [label="<f0> SourceModule| <f1> langchain_community.retrievers.arxiv",shape="record"];
	"langchain_community.retrievers.arcee" [label="<f0> SourceModule| <f1> langchain_community.retrievers.arcee",shape="record"];
	"langchain.retrievers.time_weighted_retriever" [label="<f0> SourceModule| <f1> langchain.retrievers.time_weighted_retriever",shape="record"];
	"langchain.retrievers.self_query.base" [label="<f0> SourceModule| <f1> langchain.retrievers.self_query.base",shape="record"];
	"langchain_weaviate" [label="<f0> MissingModule| <f1> langchain_weaviate",shape="record"];
	"langchain_community.query_constructors.hanavector" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.hanavector",shape="record"];
	"langchain_qdrant" [label="<f0> MissingModule| <f1> langchain_qdrant",shape="record"];
	"langchain_postgres" [label="<f0> MissingModule| <f1> langchain_postgres",shape="record"];
	"langchain_chroma" [label="<f0> MissingModule| <f1> langchain_chroma",shape="record"];
	"langchain_neo4j" [label="<f0> Package| <f1> langchain_neo4j",shape="record"];
	"langchain_neo4j.vectorstores.neo4j_vector" [label="<f0> SourceModule| <f1> langchain_neo4j.vectorstores.neo4j_vector",shape="record"];
	"langchain_neo4j.vectorstores" [label="<f0> Package| <f1> langchain_neo4j.vectorstores",shape="record"];
	"langchain_neo4j.vectorstores.utils" [label="<f0> SourceModule| <f1> langchain_neo4j.vectorstores.utils",shape="record"];
	"neo4j_graphrag.utils.version_utils" [label="<f0> SourceModule| <f1> neo4j_graphrag.utils.version_utils",shape="record"];
	"neo4j_graphrag.utils" [label="<f0> Package| <f1> neo4j_graphrag.utils",shape="record"];
	"neo4j_graphrag.utils.driver_config" [label="<f0> SourceModule| <f1> neo4j_graphrag.utils.driver_config",shape="record"];
	"neo4j_graphrag" [label="<f0> Package| <f1> neo4j_graphrag",shape="record"];
	"neo4j_graphrag.types" [label="<f0> SourceModule| <f1> neo4j_graphrag.types",shape="record"];
	"neo4j_graphrag.utils.validation" [label="<f0> SourceModule| <f1> neo4j_graphrag.utils.validation",shape="record"];
	"neo4j_graphrag.neo4j_queries" [label="<f0> SourceModule| <f1> neo4j_graphrag.neo4j_queries",shape="record"];
	"neo4j_graphrag.filters" [label="<f0> SourceModule| <f1> neo4j_graphrag.filters",shape="record"];
	"neo4j_graphrag.exceptions" [label="<f0> SourceModule| <f1> neo4j_graphrag.exceptions",shape="record"];
	"neo4j_graphrag.indexes" [label="<f0> SourceModule| <f1> neo4j_graphrag.indexes",shape="record"];
	"langchain_core.vectorstores.utils" [label="<f0> SourceModule| <f1> langchain_core.vectorstores.utils",shape="record"];
	"langchain_neo4j.graphs.neo4j_graph" [label="<f0> SourceModule| <f1> langchain_neo4j.graphs.neo4j_graph",shape="record"];
	"langchain_neo4j.graphs" [label="<f0> Package| <f1> langchain_neo4j.graphs",shape="record"];
	"langchain_neo4j.graphs.graph_store" [label="<f0> SourceModule| <f1> langchain_neo4j.graphs.graph_store",shape="record"];
	"langchain_neo4j.graphs.graph_document" [label="<f0> SourceModule| <f1> langchain_neo4j.graphs.graph_document",shape="record"];
	"neo4j_graphrag.schema" [label="<f0> SourceModule| <f1> neo4j_graphrag.schema",shape="record"];
	"langchain_neo4j.chat_message_histories.neo4j" [label="<f0> SourceModule| <f1> langchain_neo4j.chat_message_histories.neo4j",shape="record"];
	"langchain_neo4j.chat_message_histories" [label="<f0> Package| <f1> langchain_neo4j.chat_message_histories",shape="record"];
	"neo4j_graphrag.message_history" [label="<f0> SourceModule| <f1> neo4j_graphrag.message_history",shape="record"];
	"langchain_neo4j.chains.graph_qa.cypher" [label="<f0> SourceModule| <f1> langchain_neo4j.chains.graph_qa.cypher",shape="record"];
	"langchain_neo4j.chains.graph_qa" [label="<f0> Package| <f1> langchain_neo4j.chains.graph_qa",shape="record"];
	"langchain_neo4j.chains" [label="<f0> Package| <f1> langchain_neo4j.chains",shape="record"];
	"langchain_neo4j.chains.graph_qa.prompts" [label="<f0> SourceModule| <f1> langchain_neo4j.chains.graph_qa.prompts",shape="record"];
	"langchain_neo4j.chains.graph_qa.cypher_utils" [label="<f0> SourceModule| <f1> langchain_neo4j.chains.graph_qa.cypher_utils",shape="record"];
	"neo4j_graphrag.retrievers.text2cypher" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.text2cypher",shape="record"];
	"neo4j_graphrag.retrievers" [label="<f0> Package| <f1> neo4j_graphrag.retrievers",shape="record"];
	"neo4j_graphrag.retrievers.external.qdrant.qdrant" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.external.qdrant.qdrant",shape="record"];
	"neo4j_graphrag.retrievers.external.qdrant" [label="<f0> Package| <f1> neo4j_graphrag.retrievers.external.qdrant",shape="record"];
	"neo4j_graphrag.retrievers.external" [label="<f0> Package| <f1> neo4j_graphrag.retrievers.external",shape="record"];
	"neo4j_graphrag.retrievers.external.utils" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.external.utils",shape="record"];
	"neo4j_graphrag.retrievers.external.qdrant.types" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.external.qdrant.types",shape="record"];
	"neo4j_graphrag.embeddings.base" [label="<f0> SourceModule| <f1> neo4j_graphrag.embeddings.base",shape="record"];
	"neo4j_graphrag.embeddings" [label="<f0> Package| <f1> neo4j_graphrag.embeddings",shape="record"];
	"neo4j_graphrag.embeddings.vertexai" [label="<f0> SourceModule| <f1> neo4j_graphrag.embeddings.vertexai",shape="record"];
	"neo4j_graphrag.embeddings.sentence_transformers" [label="<f0> SourceModule| <f1> neo4j_graphrag.embeddings.sentence_transformers",shape="record"];
	"neo4j_graphrag.embeddings.openai" [label="<f0> SourceModule| <f1> neo4j_graphrag.embeddings.openai",shape="record"];
	"neo4j_graphrag.embeddings.ollama" [label="<f0> SourceModule| <f1> neo4j_graphrag.embeddings.ollama",shape="record"];
	"ollama" [label="<f0> MissingModule| <f1> ollama",shape="record"];
	"neo4j_graphrag.embeddings.mistral" [label="<f0> SourceModule| <f1> neo4j_graphrag.embeddings.mistral",shape="record"];
	"mistralai" [label="<f0> MissingModule| <f1> mistralai",shape="record"];
	"neo4j_graphrag.embeddings.cohere" [label="<f0> SourceModule| <f1> neo4j_graphrag.embeddings.cohere",shape="record"];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.external.weaviate.weaviate",shape="record"];
	"neo4j_graphrag.retrievers.external.weaviate" [label="<f0> Package| <f1> neo4j_graphrag.retrievers.external.weaviate",shape="record"];
	"'weaviate.client'" [label="<f0> MissingModule| <f1> 'weaviate.client'",shape="record"];
	"neo4j_graphrag.retrievers.external.weaviate.types" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.external.weaviate.types",shape="record"];
	"'weaviate.collections'" [label="<f0> MissingModule| <f1> 'weaviate.collections'",shape="record"];
	"neo4j_graphrag.retrievers.external.pinecone.pinecone" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.external.pinecone.pinecone",shape="record"];
	"neo4j_graphrag.retrievers.external.pinecone" [label="<f0> Package| <f1> neo4j_graphrag.retrievers.external.pinecone",shape="record"];
	"neo4j_graphrag.retrievers.external.pinecone.types" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.external.pinecone.types",shape="record"];
	"neo4j_graphrag.retrievers.vector" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.vector",shape="record"];
	"neo4j_graphrag.retrievers.hybrid" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.hybrid",shape="record"];
	"neo4j_graphrag.retrievers.base" [label="<f0> SourceModule| <f1> neo4j_graphrag.retrievers.base",shape="record"];
	"neo4j_graphrag.llm" [label="<f0> Package| <f1> neo4j_graphrag.llm",shape="record"];
	"neo4j_graphrag.llm.vertexai_llm" [label="<f0> SourceModule| <f1> neo4j_graphrag.llm.vertexai_llm",shape="record"];
	"neo4j_graphrag.llm.types" [label="<f0> SourceModule| <f1> neo4j_graphrag.llm.types",shape="record"];
	"neo4j_graphrag.llm.openai_llm" [label="<f0> SourceModule| <f1> neo4j_graphrag.llm.openai_llm",shape="record"];
	"neo4j_graphrag.llm.ollama_llm" [label="<f0> SourceModule| <f1> neo4j_graphrag.llm.ollama_llm",shape="record"];
	"neo4j_graphrag.llm.mistralai_llm" [label="<f0> SourceModule| <f1> neo4j_graphrag.llm.mistralai_llm",shape="record"];
	"'mistralai.models'" [label="<f0> MissingModule| <f1> 'mistralai.models'",shape="record"];
	"neo4j_graphrag.llm.cohere_llm" [label="<f0> SourceModule| <f1> neo4j_graphrag.llm.cohere_llm",shape="record"];
	"neo4j_graphrag.llm.base" [label="<f0> SourceModule| <f1> neo4j_graphrag.llm.base",shape="record"];
	"neo4j_graphrag.llm.anthropic_llm" [label="<f0> SourceModule| <f1> neo4j_graphrag.llm.anthropic_llm",shape="record"];
	"neo4j_graphrag.generation.prompts" [label="<f0> SourceModule| <f1> neo4j_graphrag.generation.prompts",shape="record"];
	"neo4j_graphrag.generation" [label="<f0> Package| <f1> neo4j_graphrag.generation",shape="record"];
	"neo4j_graphrag.generation.graphrag" [label="<f0> SourceModule| <f1> neo4j_graphrag.generation.graphrag",shape="record"];
	"neo4j_graphrag.generation.types" [label="<f0> SourceModule| <f1> neo4j_graphrag.generation.types",shape="record"];
	"langchain_mongodb" [label="<f0> MissingModule| <f1> langchain_mongodb",shape="record"];
	"langchain_pinecone" [label="<f0> MissingModule| <f1> langchain_pinecone",shape="record"];
	"langchain_elasticsearch" [label="<f0> MissingModule| <f1> langchain_elasticsearch",shape="record"];
	"langchain_astradb" [label="<f0> MissingModule| <f1> langchain_astradb",shape="record"];
	"langchain_community.query_constructors.weaviate" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.weaviate",shape="record"];
	"langchain_community.query_constructors.vectara" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.vectara",shape="record"];
	"langchain_community.query_constructors.timescalevector" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.timescalevector",shape="record"];
	"langchain_community.query_constructors.supabase" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.supabase",shape="record"];
	"langchain_community.query_constructors.redis" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.redis",shape="record"];
	"langchain_community.query_constructors.qdrant" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.qdrant",shape="record"];
	"langchain_community.query_constructors.pinecone" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.pinecone",shape="record"];
	"langchain_community.query_constructors.pgvector" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.pgvector",shape="record"];
	"langchain_community.query_constructors.opensearch" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.opensearch",shape="record"];
	"langchain_community.query_constructors.neo4j" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.neo4j",shape="record"];
	"langchain_community.query_constructors.myscale" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.myscale",shape="record"];
	"langchain_community.query_constructors.mongodb_atlas" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.mongodb_atlas",shape="record"];
	"langchain_community.query_constructors.milvus" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.milvus",shape="record"];
	"langchain_community.query_constructors.elasticsearch" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.elasticsearch",shape="record"];
	"langchain_community.query_constructors.dingo" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.dingo",shape="record"];
	"langchain_community.query_constructors.deeplake" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.deeplake",shape="record"];
	"langchain_community.query_constructors.databricks_vector_search" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.databricks_vector_search",shape="record"];
	"langchain_community.query_constructors.dashvector" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.dashvector",shape="record"];
	"langchain_community.query_constructors.chroma" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.chroma",shape="record"];
	"langchain_community.query_constructors.astradb" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.astradb",shape="record"];
	"langchain.retrievers.re_phraser" [label="<f0> SourceModule| <f1> langchain.retrievers.re_phraser",shape="record"];
	"langchain.retrievers.parent_document_retriever" [label="<f0> SourceModule| <f1> langchain.retrievers.parent_document_retriever",shape="record"];
	"langchain.retrievers.multi_vector" [label="<f0> SourceModule| <f1> langchain.retrievers.multi_vector",shape="record"];
	"langchain.storage._lc_store" [label="<f0> SourceModule| <f1> langchain.storage._lc_store",shape="record"];
	"langchain.storage" [label="<f0> Package| <f1> langchain.storage",shape="record"];
	"langchain_community.storage" [label="<f0> Package| <f1> langchain_community.storage",shape="record"];
	"langchain_community.storage.upstash_redis" [label="<f0> SourceModule| <f1> langchain_community.storage.upstash_redis",shape="record"];
	"langchain_community.storage.sql" [label="<f0> SourceModule| <f1> langchain_community.storage.sql",shape="record"];
	"langchain_community.storage.redis" [label="<f0> SourceModule| <f1> langchain_community.storage.redis",shape="record"];
	"langchain_community.storage.mongodb" [label="<f0> SourceModule| <f1> langchain_community.storage.mongodb",shape="record"];
	"langchain_community.storage.cassandra" [label="<f0> SourceModule| <f1> langchain_community.storage.cassandra",shape="record"];
	"langchain_community.storage.astradb" [label="<f0> SourceModule| <f1> langchain_community.storage.astradb",shape="record"];
	"langchain.storage.file_system" [label="<f0> SourceModule| <f1> langchain.storage.file_system",shape="record"];
	"langchain.storage.exceptions" [label="<f0> SourceModule| <f1> langchain.storage.exceptions",shape="record"];
	"langchain.storage.encoder_backed" [label="<f0> SourceModule| <f1> langchain.storage.encoder_backed",shape="record"];
	"langchain_core.stores" [label="<f0> SourceModule| <f1> langchain_core.stores",shape="record"];
	"langchain.retrievers.multi_query" [label="<f0> SourceModule| <f1> langchain.retrievers.multi_query",shape="record"];
	"langchain.retrievers.merger_retriever" [label="<f0> SourceModule| <f1> langchain.retrievers.merger_retriever",shape="record"];
	"langchain.retrievers.ensemble" [label="<f0> SourceModule| <f1> langchain.retrievers.ensemble",shape="record"];
	"langchain.retrievers.contextual_compression" [label="<f0> SourceModule| <f1> langchain.retrievers.contextual_compression",shape="record"];
	"langchain.retrievers.document_compressors.base" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.base",shape="record"];
	"langchain.retrievers.document_compressors" [label="<f0> Package| <f1> langchain.retrievers.document_compressors",shape="record"];
	"langchain.retrievers.document_compressors.listwise_rerank" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.listwise_rerank",shape="record"];
	"langchain.retrievers.document_compressors.embeddings_filter" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.embeddings_filter",shape="record"];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.cross_encoder_rerank",shape="record"];
	"langchain.retrievers.document_compressors.cross_encoder" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.cross_encoder",shape="record"];
	"langchain.retrievers.document_compressors.cohere_rerank" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.cohere_rerank",shape="record"];
	"langchain.retrievers.document_compressors.chain_filter" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.chain_filter",shape="record"];
	"langchain.retrievers.document_compressors.chain_filter_prompt" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.chain_filter_prompt",shape="record"];
	"langchain.retrievers.document_compressors.chain_extract" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.chain_extract",shape="record"];
	"langchain.retrievers.document_compressors.chain_extract_prompt" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.chain_extract_prompt",shape="record"];
	"langchain_core.vectorstores" [label="<f0> Package| <f1> langchain_core.vectorstores",shape="record"];
	"langchain_core.vectorstores.in_memory" [label="<f0> SourceModule| <f1> langchain_core.vectorstores.in_memory",shape="record"];
	"langchain_core.vectorstores.base" [label="<f0> SourceModule| <f1> langchain_core.vectorstores.base",shape="record"];
	"langchain_core.documents" [label="<f0> Package| <f1> langchain_core.documents",shape="record"];
	"langchain_core.documents.transformers" [label="<f0> SourceModule| <f1> langchain_core.documents.transformers",shape="record"];
	"langchain_core.documents.compressor" [label="<f0> SourceModule| <f1> langchain_core.documents.compressor",shape="record"];
	"langchain.embeddings" [label="<f0> Package| <f1> langchain.embeddings",shape="record"];
	"langchain.embeddings.cache" [label="<f0> SourceModule| <f1> langchain.embeddings.cache",shape="record"];
	"langchain.embeddings.base" [label="<f0> SourceModule| <f1> langchain.embeddings.base",shape="record"];
	"langchain_ollama" [label="<f0> MissingModule| <f1> langchain_ollama",shape="record"];
	"langchain_huggingface" [label="<f0> MissingModule| <f1> langchain_huggingface",shape="record"];
	"langchain_mistralai" [label="<f0> MissingModule| <f1> langchain_mistralai",shape="record"];
	"langchain_cohere" [label="<f0> MissingModule| <f1> langchain_cohere",shape="record"];
	"langchain_aws" [label="<f0> MissingModule| <f1> langchain_aws",shape="record"];
	"langchain_google_vertexai" [label="<f0> MissingModule| <f1> langchain_google_vertexai",shape="record"];
	"langchain_community.vectorstores.neo4j_vector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.neo4j_vector",shape="record"];
	"langchain.text_splitter" [label="<f0> SourceModule| <f1> langchain.text_splitter",shape="record"];
	"langchain.schema" [label="<f0> Package| <f1> langchain.schema",shape="record"];
	"langchain.prompts" [label="<f0> Package| <f1> langchain.prompts",shape="record"];
	"langchain_community.example_selectors.ngram_overlap" [label="<f0> SourceModule| <f1> langchain_community.example_selectors.ngram_overlap",shape="record"];
	"langchain_community.example_selectors" [label="<f0> Package| <f1> langchain_community.example_selectors",shape="record"];
	"'nltk.translate'" [label="<f0> MissingModule| <f1> 'nltk.translate'",shape="record"];
	"langchain.prompts.prompt" [label="<f0> SourceModule| <f1> langchain.prompts.prompt",shape="record"];
	"google.generativeai" [label="<f0> Package| <f1> google.generativeai",shape="record"];
	"google.generativeai.models" [label="<f0> SourceModule| <f1> google.generativeai.models",shape="record"];
	"google.generativeai.operations" [label="<f0> SourceModule| <f1> google.generativeai.operations",shape="record"];
	"google.generativeai.generative_models" [label="<f0> SourceModule| <f1> google.generativeai.generative_models",shape="record"];
	"google.generativeai.files" [label="<f0> SourceModule| <f1> google.generativeai.files",shape="record"];
	"google.generativeai.embedding" [label="<f0> SourceModule| <f1> google.generativeai.embedding",shape="record"];
	"wx.lib.newevent" [label="<f0> SourceModule| <f1> wx.lib.newevent",shape="record"];
	"wx.lib" [label="<f0> Package| <f1> wx.lib",shape="record"];
	"wx.lib.scrolledpanel" [label="<f0> SourceModule| <f1> wx.lib.scrolledpanel",shape="record"];
	"wx" [label="<f0> Package| <f1> wx",shape="record"];
	"wx._core" [label="<f0> Extension| <f1> wx._core",shape="record"];
	"wx._adv" [label="<f0> Extension| <f1> wx._adv",shape="record"];
	"wx._html" [label="<f0> Extension| <f1> wx._html",shape="record"];
	"wx._xml" [label="<f0> Extension| <f1> wx._xml",shape="record"];
	"wx.lib.agw" [label="<f0> Package| <f1> wx.lib.agw",shape="record"];
	"wx.grid" [label="<f0> SourceModule| <f1> wx.grid",shape="record"];
	"wx.siplib" [label="<f0> Extension| <f1> wx.siplib",shape="record"];
	"wx._grid" [label="<f0> Extension| <f1> wx._grid",shape="record"];
	"wx.html" [label="<f0> SourceModule| <f1> wx.html",shape="record"];
	"wx.adv" [label="<f0> SourceModule| <f1> wx.adv",shape="record"];
	"wx.lib.colourdb" [label="<f0> SourceModule| <f1> wx.lib.colourdb",shape="record"];
	"wx.core" [label="<f0> SourceModule| <f1> wx.core",shape="record"];
	"wx.msw" [label="<f0> SourceModule| <f1> wx.msw",shape="record"];
	"wx._msw" [label="<f0> MissingModule| <f1> wx._msw",shape="record"];
	"wx.lib.colourutils" [label="<f0> SourceModule| <f1> wx.lib.colourutils",shape="record"];
	"Carbon" [label="<f0> MissingModule| <f1> Carbon",shape="record"];
	"wx.__version__" [label="<f0> SourceModule| <f1> wx.__version__",shape="record"];
	"ntpath" [label="<f0> SourceModule| <f1> ntpath",shape="record"];
	"functools" [label="<f0> SourceModule| <f1> functools",shape="record"];
	"_functools" [label="<f0> BuiltinModule| <f1> _functools",shape="record"];
	"genericpath" [label="<f0> SourceModule| <f1> genericpath",shape="record"];
	"os" [label="<f0> SourceModule| <f1> os",shape="record"];
	"sre_constants" [label="<f0> SourceModule| <f1> sre_constants",shape="record"];
	"abc" [label="<f0> SourceModule| <f1> abc",shape="record"];
	"_py_abc" [label="<f0> SourceModule| <f1> _py_abc",shape="record"];
	"_abc" [label="<f0> BuiltinModule| <f1> _abc",shape="record"];
	"_bootlocale" [label="<f0> SourceModule| <f1> _bootlocale",shape="record"];
	"_locale" [label="<f0> BuiltinModule| <f1> _locale",shape="record"];
	"_weakrefset" [label="<f0> SourceModule| <f1> _weakrefset",shape="record"];
	"copyreg" [label="<f0> SourceModule| <f1> copyreg",shape="record"];
	"warnings" [label="<f0> SourceModule| <f1> warnings",shape="record"];
	"tracemalloc" [label="<f0> SourceModule| <f1> tracemalloc",shape="record"];
	"_tracemalloc" [label="<f0> BuiltinModule| <f1> _tracemalloc",shape="record"];
	"heapq" [label="<f0> SourceModule| <f1> heapq",shape="record"];
	"_heapq" [label="<f0> Extension| <f1> _heapq",shape="record"];
	"enum" [label="<f0> SourceModule| <f1> enum",shape="record"];
	"io" [label="<f0> SourceModule| <f1> io",shape="record"];
	"types" [label="<f0> SourceModule| <f1> types",shape="record"];
	"encodings.zlib_codec" [label="<f0> SourceModule| <f1> encodings.zlib_codec",shape="record"];
	"encodings.uu_codec" [label="<f0> SourceModule| <f1> encodings.uu_codec",shape="record"];
	"encodings.utf_8_sig" [label="<f0> SourceModule| <f1> encodings.utf_8_sig",shape="record"];
	"encodings.utf_8" [label="<f0> SourceModule| <f1> encodings.utf_8",shape="record"];
	"encodings.utf_7" [label="<f0> SourceModule| <f1> encodings.utf_7",shape="record"];
	"encodings.utf_32_le" [label="<f0> SourceModule| <f1> encodings.utf_32_le",shape="record"];
	"encodings.utf_32_be" [label="<f0> SourceModule| <f1> encodings.utf_32_be",shape="record"];
	"encodings.utf_32" [label="<f0> SourceModule| <f1> encodings.utf_32",shape="record"];
	"encodings.utf_16_le" [label="<f0> SourceModule| <f1> encodings.utf_16_le",shape="record"];
	"encodings.utf_16_be" [label="<f0> SourceModule| <f1> encodings.utf_16_be",shape="record"];
	"encodings.utf_16" [label="<f0> SourceModule| <f1> encodings.utf_16",shape="record"];
	"encodings.unicode_escape" [label="<f0> SourceModule| <f1> encodings.unicode_escape",shape="record"];
	"encodings.undefined" [label="<f0> SourceModule| <f1> encodings.undefined",shape="record"];
	"encodings.tis_620" [label="<f0> SourceModule| <f1> encodings.tis_620",shape="record"];
	"encodings.shift_jisx0213" [label="<f0> SourceModule| <f1> encodings.shift_jisx0213",shape="record"];
	"_codecs_jp" [label="<f0> Extension| <f1> _codecs_jp",shape="record"];
	"encodings.shift_jis_2004" [label="<f0> SourceModule| <f1> encodings.shift_jis_2004",shape="record"];
	"encodings.shift_jis" [label="<f0> SourceModule| <f1> encodings.shift_jis",shape="record"];
	"encodings.rot_13" [label="<f0> SourceModule| <f1> encodings.rot_13",shape="record"];
	"encodings.raw_unicode_escape" [label="<f0> SourceModule| <f1> encodings.raw_unicode_escape",shape="record"];
	"encodings.quopri_codec" [label="<f0> SourceModule| <f1> encodings.quopri_codec",shape="record"];
	"encodings.punycode" [label="<f0> SourceModule| <f1> encodings.punycode",shape="record"];
	"encodings.ptcp154" [label="<f0> SourceModule| <f1> encodings.ptcp154",shape="record"];
	"encodings.palmos" [label="<f0> SourceModule| <f1> encodings.palmos",shape="record"];
	"encodings.oem" [label="<f0> SourceModule| <f1> encodings.oem",shape="record"];
	"encodings.mbcs" [label="<f0> SourceModule| <f1> encodings.mbcs",shape="record"];
	"encodings.mac_turkish" [label="<f0> SourceModule| <f1> encodings.mac_turkish",shape="record"];
	"encodings.mac_romanian" [label="<f0> SourceModule| <f1> encodings.mac_romanian",shape="record"];
	"encodings.mac_roman" [label="<f0> SourceModule| <f1> encodings.mac_roman",shape="record"];
	"encodings.mac_latin2" [label="<f0> SourceModule| <f1> encodings.mac_latin2",shape="record"];
	"encodings.mac_iceland" [label="<f0> SourceModule| <f1> encodings.mac_iceland",shape="record"];
	"encodings.mac_greek" [label="<f0> SourceModule| <f1> encodings.mac_greek",shape="record"];
	"encodings.mac_farsi" [label="<f0> SourceModule| <f1> encodings.mac_farsi",shape="record"];
	"encodings.mac_cyrillic" [label="<f0> SourceModule| <f1> encodings.mac_cyrillic",shape="record"];
	"encodings.mac_croatian" [label="<f0> SourceModule| <f1> encodings.mac_croatian",shape="record"];
	"encodings.mac_arabic" [label="<f0> SourceModule| <f1> encodings.mac_arabic",shape="record"];
	"encodings.latin_1" [label="<f0> SourceModule| <f1> encodings.latin_1",shape="record"];
	"encodings.kz1048" [label="<f0> SourceModule| <f1> encodings.kz1048",shape="record"];
	"encodings.koi8_u" [label="<f0> SourceModule| <f1> encodings.koi8_u",shape="record"];
	"encodings.koi8_t" [label="<f0> SourceModule| <f1> encodings.koi8_t",shape="record"];
	"encodings.koi8_r" [label="<f0> SourceModule| <f1> encodings.koi8_r",shape="record"];
	"encodings.johab" [label="<f0> SourceModule| <f1> encodings.johab",shape="record"];
	"_codecs_kr" [label="<f0> Extension| <f1> _codecs_kr",shape="record"];
	"encodings.iso8859_9" [label="<f0> SourceModule| <f1> encodings.iso8859_9",shape="record"];
	"encodings.iso8859_8" [label="<f0> SourceModule| <f1> encodings.iso8859_8",shape="record"];
	"encodings.iso8859_7" [label="<f0> SourceModule| <f1> encodings.iso8859_7",shape="record"];
	"encodings.iso8859_6" [label="<f0> SourceModule| <f1> encodings.iso8859_6",shape="record"];
	"encodings.iso8859_5" [label="<f0> SourceModule| <f1> encodings.iso8859_5",shape="record"];
	"encodings.iso8859_4" [label="<f0> SourceModule| <f1> encodings.iso8859_4",shape="record"];
	"encodings.iso8859_3" [label="<f0> SourceModule| <f1> encodings.iso8859_3",shape="record"];
	"encodings.iso8859_2" [label="<f0> SourceModule| <f1> encodings.iso8859_2",shape="record"];
	"encodings.iso8859_16" [label="<f0> SourceModule| <f1> encodings.iso8859_16",shape="record"];
	"encodings.iso8859_15" [label="<f0> SourceModule| <f1> encodings.iso8859_15",shape="record"];
	"encodings.iso8859_14" [label="<f0> SourceModule| <f1> encodings.iso8859_14",shape="record"];
	"encodings.iso8859_13" [label="<f0> SourceModule| <f1> encodings.iso8859_13",shape="record"];
	"encodings.iso8859_11" [label="<f0> SourceModule| <f1> encodings.iso8859_11",shape="record"];
	"encodings.iso8859_10" [label="<f0> SourceModule| <f1> encodings.iso8859_10",shape="record"];
	"encodings.iso8859_1" [label="<f0> SourceModule| <f1> encodings.iso8859_1",shape="record"];
	"encodings.iso2022_kr" [label="<f0> SourceModule| <f1> encodings.iso2022_kr",shape="record"];
	"_codecs_iso2022" [label="<f0> Extension| <f1> _codecs_iso2022",shape="record"];
	"encodings.iso2022_jp_ext" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_ext",shape="record"];
	"encodings.iso2022_jp_3" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_3",shape="record"];
	"encodings.iso2022_jp_2004" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_2004",shape="record"];
	"encodings.iso2022_jp_2" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_2",shape="record"];
	"encodings.iso2022_jp_1" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_1",shape="record"];
	"encodings.iso2022_jp" [label="<f0> SourceModule| <f1> encodings.iso2022_jp",shape="record"];
	"encodings.idna" [label="<f0> SourceModule| <f1> encodings.idna",shape="record"];
	"encodings.hz" [label="<f0> SourceModule| <f1> encodings.hz",shape="record"];
	"_codecs_cn" [label="<f0> Extension| <f1> _codecs_cn",shape="record"];
	"encodings.hp_roman8" [label="<f0> SourceModule| <f1> encodings.hp_roman8",shape="record"];
	"encodings.hex_codec" [label="<f0> SourceModule| <f1> encodings.hex_codec",shape="record"];
	"encodings.gbk" [label="<f0> SourceModule| <f1> encodings.gbk",shape="record"];
	"encodings.gb2312" [label="<f0> SourceModule| <f1> encodings.gb2312",shape="record"];
	"encodings.gb18030" [label="<f0> SourceModule| <f1> encodings.gb18030",shape="record"];
	"encodings.euc_kr" [label="<f0> SourceModule| <f1> encodings.euc_kr",shape="record"];
	"encodings.euc_jp" [label="<f0> SourceModule| <f1> encodings.euc_jp",shape="record"];
	"encodings.euc_jisx0213" [label="<f0> SourceModule| <f1> encodings.euc_jisx0213",shape="record"];
	"encodings.euc_jis_2004" [label="<f0> SourceModule| <f1> encodings.euc_jis_2004",shape="record"];
	"encodings.cp950" [label="<f0> SourceModule| <f1> encodings.cp950",shape="record"];
	"_codecs_tw" [label="<f0> Extension| <f1> _codecs_tw",shape="record"];
	"encodings.cp949" [label="<f0> SourceModule| <f1> encodings.cp949",shape="record"];
	"encodings.cp932" [label="<f0> SourceModule| <f1> encodings.cp932",shape="record"];
	"encodings.cp875" [label="<f0> SourceModule| <f1> encodings.cp875",shape="record"];
	"encodings.cp874" [label="<f0> SourceModule| <f1> encodings.cp874",shape="record"];
	"encodings.cp869" [label="<f0> SourceModule| <f1> encodings.cp869",shape="record"];
	"encodings.cp866" [label="<f0> SourceModule| <f1> encodings.cp866",shape="record"];
	"encodings.cp865" [label="<f0> SourceModule| <f1> encodings.cp865",shape="record"];
	"encodings.cp864" [label="<f0> SourceModule| <f1> encodings.cp864",shape="record"];
	"encodings.cp863" [label="<f0> SourceModule| <f1> encodings.cp863",shape="record"];
	"encodings.cp862" [label="<f0> SourceModule| <f1> encodings.cp862",shape="record"];
	"encodings.cp861" [label="<f0> SourceModule| <f1> encodings.cp861",shape="record"];
	"encodings.cp860" [label="<f0> SourceModule| <f1> encodings.cp860",shape="record"];
	"encodings.cp858" [label="<f0> SourceModule| <f1> encodings.cp858",shape="record"];
	"encodings.cp857" [label="<f0> SourceModule| <f1> encodings.cp857",shape="record"];
	"encodings.cp856" [label="<f0> SourceModule| <f1> encodings.cp856",shape="record"];
	"encodings.cp855" [label="<f0> SourceModule| <f1> encodings.cp855",shape="record"];
	"encodings.cp852" [label="<f0> SourceModule| <f1> encodings.cp852",shape="record"];
	"encodings.cp850" [label="<f0> SourceModule| <f1> encodings.cp850",shape="record"];
	"encodings.cp775" [label="<f0> SourceModule| <f1> encodings.cp775",shape="record"];
	"encodings.cp737" [label="<f0> SourceModule| <f1> encodings.cp737",shape="record"];
	"encodings.cp720" [label="<f0> SourceModule| <f1> encodings.cp720",shape="record"];
	"encodings.cp500" [label="<f0> SourceModule| <f1> encodings.cp500",shape="record"];
	"encodings.cp437" [label="<f0> SourceModule| <f1> encodings.cp437",shape="record"];
	"encodings.cp424" [label="<f0> SourceModule| <f1> encodings.cp424",shape="record"];
	"encodings.cp273" [label="<f0> SourceModule| <f1> encodings.cp273",shape="record"];
	"encodings.cp1258" [label="<f0> SourceModule| <f1> encodings.cp1258",shape="record"];
	"encodings.cp1257" [label="<f0> SourceModule| <f1> encodings.cp1257",shape="record"];
	"encodings.cp1256" [label="<f0> SourceModule| <f1> encodings.cp1256",shape="record"];
	"encodings.cp1255" [label="<f0> SourceModule| <f1> encodings.cp1255",shape="record"];
	"encodings.cp1254" [label="<f0> SourceModule| <f1> encodings.cp1254",shape="record"];
	"encodings.cp1253" [label="<f0> SourceModule| <f1> encodings.cp1253",shape="record"];
	"encodings.cp1252" [label="<f0> SourceModule| <f1> encodings.cp1252",shape="record"];
	"encodings.cp1251" [label="<f0> SourceModule| <f1> encodings.cp1251",shape="record"];
	"encodings.cp1250" [label="<f0> SourceModule| <f1> encodings.cp1250",shape="record"];
	"encodings.cp1140" [label="<f0> SourceModule| <f1> encodings.cp1140",shape="record"];
	"encodings.cp1125" [label="<f0> SourceModule| <f1> encodings.cp1125",shape="record"];
	"encodings.cp1026" [label="<f0> SourceModule| <f1> encodings.cp1026",shape="record"];
	"encodings.cp1006" [label="<f0> SourceModule| <f1> encodings.cp1006",shape="record"];
	"encodings.cp037" [label="<f0> SourceModule| <f1> encodings.cp037",shape="record"];
	"encodings.charmap" [label="<f0> SourceModule| <f1> encodings.charmap",shape="record"];
	"encodings.bz2_codec" [label="<f0> SourceModule| <f1> encodings.bz2_codec",shape="record"];
	"encodings.big5hkscs" [label="<f0> SourceModule| <f1> encodings.big5hkscs",shape="record"];
	"_codecs_hk" [label="<f0> Extension| <f1> _codecs_hk",shape="record"];
	"encodings.big5" [label="<f0> SourceModule| <f1> encodings.big5",shape="record"];
	"encodings.base64_codec" [label="<f0> SourceModule| <f1> encodings.base64_codec",shape="record"];
	"encodings.ascii" [label="<f0> SourceModule| <f1> encodings.ascii",shape="record"];
	"encodings.aliases" [label="<f0> SourceModule| <f1> encodings.aliases",shape="record"];
	"encodings" [label="<f0> Package| <f1> encodings",shape="record"];
	"collections.abc" [label="<f0> SourceModule| <f1> collections.abc",shape="record"];
	"collections" [label="<f0> Package| <f1> collections",shape="record"];
	"weakref" [label="<f0> SourceModule| <f1> weakref",shape="record"];
	"stat" [label="<f0> SourceModule| <f1> stat",shape="record"];
	"_stat" [label="<f0> BuiltinModule| <f1> _stat",shape="record"];
	"reprlib" [label="<f0> SourceModule| <f1> reprlib",shape="record"];
	"sre_compile" [label="<f0> SourceModule| <f1> sre_compile",shape="record"];
	"re" [label="<f0> SourceModule| <f1> re",shape="record"];
	"_collections_abc" [label="<f0> SourceModule| <f1> _collections_abc",shape="record"];
	"keyword" [label="<f0> SourceModule| <f1> keyword",shape="record"];
	"operator" [label="<f0> SourceModule| <f1> operator",shape="record"];
	"sre_parse" [label="<f0> SourceModule| <f1> sre_parse",shape="record"];
	"locale" [label="<f0> SourceModule| <f1> locale",shape="record"];
	"traceback" [label="<f0> SourceModule| <f1> traceback",shape="record"];
	"linecache" [label="<f0> SourceModule| <f1> linecache",shape="record"];
	"_pickle" [label="<f0> Extension| <f1> _pickle",shape="record"];
	"datetime" [label="<f0> SourceModule| <f1> datetime",shape="record"];
	"_strptime" [label="<f0> SourceModule| <f1> _strptime",shape="record"];
	"_datetime" [label="<f0> Extension| <f1> _datetime",shape="record"];
	"_posixsubprocess" [label="<f0> Extension| <f1> _posixsubprocess",shape="record"];
	"posixpath" [label="<f0> SourceModule| <f1> posixpath",shape="record"];
	"posix" [label="<f0> BuiltinModule| <f1> posix",shape="record"];
	"_sre" [label="<f0> BuiltinModule| <f1> _sre",shape="record"];
	"codecs" [label="<f0> SourceModule| <f1> codecs",shape="record"];
	"_codecs" [label="<f0> BuiltinModule| <f1> _codecs",shape="record"];
	"time" [label="<f0> BuiltinModule| <f1> time",shape="record"];
	"gc" [label="<f0> BuiltinModule| <f1> gc",shape="record"];
	subgraph "cluster_langchain_community.vectorstores.docarray" {
		label="langchain_community.vectorstores.docarray";
		"langchain_community.vectorstores.docarray" -> "langchain_community.vectorstores.docarray.hnsw" [style="dotted"];
		"langchain_community.vectorstores.docarray" -> "langchain_community.vectorstores.docarray.in_memory" [style="dotted"];
		"langchain_community.vectorstores.docarray" -> "langchain_community.vectorstores.docarray.base" [style="dotted"];
	}
	subgraph "cluster_langchain_core.indexing" {
		label="langchain_core.indexing";
		"langchain_core.indexing" -> "langchain_core.indexing.api" [style="dotted"];
		"langchain_core.indexing" -> "langchain_core.indexing.base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.constants" {
		label="google.cloud.aiplatform.constants";
		"google.cloud.aiplatform.constants" -> "google.cloud.aiplatform.constants.base" [style="dotted"];
		"google.cloud.aiplatform.constants" -> "google.cloud.aiplatform.constants.prediction" [style="dotted"];
		"google.cloud.aiplatform.constants" -> "google.cloud.aiplatform.constants.pipeline" [style="dotted"];
		"google.cloud.aiplatform.constants" -> "google.cloud.aiplatform.constants.schedule" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.json" {
		label="langchain_community.agent_toolkits.json";
		"langchain_community.agent_toolkits.json" -> "langchain_community.agent_toolkits.json.base" [style="dotted"];
		"langchain_community.agent_toolkits.json" -> "langchain_community.agent_toolkits.json.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.json" -> "langchain_community.agent_toolkits.json.prompt" [style="dotted"];
	}
	subgraph "cluster_grpc" {
		label="grpc";
		"grpc" -> "grpc._common" [style="dotted"];
		"grpc" -> "grpc._compression" [style="dotted"];
		"grpc" -> "grpc._interceptor" [style="dotted"];
		"grpc" -> "grpc._observability" [style="dotted"];
		"grpc" -> "grpc._cython" [style="dotted"];
		"grpc" -> "grpc._runtime_protos" [style="dotted"];
		"grpc" -> "grpc._grpcio_metadata" [style="dotted"];
		"grpc" -> "grpc._utilities" [style="dotted"];
		"grpc" -> "grpc._plugin_wrapping" [style="dotted"];
		"grpc" -> "grpc._auth" [style="dotted"];
		"grpc" -> "grpc._channel" [style="dotted"];
		"grpc" -> "grpc.experimental" [style="dotted"];
		"grpc" -> "grpc._server" [style="dotted"];
		"grpc" -> "grpc.aio" [style="dotted"];
		"grpc" -> "grpc._typing" [style="dotted"];
		"grpc" -> "grpc._simple_stubs" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.migration_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.migration_service.transports";
		"google.cloud.aiplatform_v1beta1.services.migration_service.transports" -> "google.cloud.aiplatform_v1beta1.services.migration_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.migration_service.transports" -> "google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.migration_service.transports" -> "google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.migration_service.transports" -> "google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.migration_service.transports" -> "google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.migration_service.transports" -> "google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1" {
		label="google.cloud.aiplatform.v1";
		"google.cloud.aiplatform.v1" -> "google.cloud.aiplatform.v1.schema" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" {
		label="google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types";
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_object_detection" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_segmentation" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.export_evaluated_data_items_config" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_tables" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_extraction" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_sentiment" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_time_series_forecasting" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_action_recognition" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_object_tracking" [style="dotted"];
	}
	subgraph "cluster_sqlite3" {
		label="sqlite3";
		"sqlite3" -> "sqlite3.dbapi2" [style="dotted"];
		"sqlite3" -> "sqlite3.dump" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.financial_datasets" {
		label="langchain_community.tools.financial_datasets";
		"langchain_community.tools.financial_datasets" -> "langchain_community.tools.financial_datasets.balance_sheets" [style="dotted"];
		"langchain_community.tools.financial_datasets" -> "langchain_community.tools.financial_datasets.cash_flow_statements" [style="dotted"];
		"langchain_community.tools.financial_datasets" -> "langchain_community.tools.financial_datasets.income_statements" [style="dotted"];
	}
	subgraph "cluster_numpy.compat" {
		label="numpy.compat";
		"numpy.compat" -> "numpy.compat.py3k" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema" {
		label="google.cloud.aiplatform.v1beta1.schema";
		"google.cloud.aiplatform.v1beta1.schema" -> "google.cloud.aiplatform.v1beta1.schema.predict" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob" [style="dotted"];
	}
	subgraph "cluster_pandas.core.window" {
		label="pandas.core.window";
		"pandas.core.window" -> "pandas.core.window.ewm" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.expanding" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.rolling" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window._Rolling_and_Expanding" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.doc" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.common" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.numba_" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.online" [style="dotted"];
	}
	subgraph "cluster_pandas.plotting" {
		label="pandas.plotting";
		"pandas.plotting" -> "pandas.plotting._core" [style="dotted"];
		"pandas.plotting" -> "pandas.plotting._misc" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services" {
		label="google.cloud.resourcemanager_v3.services";
		"google.cloud.resourcemanager_v3.services" -> "google.cloud.resourcemanager_v3.services.tag_values" [style="dotted"];
		"google.cloud.resourcemanager_v3.services" -> "google.cloud.resourcemanager_v3.services.tag_keys" [style="dotted"];
		"google.cloud.resourcemanager_v3.services" -> "google.cloud.resourcemanager_v3.services.tag_holds" [style="dotted"];
		"google.cloud.resourcemanager_v3.services" -> "google.cloud.resourcemanager_v3.services.tag_bindings" [style="dotted"];
		"google.cloud.resourcemanager_v3.services" -> "google.cloud.resourcemanager_v3.services.projects" [style="dotted"];
		"google.cloud.resourcemanager_v3.services" -> "google.cloud.resourcemanager_v3.services.organizations" [style="dotted"];
		"google.cloud.resourcemanager_v3.services" -> "google.cloud.resourcemanager_v3.services.folders" [style="dotted"];
	}
	subgraph "cluster_pydantic_settings.sources" {
		label="pydantic_settings.sources";
		"pydantic_settings.sources" -> "pydantic_settings.sources.base" [style="dotted"];
		"pydantic_settings.sources" -> "pydantic_settings.sources.types" [style="dotted"];
		"pydantic_settings.sources" -> "pydantic_settings.sources.providers" [style="dotted"];
		"pydantic_settings.sources" -> "pydantic_settings.sources.utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.tag_holds" {
		label="google.cloud.resourcemanager_v3.services.tag_holds";
		"google.cloud.resourcemanager_v3.services.tag_holds" -> "google.cloud.resourcemanager_v3.services.tag_holds.pagers" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_holds" -> "google.cloud.resourcemanager_v3.services.tag_holds.async_client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_holds" -> "google.cloud.resourcemanager_v3.services.tag_holds.client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_holds" -> "google.cloud.resourcemanager_v3.services.tag_holds.transports" [style="dotted"];
	}
	subgraph "cluster_google.protobuf.pyext" {
		label="google.protobuf.pyext";
		"google.protobuf.pyext" -> "google.protobuf.pyext._message" [style="dotted"];
		"google.protobuf.pyext" -> "google.protobuf.pyext.cpp_message" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag.generation" {
		label="neo4j_graphrag.generation";
		"neo4j_graphrag.generation" -> "neo4j_graphrag.generation.graphrag" [style="dotted"];
		"neo4j_graphrag.generation" -> "neo4j_graphrag.generation.prompts" [style="dotted"];
		"neo4j_graphrag.generation" -> "neo4j_graphrag.generation.types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service" {
		label="google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service";
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" [style="dotted"];
	}
	subgraph "cluster_pandas.core.indexers" {
		label="pandas.core.indexers";
		"pandas.core.indexers" -> "pandas.core.indexers.utils" [style="dotted"];
		"pandas.core.indexers" -> "pandas.core.indexers.objects" [style="dotted"];
	}
	subgraph "cluster_numpy._typing" {
		label="numpy._typing";
		"numpy._typing" -> "numpy._typing._nested_sequence" [style="dotted"];
		"numpy._typing" -> "numpy._typing._nbit" [style="dotted"];
		"numpy._typing" -> "numpy._typing._char_codes" [style="dotted"];
		"numpy._typing" -> "numpy._typing._scalars" [style="dotted"];
		"numpy._typing" -> "numpy._typing._shape" [style="dotted"];
		"numpy._typing" -> "numpy._typing._dtype_like" [style="dotted"];
		"numpy._typing" -> "numpy._typing._array_like" [style="dotted"];
		"numpy._typing" -> "numpy._typing._ufunc" [style="dotted"];
		"numpy._typing" -> "numpy._typing._add_docstring" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.model_garden_service.transports" {
		label="google.cloud.aiplatform_v1.services.model_garden_service.transports";
		"google.cloud.aiplatform_v1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1.services.model_garden_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_openai.types.responses" {
		label="openai.types.responses";
		"openai.types.responses" -> "openai.types.responses.tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.computer_tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.function_tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_error" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_usage" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.parsed_response" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_status" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.web_search_tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.file_search_tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_types" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.easy_input_message" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_item_list" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.computer_tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.function_tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_includable" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_file" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_text" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_options" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_error_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_image" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_text" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_config" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_function" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_failed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_stream_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.web_search_tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.file_search_tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.input_item_list_params" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_create_params" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_created_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_content" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_message" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_refusal" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_reasoning_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_types_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.easy_input_message_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_completed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_retrieve_params" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_audio_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_incomplete_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_file_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_item_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_text_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_audio_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_in_progress_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_image_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_text_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_config_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_function_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_format_text_config" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_tool_call" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_message_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_refusal_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_web_search" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_content_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_refusal_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_message_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_refusal_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_reasoning_item_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_tool_call" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_item_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_content_part_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_tool_call_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_item_added_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_content_part_added_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_format_text_config_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_tool_call_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_web_search_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_tool_call" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_message_content_list" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_audio_transcript_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_tool_call_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_annotation_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_audio_transcript_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call_output_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_format_text_json_schema_config" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_tool_call_output_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_web_search_call_completed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_web_search_call_searching_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_call_completed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_call_searching_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_message_content_list_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_reasoning_summary_part_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_reasoning_summary_text_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_web_search_call_in_progress_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_call_in_progress_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_call_arguments_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_reasoning_summary_part_added_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_reasoning_summary_text_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_call_arguments_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call_output_screenshot" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_format_text_json_schema_config_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_code_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_completed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_code_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_in_progress_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_interpreting_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call_output_screenshot_param" [style="dotted"];
	}
	subgraph "cluster_attr" {
		label="attr";
		"attr" -> "attr._config" [style="dotted"];
		"attr" -> "attr.setters" [style="dotted"];
		"attr" -> "attr.converters" [style="dotted"];
		"attr" -> "attr.exceptions" [style="dotted"];
		"attr" -> "attr.filters" [style="dotted"];
		"attr" -> "attr.validators" [style="dotted"];
		"attr" -> "attr._cmp" [style="dotted"];
		"attr" -> "attr._funcs" [style="dotted"];
		"attr" -> "attr._make" [style="dotted"];
		"attr" -> "attr._next_gen" [style="dotted"];
		"attr" -> "attr._version_info" [style="dotted"];
		"attr" -> "attr._compat" [style="dotted"];
	}
	subgraph "cluster_neo4j._spatial" {
		label="neo4j._spatial";
	}
	subgraph "cluster_pyasn1.codec.ber" {
		label="pyasn1.codec.ber";
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.eoo" [style="dotted"];
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.decoder" [style="dotted"];
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.encoder" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.types" {
		label="google.cloud.resourcemanager_v3.types";
		"google.cloud.resourcemanager_v3.types" -> "google.cloud.resourcemanager_v3.types.folders" [style="dotted"];
		"google.cloud.resourcemanager_v3.types" -> "google.cloud.resourcemanager_v3.types.organizations" [style="dotted"];
		"google.cloud.resourcemanager_v3.types" -> "google.cloud.resourcemanager_v3.types.projects" [style="dotted"];
		"google.cloud.resourcemanager_v3.types" -> "google.cloud.resourcemanager_v3.types.tag_bindings" [style="dotted"];
		"google.cloud.resourcemanager_v3.types" -> "google.cloud.resourcemanager_v3.types.tag_holds" [style="dotted"];
		"google.cloud.resourcemanager_v3.types" -> "google.cloud.resourcemanager_v3.types.tag_keys" [style="dotted"];
		"google.cloud.resourcemanager_v3.types" -> "google.cloud.resourcemanager_v3.types.tag_values" [style="dotted"];
	}
	subgraph "cluster_pyparsing" {
		label="pyparsing";
		"pyparsing" -> "pyparsing.util" [style="dotted"];
		"pyparsing" -> "pyparsing.Word" [style="dotted"];
		"pyparsing" -> "pyparsing.exceptions" [style="dotted"];
		"pyparsing" -> "pyparsing.actions" [style="dotted"];
		"pyparsing" -> "pyparsing.core" [style="dotted"];
		"pyparsing" -> "pyparsing.results" [style="dotted"];
		"pyparsing" -> "pyparsing.helpers" [style="dotted"];
		"pyparsing" -> "pyparsing.unicode" [style="dotted"];
		"pyparsing" -> "pyparsing.testing" [style="dotted"];
		"pyparsing" -> "pyparsing.common" [style="dotted"];
		"pyparsing" -> "pyparsing.diagram" [style="dotted"];
	}
	subgraph "cluster_xml.sax" {
		label="xml.sax";
		"xml.sax" -> "xml.sax.handler" [style="dotted"];
		"xml.sax" -> "xml.sax.xmlreader" [style="dotted"];
		"xml.sax" -> "xml.sax.saxutils" [style="dotted"];
		"xml.sax" -> "xml.sax._exceptions" [style="dotted"];
		"xml.sax" -> "xml.sax.expatreader" [style="dotted"];
	}
	subgraph "cluster_pydoc_data" {
		label="pydoc_data";
		"pydoc_data" -> "pydoc_data.topics" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.chat" {
		label="langchain.agents.chat";
		"langchain.agents.chat" -> "langchain.agents.chat.prompt" [style="dotted"];
		"langchain.agents.chat" -> "langchain.agents.chat.base" [style="dotted"];
		"langchain.agents.chat" -> "langchain.agents.chat.output_parser" [style="dotted"];
	}
	subgraph "cluster_anthropic.lib.streaming" {
		label="anthropic.lib.streaming";
		"anthropic.lib.streaming" -> "anthropic.lib.streaming._types" [style="dotted"];
		"anthropic.lib.streaming" -> "anthropic.lib.streaming._messages" [style="dotted"];
		"anthropic.lib.streaming" -> "anthropic.lib.streaming._beta_types" [style="dotted"];
		"anthropic.lib.streaming" -> "anthropic.lib.streaming._beta_messages" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.gmail" {
		label="langchain_community.tools.gmail";
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.create_draft" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.get_message" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.get_thread" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.search" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.send_message" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.utils" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.featurestore_service.transports";
		"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.playwright" {
		label="langchain_community.tools.playwright";
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.click" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.current_page" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.extract_hyperlinks" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.extract_text" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.get_elements" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.navigate" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.navigate_back" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.base" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.utils" [style="dotted"];
	}
	subgraph "cluster_html" {
		label="html";
		"html" -> "html.entities" [style="dotted"];
		"html" -> "html.parser" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.e2b_data_analysis" {
		label="langchain_community.tools.e2b_data_analysis";
		"langchain_community.tools.e2b_data_analysis" -> "langchain_community.tools.e2b_data_analysis.tool" [style="dotted"];
		"langchain_community.tools.e2b_data_analysis" -> "langchain_community.tools.e2b_data_analysis.unparse" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.featurestore_service" {
		label="google.cloud.aiplatform_v1beta1.services.featurestore_service";
		"google.cloud.aiplatform_v1beta1.services.featurestore_service" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_service" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_service" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_service" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.bigquery.magics.line_arg_parser" {
		label="google.cloud.bigquery.magics.line_arg_parser";
		"google.cloud.bigquery.magics.line_arg_parser" -> "google.cloud.bigquery.magics.line_arg_parser.exceptions" [style="dotted"];
		"google.cloud.bigquery.magics.line_arg_parser" -> "google.cloud.bigquery.magics.line_arg_parser.lexer" [style="dotted"];
		"google.cloud.bigquery.magics.line_arg_parser" -> "google.cloud.bigquery.magics.line_arg_parser.parser" [style="dotted"];
		"google.cloud.bigquery.magics.line_arg_parser" -> "google.cloud.bigquery.magics.line_arg_parser.visitors" [style="dotted"];
	}
	subgraph "cluster_openai.resources" {
		label="openai.resources";
		"openai.resources" -> "openai.resources.beta" [style="dotted"];
		"openai.resources" -> "openai.resources.chat" [style="dotted"];
		"openai.resources" -> "openai.resources.audio" [style="dotted"];
		"openai.resources" -> "openai.resources.evals" [style="dotted"];
		"openai.resources" -> "openai.resources.files" [style="dotted"];
		"openai.resources" -> "openai.resources.images" [style="dotted"];
		"openai.resources" -> "openai.resources.models" [style="dotted"];
		"openai.resources" -> "openai.resources.batches" [style="dotted"];
		"openai.resources" -> "openai.resources.uploads" [style="dotted"];
		"openai.resources" -> "openai.resources.responses" [style="dotted"];
		"openai.resources" -> "openai.resources.embeddings" [style="dotted"];
		"openai.resources" -> "openai.resources.completions" [style="dotted"];
		"openai.resources" -> "openai.resources.fine_tuning" [style="dotted"];
		"openai.resources" -> "openai.resources.moderations" [style="dotted"];
		"openai.resources" -> "openai.resources.vector_stores" [style="dotted"];
	}
	subgraph "cluster_openai.resources.beta.realtime" {
		label="openai.resources.beta.realtime";
		"openai.resources.beta.realtime" -> "openai.resources.beta.realtime.realtime" [style="dotted"];
		"openai.resources.beta.realtime" -> "openai.resources.beta.realtime.sessions" [style="dotted"];
		"openai.resources.beta.realtime" -> "openai.resources.beta.realtime.transcription_sessions" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.endpoint_service.transports" {
		label="google.cloud.aiplatform_v1.services.endpoint_service.transports";
		"google.cloud.aiplatform_v1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.endpoint_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" {
		label="google.cloud.aiplatform_v1.services.reasoning_engine_service.transports";
		"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.tensorboard_service" {
		label="google.cloud.aiplatform_v1beta1.services.tensorboard_service";
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" [style="dotted"];
	}
	subgraph "cluster_langsmith._internal" {
		label="langsmith._internal";
		"langsmith._internal" -> "langsmith._internal._aiter" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._patch" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._orjson" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._beta_decorator" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._background_thread" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._constants" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._multipart" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._operations" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._serde" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._edit_distance" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._embedding_distance" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.oracle" {
		label="sqlalchemy.dialects.oracle";
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.dictionary" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.base" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.cx_oracle" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.oracledb" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.types" [style="dotted"];
	}
	subgraph "cluster_websockets.legacy" {
		label="websockets.legacy";
		"websockets.legacy" -> "websockets.legacy.auth" [style="dotted"];
		"websockets.legacy" -> "websockets.legacy.client" [style="dotted"];
		"websockets.legacy" -> "websockets.legacy.exceptions" [style="dotted"];
		"websockets.legacy" -> "websockets.legacy.framing" [style="dotted"];
		"websockets.legacy" -> "websockets.legacy.handshake" [style="dotted"];
		"websockets.legacy" -> "websockets.legacy.http" [style="dotted"];
		"websockets.legacy" -> "websockets.legacy.protocol" [style="dotted"];
		"websockets.legacy" -> "websockets.legacy.server" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.dataset_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.dataset_service.transports";
		"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.index_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.index_service.transports";
		"google.cloud.aiplatform_v1beta1.services.index_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pandas.io.json" {
		label="pandas.io.json";
		"pandas.io.json" -> "pandas.io.json._json" [style="dotted"];
		"pandas.io.json" -> "pandas.io.json._table_schema" [style="dotted"];
		"pandas.io.json" -> "pandas.io.json._normalize" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.steam" {
		label="langchain_community.agent_toolkits.steam";
		"langchain_community.agent_toolkits.steam" -> "langchain_community.agent_toolkits.steam.toolkit" [style="dotted"];
	}
	subgraph "cluster_urllib3" {
		label="urllib3";
		"urllib3" -> "urllib3.exceptions" [style="dotted"];
		"urllib3" -> "urllib3._base_connection" [style="dotted"];
		"urllib3" -> "urllib3._collections" [style="dotted"];
		"urllib3" -> "urllib3._version" [style="dotted"];
		"urllib3" -> "urllib3.connectionpool" [style="dotted"];
		"urllib3" -> "urllib3.filepost" [style="dotted"];
		"urllib3" -> "urllib3.poolmanager" [style="dotted"];
		"urllib3" -> "urllib3.response" [style="dotted"];
		"urllib3" -> "urllib3.fields" [style="dotted"];
		"urllib3" -> "urllib3.util" [style="dotted"];
		"urllib3" -> "urllib3.connection" [style="dotted"];
		"urllib3" -> "urllib3.http2" [style="dotted"];
		"urllib3" -> "urllib3._request_methods" [style="dotted"];
		"urllib3" -> "urllib3.contrib" [style="dotted"];
	}
	subgraph "cluster_vertexai" {
		label="vertexai";
		"vertexai" -> "vertexai.generative_models" [style="dotted"];
		"vertexai" -> "vertexai.tuning" [style="dotted"];
		"vertexai" -> "vertexai.caching" [style="dotted"];
		"vertexai" -> "vertexai.preview" [style="dotted"];
		"vertexai" -> "vertexai._model_garden" [style="dotted"];
		"vertexai" -> "vertexai.language_models" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.agent_toolkits.conversational_retrieval" {
		label="langchain.agents.agent_toolkits.conversational_retrieval";
		"langchain.agents.agent_toolkits.conversational_retrieval" -> "langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects" {
		label="sqlalchemy.dialects";
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.sqlite" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects._typing" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.postgresql" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.oracle" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.mysql" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.mssql" [style="dotted"];
	}
	subgraph "cluster_aiohttp._websocket" {
		label="aiohttp._websocket";
		"aiohttp._websocket" -> "aiohttp._websocket.reader" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.writer" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.helpers" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.models" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.mask" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.reader_py" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.reader_c" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.metadata" {
		label="google.cloud.aiplatform.metadata";
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.constants" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.artifact" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.utils" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.metadata_store" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.resource" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.execution" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.context" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.metadata" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.experiment_resources" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata._models" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.experiment_run_resource" [style="dotted"];
		"google.cloud.aiplatform.metadata" -> "google.cloud.aiplatform.metadata.schema" [style="dotted"];
	}
	subgraph "cluster_httpx_sse" {
		label="httpx_sse";
		"httpx_sse" -> "httpx_sse._api" [style="dotted"];
		"httpx_sse" -> "httpx_sse._exceptions" [style="dotted"];
		"httpx_sse" -> "httpx_sse._models" [style="dotted"];
		"httpx_sse" -> "httpx_sse._decoders" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.combine_documents" {
		label="langchain.chains.combine_documents";
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.reduce" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.stuff" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.base" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.map_reduce" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.map_rerank" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.refine" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.index_service.transports" {
		label="google.cloud.aiplatform_v1.services.index_service.transports";
		"google.cloud.aiplatform_v1.services.index_service.transports" -> "google.cloud.aiplatform_v1.services.index_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_service.transports" -> "google.cloud.aiplatform_v1.services.index_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_service.transports" -> "google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_service.transports" -> "google.cloud.aiplatform_v1.services.index_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_service.transports" -> "google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_service.transports" -> "google.cloud.aiplatform_v1.services.index_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pypdfium2" {
		label="pypdfium2";
		"pypdfium2" -> "pypdfium2._library_scope" [style="dotted"];
		"pypdfium2" -> "pypdfium2.version" [style="dotted"];
		"pypdfium2" -> "pypdfium2._helpers" [style="dotted"];
		"pypdfium2" -> "pypdfium2.raw" [style="dotted"];
		"pypdfium2" -> "pypdfium2.internal" [style="dotted"];
	}
	subgraph "cluster_google.api" {
		label="google.api";
		"google.api" -> "google.api.http_pb2" [style="dotted"];
		"google.api" -> "google.api.annotations_pb2" [style="dotted"];
		"google.api" -> "google.api.launch_stage_pb2" [style="dotted"];
		"google.api" -> "google.api.client_pb2" [style="dotted"];
		"google.api" -> "google.api.httpbody_pb2" [style="dotted"];
		"google.api" -> "google.api.field_behavior_pb2" [style="dotted"];
		"google.api" -> "google.api.resource_pb2" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.evaluation_service.transports";
		"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_grpc_status" {
		label="grpc_status";
		"grpc_status" -> "grpc_status._async" [style="dotted"];
		"grpc_status" -> "grpc_status.rpc_status" [style="dotted"];
		"grpc_status" -> "grpc_status._common" [style="dotted"];
	}
	subgraph "cluster_langchain_text_splitters" {
		label="langchain_text_splitters";
		"langchain_text_splitters" -> "langchain_text_splitters.base" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.character" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.html" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.json" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.jsx" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.konlpy" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.latex" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.markdown" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.nltk" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.python" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.sentence_transformers" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.spacy" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.extension_registry_service" {
		label="google.cloud.aiplatform_v1beta1.services.extension_registry_service";
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports";
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.tag_bindings.transports" {
		label="google.cloud.resourcemanager_v3.services.tag_bindings.transports";
		"google.cloud.resourcemanager_v3.services.tag_bindings.transports" -> "google.cloud.resourcemanager_v3.services.tag_bindings.transports.base" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_bindings.transports" -> "google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_bindings.transports" -> "google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_bindings.transports" -> "google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_bindings.transports" -> "google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_anthropic" {
		label="langchain_anthropic";
		"langchain_anthropic" -> "langchain_anthropic.chat_models" [style="dotted"];
		"langchain_anthropic" -> "langchain_anthropic.llms" [style="dotted"];
		"langchain_anthropic" -> "langchain_anthropic.output_parsers" [style="dotted"];
	}
	subgraph "cluster_pandas.core.computation" {
		label="pandas.core.computation";
		"pandas.core.computation" -> "pandas.core.computation.expressions" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.expr" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.api" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.check" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.ops" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.parsing" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.scope" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.common" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.eval" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.engines" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.align" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.pytables" [style="dotted"];
	}
	subgraph "cluster_numpy.fft" {
		label="numpy.fft";
		"numpy.fft" -> "numpy.fft._pocketfft_internal" [style="dotted"];
		"numpy.fft" -> "numpy.fft._pocketfft" [style="dotted"];
		"numpy.fft" -> "numpy.fft.helper" [style="dotted"];
	}
	subgraph "cluster_pypdf._text_extraction" {
		label="pypdf._text_extraction";
		"pypdf._text_extraction" -> "pypdf._text_extraction._layout_mode" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.instance_v1.types" {
		label="google.cloud.aiplatform.v1.schema.predict.instance_v1.types";
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_object_detection" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_segmentation" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_extraction" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_sentiment" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_action_recognition" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_object_tracking" [style="dotted"];
	}
	subgraph "cluster_google.type" {
		label="google.type";
		"google.type" -> "google.type.latlng_pb2" [style="dotted"];
		"google.type" -> "google.type.date_pb2" [style="dotted"];
		"google.type" -> "google.type.money_pb2" [style="dotted"];
		"google.type" -> "google.type.interval_pb2" [style="dotted"];
		"google.type" -> "google.type.expr_pb2" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.dataset_service" {
		label="google.cloud.aiplatform_v1.services.dataset_service";
		"google.cloud.aiplatform_v1.services.dataset_service" -> "google.cloud.aiplatform_v1.services.dataset_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.dataset_service" -> "google.cloud.aiplatform_v1.services.dataset_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.dataset_service" -> "google.cloud.aiplatform_v1.services.dataset_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.dataset_service" -> "google.cloud.aiplatform_v1.services.dataset_service.transports" [style="dotted"];
	}
	subgraph "cluster_docx.image" {
		label="docx.image";
		"docx.image" -> "docx.image.bmp" [style="dotted"];
		"docx.image" -> "docx.image.gif" [style="dotted"];
		"docx.image" -> "docx.image.jpeg" [style="dotted"];
		"docx.image" -> "docx.image.png" [style="dotted"];
		"docx.image" -> "docx.image.tiff" [style="dotted"];
		"docx.image" -> "docx.image.image" [style="dotted"];
		"docx.image" -> "docx.image.exceptions" [style="dotted"];
		"docx.image" -> "docx.image.constants" [style="dotted"];
		"docx.image" -> "docx.image.helpers" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.reasoning_engine_execution_service" {
		label="google.cloud.aiplatform_v1.services.reasoning_engine_execution_service";
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.model_service" {
		label="google.cloud.aiplatform_v1beta1.services.model_service";
		"google.cloud.aiplatform_v1beta1.services.model_service" -> "google.cloud.aiplatform_v1beta1.services.model_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_service" -> "google.cloud.aiplatform_v1beta1.services.model_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_service" -> "google.cloud.aiplatform_v1beta1.services.model_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_service" -> "google.cloud.aiplatform_v1beta1.services.model_service.transports" [style="dotted"];
	}
	subgraph "cluster_asyncio" {
		label="asyncio";
		"asyncio" -> "asyncio.constants" [style="dotted"];
		"asyncio" -> "asyncio.format_helpers" [style="dotted"];
		"asyncio" -> "asyncio.base_futures" [style="dotted"];
		"asyncio" -> "asyncio.coroutines" [style="dotted"];
		"asyncio" -> "asyncio.DefaultEventLoopPolicy" [style="dotted"];
		"asyncio" -> "asyncio.events" [style="dotted"];
		"asyncio" -> "asyncio.exceptions" [style="dotted"];
		"asyncio" -> "asyncio.futures" [style="dotted"];
		"asyncio" -> "asyncio.protocols" [style="dotted"];
		"asyncio" -> "asyncio.transports" [style="dotted"];
		"asyncio" -> "asyncio.sslproto" [style="dotted"];
		"asyncio" -> "asyncio.locks" [style="dotted"];
		"asyncio" -> "asyncio.base_tasks" [style="dotted"];
		"asyncio" -> "asyncio.tasks" [style="dotted"];
		"asyncio" -> "asyncio.staggered" [style="dotted"];
		"asyncio" -> "asyncio.trsock" [style="dotted"];
		"asyncio" -> "asyncio.base_events" [style="dotted"];
		"asyncio" -> "asyncio.runners" [style="dotted"];
		"asyncio" -> "asyncio.queues" [style="dotted"];
		"asyncio" -> "asyncio.streams" [style="dotted"];
		"asyncio" -> "asyncio.subprocess" [style="dotted"];
		"asyncio" -> "asyncio.threads" [style="dotted"];
		"asyncio" -> "asyncio.base_subprocess" [style="dotted"];
		"asyncio" -> "asyncio.proactor_events" [style="dotted"];
		"asyncio" -> "asyncio.selector_events" [style="dotted"];
		"asyncio" -> "asyncio.windows_utils" [style="dotted"];
		"asyncio" -> "asyncio.windows_events" [style="dotted"];
		"asyncio" -> "asyncio.unix_events" [style="dotted"];
		"asyncio" -> "asyncio.timeout" [style="dotted"];
		"asyncio" -> "asyncio.timeout_at" [style="dotted"];
		"asyncio" -> "asyncio.Runner" [style="dotted"];
		"asyncio" -> "asyncio.log" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.example_store_service" {
		label="google.cloud.aiplatform_v1beta1.services.example_store_service";
		"google.cloud.aiplatform_v1beta1.services.example_store_service" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.example_store_service" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.example_store_service" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.example_store_service" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.json" {
		label="langchain_community.tools.json";
		"langchain_community.tools.json" -> "langchain_community.tools.json.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.llms" {
		label="langchain_community.llms";
		"langchain_community.llms" -> "langchain_community.llms.ai21" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.aleph_alpha" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.amazon_api_gateway" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.anthropic" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.anyscale" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.aphrodite" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.arcee" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.aviary" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.azureml_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.baichuan" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.baidu_qianfan_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.bananadev" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.baseten" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.beam" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.bedrock" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.bigdl_llm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.bittensor" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.cerebriumai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.chatglm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.clarifai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.cohere" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ctransformers" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ctranslate2" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.databricks" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.deepinfra" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.deepsparse" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.edenai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.fake" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.fireworks" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.forefrontai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.friendli" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.gigachat" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.google_palm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.gooseai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.gpt4all" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.gradient_ai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.huggingface_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.huggingface_hub" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.huggingface_pipeline" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.huggingface_text_gen_inference" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.human" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ipex_llm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.javelin_ai_gateway" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.koboldai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.konko" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.llamacpp" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.llamafile" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.manifest" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.minimax" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.mlflow" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.mlflow_ai_gateway" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.mlx_pipeline" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.modal" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.mosaicml" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.nlpcloud" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.oci_data_science_model_deployment_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.oci_generative_ai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.octoai_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ollama" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.opaqueprompts" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.openai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.openllm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.openlm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.outlines" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.pai_eas_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.petals" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.pipelineai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.predibase" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.predictionguard" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.promptlayer_openai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.replicate" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.rwkv" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.sagemaker_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.sambanova" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.self_hosted" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.self_hosted_hugging_face" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.stochasticai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.symblai_nebula" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.textgen" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.titan_takeoff" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.together" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.tongyi" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.vertexai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.vllm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.watsonxllm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.weight_only_quantization" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.writer" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.xinference" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.yandex" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.yuan2" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.volcengine_maas" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.sparkllm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.you" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.yi" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Anthropic" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Banana" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.CerebriumAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Cohere" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ForefrontAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.GooseAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.HuggingFaceHub" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.HuggingFaceTextGenInference" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.LlamaCpp" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Modal" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.OpenAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Petals" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.PipelineAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.SagemakerEndpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.StochasticAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Writer" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.utils" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.loading" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.solar" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.moonshot" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports";
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_core._api" {
		label="langchain_core._api";
		"langchain_core._api" -> "langchain_core._api.beta_decorator" [style="dotted"];
		"langchain_core._api" -> "langchain_core._api.deprecation" [style="dotted"];
		"langchain_core._api" -> "langchain_core._api.path" [style="dotted"];
		"langchain_core._api" -> "langchain_core._api.internal" [style="dotted"];
	}
	subgraph "cluster_langchain_core.callbacks" {
		label="langchain_core.callbacks";
		"langchain_core.callbacks" -> "langchain_core.callbacks.base" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.file" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.manager" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.stdout" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.streaming_stdout" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.usage" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.cassandra_database" {
		label="langchain_community.agent_toolkits.cassandra_database";
		"langchain_community.agent_toolkits.cassandra_database" -> "langchain_community.agent_toolkits.cassandra_database.toolkit" [style="dotted"];
	}
	subgraph "cluster_http" {
		label="http";
		"http" -> "http.cookiejar" [style="dotted"];
		"http" -> "http.client" [style="dotted"];
		"http" -> "http.server" [style="dotted"];
		"http" -> "http.cookies" [style="dotted"];
		"http" -> "httpx" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.pipeline_service" {
		label="google.cloud.aiplatform_v1beta1.services.pipeline_service";
		"google.cloud.aiplatform_v1beta1.services.pipeline_service" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.pipeline_service" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.pipeline_service" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.pipeline_service" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag.retrievers.external.qdrant" {
		label="neo4j_graphrag.retrievers.external.qdrant";
		"neo4j_graphrag.retrievers.external.qdrant" -> "neo4j_graphrag.retrievers.external.qdrant.qdrant" [style="dotted"];
		"neo4j_graphrag.retrievers.external.qdrant" -> "neo4j_graphrag.retrievers.external.qdrant.types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.instance" {
		label="google.cloud.aiplatform.v1.schema.predict.instance";
		"google.cloud.aiplatform.v1.schema.predict.instance" -> "google.cloud.aiplatform.v1.schema.predict.instance.gapic_version" [style="dotted"];
	}
	subgraph "cluster_textdistance" {
		label="textdistance";
		"textdistance" -> "textdistance.algorithms" [style="dotted"];
		"textdistance" -> "textdistance.utils" [style="dotted"];
		"textdistance" -> "textdistance.benchmark" [style="dotted"];
		"textdistance" -> "textdistance.libraries" [style="dotted"];
	}
	subgraph "cluster_pandas._testing" {
		label="pandas._testing";
		"pandas._testing" -> "pandas._testing._io" [style="dotted"];
		"pandas._testing" -> "pandas._testing._warnings" [style="dotted"];
		"pandas._testing" -> "pandas._testing.asserters" [style="dotted"];
		"pandas._testing" -> "pandas._testing.compat" [style="dotted"];
		"pandas._testing" -> "pandas._testing.contexts" [style="dotted"];
	}
	subgraph "cluster_anyio._core" {
		label="anyio._core";
		"anyio._core" -> "anyio._core._eventloop" [style="dotted"];
		"anyio._core" -> "anyio._core._exceptions" [style="dotted"];
		"anyio._core" -> "anyio._core._fileio" [style="dotted"];
		"anyio._core" -> "anyio._core._resources" [style="dotted"];
		"anyio._core" -> "anyio._core._signals" [style="dotted"];
		"anyio._core" -> "anyio._core._sockets" [style="dotted"];
		"anyio._core" -> "anyio._core._streams" [style="dotted"];
		"anyio._core" -> "anyio._core._subprocesses" [style="dotted"];
		"anyio._core" -> "anyio._core._synchronization" [style="dotted"];
		"anyio._core" -> "anyio._core._tasks" [style="dotted"];
		"anyio._core" -> "anyio._core._tempfile" [style="dotted"];
		"anyio._core" -> "anyio._core._testing" [style="dotted"];
		"anyio._core" -> "anyio._core._typedattr" [style="dotted"];
		"anyio._core" -> "anyio._core._asyncio_selector_thread" [style="dotted"];
	}
	subgraph "cluster_langchain_openai.llms" {
		label="langchain_openai.llms";
		"langchain_openai.llms" -> "langchain_openai.llms.azure" [style="dotted"];
		"langchain_openai.llms" -> "langchain_openai.llms.base" [style="dotted"];
	}
	subgraph "cluster_neo4j._codec.hydration" {
		label="neo4j._codec.hydration";
		"neo4j._codec.hydration" -> "neo4j._codec.hydration._common" [style="dotted"];
		"neo4j._codec.hydration" -> "neo4j._codec.hydration._interface" [style="dotted"];
		"neo4j._codec.hydration" -> "neo4j._codec.hydration.v1" [style="dotted"];
		"neo4j._codec.hydration" -> "neo4j._codec.hydration.v2" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.graph" {
		label="graphdatascience.graph";
		"graphdatascience.graph" -> "graphdatascience.graph.graph_create_result" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_object" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_remote_proc_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_type_check" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.base_graph_proc_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_remote_project_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_entity_ops_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_export_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_sample_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.ogb_loader" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.nx_loader" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_endpoints" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_alpha_proc_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_beta_proc_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_project_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_proc_runner" [style="dotted"];
		"graphdatascience.graph" -> "graphdatascience.graph.graph_cypher_runner" [style="dotted"];
	}
	subgraph "cluster_anyio.abc" {
		label="anyio.abc";
		"anyio.abc" -> "anyio.abc._eventloop" [style="dotted"];
		"anyio.abc" -> "anyio.abc._resources" [style="dotted"];
		"anyio.abc" -> "anyio.abc._sockets" [style="dotted"];
		"anyio.abc" -> "anyio.abc._streams" [style="dotted"];
		"anyio.abc" -> "anyio.abc._subprocesses" [style="dotted"];
		"anyio.abc" -> "anyio.abc._tasks" [style="dotted"];
		"anyio.abc" -> "anyio.abc._testing" [style="dotted"];
	}
	subgraph "cluster_google.cloud.bigquery" {
		label="google.cloud.bigquery";
		"google.cloud.bigquery" -> "google.cloud.bigquery.version" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery._helpers" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.standard_sql" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.schema" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery._pyarrow_helpers" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.exceptions" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery._versions_helpers" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery._pandas_helpers" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.job" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery._job_helpers" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.client" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.dataset" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.enums" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.external_config" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.format_options" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.model" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.query" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.retry" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.routine" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.table" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.encryption_configuration" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.magics" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.dbapi" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery._tqdm_helpers" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery._http" [style="dotted"];
		"google.cloud.bigquery" -> "google.cloud.bigquery.opentelemetry_tracing" [style="dotted"];
	}
	subgraph "cluster_neo4j._sync.work" {
		label="neo4j._sync.work";
		"neo4j._sync.work" -> "neo4j._sync.work.result" [style="dotted"];
		"neo4j._sync.work" -> "neo4j._sync.work.session" [style="dotted"];
		"neo4j._sync.work" -> "neo4j._sync.work.transaction" [style="dotted"];
		"neo4j._sync.work" -> "neo4j._sync.work.workspace" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.openai_functions_multi_agent" {
		label="langchain.agents.openai_functions_multi_agent";
		"langchain.agents.openai_functions_multi_agent" -> "langchain.agents.openai_functions_multi_agent.base" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.server_version" {
		label="graphdatascience.server_version";
		"graphdatascience.server_version" -> "graphdatascience.server_version.server_version" [style="dotted"];
		"graphdatascience.server_version" -> "graphdatascience.server_version.compatible_with" [style="dotted"];
	}
	subgraph "cluster_docx.parts" {
		label="docx.parts";
		"docx.parts" -> "docx.parts.document" [style="dotted"];
		"docx.parts" -> "docx.parts.hdrftr" [style="dotted"];
		"docx.parts" -> "docx.parts.image" [style="dotted"];
		"docx.parts" -> "docx.parts.numbering" [style="dotted"];
		"docx.parts" -> "docx.parts.settings" [style="dotted"];
		"docx.parts" -> "docx.parts.styles" [style="dotted"];
		"docx.parts" -> "docx.parts.story" [style="dotted"];
	}
	subgraph "cluster_wx.lib" {
		label="wx.lib";
		"wx.lib" -> "wx.lib.scrolledpanel" [style="dotted"];
		"wx.lib" -> "wx.lib.newevent" [style="dotted"];
		"wx.lib" -> "wx.lib.colourdb" [style="dotted"];
		"wx.lib" -> "wx.lib.agw" [style="dotted"];
		"wx.lib" -> "wx.lib.colourutils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.params_v1.types" {
		label="google.cloud.aiplatform.v1.schema.predict.params_v1.types";
		"google.cloud.aiplatform.v1.schema.predict.params_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.params_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_object_detection" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.params_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_segmentation" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.params_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_action_recognition" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.params_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.params_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_object_tracking" [style="dotted"];
	}
	subgraph "cluster_openai.lib" {
		label="openai.lib";
		"openai.lib" -> "openai.lib._tools" [style="dotted"];
		"openai.lib" -> "openai.lib._parsing" [style="dotted"];
		"openai.lib" -> "openai.lib.azure" [style="dotted"];
		"openai.lib" -> "openai.lib._pydantic" [style="dotted"];
		"openai.lib" -> "openai.lib.streaming" [style="dotted"];
		"openai.lib" -> "openai.lib._old_api" [style="dotted"];
	}
	subgraph "cluster_rsa" {
		label="rsa";
		"rsa" -> "rsa.transform" [style="dotted"];
		"rsa" -> "rsa.parallel" [style="dotted"];
		"rsa" -> "rsa.key" [style="dotted"];
		"rsa" -> "rsa.pkcs1" [style="dotted"];
		"rsa" -> "rsa.common" [style="dotted"];
		"rsa" -> "rsa.core" [style="dotted"];
		"rsa" -> "rsa.prime" [style="dotted"];
		"rsa" -> "rsa.pem" [style="dotted"];
		"rsa" -> "rsa.randnum" [style="dotted"];
		"rsa" -> "rsa.asn1" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.trainingjob.definition_v1" {
		label="google.cloud.aiplatform.v1.schema.trainingjob.definition_v1";
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1" {
		label="google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1";
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types" [style="dotted"];
	}
	subgraph "cluster_pandas.api.interchange" {
		label="pandas.api.interchange";
	}
	subgraph "cluster_langchain_community.tools.dataherald" {
		label="langchain_community.tools.dataherald";
		"langchain_community.tools.dataherald" -> "langchain_community.tools.dataherald.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service" {
		label="google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service";
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.conversational_chat" {
		label="langchain.agents.conversational_chat";
		"langchain.agents.conversational_chat" -> "langchain.agents.conversational_chat.base" [style="dotted"];
		"langchain.agents.conversational_chat" -> "langchain.agents.conversational_chat.output_parser" [style="dotted"];
		"langchain.agents.conversational_chat" -> "langchain.agents.conversational_chat.prompt" [style="dotted"];
	}
	subgraph "cluster_lxml.includes.libxslt" {
		label="lxml.includes.libxslt";
	}
	subgraph "cluster_langchain.chains.api" {
		label="langchain.chains.api";
		"langchain.chains.api" -> "langchain.chains.api.open_meteo_docs" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.news_docs" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.tmdb_docs" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.podcast_docs" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.openapi" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.base" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.memorize" {
		label="langchain_community.tools.memorize";
		"langchain_community.tools.memorize" -> "langchain_community.tools.memorize.tool" [style="dotted"];
	}
	subgraph "cluster_openai.resources.vector_stores" {
		label="openai.resources.vector_stores";
		"openai.resources.vector_stores" -> "openai.resources.vector_stores.files" [style="dotted"];
		"openai.resources.vector_stores" -> "openai.resources.vector_stores.file_batches" [style="dotted"];
		"openai.resources.vector_stores" -> "openai.resources.vector_stores.vector_stores" [style="dotted"];
	}
	subgraph "cluster_anthropic.lib._extras" {
		label="anthropic.lib._extras";
		"anthropic.lib._extras" -> "anthropic.lib._extras._google_auth" [style="dotted"];
		"anthropic.lib._extras" -> "anthropic.lib._extras._common" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.prediction_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.prediction_service.transports";
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_neo4j._sync" {
		label="neo4j._sync";
		"neo4j._sync" -> "neo4j._sync.config" [style="dotted"];
		"neo4j._sync" -> "neo4j._sync.driver" [style="dotted"];
		"neo4j._sync" -> "neo4j._sync.work" [style="dotted"];
		"neo4j._sync" -> "neo4j._sync.io" [style="dotted"];
		"neo4j._sync" -> "neo4j._sync.home_db_cache" [style="dotted"];
		"neo4j._sync" -> "neo4j._sync.auth_management" [style="dotted"];
		"neo4j._sync" -> "neo4j._sync._debug" [style="dotted"];
		"neo4j._sync" -> "neo4j._sync.bookmark_manager" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.exact_match" {
		label="langchain.evaluation.exact_match";
		"langchain.evaluation.exact_match" -> "langchain.evaluation.exact_match.base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.vizier_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.vizier_service.transports";
		"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.metadata_service" {
		label="google.cloud.aiplatform_v1.services.metadata_service";
		"google.cloud.aiplatform_v1.services.metadata_service" -> "google.cloud.aiplatform_v1.services.metadata_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.metadata_service" -> "google.cloud.aiplatform_v1.services.metadata_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.metadata_service" -> "google.cloud.aiplatform_v1.services.metadata_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.metadata_service" -> "google.cloud.aiplatform_v1.services.metadata_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.bigquery.job" {
		label="google.cloud.bigquery.job";
		"google.cloud.bigquery.job" -> "google.cloud.bigquery.job.base" [style="dotted"];
		"google.cloud.bigquery.job" -> "google.cloud.bigquery.job.copy_" [style="dotted"];
		"google.cloud.bigquery.job" -> "google.cloud.bigquery.job.extract" [style="dotted"];
		"google.cloud.bigquery.job" -> "google.cloud.bigquery.job.load" [style="dotted"];
		"google.cloud.bigquery.job" -> "google.cloud.bigquery.job.query" [style="dotted"];
	}
	subgraph "cluster_distutils" {
		label="distutils";
		"distutils" -> "distutils.log" [style="dotted"];
		"distutils" -> "distutils.sysconfig" [style="dotted"];
		"distutils" -> "distutils.archive_util" [style="dotted"];
		"distutils" -> "distutils.ccompiler" [style="dotted"];
		"distutils" -> "distutils.core" [style="dotted"];
		"distutils" -> "distutils.dir_util" [style="dotted"];
		"distutils" -> "distutils.errors" [style="dotted"];
		"distutils" -> "distutils.msvc9compiler" [style="dotted"];
		"distutils" -> "distutils.util" [style="dotted"];
		"distutils" -> "distutils.dep_util" [style="dotted"];
		"distutils" -> "distutils.spawn" [style="dotted"];
		"distutils" -> "distutils.file_util" [style="dotted"];
		"distutils" -> "distutils.filelist" [style="dotted"];
		"distutils" -> "distutils.debug" [style="dotted"];
		"distutils" -> "distutils.dist" [style="dotted"];
		"distutils" -> "distutils.cmd" [style="dotted"];
		"distutils" -> "distutils.config" [style="dotted"];
		"distutils" -> "distutils.extension" [style="dotted"];
		"distutils" -> "distutils.text_file" [style="dotted"];
		"distutils" -> "distutils.fancy_getopt" [style="dotted"];
		"distutils" -> "distutils.command" [style="dotted"];
		"distutils" -> "distutils.versionpredicate" [style="dotted"];
		"distutils" -> "distutils.version" [style="dotted"];
		"distutils" -> "distutils._msvccompiler" [style="dotted"];
	}
	subgraph "cluster_lxml.includes" {
		label="lxml.includes";
		"lxml.includes" -> "lxml.includes.libxslt" [style="dotted"];
		"lxml.includes" -> "lxml.includes.libxml" [style="dotted"];
		"lxml.includes" -> "lxml.includes.libexslt" [style="dotted"];
		"lxml.includes" -> "lxml.includes.extlibs" [style="dotted"];
	}
	subgraph "cluster_pandas.io" {
		label="pandas.io";
		"pandas.io" -> "pandas.io.formats" [style="dotted"];
		"pandas.io" -> "pandas.io.json" [style="dotted"];
		"pandas.io" -> "pandas.io.stata" [style="dotted"];
		"pandas.io" -> "pandas.io.pytables" [style="dotted"];
		"pandas.io" -> "pandas.io.sql" [style="dotted"];
		"pandas.io" -> "pandas.io.clipboards" [style="dotted"];
		"pandas.io" -> "pandas.io.gbq" [style="dotted"];
		"pandas.io" -> "pandas.io.api" [style="dotted"];
		"pandas.io" -> "pandas.io.common" [style="dotted"];
		"pandas.io" -> "pandas.io._util" [style="dotted"];
		"pandas.io" -> "pandas.io.excel" [style="dotted"];
		"pandas.io" -> "pandas.io.parsers" [style="dotted"];
		"pandas.io" -> "pandas.io.pickle" [style="dotted"];
		"pandas.io" -> "pandas.io.clipboard" [style="dotted"];
		"pandas.io" -> "pandas.io.feather_format" [style="dotted"];
		"pandas.io" -> "pandas.io.parquet" [style="dotted"];
		"pandas.io" -> "pandas.io.orc" [style="dotted"];
		"pandas.io" -> "pandas.io.xml" [style="dotted"];
		"pandas.io" -> "pandas.io.sas" [style="dotted"];
		"pandas.io" -> "pandas.io.html" [style="dotted"];
		"pandas.io" -> "pandas.io.spss" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.tag_values" {
		label="google.cloud.resourcemanager_v3.services.tag_values";
		"google.cloud.resourcemanager_v3.services.tag_values" -> "google.cloud.resourcemanager_v3.services.tag_values.pagers" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_values" -> "google.cloud.resourcemanager_v3.services.tag_values.async_client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_values" -> "google.cloud.resourcemanager_v3.services.tag_values.client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_values" -> "google.cloud.resourcemanager_v3.services.tag_values.transports" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.text_service" {
		label="google.ai.generativelanguage_v1beta.services.text_service";
		"google.ai.generativelanguage_v1beta.services.text_service" -> "google.ai.generativelanguage_v1beta.services.text_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service" -> "google.ai.generativelanguage_v1beta.services.text_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service" -> "google.ai.generativelanguage_v1beta.services.text_service.transports" [style="dotted"];
	}
	subgraph "cluster_openai.types.uploads" {
		label="openai.types.uploads";
		"openai.types.uploads" -> "openai.types.uploads.upload_part" [style="dotted"];
		"openai.types.uploads" -> "openai.types.uploads.part_create_params" [style="dotted"];
	}
	subgraph "cluster_langchain_community.output_parsers" {
		label="langchain_community.output_parsers";
		"langchain_community.output_parsers" -> "langchain_community.output_parsers.rail_parser" [style="dotted"];
	}
	subgraph "cluster_unittest" {
		label="unittest";
		"unittest" -> "unittest.util" [style="dotted"];
		"unittest" -> "unittest.result" [style="dotted"];
		"unittest" -> "unittest.case" [style="dotted"];
		"unittest" -> "unittest.suite" [style="dotted"];
		"unittest" -> "unittest.loader" [style="dotted"];
		"unittest" -> "unittest.runner" [style="dotted"];
		"unittest" -> "unittest.main" [style="dotted"];
		"unittest" -> "unittest.signals" [style="dotted"];
		"unittest" -> "unittest.async_case" [style="dotted"];
		"unittest" -> "unittest._log" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.extension_execution_service" {
		label="google.cloud.aiplatform_v1beta1.services.extension_execution_service";
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_execution_service" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy" {
		label="sqlalchemy";
		"sqlalchemy" -> "sqlalchemy.util" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.exc" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.event" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.log" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.pool" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.dialects" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.future" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.schema" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.orm" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.engine" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.inspection" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.sql" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.types" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.cyextension" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.ext" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.connectors" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.prediction_service" {
		label="google.cloud.aiplatform_v1beta1.services.prediction_service";
		"google.cloud.aiplatform_v1beta1.services.prediction_service" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.prediction_service" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.prediction_service" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.job_service" {
		label="google.cloud.aiplatform_v1beta1.services.job_service";
		"google.cloud.aiplatform_v1beta1.services.job_service" -> "google.cloud.aiplatform_v1beta1.services.job_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.job_service" -> "google.cloud.aiplatform_v1beta1.services.job_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.job_service" -> "google.cloud.aiplatform_v1beta1.services.job_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.job_service" -> "google.cloud.aiplatform_v1beta1.services.job_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.scoring" {
		label="langchain.evaluation.scoring";
		"langchain.evaluation.scoring" -> "langchain.evaluation.scoring.eval_chain" [style="dotted"];
		"langchain.evaluation.scoring" -> "langchain.evaluation.scoring.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain_core.load" {
		label="langchain_core.load";
		"langchain_core.load" -> "langchain_core.load.load" [style="dotted"];
		"langchain_core.load" -> "langchain_core.load.dump" [style="dotted"];
		"langchain_core.load" -> "langchain_core.load.serializable" [style="dotted"];
		"langchain_core.load" -> "langchain_core.load.mapping" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.output_parsers" {
		label="langchain.agents.output_parsers";
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.json" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.openai_functions" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.react_json_single_input" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.react_single_input" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.self_ask" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.tools" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.xml" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.openai_tools" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.backends.openssl" {
		label="cryptography.hazmat.backends.openssl";
		"cryptography.hazmat.backends.openssl" -> "cryptography.hazmat.backends.openssl.backend" [style="dotted"];
	}
	subgraph "cluster_importlib_metadata.compat" {
		label="importlib_metadata.compat";
		"importlib_metadata.compat" -> "importlib_metadata.compat.py39" [style="dotted"];
		"importlib_metadata.compat" -> "importlib_metadata.compat.py311" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.powerbi" {
		label="langchain_community.agent_toolkits.powerbi";
		"langchain_community.agent_toolkits.powerbi" -> "langchain_community.agent_toolkits.powerbi.base" [style="dotted"];
		"langchain_community.agent_toolkits.powerbi" -> "langchain_community.agent_toolkits.powerbi.chat_base" [style="dotted"];
		"langchain_community.agent_toolkits.powerbi" -> "langchain_community.agent_toolkits.powerbi.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.powerbi" -> "langchain_community.agent_toolkits.powerbi.prompt" [style="dotted"];
	}
	subgraph "cluster_google.generativeai" {
		label="google.generativeai";
		"google.generativeai" -> "google.generativeai.version" [style="dotted"];
		"google.generativeai" -> "google.generativeai.protos" [style="dotted"];
		"google.generativeai" -> "google.generativeai.string_utils" [style="dotted"];
		"google.generativeai" -> "google.generativeai.caching" [style="dotted"];
		"google.generativeai" -> "google.generativeai.types" [style="dotted"];
		"google.generativeai" -> "google.generativeai.client" [style="dotted"];
		"google.generativeai" -> "google.generativeai.embedding" [style="dotted"];
		"google.generativeai" -> "google.generativeai.files" [style="dotted"];
		"google.generativeai" -> "google.generativeai.generative_models" [style="dotted"];
		"google.generativeai" -> "google.generativeai.operations" [style="dotted"];
		"google.generativeai" -> "google.generativeai.models" [style="dotted"];
		"google.generativeai" -> "google.generativeai.utils" [style="dotted"];
		"google.generativeai" -> "google.generativeai.responder" [style="dotted"];
	}
	subgraph "cluster_neo4j._codec.hydration._interface" {
		label="neo4j._codec.hydration._interface";
	}
	subgraph "cluster_google.cloud.aiplatform.matching_engine" {
		label="google.cloud.aiplatform.matching_engine";
		"google.cloud.aiplatform.matching_engine" -> "google.cloud.aiplatform.matching_engine.matching_engine_index_config" [style="dotted"];
		"google.cloud.aiplatform.matching_engine" -> "google.cloud.aiplatform.matching_engine.matching_engine_index" [style="dotted"];
		"google.cloud.aiplatform.matching_engine" -> "google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint" [style="dotted"];
		"google.cloud.aiplatform.matching_engine" -> "google.cloud.aiplatform.matching_engine._protos" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform._mlflow_plugin" {
		label="google.cloud.aiplatform._mlflow_plugin";
		"google.cloud.aiplatform._mlflow_plugin" -> "google.cloud.aiplatform._mlflow_plugin._vertex_mlflow_tracking" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.datasets" {
		label="google.cloud.aiplatform.datasets";
		"google.cloud.aiplatform.datasets" -> "google.cloud.aiplatform.datasets._datasources" [style="dotted"];
		"google.cloud.aiplatform.datasets" -> "google.cloud.aiplatform.datasets.dataset" [style="dotted"];
		"google.cloud.aiplatform.datasets" -> "google.cloud.aiplatform.datasets.column_names_dataset" [style="dotted"];
		"google.cloud.aiplatform.datasets" -> "google.cloud.aiplatform.datasets.tabular_dataset" [style="dotted"];
		"google.cloud.aiplatform.datasets" -> "google.cloud.aiplatform.datasets.time_series_dataset" [style="dotted"];
		"google.cloud.aiplatform.datasets" -> "google.cloud.aiplatform.datasets.image_dataset" [style="dotted"];
		"google.cloud.aiplatform.datasets" -> "google.cloud.aiplatform.datasets.text_dataset" [style="dotted"];
		"google.cloud.aiplatform.datasets" -> "google.cloud.aiplatform.datasets.video_dataset" [style="dotted"];
	}
	subgraph "cluster_pandas.core.indexes" {
		label="pandas.core.indexes";
		"pandas.core.indexes" -> "pandas.core.indexes.base" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.api" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.datetimes" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.timedeltas" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.multi" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.frozen" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.datetimelike" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.extension" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.range" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.category" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.interval" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.period" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.accessors" [style="dotted"];
	}
	subgraph "cluster_numpy.typing" {
		label="numpy.typing";
	}
	subgraph "cluster_langchain_core.messages" {
		label="langchain_core.messages";
		"langchain_core.messages" -> "langchain_core.messages.ai" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.base" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.chat" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.content_blocks" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.function" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.human" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.modifier" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.system" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.tool" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.utils" [style="dotted"];
	}
	subgraph "cluster_pandas._config" {
		label="pandas._config";
		"pandas._config" -> "pandas._config.config" [style="dotted"];
		"pandas._config" -> "pandas._config.dates" [style="dotted"];
		"pandas._config" -> "pandas._config.display" [style="dotted"];
		"pandas._config" -> "pandas._config.localization" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.feature_online_store_service" {
		label="google.cloud.aiplatform_v1.services.feature_online_store_service";
		"google.cloud.aiplatform_v1.services.feature_online_store_service" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_service" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_service" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.transports" [style="dotted"];
	}
	subgraph "cluster_fsspec" {
		label="fsspec";
		"fsspec" -> "fsspec.caching" [style="dotted"];
		"fsspec" -> "fsspec._version" [style="dotted"];
		"fsspec" -> "fsspec.callbacks" [style="dotted"];
		"fsspec" -> "fsspec.compression" [style="dotted"];
		"fsspec" -> "fsspec.core" [style="dotted"];
		"fsspec" -> "fsspec.exceptions" [style="dotted"];
		"fsspec" -> "fsspec.mapping" [style="dotted"];
		"fsspec" -> "fsspec.registry" [style="dotted"];
		"fsspec" -> "fsspec.spec" [style="dotted"];
		"fsspec" -> "fsspec.archive" [style="dotted"];
		"fsspec" -> "fsspec.asyn" [style="dotted"];
		"fsspec" -> "fsspec.config" [style="dotted"];
		"fsspec" -> "fsspec.conftest" [style="dotted"];
		"fsspec" -> "fsspec.dircache" [style="dotted"];
		"fsspec" -> "fsspec.fuse" [style="dotted"];
		"fsspec" -> "fsspec.generic" [style="dotted"];
		"fsspec" -> "fsspec.gui" [style="dotted"];
		"fsspec" -> "fsspec.implementations" [style="dotted"];
		"fsspec" -> "fsspec.json" [style="dotted"];
		"fsspec" -> "fsspec.parquet" [style="dotted"];
		"fsspec" -> "fsspec.transaction" [style="dotted"];
		"fsspec" -> "fsspec.utils" [style="dotted"];
	}
	subgraph "cluster_langchain_community.adapters" {
		label="langchain_community.adapters";
		"langchain_community.adapters" -> "langchain_community.adapters.openai" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.session_service" {
		label="google.cloud.aiplatform_v1beta1.services.session_service";
		"google.cloud.aiplatform_v1beta1.services.session_service" -> "google.cloud.aiplatform_v1beta1.services.session_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.session_service" -> "google.cloud.aiplatform_v1beta1.services.session_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.session_service" -> "google.cloud.aiplatform_v1beta1.services.session_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.session_service" -> "google.cloud.aiplatform_v1beta1.services.session_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.tavily_search" {
		label="langchain_community.tools.tavily_search";
		"langchain_community.tools.tavily_search" -> "langchain_community.tools.tavily_search.tool" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec" {
		label="pyasn1.codec";
		"pyasn1.codec" -> "pyasn1.codec.ber" [style="dotted"];
		"pyasn1.codec" -> "pyasn1.codec.streaming" [style="dotted"];
		"pyasn1.codec" -> "pyasn1.codec.cer" [style="dotted"];
		"pyasn1.codec" -> "pyasn1.codec.der" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.reasoning_engine_service" {
		label="google.cloud.aiplatform_v1.services.reasoning_engine_service";
		"google.cloud.aiplatform_v1.services.reasoning_engine_service" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_service" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_service" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_service" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.model_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.model_service.transports";
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.session_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.session_service.transports";
		"google.cloud.aiplatform_v1beta1.services.session_service.transports" -> "google.cloud.aiplatform_v1beta1.services.session_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.session_service.transports" -> "google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.session_service.transports" -> "google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.session_service.transports" -> "google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.session_service.transports" -> "google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.session_service.transports" -> "google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.index_service" {
		label="google.cloud.aiplatform_v1beta1.services.index_service";
		"google.cloud.aiplatform_v1beta1.services.index_service" -> "google.cloud.aiplatform_v1beta1.services.index_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_service" -> "google.cloud.aiplatform_v1beta1.services.index_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_service" -> "google.cloud.aiplatform_v1beta1.services.index_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_service" -> "google.cloud.aiplatform_v1beta1.services.index_service.transports" [style="dotted"];
	}
	subgraph "cluster_pypdfium2.internal" {
		label="pypdfium2.internal";
		"pypdfium2.internal" -> "pypdfium2.internal.bases" [style="dotted"];
		"pypdfium2.internal" -> "pypdfium2.internal.consts" [style="dotted"];
		"pypdfium2.internal" -> "pypdfium2.internal.utils" [style="dotted"];
	}
	subgraph "cluster_pandas.api.types" {
		label="pandas.api.types";
	}
	subgraph "cluster_langchain.agents.structured_chat" {
		label="langchain.agents.structured_chat";
		"langchain.agents.structured_chat" -> "langchain.agents.structured_chat.base" [style="dotted"];
		"langchain.agents.structured_chat" -> "langchain.agents.structured_chat.output_parser" [style="dotted"];
		"langchain.agents.structured_chat" -> "langchain.agents.structured_chat.prompt" [style="dotted"];
	}
	subgraph "cluster_google.ai" {
		label="google.ai";
		"google.ai" -> "google.ai.generativelanguage" [style="dotted"];
		"google.ai" -> "google.ai.generativelanguage_v1beta" [style="dotted"];
	}
	subgraph "cluster_httpx" {
		label="httpx";
		"httpx" -> "httpx.__version__" [style="dotted"];
		"httpx" -> "httpx._api" [style="dotted"];
		"httpx" -> "httpx._auth" [style="dotted"];
		"httpx" -> "httpx._client" [style="dotted"];
		"httpx" -> "httpx._config" [style="dotted"];
		"httpx" -> "httpx._content" [style="dotted"];
		"httpx" -> "httpx._exceptions" [style="dotted"];
		"httpx" -> "httpx._models" [style="dotted"];
		"httpx" -> "httpx._status_codes" [style="dotted"];
		"httpx" -> "httpx._transports" [style="dotted"];
		"httpx" -> "httpx._types" [style="dotted"];
		"httpx" -> "httpx._urls" [style="dotted"];
		"httpx" -> "httpx._main" [style="dotted"];
		"httpx" -> "httpx._urlparse" [style="dotted"];
		"httpx" -> "httpx._utils" [style="dotted"];
		"httpx" -> "httpx._decoders" [style="dotted"];
		"httpx" -> "httpx._multipart" [style="dotted"];
	}
	subgraph "cluster_langsmith.evaluation.integrations" {
		label="langsmith.evaluation.integrations";
		"langsmith.evaluation.integrations" -> "langsmith.evaluation.integrations._langchain" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.mojeek_search" {
		label="langchain_community.tools.mojeek_search";
		"langchain_community.tools.mojeek_search" -> "langchain_community.tools.mojeek_search.tool" [style="dotted"];
	}
	subgraph "cluster_pandas.core.dtypes" {
		label="pandas.core.dtypes";
		"pandas.core.dtypes" -> "pandas.core.dtypes.dtypes" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.common" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.missing" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.generic" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.cast" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.inference" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.concat" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.astype" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.base" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.api" [style="dotted"];
	}
	subgraph "cluster_google.generativeai.types" {
		label="google.generativeai.types";
		"google.generativeai.types" -> "google.generativeai.types.citation_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.file_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.content_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.generation_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.helper_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.permission_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.model_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.safety_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.caching_types" [style="dotted"];
		"google.generativeai.types" -> "google.generativeai.types.text_types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.bigquery.dbapi" {
		label="google.cloud.bigquery.dbapi";
		"google.cloud.bigquery.dbapi" -> "google.cloud.bigquery.dbapi.exceptions" [style="dotted"];
		"google.cloud.bigquery.dbapi" -> "google.cloud.bigquery.dbapi._helpers" [style="dotted"];
		"google.cloud.bigquery.dbapi" -> "google.cloud.bigquery.dbapi.cursor" [style="dotted"];
		"google.cloud.bigquery.dbapi" -> "google.cloud.bigquery.dbapi.connection" [style="dotted"];
		"google.cloud.bigquery.dbapi" -> "google.cloud.bigquery.dbapi.types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.evaluation_service" {
		label="google.cloud.aiplatform_v1.services.evaluation_service";
		"google.cloud.aiplatform_v1.services.evaluation_service" -> "google.cloud.aiplatform_v1.services.evaluation_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.evaluation_service" -> "google.cloud.aiplatform_v1.services.evaluation_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.evaluation_service" -> "google.cloud.aiplatform_v1.services.evaluation_service.transports" [style="dotted"];
	}
	subgraph "cluster_pandas.core.array_algos" {
		label="pandas.core.array_algos";
		"pandas.core.array_algos" -> "pandas.core.array_algos.datetimelike_accumulations" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.masked_accumulations" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.masked_reductions" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.putmask" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.quantile" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.replace" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.transforms" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.take" [style="dotted"];
	}
	subgraph "cluster_pandas.arrays" {
		label="pandas.arrays";
	}
	subgraph "cluster_anthropic.resources.messages" {
		label="anthropic.resources.messages";
		"anthropic.resources.messages" -> "anthropic.resources.messages.batches" [style="dotted"];
		"anthropic.resources.messages" -> "anthropic.resources.messages.messages" [style="dotted"];
	}
	subgraph "cluster_pypdf._crypt_providers" {
		label="pypdf._crypt_providers";
		"pypdf._crypt_providers" -> "pypdf._crypt_providers._base" [style="dotted"];
		"pypdf._crypt_providers" -> "pypdf._crypt_providers._cryptography" [style="dotted"];
		"pypdf._crypt_providers" -> "pypdf._crypt_providers._pycryptodome" [style="dotted"];
		"pypdf._crypt_providers" -> "pypdf._crypt_providers._fallback" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.metadata_service.transports" {
		label="google.cloud.aiplatform_v1.services.metadata_service.transports";
		"google.cloud.aiplatform_v1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1.services.metadata_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1.services.metadata_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1.services.metadata_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.slack" {
		label="langchain_community.agent_toolkits.slack";
		"langchain_community.agent_toolkits.slack" -> "langchain_community.agent_toolkits.slack.toolkit" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.model_evaluation" {
		label="google.cloud.aiplatform.model_evaluation";
		"google.cloud.aiplatform.model_evaluation" -> "google.cloud.aiplatform.model_evaluation.model_evaluation" [style="dotted"];
		"google.cloud.aiplatform.model_evaluation" -> "google.cloud.aiplatform.model_evaluation.model_evaluation_job" [style="dotted"];
	}
	subgraph "cluster_grpc._cython" {
		label="grpc._cython";
		"grpc._cython" -> "grpc._cython.cygrpc" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.types" {
		label="google.cloud.aiplatform_v1.types";
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.accelerator_type" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.user_action_reference" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.annotation" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.annotation_spec" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.api_auth" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.artifact" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.completion_stats" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.encryption_spec" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.explanation_metadata" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.io" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.explanation" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.job_state" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.reservation_affinity" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.machine_resources" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.manual_batch_tuning_parameters" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.deployed_model_ref" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.env_var" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.model" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.unmanaged_container_model" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.batch_prediction_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.openapi" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.tool" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.vertex_rag_data" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.content" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.cached_content" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.context" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.custom_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.data_item" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.data_labeling_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.saved_query" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.dataset" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.dataset_version" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.operation" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.dataset_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.deployed_index_ref" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.deployment_resource_pool" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.service_networking" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.endpoint" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.deployment_resource_pool_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.endpoint_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.featurestore_monitoring" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.entity_type" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.evaluated_annotation" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.evaluation_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.event" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.execution" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_monitoring_stats" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_group" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_online_store" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_view" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_view_sync" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_online_store_admin_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_selector" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.types" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.featurestore_online_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_online_store_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.feature_registry_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.featurestore" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.featurestore_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.gen_ai_cache_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.tuning_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.genai_tuning_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.study" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.hyperparameter_tuning_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.index" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.index_endpoint" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.index_endpoint_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.index_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.model_monitoring" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.model_deployment_monitoring_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.nas_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.job_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.lineage_subgraph" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.llm_utility_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.match_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.metadata_schema" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.metadata_store" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.metadata_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.migratable_resource" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.migration_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.model_evaluation" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.model_evaluation_slice" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.model_garden_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.model_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.network_spec" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.notebook_euc_config" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.notebook_execution_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.notebook_idle_shutdown_config" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.notebook_runtime_template_ref" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.notebook_software_config" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.notebook_runtime" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.notebook_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.persistent_resource" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.persistent_resource_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.pipeline_failure_policy" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.pipeline_state" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.value" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.pipeline_job" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.training_pipeline" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.pipeline_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.prediction_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.publisher_model" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.reasoning_engine" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.reasoning_engine_execution_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.reasoning_engine_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.schedule" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.schedule_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.specialist_pool" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.specialist_pool_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.tensorboard" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.tensorboard_time_series" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.tensorboard_data" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.tensorboard_experiment" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.tensorboard_run" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.tensorboard_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.vertex_rag_data_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.vertex_rag_service" [style="dotted"];
		"google.cloud.aiplatform_v1.types" -> "google.cloud.aiplatform_v1.types.vizier_service" [style="dotted"];
	}
	subgraph "cluster_neo4j._async_compat.shims" {
		label="neo4j._async_compat.shims";
	}
	subgraph "cluster_langchain_community.agent_toolkits.openapi" {
		label="langchain_community.agent_toolkits.openapi";
		"langchain_community.agent_toolkits.openapi" -> "langchain_community.agent_toolkits.openapi.base" [style="dotted"];
		"langchain_community.agent_toolkits.openapi" -> "langchain_community.agent_toolkits.openapi.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.openapi" -> "langchain_community.agent_toolkits.openapi.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain.embeddings" {
		label="langchain.embeddings";
		"langchain.embeddings" -> "langchain.embeddings.base" [style="dotted"];
		"langchain.embeddings" -> "langchain.embeddings.cache" [style="dotted"];
	}
	subgraph "cluster_langchain_core.document_loaders" {
		label="langchain_core.document_loaders";
		"langchain_core.document_loaders" -> "langchain_core.document_loaders.base" [style="dotted"];
		"langchain_core.document_loaders" -> "langchain_core.document_loaders.blob_loaders" [style="dotted"];
		"langchain_core.document_loaders" -> "langchain_core.document_loaders.langsmith" [style="dotted"];
	}
	subgraph "cluster_pkg_resources._vendor" {
		label="pkg_resources._vendor";
		"pkg_resources._vendor" -> "pkg_resources._vendor.appdirs" [style="dotted"];
		"pkg_resources._vendor" -> "pkg_resources._vendor.pyparsing" [style="dotted"];
		"pkg_resources._vendor" -> "pkg_resources._vendor.packaging" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.ext" {
		label="sqlalchemy.ext";
		"sqlalchemy.ext" -> "sqlalchemy.ext.asyncio" [style="dotted"];
		"sqlalchemy.ext" -> "sqlalchemy.ext.baked" [style="dotted"];
		"sqlalchemy.ext" -> "sqlalchemy.ext.compiler" [style="dotted"];
		"sqlalchemy.ext" -> "sqlalchemy.ext.declarative" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.notebook_service.transports" {
		label="google.cloud.aiplatform_v1.services.notebook_service.transports";
		"google.cloud.aiplatform_v1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1.services.notebook_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1.services.notebook_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1.services.notebook_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_aiohappyeyeballs" {
		label="aiohappyeyeballs";
		"aiohappyeyeballs" -> "aiohappyeyeballs._staggered" [style="dotted"];
		"aiohappyeyeballs" -> "aiohappyeyeballs.impl" [style="dotted"];
		"aiohappyeyeballs" -> "aiohappyeyeballs.types" [style="dotted"];
		"aiohappyeyeballs" -> "aiohappyeyeballs.utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports";
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.ainetwork" {
		label="langchain_community.agent_toolkits.ainetwork";
		"langchain_community.agent_toolkits.ainetwork" -> "langchain_community.agent_toolkits.ainetwork.toolkit" [style="dotted"];
	}
	subgraph "cluster_requests" {
		label="requests";
		"requests" -> "requests.exceptions" [style="dotted"];
		"requests" -> "requests.packages" [style="dotted"];
		"requests" -> "requests.certs" [style="dotted"];
		"requests" -> "requests.utils" [style="dotted"];
		"requests" -> "requests.__version__" [style="dotted"];
		"requests" -> "requests.sessions" [style="dotted"];
		"requests" -> "requests.api" [style="dotted"];
		"requests" -> "requests.models" [style="dotted"];
		"requests" -> "requests.status_codes" [style="dotted"];
		"requests" -> "requests.structures" [style="dotted"];
		"requests" -> "requests.compat" [style="dotted"];
		"requests" -> "requests._internal_utils" [style="dotted"];
		"requests" -> "requests.auth" [style="dotted"];
		"requests" -> "requests.cookies" [style="dotted"];
		"requests" -> "requests.hooks" [style="dotted"];
		"requests" -> "requests.adapters" [style="dotted"];
	}
	subgraph "cluster_zipp" {
		label="zipp";
		"zipp" -> "zipp.glob" [style="dotted"];
		"zipp" -> "zipp._functools" [style="dotted"];
		"zipp" -> "zipp.compat" [style="dotted"];
	}
	subgraph "cluster_encodings" {
		label="encodings";
		"encodings" -> "encodings.aliases" [style="dotted"];
		"encodings" -> "encodings.mbcs" [style="dotted"];
		"encodings" -> "encodings.cp437" [style="dotted"];
		"encodings" -> "encodings.ascii" [style="dotted"];
		"encodings" -> "encodings.base64_codec" [style="dotted"];
		"encodings" -> "encodings.big5" [style="dotted"];
		"encodings" -> "encodings.big5hkscs" [style="dotted"];
		"encodings" -> "encodings.bz2_codec" [style="dotted"];
		"encodings" -> "encodings.charmap" [style="dotted"];
		"encodings" -> "encodings.cp037" [style="dotted"];
		"encodings" -> "encodings.cp1006" [style="dotted"];
		"encodings" -> "encodings.cp1026" [style="dotted"];
		"encodings" -> "encodings.cp1125" [style="dotted"];
		"encodings" -> "encodings.cp1140" [style="dotted"];
		"encodings" -> "encodings.cp1250" [style="dotted"];
		"encodings" -> "encodings.cp1251" [style="dotted"];
		"encodings" -> "encodings.cp1252" [style="dotted"];
		"encodings" -> "encodings.cp1253" [style="dotted"];
		"encodings" -> "encodings.cp1254" [style="dotted"];
		"encodings" -> "encodings.cp1255" [style="dotted"];
		"encodings" -> "encodings.cp1256" [style="dotted"];
		"encodings" -> "encodings.cp1257" [style="dotted"];
		"encodings" -> "encodings.cp1258" [style="dotted"];
		"encodings" -> "encodings.cp273" [style="dotted"];
		"encodings" -> "encodings.cp424" [style="dotted"];
		"encodings" -> "encodings.cp500" [style="dotted"];
		"encodings" -> "encodings.cp720" [style="dotted"];
		"encodings" -> "encodings.cp737" [style="dotted"];
		"encodings" -> "encodings.cp775" [style="dotted"];
		"encodings" -> "encodings.cp850" [style="dotted"];
		"encodings" -> "encodings.cp852" [style="dotted"];
		"encodings" -> "encodings.cp855" [style="dotted"];
		"encodings" -> "encodings.cp856" [style="dotted"];
		"encodings" -> "encodings.cp857" [style="dotted"];
		"encodings" -> "encodings.cp858" [style="dotted"];
		"encodings" -> "encodings.cp860" [style="dotted"];
		"encodings" -> "encodings.cp861" [style="dotted"];
		"encodings" -> "encodings.cp862" [style="dotted"];
		"encodings" -> "encodings.cp863" [style="dotted"];
		"encodings" -> "encodings.cp864" [style="dotted"];
		"encodings" -> "encodings.cp865" [style="dotted"];
		"encodings" -> "encodings.cp866" [style="dotted"];
		"encodings" -> "encodings.cp869" [style="dotted"];
		"encodings" -> "encodings.cp874" [style="dotted"];
		"encodings" -> "encodings.cp875" [style="dotted"];
		"encodings" -> "encodings.cp932" [style="dotted"];
		"encodings" -> "encodings.cp949" [style="dotted"];
		"encodings" -> "encodings.cp950" [style="dotted"];
		"encodings" -> "encodings.euc_jis_2004" [style="dotted"];
		"encodings" -> "encodings.euc_jisx0213" [style="dotted"];
		"encodings" -> "encodings.euc_jp" [style="dotted"];
		"encodings" -> "encodings.euc_kr" [style="dotted"];
		"encodings" -> "encodings.gb18030" [style="dotted"];
		"encodings" -> "encodings.gb2312" [style="dotted"];
		"encodings" -> "encodings.gbk" [style="dotted"];
		"encodings" -> "encodings.hex_codec" [style="dotted"];
		"encodings" -> "encodings.hp_roman8" [style="dotted"];
		"encodings" -> "encodings.hz" [style="dotted"];
		"encodings" -> "encodings.idna" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_1" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2004" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_3" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_ext" [style="dotted"];
		"encodings" -> "encodings.iso2022_kr" [style="dotted"];
		"encodings" -> "encodings.iso8859_1" [style="dotted"];
		"encodings" -> "encodings.iso8859_10" [style="dotted"];
		"encodings" -> "encodings.iso8859_11" [style="dotted"];
		"encodings" -> "encodings.iso8859_13" [style="dotted"];
		"encodings" -> "encodings.iso8859_14" [style="dotted"];
		"encodings" -> "encodings.iso8859_15" [style="dotted"];
		"encodings" -> "encodings.iso8859_16" [style="dotted"];
		"encodings" -> "encodings.iso8859_2" [style="dotted"];
		"encodings" -> "encodings.iso8859_3" [style="dotted"];
		"encodings" -> "encodings.iso8859_4" [style="dotted"];
		"encodings" -> "encodings.iso8859_5" [style="dotted"];
		"encodings" -> "encodings.iso8859_6" [style="dotted"];
		"encodings" -> "encodings.iso8859_7" [style="dotted"];
		"encodings" -> "encodings.iso8859_8" [style="dotted"];
		"encodings" -> "encodings.iso8859_9" [style="dotted"];
		"encodings" -> "encodings.johab" [style="dotted"];
		"encodings" -> "encodings.koi8_r" [style="dotted"];
		"encodings" -> "encodings.koi8_t" [style="dotted"];
		"encodings" -> "encodings.koi8_u" [style="dotted"];
		"encodings" -> "encodings.kz1048" [style="dotted"];
		"encodings" -> "encodings.latin_1" [style="dotted"];
		"encodings" -> "encodings.mac_arabic" [style="dotted"];
		"encodings" -> "encodings.mac_croatian" [style="dotted"];
		"encodings" -> "encodings.mac_cyrillic" [style="dotted"];
		"encodings" -> "encodings.mac_farsi" [style="dotted"];
		"encodings" -> "encodings.mac_greek" [style="dotted"];
		"encodings" -> "encodings.mac_iceland" [style="dotted"];
		"encodings" -> "encodings.mac_latin2" [style="dotted"];
		"encodings" -> "encodings.mac_roman" [style="dotted"];
		"encodings" -> "encodings.mac_romanian" [style="dotted"];
		"encodings" -> "encodings.mac_turkish" [style="dotted"];
		"encodings" -> "encodings.oem" [style="dotted"];
		"encodings" -> "encodings.palmos" [style="dotted"];
		"encodings" -> "encodings.ptcp154" [style="dotted"];
		"encodings" -> "encodings.punycode" [style="dotted"];
		"encodings" -> "encodings.quopri_codec" [style="dotted"];
		"encodings" -> "encodings.raw_unicode_escape" [style="dotted"];
		"encodings" -> "encodings.rot_13" [style="dotted"];
		"encodings" -> "encodings.shift_jis" [style="dotted"];
		"encodings" -> "encodings.shift_jis_2004" [style="dotted"];
		"encodings" -> "encodings.shift_jisx0213" [style="dotted"];
		"encodings" -> "encodings.tis_620" [style="dotted"];
		"encodings" -> "encodings.undefined" [style="dotted"];
		"encodings" -> "encodings.unicode_escape" [style="dotted"];
		"encodings" -> "encodings.utf_16" [style="dotted"];
		"encodings" -> "encodings.utf_16_be" [style="dotted"];
		"encodings" -> "encodings.utf_16_le" [style="dotted"];
		"encodings" -> "encodings.utf_32" [style="dotted"];
		"encodings" -> "encodings.utf_32_be" [style="dotted"];
		"encodings" -> "encodings.utf_32_le" [style="dotted"];
		"encodings" -> "encodings.utf_7" [style="dotted"];
		"encodings" -> "encodings.utf_8" [style="dotted"];
		"encodings" -> "encodings.utf_8_sig" [style="dotted"];
		"encodings" -> "encodings.uu_codec" [style="dotted"];
		"encodings" -> "encodings.zlib_codec" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.utils" {
		label="google.cloud.aiplatform.utils";
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.console_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.source_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.worker_spec_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.resource_manager_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.gcs_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils._explanation_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.rest_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils._ipython_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.path_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.prediction_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.pipeline_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.yaml_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.autologging_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.featurestore_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.column_transformations_utils" [style="dotted"];
		"google.cloud.aiplatform.utils" -> "google.cloud.aiplatform.utils.enhanced_library" [style="dotted"];
	}
	subgraph "cluster_langchain.retrievers.self_query" {
		label="langchain.retrievers.self_query";
		"langchain.retrievers.self_query" -> "langchain.retrievers.self_query.tencentvectordb" [style="dotted"];
		"langchain.retrievers.self_query" -> "langchain.retrievers.self_query.base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.organizations" {
		label="google.cloud.resourcemanager_v3.services.organizations";
		"google.cloud.resourcemanager_v3.services.organizations" -> "google.cloud.resourcemanager_v3.services.organizations.pagers" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.organizations" -> "google.cloud.resourcemanager_v3.services.organizations.async_client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.organizations" -> "google.cloud.resourcemanager_v3.services.organizations.client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.organizations" -> "google.cloud.resourcemanager_v3.services.organizations.transports" [style="dotted"];
	}
	subgraph "cluster_google.auth.transport" {
		label="google.auth.transport";
		"google.auth.transport" -> "google.auth.transport._custom_tls_signer" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport.requests" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport.mtls" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport._http_client" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport._mtls_helper" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport.grpc" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_search" {
		label="langchain_community.tools.google_search";
		"langchain_community.tools.google_search" -> "langchain_community.tools.google_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.query_constructors" {
		label="langchain_community.query_constructors";
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.tencentvectordb" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.astradb" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.chroma" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.dashvector" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.databricks_vector_search" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.deeplake" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.dingo" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.elasticsearch" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.milvus" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.mongodb_atlas" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.myscale" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.neo4j" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.opensearch" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.pgvector" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.pinecone" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.qdrant" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.redis" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.supabase" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.timescalevector" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.vectara" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.weaviate" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.hanavector" [style="dotted"];
	}
	subgraph "cluster_cffi" {
		label="cffi";
		"cffi" -> "cffi.model" [style="dotted"];
		"cffi" -> "cffi._pycparser" [style="dotted"];
		"cffi" -> "cffi.cparser" [style="dotted"];
		"cffi" -> "cffi.ffiplatform" [style="dotted"];
		"cffi" -> "cffi.vengine_gen" [style="dotted"];
		"cffi" -> "cffi._imp_emulation" [style="dotted"];
		"cffi" -> "cffi.vengine_cpy" [style="dotted"];
		"cffi" -> "cffi.pkgconfig" [style="dotted"];
		"cffi" -> "cffi.api" [style="dotted"];
		"cffi" -> "cffi.error" [style="dotted"];
		"cffi" -> "cffi.lock" [style="dotted"];
		"cffi" -> "cffi.verifier" [style="dotted"];
		"cffi" -> "cffi._shimmed_dist_utils" [style="dotted"];
		"cffi" -> "cffi.recompiler" [style="dotted"];
		"cffi" -> "cffi.cffi_opcode" [style="dotted"];
		"cffi" -> "cffi.commontypes" [style="dotted"];
	}
	subgraph "cluster_google._upb" {
		label="google._upb";
		"google._upb" -> "google._upb._message" [style="dotted"];
	}
	subgraph "cluster_pyasn1_modules" {
		label="pyasn1_modules";
		"pyasn1_modules" -> "pyasn1_modules.pem" [style="dotted"];
		"pyasn1_modules" -> "pyasn1_modules.rfc2251" [style="dotted"];
		"pyasn1_modules" -> "pyasn1_modules.rfc2459" [style="dotted"];
		"pyasn1_modules" -> "pyasn1_modules.rfc5208" [style="dotted"];
	}
	subgraph "cluster_pycparser" {
		label="pycparser";
		"pycparser" -> "pycparser.c_ast" [style="dotted"];
		"pycparser" -> "pycparser.c_parser" [style="dotted"];
		"pycparser" -> "pycparser.lextab" [style="dotted"];
		"pycparser" -> "pycparser.yacctab" [style="dotted"];
		"pycparser" -> "pycparser.ply" [style="dotted"];
		"pycparser" -> "pycparser.c_lexer" [style="dotted"];
		"pycparser" -> "pycparser.plyparser" [style="dotted"];
		"pycparser" -> "pycparser.ast_transforms" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.reddit_search" {
		label="langchain_community.tools.reddit_search";
		"langchain_community.tools.reddit_search" -> "langchain_community.tools.reddit_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chains.pebblo_retrieval" {
		label="langchain_community.chains.pebblo_retrieval";
		"langchain_community.chains.pebblo_retrieval" -> "langchain_community.chains.pebblo_retrieval.base" [style="dotted"];
		"langchain_community.chains.pebblo_retrieval" -> "langchain_community.chains.pebblo_retrieval.enforcement_filters" [style="dotted"];
		"langchain_community.chains.pebblo_retrieval" -> "langchain_community.chains.pebblo_retrieval.models" [style="dotted"];
		"langchain_community.chains.pebblo_retrieval" -> "langchain_community.chains.pebblo_retrieval.utilities" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.match_service.transports" {
		label="google.cloud.aiplatform_v1.services.match_service.transports";
		"google.cloud.aiplatform_v1.services.match_service.transports" -> "google.cloud.aiplatform_v1.services.match_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.match_service.transports" -> "google.cloud.aiplatform_v1.services.match_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.match_service.transports" -> "google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.match_service.transports" -> "google.cloud.aiplatform_v1.services.match_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.match_service.transports" -> "google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.match_service.transports" -> "google.cloud.aiplatform_v1.services.match_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.auth" {
		label="google.auth";
		"google.auth" -> "google.auth.version" [style="dotted"];
		"google.auth" -> "google.auth.environment_vars" [style="dotted"];
		"google.auth" -> "google.auth.exceptions" [style="dotted"];
		"google.auth" -> "google.auth._helpers" [style="dotted"];
		"google.auth" -> "google.auth._cloud_sdk" [style="dotted"];
		"google.auth" -> "google.auth.metrics" [style="dotted"];
		"google.auth" -> "google.auth.crypt" [style="dotted"];
		"google.auth" -> "google.auth.iam" [style="dotted"];
		"google.auth" -> "google.auth._service_account_info" [style="dotted"];
		"google.auth" -> "google.auth.jwt" [style="dotted"];
		"google.auth" -> "google.auth.compute_engine" [style="dotted"];
		"google.auth" -> "google.auth.external_account_authorized_user" [style="dotted"];
		"google.auth" -> "google.auth.impersonated_credentials" [style="dotted"];
		"google.auth" -> "google.auth.external_account" [style="dotted"];
		"google.auth" -> "google.auth.aws" [style="dotted"];
		"google.auth" -> "google.auth.pluggable" [style="dotted"];
		"google.auth" -> "google.auth.identity_pool" [style="dotted"];
		"google.auth" -> "google.auth.api_key" [style="dotted"];
		"google.auth" -> "google.auth._default" [style="dotted"];
		"google.auth" -> "google.auth.credentials" [style="dotted"];
		"google.auth" -> "google.auth._credentials_base" [style="dotted"];
		"google.auth" -> "google.auth._refresh_worker" [style="dotted"];
		"google.auth" -> "google.auth.app_engine" [style="dotted"];
		"google.auth" -> "google.auth._exponential_backoff" [style="dotted"];
		"google.auth" -> "google.auth.transport" [style="dotted"];
		"google.auth" -> "google.auth.aio" [style="dotted"];
	}
	subgraph "cluster_typing_inspection" {
		label="typing_inspection";
		"typing_inspection" -> "typing_inspection.typing_objects" [style="dotted"];
		"typing_inspection" -> "typing_inspection.introspection" [style="dotted"];
	}
	subgraph "cluster_langchain_neo4j.vectorstores" {
		label="langchain_neo4j.vectorstores";
		"langchain_neo4j.vectorstores" -> "langchain_neo4j.vectorstores.neo4j_vector" [style="dotted"];
		"langchain_neo4j.vectorstores" -> "langchain_neo4j.vectorstores.utils" [style="dotted"];
	}
	subgraph "cluster_tiktoken_ext" {
		label="tiktoken_ext";
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports";
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.folders" {
		label="google.cloud.resourcemanager_v3.services.folders";
		"google.cloud.resourcemanager_v3.services.folders" -> "google.cloud.resourcemanager_v3.services.folders.pagers" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.folders" -> "google.cloud.resourcemanager_v3.services.folders.async_client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.folders" -> "google.cloud.resourcemanager_v3.services.folders.client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.folders" -> "google.cloud.resourcemanager_v3.services.folders.transports" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.mssql" {
		label="sqlalchemy.dialects.mssql";
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.base" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.information_schema" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.aioodbc" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.pymssql" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.pyodbc" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.json" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.model_service" {
		label="google.ai.generativelanguage_v1beta.services.model_service";
		"google.ai.generativelanguage_v1beta.services.model_service" -> "google.ai.generativelanguage_v1beta.services.model_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service" -> "google.ai.generativelanguage_v1beta.services.model_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service" -> "google.ai.generativelanguage_v1beta.services.model_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service" -> "google.ai.generativelanguage_v1beta.services.model_service.transports" [style="dotted"];
	}
	subgraph "cluster_numpy.array_api" {
		label="numpy.array_api";
		"numpy.array_api" -> "numpy.array_api._constants" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._creation_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._data_type_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._dtypes" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._elementwise_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._indexing_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api.linalg" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._manipulation_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._searching_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._set_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._sorting_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._statistical_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._utility_functions" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._array_object" [style="dotted"];
		"numpy.array_api" -> "numpy.array_api._typing" [style="dotted"];
	}
	subgraph "cluster_neo4j._codec.packstream._python" {
		label="neo4j._codec.packstream._python";
		"neo4j._codec.packstream._python" -> "neo4j._codec.packstream._python._common" [style="dotted"];
	}
	subgraph "cluster_websockets.extensions" {
		label="websockets.extensions";
		"websockets.extensions" -> "websockets.extensions.base" [style="dotted"];
		"websockets.extensions" -> "websockets.extensions.permessage_deflate" [style="dotted"];
	}
	subgraph "cluster_pandas.core._numba" {
		label="pandas.core._numba";
		"pandas.core._numba" -> "pandas.core._numba.executor" [style="dotted"];
		"pandas.core._numba" -> "pandas.core._numba.kernels" [style="dotted"];
		"pandas.core._numba" -> "pandas.core._numba.extensions" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.file_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.file_service.transports";
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_neo4j.graphs" {
		label="langchain_neo4j.graphs";
		"langchain_neo4j.graphs" -> "langchain_neo4j.graphs.neo4j_graph" [style="dotted"];
		"langchain_neo4j.graphs" -> "langchain_neo4j.graphs.graph_document" [style="dotted"];
		"langchain_neo4j.graphs" -> "langchain_neo4j.graphs.graph_store" [style="dotted"];
	}
	subgraph "cluster_google.resumable_media" {
		label="google.resumable_media";
		"google.resumable_media" -> "google.resumable_media.common" [style="dotted"];
		"google.resumable_media" -> "google.resumable_media._helpers" [style="dotted"];
		"google.resumable_media" -> "google.resumable_media._download" [style="dotted"];
		"google.resumable_media" -> "google.resumable_media._upload" [style="dotted"];
		"google.resumable_media" -> "google.resumable_media.requests" [style="dotted"];
	}
	subgraph "cluster_importlib_metadata" {
		label="importlib_metadata";
		"importlib_metadata" -> "importlib_metadata._meta" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._collections" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._compat" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._functools" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._itertools" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._typing" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata.compat" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._adapters" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._text" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.trainingjob" {
		label="google.cloud.aiplatform.v1beta1.schema.trainingjob";
		"google.cloud.aiplatform.v1beta1.schema.trainingjob" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.trainingjob" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1" [style="dotted"];
	}
	subgraph "cluster_cachetools" {
		label="cachetools";
		"cachetools" -> "cachetools.keys" [style="dotted"];
		"cachetools" -> "cachetools._decorators" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.amadeus" {
		label="langchain_community.tools.amadeus";
		"langchain_community.tools.amadeus" -> "langchain_community.tools.amadeus.closest_airport" [style="dotted"];
		"langchain_community.tools.amadeus" -> "langchain_community.tools.amadeus.flight_search" [style="dotted"];
		"langchain_community.tools.amadeus" -> "langchain_community.tools.amadeus.utils" [style="dotted"];
		"langchain_community.tools.amadeus" -> "langchain_community.tools.amadeus.base" [style="dotted"];
	}
	subgraph "cluster_langchain_core.prompts" {
		label="langchain_core.prompts";
		"langchain_core.prompts" -> "langchain_core.prompts.base" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.chat" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.dict" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.few_shot" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.few_shot_with_templates" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.loading" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.pipeline" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.prompt" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.string" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.image" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.message" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.structured" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.postgresql" {
		label="sqlalchemy.dialects.postgresql";
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.array" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.json" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.ranges" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.pg_catalog" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.asyncpg" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.base" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.pg8000" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.psycopg" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.psycopg2" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.psycopg2cffi" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.dml" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.ext" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.hstore" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.named_types" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.types" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.operators" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql._psycopg_common" [style="dotted"];
	}
	subgraph "cluster_pyasn1" {
		label="pyasn1";
		"pyasn1" -> "pyasn1.error" [style="dotted"];
		"pyasn1" -> "pyasn1.debug" [style="dotted"];
		"pyasn1" -> "pyasn1.compat" [style="dotted"];
		"pyasn1" -> "pyasn1.codec" [style="dotted"];
		"pyasn1" -> "pyasn1.type" [style="dotted"];
	}
	subgraph "cluster_logging" {
		label="logging";
	}
	subgraph "cluster_google.auth.aio.transport" {
		label="google.auth.aio.transport";
		"google.auth.aio.transport" -> "google.auth.aio.transport.sessions" [style="dotted"];
		"google.auth.aio.transport" -> "google.auth.aio.transport.aiohttp" [style="dotted"];
	}
	subgraph "cluster_google.iam" {
		label="google.iam";
		"google.iam" -> "google.iam.v1" [style="dotted"];
	}
	subgraph "cluster_neo4j._optional_deps" {
		label="neo4j._optional_deps";
	}
	subgraph "cluster_lxml.isoschematron" {
		label="lxml.isoschematron";
	}
	subgraph "cluster_google.cloud.resourcemanager" {
		label="google.cloud.resourcemanager";
		"google.cloud.resourcemanager" -> "google.cloud.resourcemanager.gapic_version" [style="dotted"];
	}
	subgraph "cluster_pandas.io.excel" {
		label="pandas.io.excel";
		"pandas.io.excel" -> "pandas.io.excel._base" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._odswriter" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._openpyxl" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._util" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._xlsxwriter" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._calamine" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._odfreader" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._pyxlsb" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._xlrd" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.qa_with_sources" {
		label="langchain.chains.qa_with_sources";
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.map_reduce_prompt" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.refine_prompts" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.stuff_prompt" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.loading" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.retrieval" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.base" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.vector_db" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.sql_database" {
		label="langchain_community.tools.sql_database";
		"langchain_community.tools.sql_database" -> "langchain_community.tools.sql_database.tool" [style="dotted"];
		"langchain_community.tools.sql_database" -> "langchain_community.tools.sql_database.prompt" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag.retrievers.external" {
		label="neo4j_graphrag.retrievers.external";
		"neo4j_graphrag.retrievers.external" -> "neo4j_graphrag.retrievers.external.utils" [style="dotted"];
		"neo4j_graphrag.retrievers.external" -> "neo4j_graphrag.retrievers.external.qdrant" [style="dotted"];
		"neo4j_graphrag.retrievers.external" -> "neo4j_graphrag.retrievers.external.weaviate" [style="dotted"];
		"neo4j_graphrag.retrievers.external" -> "neo4j_graphrag.retrievers.external.pinecone" [style="dotted"];
	}
	subgraph "cluster_langchain.utilities" {
		label="langchain.utilities";
		"langchain.utilities" -> "langchain.utilities.asyncio" [style="dotted"];
	}
	subgraph "cluster_neo4j" {
		label="neo4j";
		"neo4j" -> "neo4j._api" [style="dotted"];
		"neo4j" -> "neo4j._conf" [style="dotted"];
		"neo4j" -> "neo4j._data" [style="dotted"];
		"neo4j" -> "neo4j._meta" [style="dotted"];
		"neo4j" -> "neo4j._work" [style="dotted"];
		"neo4j" -> "neo4j.addressing" [style="dotted"];
		"neo4j" -> "neo4j.api" [style="dotted"];
		"neo4j" -> "neo4j._async" [style="dotted"];
		"neo4j" -> "neo4j._sync" [style="dotted"];
		"neo4j" -> "neo4j.exceptions" [style="dotted"];
		"neo4j" -> "neo4j._exceptions" [style="dotted"];
		"neo4j" -> "neo4j._deadline" [style="dotted"];
		"neo4j" -> "neo4j._routing" [style="dotted"];
		"neo4j" -> "neo4j.auth_management" [style="dotted"];
		"neo4j" -> "neo4j._auth_management" [style="dotted"];
		"neo4j" -> "neo4j._optional_deps" [style="dotted"];
		"neo4j" -> "neo4j._codec" [style="dotted"];
		"neo4j" -> "neo4j.time" [style="dotted"];
		"neo4j" -> "neo4j.spatial" [style="dotted"];
		"neo4j" -> "neo4j._spatial" [style="dotted"];
		"neo4j" -> "neo4j.graph" [style="dotted"];
		"neo4j" -> "neo4j._async_compat" [style="dotted"];
		"neo4j" -> "neo4j._debug" [style="dotted"];
		"neo4j" -> "neo4j._util" [style="dotted"];
		"neo4j" -> "neo4j.warnings" [style="dotted"];
	}
	subgraph "cluster_langchain_experimental.llm_bash" {
		label="langchain_experimental.llm_bash";
		"langchain_experimental.llm_bash" -> "langchain_experimental.llm_bash.bash" [style="dotted"];
		"langchain_experimental.llm_bash" -> "langchain_experimental.llm_bash.base" [style="dotted"];
		"langchain_experimental.llm_bash" -> "langchain_experimental.llm_bash.prompt" [style="dotted"];
	}
	subgraph "cluster_orjson" {
		label="orjson";
		"orjson" -> "orjson.orjson" [style="dotted"];
		"orjson" -> "orjson.OPT_NON_STR_KEYS" [style="dotted"];
		"orjson" -> "orjson.OPT_SERIALIZE_DATACLASS" [style="dotted"];
		"orjson" -> "orjson.OPT_SERIALIZE_NUMPY" [style="dotted"];
		"orjson" -> "orjson.OPT_SERIALIZE_UUID" [style="dotted"];
		"orjson" -> "orjson.Fragment" [style="dotted"];
		"orjson" -> "orjson.JSONDecodeError" [style="dotted"];
		"orjson" -> "orjson.dumps" [style="dotted"];
		"orjson" -> "orjson.loads" [style="dotted"];
	}
	subgraph "cluster_fsspec.implementations" {
		label="fsspec.implementations";
		"fsspec.implementations" -> "fsspec.implementations.arrow" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.asyn_wrapper" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.cache_mapper" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.cache_metadata" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.cached" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.dask" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.data" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.dbfs" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.dirfs" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.ftp" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.git" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.github" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.http" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.jupyter" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.libarchive" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.local" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.memory" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.reference" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.sftp" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.smb" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.tar" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.webhdfs" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.zip" [style="dotted"];
	}
	subgraph "cluster_pandas.api.indexers" {
		label="pandas.api.indexers";
	}
	subgraph "cluster_docx.opc.parts" {
		label="docx.opc.parts";
		"docx.opc.parts" -> "docx.opc.parts.coreprops" [style="dotted"];
	}
	subgraph "cluster_pydantic.v1" {
		label="pydantic.v1";
		"pydantic.v1" -> "pydantic.v1.errors" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.dataclasses" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.annotated_types" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.class_validators" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.config" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.decorator" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.env_settings" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.error_wrappers" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.fields" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.main" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.networks" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.parse" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.tools" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.types" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.version" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.datetime_parse" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.utils" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.validators" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.typing" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.json" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.schema" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.color" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1._hypothesis_plugin" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.generics" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.mypy" [style="dotted"];
	}
	subgraph "cluster_pandas.core.reshape" {
		label="pandas.core.reshape";
		"pandas.core.reshape" -> "pandas.core.reshape.api" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.concat" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.tile" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.util" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.reshape" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.merge" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.melt" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.pivot" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.encoding" [style="dotted"];
	}
	subgraph "cluster_pandas.core.tools" {
		label="pandas.core.tools";
		"pandas.core.tools" -> "pandas.core.tools.numeric" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.datetimes" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.timedeltas" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.times" [style="dotted"];
	}
	subgraph "cluster_langchain_community.utilities" {
		label="langchain_community.utilities";
		"langchain_community.utilities" -> "langchain_community.utilities.alpha_vantage" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.apify" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.arcee" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.arxiv" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.asknews" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.awslambda" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.bibtex" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.bing_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.brave_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.dataherald" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.dria_index" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.duckduckgo_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.golden_query" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_books" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_finance" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_jobs" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_lens" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_places_api" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_scholar" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_serper" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_trends" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.graphql" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.infobip" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.jira" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.max_compute" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.merriam_webster" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.metaphor_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.mojeek_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.nasa" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.nvidia_riva" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.openweathermap" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.oracleai" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.outline" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.passio_nutrition_ai" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.portkey" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.powerbi" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.pubmed" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.rememberizer" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.requests" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.scenexplain" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.searchapi" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.searx_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.serpapi" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.spark_sql" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.sql_database" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.stackexchange" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.steam" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.tensorflow_datasets" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.twilio" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.wikipedia" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.wolfram_alpha" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.you" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.zapier" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.redis" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.vertexai" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.cassandra" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.astradb" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.tavily_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.reddit_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.polygon" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.openapi" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.jina_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.financial_datasets" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.cassandra_database" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.anthropic" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.dalle_image_generator" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.dataforseo_api_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.pebblo" [style="dotted"];
	}
	subgraph "cluster_pandas" {
		label="pandas";
		"pandas" -> "pandas.compat" [style="dotted"];
		"pandas" -> "pandas._config" [style="dotted"];
		"pandas" -> "pandas.tseries" [style="dotted"];
		"pandas" -> "pandas.api" [style="dotted"];
		"pandas" -> "pandas.arrays" [style="dotted"];
		"pandas" -> "pandas.errors" [style="dotted"];
		"pandas" -> "pandas.io" [style="dotted"];
		"pandas" -> "pandas.plotting" [style="dotted"];
		"pandas" -> "pandas.testing" [style="dotted"];
		"pandas" -> "pandas._version_meson" [style="dotted"];
		"pandas" -> "pandas._version" [style="dotted"];
		"pandas" -> "pandas.Panel" [style="dotted"];
		"pandas" -> "pandas._libs" [style="dotted"];
		"pandas" -> "pandas.core" [style="dotted"];
		"pandas" -> "pandas.util" [style="dotted"];
		"pandas" -> "pandas._typing" [style="dotted"];
		"pandas" -> "pandas._testing" [style="dotted"];
	}
	subgraph "cluster_pandas._libs.tslibs" {
		label="pandas._libs.tslibs";
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.dtypes" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.conversion" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.nattype" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.np_datetime" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.offsets" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.parsing" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.period" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timedeltas" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timestamps" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timezones" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.tzconversion" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.vectorized" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.fields" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.base" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.ccalendar" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.strptime" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.index_endpoint_service.transports" {
		label="google.cloud.aiplatform_v1.services.index_endpoint_service.transports";
		"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_openai.types.fine_tuning.checkpoints" {
		label="openai.types.fine_tuning.checkpoints";
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_create_params" [style="dotted"];
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_create_response" [style="dotted"];
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_delete_response" [style="dotted"];
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_retrieve_params" [style="dotted"];
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_retrieve_response" [style="dotted"];
	}
	subgraph "cluster_langchain_core.output_parsers" {
		label="langchain_core.output_parsers";
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.base" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.json" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.list" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.openai_tools" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.pydantic" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.string" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.transform" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.xml" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.format_instructions" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.openai_functions" [style="dotted"];
	}
	subgraph "cluster_docx.oxml.text" {
		label="docx.oxml.text";
		"docx.oxml.text" -> "docx.oxml.text.hyperlink" [style="dotted"];
		"docx.oxml.text" -> "docx.oxml.text.pagebreak" [style="dotted"];
		"docx.oxml.text" -> "docx.oxml.text.run" [style="dotted"];
		"docx.oxml.text" -> "docx.oxml.text.font" [style="dotted"];
		"docx.oxml.text" -> "docx.oxml.text.paragraph" [style="dotted"];
		"docx.oxml.text" -> "docx.oxml.text.parfmt" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.prediction" {
		label="google.cloud.aiplatform.prediction";
		"google.cloud.aiplatform.prediction" -> "google.cloud.aiplatform.prediction.handler_utils" [style="dotted"];
		"google.cloud.aiplatform.prediction" -> "google.cloud.aiplatform.prediction.handler" [style="dotted"];
		"google.cloud.aiplatform.prediction" -> "google.cloud.aiplatform.prediction.local_endpoint" [style="dotted"];
		"google.cloud.aiplatform.prediction" -> "google.cloud.aiplatform.prediction.local_model" [style="dotted"];
		"google.cloud.aiplatform.prediction" -> "google.cloud.aiplatform.prediction.predictor" [style="dotted"];
		"google.cloud.aiplatform.prediction" -> "google.cloud.aiplatform.prediction.serializer" [style="dotted"];
	}
	subgraph "cluster_pycparser.ply" {
		label="pycparser.ply";
		"pycparser.ply" -> "pycparser.ply.lex" [style="dotted"];
		"pycparser.ply" -> "pycparser.ply.yacc" [style="dotted"];
	}
	subgraph "cluster_langchain_core.tools" {
		label="langchain_core.tools";
		"langchain_core.tools" -> "langchain_core.tools.simple" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.base" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.convert" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.render" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.retriever" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.structured" [style="dotted"];
	}
	subgraph "cluster_google.auth.aio" {
		label="google.auth.aio";
		"google.auth.aio" -> "google.auth.aio.credentials" [style="dotted"];
		"google.auth.aio" -> "google.auth.aio.transport" [style="dotted"];
	}
	subgraph "cluster_neo4j._codec.packstream.v1" {
		label="neo4j._codec.packstream.v1";
		"neo4j._codec.packstream.v1" -> "neo4j._codec.packstream.v1.types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.trainingjob" {
		label="google.cloud.aiplatform.v1.schema.trainingjob";
		"google.cloud.aiplatform.v1.schema.trainingjob" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1" [style="dotted"];
	}
	subgraph "cluster_openai.resources.fine_tuning.jobs" {
		label="openai.resources.fine_tuning.jobs";
		"openai.resources.fine_tuning.jobs" -> "openai.resources.fine_tuning.jobs.jobs" [style="dotted"];
		"openai.resources.fine_tuning.jobs" -> "openai.resources.fine_tuning.jobs.checkpoints" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.instance_v1" {
		label="google.cloud.aiplatform.v1.schema.predict.instance_v1";
		"google.cloud.aiplatform.v1.schema.predict.instance_v1" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.instance_v1" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1.types" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag" {
		label="neo4j_graphrag";
		"neo4j_graphrag" -> "neo4j_graphrag.indexes" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.neo4j_queries" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.types" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.utils" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.exceptions" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.filters" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.schema" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.message_history" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.retrievers" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.embeddings" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.llm" [style="dotted"];
		"neo4j_graphrag" -> "neo4j_graphrag.generation" [style="dotted"];
	}
	subgraph "cluster_dateutil.parser" {
		label="dateutil.parser";
		"dateutil.parser" -> "dateutil.parser._parser" [style="dotted"];
		"dateutil.parser" -> "dateutil.parser.isoparser" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1" {
		label="google.cloud.aiplatform.v1beta1";
		"google.cloud.aiplatform.v1beta1" -> "google.cloud.aiplatform.v1beta1.schema" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.endpoint_service" {
		label="google.cloud.aiplatform_v1beta1.services.endpoint_service";
		"google.cloud.aiplatform_v1beta1.services.endpoint_service" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.endpoint_service" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.endpoint_service" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.endpoint_service" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" [style="dotted"];
	}
	subgraph "cluster_shapely" {
		label="shapely";
		"shapely" -> "shapely.lib" [style="dotted"];
		"shapely" -> "shapely.errors" [style="dotted"];
		"shapely" -> "shapely._geometry_helpers" [style="dotted"];
		"shapely" -> "shapely._geometry" [style="dotted"];
		"shapely" -> "shapely.creation" [style="dotted"];
		"shapely" -> "shapely.constructive" [style="dotted"];
		"shapely" -> "shapely.predicates" [style="dotted"];
		"shapely" -> "shapely.measurement" [style="dotted"];
		"shapely" -> "shapely.set_operations" [style="dotted"];
		"shapely" -> "shapely.linear" [style="dotted"];
		"shapely" -> "shapely.coordinates" [style="dotted"];
		"shapely" -> "shapely.strtree" [style="dotted"];
		"shapely" -> "shapely.io" [style="dotted"];
		"shapely" -> "shapely.geometry" [style="dotted"];
		"shapely" -> "shapely._version" [style="dotted"];
		"shapely" -> "shapely.wkt" [style="dotted"];
		"shapely" -> "shapely.wkb" [style="dotted"];
		"shapely" -> "shapely.prepared" [style="dotted"];
		"shapely" -> "shapely._geos" [style="dotted"];
		"shapely" -> "shapely.algorithms" [style="dotted"];
		"shapely" -> "shapely.coords" [style="dotted"];
		"shapely" -> "shapely._enum" [style="dotted"];
		"shapely" -> "shapely._ragged_array" [style="dotted"];
		"shapely" -> "shapely.decorators" [style="dotted"];
		"shapely" -> "shapely.affinity" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor" {
		label="setuptools._vendor";
		"setuptools._vendor" -> "setuptools._vendor.ordered_set" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.pyparsing" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.packaging" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.more_itertools" [style="dotted"];
	}
	subgraph "cluster_zstandard" {
		label="zstandard";
		"zstandard" -> "zstandard.backend_c" [style="dotted"];
		"zstandard" -> "zstandard.backend_cffi" [style="dotted"];
		"zstandard" -> "zstandard.backend_rust" [style="dotted"];
		"zstandard" -> "zstandard._cffi" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.vertex_rag_service" {
		label="google.cloud.aiplatform_v1.services.vertex_rag_service";
		"google.cloud.aiplatform_v1.services.vertex_rag_service" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_service" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_service" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.transports" [style="dotted"];
	}
	subgraph "cluster_urllib3.util" {
		label="urllib3.util";
		"urllib3.util" -> "urllib3.util.connection" [style="dotted"];
		"urllib3.util" -> "urllib3.util.request" [style="dotted"];
		"urllib3.util" -> "urllib3.util.response" [style="dotted"];
		"urllib3.util" -> "urllib3.util.retry" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssl_" [style="dotted"];
		"urllib3.util" -> "urllib3.util.timeout" [style="dotted"];
		"urllib3.util" -> "urllib3.util.url" [style="dotted"];
		"urllib3.util" -> "urllib3.util.wait" [style="dotted"];
		"urllib3.util" -> "urllib3.util.util" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssltransport" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssl_match_hostname" [style="dotted"];
		"urllib3.util" -> "urllib3.util.proxy" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_loaders.parsers.html" {
		label="langchain_community.document_loaders.parsers.html";
		"langchain_community.document_loaders.parsers.html" -> "langchain_community.document_loaders.parsers.html.bs4" [style="dotted"];
	}
	subgraph "cluster_openai.lib.streaming.chat" {
		label="openai.lib.streaming.chat";
		"openai.lib.streaming.chat" -> "openai.lib.streaming.chat._types" [style="dotted"];
		"openai.lib.streaming.chat" -> "openai.lib.streaming.chat._events" [style="dotted"];
		"openai.lib.streaming.chat" -> "openai.lib.streaming.chat._completions" [style="dotted"];
	}
	subgraph "cluster_langchain.schema" {
		label="langchain.schema";
	}
	subgraph "cluster_numpy.polynomial" {
		label="numpy.polynomial";
		"numpy.polynomial" -> "numpy.polynomial.polyutils" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.polynomial" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.chebyshev" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.legendre" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.hermite" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.hermite_e" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.laguerre" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial._polybase" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.model_monitoring_service" {
		label="google.cloud.aiplatform_v1beta1.services.model_monitoring_service";
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" [style="dotted"];
	}
	subgraph "cluster_websockets.asyncio" {
		label="websockets.asyncio";
		"websockets.asyncio" -> "websockets.asyncio.client" [style="dotted"];
		"websockets.asyncio" -> "websockets.asyncio.router" [style="dotted"];
		"websockets.asyncio" -> "websockets.asyncio.server" [style="dotted"];
		"websockets.asyncio" -> "websockets.asyncio.async_timeout" [style="dotted"];
		"websockets.asyncio" -> "websockets.asyncio.compatibility" [style="dotted"];
		"websockets.asyncio" -> "websockets.asyncio.connection" [style="dotted"];
		"websockets.asyncio" -> "websockets.asyncio.messages" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.prediction" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.prediction";
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction.gapic_version" [style="dotted"];
	}
	subgraph "cluster_google.auth.crypt" {
		label="google.auth.crypt";
		"google.auth.crypt" -> "google.auth.crypt.base" [style="dotted"];
		"google.auth.crypt" -> "google.auth.crypt._cryptography_rsa" [style="dotted"];
		"google.auth.crypt" -> "google.auth.crypt._python_rsa" [style="dotted"];
		"google.auth.crypt" -> "google.auth.crypt.rsa" [style="dotted"];
		"google.auth.crypt" -> "google.auth.crypt.es256" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.system" {
		label="graphdatascience.system";
		"graphdatascience.system" -> "graphdatascience.system.config_endpoints" [style="dotted"];
		"graphdatascience.system" -> "graphdatascience.system.system_endpoints" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform" {
		label="google.cloud.aiplatform";
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.version" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.compat" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.initializer" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.utils" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.base" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.explain" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.hyperparameter_tuning" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.model_monitoring" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform._publisher_models" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.jobs" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.tensorboard" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.models" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.pipeline_jobs" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.helpers" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.model_evaluation" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.telemetry" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.schema" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.datasets" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.gapic" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.featurestore" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.matching_engine" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.metadata" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.pipeline_job_schedules" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.training_jobs" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform._streaming_prediction" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.constants" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform._mlflow_plugin" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.prediction" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.preview" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.docker_utils" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform._pipeline_based_service" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.v1" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.schedules" [style="dotted"];
		"google.cloud.aiplatform" -> "google.cloud.aiplatform.v1beta1" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services" {
		label="google.cloud.aiplatform_v1beta1.services";
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.session_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.notebook_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.migration_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.vizier_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.schedule_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.prediction_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.model_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.metadata_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.match_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.job_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.index_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.featurestore_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.extension_execution_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.example_store_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services" -> "google.cloud.aiplatform_v1beta1.services.dataset_service" [style="dotted"];
	}
	subgraph "cluster_pandas.core.arrays.arrow" {
		label="pandas.core.arrays.arrow";
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.accessors" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.array" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow._arrow_utils" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.extension_types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.job_service.transports" {
		label="google.cloud.aiplatform_v1.services.job_service.transports";
		"google.cloud.aiplatform_v1.services.job_service.transports" -> "google.cloud.aiplatform_v1.services.job_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.job_service.transports" -> "google.cloud.aiplatform_v1.services.job_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.job_service.transports" -> "google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.job_service.transports" -> "google.cloud.aiplatform_v1.services.job_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.job_service.transports" -> "google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.job_service.transports" -> "google.cloud.aiplatform_v1.services.job_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.openai_functions_agent" {
		label="langchain.agents.openai_functions_agent";
		"langchain.agents.openai_functions_agent" -> "langchain.agents.openai_functions_agent.base" [style="dotted"];
		"langchain.agents.openai_functions_agent" -> "langchain.agents.openai_functions_agent.agent_token_buffer_memory" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.tag_holds.transports" {
		label="google.cloud.resourcemanager_v3.services.tag_holds.transports";
		"google.cloud.resourcemanager_v3.services.tag_holds.transports" -> "google.cloud.resourcemanager_v3.services.tag_holds.transports.base" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_holds.transports" -> "google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_holds.transports" -> "google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_holds.transports" -> "google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_holds.transports" -> "google.cloud.resourcemanager_v3.services.tag_holds.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_urllib3.contrib" {
		label="urllib3.contrib";
		"urllib3.contrib" -> "urllib3.contrib.pyopenssl" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.socks" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.emscripten" [style="dotted"];
	}
	subgraph "cluster_pyarrow" {
		label="pyarrow";
		"pyarrow" -> "pyarrow._generated_version" [style="dotted"];
		"pyarrow" -> "pyarrow.lib" [style="dotted"];
		"pyarrow" -> "pyarrow.fs" [style="dotted"];
		"pyarrow" -> "pyarrow.ipc" [style="dotted"];
		"pyarrow" -> "pyarrow.types" [style="dotted"];
		"pyarrow" -> "pyarrow.util" [style="dotted"];
		"pyarrow" -> "pyarrow._compute_docstrings" [style="dotted"];
		"pyarrow" -> "pyarrow._feather" [style="dotted"];
		"pyarrow" -> "pyarrow.feather" [style="dotted"];
		"pyarrow" -> "pyarrow.flight" [style="dotted"];
		"pyarrow" -> "pyarrow._acero" [style="dotted"];
		"pyarrow" -> "pyarrow._azurefs" [style="dotted"];
		"pyarrow" -> "pyarrow._compute" [style="dotted"];
		"pyarrow" -> "pyarrow._csv" [style="dotted"];
		"pyarrow" -> "pyarrow._dataset" [style="dotted"];
		"pyarrow" -> "pyarrow._dataset_orc" [style="dotted"];
		"pyarrow" -> "pyarrow._dataset_parquet" [style="dotted"];
		"pyarrow" -> "pyarrow._dataset_parquet_encryption" [style="dotted"];
		"pyarrow" -> "pyarrow._flight" [style="dotted"];
		"pyarrow" -> "pyarrow._fs" [style="dotted"];
		"pyarrow" -> "pyarrow._gcsfs" [style="dotted"];
		"pyarrow" -> "pyarrow._hdfs" [style="dotted"];
		"pyarrow" -> "pyarrow._json" [style="dotted"];
		"pyarrow" -> "pyarrow._orc" [style="dotted"];
		"pyarrow" -> "pyarrow._parquet" [style="dotted"];
		"pyarrow" -> "pyarrow._parquet_encryption" [style="dotted"];
		"pyarrow" -> "pyarrow._s3fs" [style="dotted"];
		"pyarrow" -> "pyarrow._substrait" [style="dotted"];
		"pyarrow" -> "pyarrow.acero" [style="dotted"];
		"pyarrow" -> "pyarrow.benchmark" [style="dotted"];
		"pyarrow" -> "pyarrow.cffi" [style="dotted"];
		"pyarrow" -> "pyarrow.compute" [style="dotted"];
		"pyarrow" -> "pyarrow.conftest" [style="dotted"];
		"pyarrow" -> "pyarrow.csv" [style="dotted"];
		"pyarrow" -> "pyarrow.cuda" [style="dotted"];
		"pyarrow" -> "pyarrow.dataset" [style="dotted"];
		"pyarrow" -> "pyarrow.interchange" [style="dotted"];
		"pyarrow" -> "pyarrow.json" [style="dotted"];
		"pyarrow" -> "pyarrow.jvm" [style="dotted"];
		"pyarrow" -> "pyarrow.orc" [style="dotted"];
		"pyarrow" -> "pyarrow.pandas_compat" [style="dotted"];
		"pyarrow" -> "pyarrow.parquet" [style="dotted"];
		"pyarrow" -> "pyarrow.substrait" [style="dotted"];
		"pyarrow" -> "pyarrow.vendored" [style="dotted"];
		"pyarrow" -> "pyarrow.tests" [style="dotted"];
	}
	subgraph "cluster_langchain_experimental" {
		label="langchain_experimental";
		"langchain_experimental" -> "langchain_experimental.llm_bash" [style="dotted"];
		"langchain_experimental" -> "langchain_experimental.sql" [style="dotted"];
		"langchain_experimental" -> "langchain_experimental.pal_chain" [style="dotted"];
		"langchain_experimental" -> "langchain_experimental.utilities" [style="dotted"];
	}
	subgraph "cluster_langchain_community.retrievers" {
		label="langchain_community.retrievers";
		"langchain_community.retrievers" -> "langchain_community.retrievers.arcee" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.arxiv" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.asknews" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.azure_ai_search" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.bedrock" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.bm25" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.breebs" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.chaindesk" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.chatgpt_plugin_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.cohere_rag_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.docarray" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.dria_index" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.elastic_search_bm25" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.embedchain" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.google_cloud_documentai_warehouse" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.google_vertex_ai_search" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.kay" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.kendra" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.knn" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.llama_index" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.metal" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.milvus" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.nanopq" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.needle" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.outline" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.pinecone_hybrid_search" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.pubmed" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.qdrant_sparse_vector_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.rememberizer" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.remote_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.svm" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.tavily_search_api" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.tfidf" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.thirdai_neuraldb" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.vespa_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.weaviate_hybrid_search" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.web_research" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.wikipedia" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.you" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.zep" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.zep_cloud" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.zilliz" [style="dotted"];
	}
	subgraph "cluster_google.iam.v1" {
		label="google.iam.v1";
		"google.iam.v1" -> "google.iam.v1.options_pb2" [style="dotted"];
		"google.iam.v1" -> "google.iam.v1.policy_pb2" [style="dotted"];
		"google.iam.v1" -> "google.iam.v1.iam_policy_pb2" [style="dotted"];
	}
	subgraph "cluster_pandas.api.extensions" {
		label="pandas.api.extensions";
	}
	subgraph "cluster_langchain.prompts" {
		label="langchain.prompts";
		"langchain.prompts" -> "langchain.prompts.prompt" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.projects.transports" {
		label="google.cloud.resourcemanager_v3.services.projects.transports";
		"google.cloud.resourcemanager_v3.services.projects.transports" -> "google.cloud.resourcemanager_v3.services.projects.transports.base" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.projects.transports" -> "google.cloud.resourcemanager_v3.services.projects.transports.grpc" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.projects.transports" -> "google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.projects.transports" -> "google.cloud.resourcemanager_v3.services.projects.transports.rest" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.projects.transports" -> "google.cloud.resourcemanager_v3.services.projects.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.qa" {
		label="langchain.evaluation.qa";
		"langchain.evaluation.qa" -> "langchain.evaluation.qa.eval_chain" [style="dotted"];
		"langchain.evaluation.qa" -> "langchain.evaluation.qa.generate_chain" [style="dotted"];
		"langchain.evaluation.qa" -> "langchain.evaluation.qa.generate_prompt" [style="dotted"];
		"langchain.evaluation.qa" -> "langchain.evaluation.qa.eval_prompt" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt.adapters" {
		label="requests_toolbelt.adapters";
		"requests_toolbelt.adapters" -> "requests_toolbelt.adapters.ssl" [style="dotted"];
		"requests_toolbelt.adapters" -> "requests_toolbelt.adapters.source" [style="dotted"];
		"requests_toolbelt.adapters" -> "requests_toolbelt.adapters.socket_options" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.dataset_service.transports" {
		label="google.cloud.aiplatform_v1.services.dataset_service.transports";
		"google.cloud.aiplatform_v1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1.services.dataset_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1.services.dataset_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.dataset_service.transports" -> "google.cloud.aiplatform_v1.services.dataset_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.migration_service.transports" {
		label="google.cloud.aiplatform_v1.services.migration_service.transports";
		"google.cloud.aiplatform_v1.services.migration_service.transports" -> "google.cloud.aiplatform_v1.services.migration_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.migration_service.transports" -> "google.cloud.aiplatform_v1.services.migration_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.migration_service.transports" -> "google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.migration_service.transports" -> "google.cloud.aiplatform_v1.services.migration_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.migration_service.transports" -> "google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.migration_service.transports" -> "google.cloud.aiplatform_v1.services.migration_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types";
		"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_object_detection" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_segmentation" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_action_recognition" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_object_tracking" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.pool" {
		label="sqlalchemy.pool";
		"sqlalchemy.pool" -> "sqlalchemy.pool.events" [style="dotted"];
		"sqlalchemy.pool" -> "sqlalchemy.pool.base" [style="dotted"];
		"sqlalchemy.pool" -> "sqlalchemy.pool.impl" [style="dotted"];
	}
	subgraph "cluster_yaml" {
		label="yaml";
		"yaml" -> "yaml.error" [style="dotted"];
		"yaml" -> "yaml.tokens" [style="dotted"];
		"yaml" -> "yaml.events" [style="dotted"];
		"yaml" -> "yaml.nodes" [style="dotted"];
		"yaml" -> "yaml.loader" [style="dotted"];
		"yaml" -> "yaml.dumper" [style="dotted"];
		"yaml" -> "yaml.cyaml" [style="dotted"];
		"yaml" -> "yaml._yaml" [style="dotted"];
		"yaml" -> "yaml.constructor" [style="dotted"];
		"yaml" -> "yaml.serializer" [style="dotted"];
		"yaml" -> "yaml.representer" [style="dotted"];
		"yaml" -> "yaml.resolver" [style="dotted"];
		"yaml" -> "yaml.emitter" [style="dotted"];
		"yaml" -> "yaml.reader" [style="dotted"];
		"yaml" -> "yaml.scanner" [style="dotted"];
		"yaml" -> "yaml.parser" [style="dotted"];
		"yaml" -> "yaml.composer" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.types" {
		label="google.ai.generativelanguage_v1beta.types";
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.content" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.cached_content" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.cache_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.citation" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.safety" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.discuss_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.file" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.file_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.retriever" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.generative_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.model" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.tuned_model" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.model_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.permission" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.permission_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.prediction_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.retriever_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.text_service" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec.cer" {
		label="pyasn1.codec.cer";
		"pyasn1.codec.cer" -> "pyasn1.codec.cer.decoder" [style="dotted"];
		"pyasn1.codec.cer" -> "pyasn1.codec.cer.encoder" [style="dotted"];
	}
	subgraph "cluster_langchain_community.graphs" {
		label="langchain_community.graphs";
		"langchain_community.graphs" -> "langchain_community.graphs.arangodb_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.falkordb_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.gremlin_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.hugegraph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.kuzu_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.memgraph_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.nebula_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.neo4j_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.neptune_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.neptune_rdf_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.networkx_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.ontotext_graphdb_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.rdf_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.tigergraph_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.graph_store" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.graph_document" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chains.graph_qa" {
		label="langchain_community.chains.graph_qa";
		"langchain_community.chains.graph_qa" -> "langchain_community.chains.graph_qa.cypher" [style="dotted"];
		"langchain_community.chains.graph_qa" -> "langchain_community.chains.graph_qa.cypher_utils" [style="dotted"];
		"langchain_community.chains.graph_qa" -> "langchain_community.chains.graph_qa.prompts" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.index_service" {
		label="google.cloud.aiplatform_v1.services.index_service";
		"google.cloud.aiplatform_v1.services.index_service" -> "google.cloud.aiplatform_v1.services.index_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_service" -> "google.cloud.aiplatform_v1.services.index_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_service" -> "google.cloud.aiplatform_v1.services.index_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_service" -> "google.cloud.aiplatform_v1.services.index_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services" {
		label="google.ai.generativelanguage_v1beta.services";
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.text_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.retriever_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.prediction_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.permission_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.model_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.generative_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.file_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.discuss_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.cache_service" [style="dotted"];
	}
	subgraph "cluster_openai.types.chat" {
		label="openai.types.chat";
		"openai.types.chat" -> "openai.types.chat.chat_completion" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_role" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_audio" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_chunk" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.completion_list_params" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.parsed_chat_completion" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_deleted" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_message" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_modality" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.completion_create_params" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.completion_update_params" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.parsed_function_tool_call" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_tool_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_audio_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_store_message" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_token_logprob" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_reasoning_effort" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_message_tool_call" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_tool_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_user_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_stream_options_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_system_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_function_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_assistant_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_text_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_developer_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_message_tool_call_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_named_tool_choice_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_image_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_prediction_content_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_tool_choice_option_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_refusal_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_function_call_option_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_input_audio_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.completions" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.persistent_resource_service" {
		label="google.cloud.aiplatform_v1.services.persistent_resource_service";
		"google.cloud.aiplatform_v1.services.persistent_resource_service" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.persistent_resource_service" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.persistent_resource_service" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.persistent_resource_service" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.storage" {
		label="langchain_community.storage";
		"langchain_community.storage" -> "langchain_community.storage.astradb" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.cassandra" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.mongodb" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.redis" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.sql" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.upstash_redis" [style="dotted"];
	}
	subgraph "cluster_zoneinfo" {
		label="zoneinfo";
		"zoneinfo" -> "zoneinfo._tzpath" [style="dotted"];
		"zoneinfo" -> "zoneinfo._common" [style="dotted"];
		"zoneinfo" -> "zoneinfo._zoneinfo" [style="dotted"];
	}
	subgraph "cluster_neo4j._codec.packstream" {
		label="neo4j._codec.packstream";
		"neo4j._codec.packstream" -> "neo4j._codec.packstream._common" [style="dotted"];
		"neo4j._codec.packstream" -> "neo4j._codec.packstream.v1" [style="dotted"];
		"neo4j._codec.packstream" -> "neo4j._codec.packstream._rust" [style="dotted"];
		"neo4j._codec.packstream" -> "neo4j._codec.packstream._python" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.shell" {
		label="langchain_community.tools.shell";
		"langchain_community.tools.shell" -> "langchain_community.tools.shell.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_core.documents" {
		label="langchain_core.documents";
		"langchain_core.documents" -> "langchain_core.documents.base" [style="dotted"];
		"langchain_core.documents" -> "langchain_core.documents.compressor" [style="dotted"];
		"langchain_core.documents" -> "langchain_core.documents.transformers" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.agent_toolkits.vectorstore" {
		label="langchain.agents.agent_toolkits.vectorstore";
		"langchain.agents.agent_toolkits.vectorstore" -> "langchain.agents.agent_toolkits.vectorstore.base" [style="dotted"];
		"langchain.agents.agent_toolkits.vectorstore" -> "langchain.agents.agent_toolkits.vectorstore.prompt" [style="dotted"];
		"langchain.agents.agent_toolkits.vectorstore" -> "langchain.agents.agent_toolkits.vectorstore.toolkit" [style="dotted"];
	}
	subgraph "cluster_setuptools" {
		label="setuptools";
		"setuptools" -> "setuptools._deprecation_warning" [style="dotted"];
		"setuptools" -> "setuptools.version" [style="dotted"];
		"setuptools" -> "setuptools.extension" [style="dotted"];
		"setuptools" -> "setuptools.windows_support" [style="dotted"];
		"setuptools" -> "setuptools.dist" [style="dotted"];
		"setuptools" -> "setuptools.depends" [style="dotted"];
		"setuptools" -> "setuptools.monkey" [style="dotted"];
		"setuptools" -> "setuptools.msvc" [style="dotted"];
		"setuptools" -> "setuptools._vendor" [style="dotted"];
		"setuptools" -> "setuptools._imp" [style="dotted"];
		"setuptools" -> "setuptools.py34compat" [style="dotted"];
		"setuptools" -> "setuptools.extern" [style="dotted"];
		"setuptools" -> "setuptools.command" [style="dotted"];
		"setuptools" -> "setuptools.config" [style="dotted"];
		"setuptools" -> "setuptools.installer" [style="dotted"];
		"setuptools" -> "setuptools.wheel" [style="dotted"];
		"setuptools" -> "setuptools.unicode_utils" [style="dotted"];
		"setuptools" -> "setuptools.glob" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.params" {
		label="google.cloud.aiplatform.v1.schema.predict.params";
		"google.cloud.aiplatform.v1.schema.predict.params" -> "google.cloud.aiplatform.v1.schema.predict.params.gapic_version" [style="dotted"];
	}
	subgraph "cluster_vertexai._model_garden" {
		label="vertexai._model_garden";
		"vertexai._model_garden" -> "vertexai._model_garden._model_garden_models" [style="dotted"];
	}
	subgraph "cluster_neo4j._async_compat" {
		label="neo4j._async_compat";
		"neo4j._async_compat" -> "neo4j._async_compat.util" [style="dotted"];
		"neo4j._async_compat" -> "neo4j._async_compat.concurrency" [style="dotted"];
		"neo4j._async_compat" -> "neo4j._async_compat.network" [style="dotted"];
		"neo4j._async_compat" -> "neo4j._async_compat.shims" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.organizations.transports" {
		label="google.cloud.resourcemanager_v3.services.organizations.transports";
		"google.cloud.resourcemanager_v3.services.organizations.transports" -> "google.cloud.resourcemanager_v3.services.organizations.transports.base" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.organizations.transports" -> "google.cloud.resourcemanager_v3.services.organizations.transports.grpc" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.organizations.transports" -> "google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.organizations.transports" -> "google.cloud.resourcemanager_v3.services.organizations.transports.rest" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.organizations.transports" -> "google.cloud.resourcemanager_v3.services.organizations.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.office365" {
		label="langchain_community.tools.office365";
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.create_draft_message" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.events_search" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.messages_search" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.send_event" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.send_message" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.utils" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.base" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt.multipart" {
		label="requests_toolbelt.multipart";
		"requests_toolbelt.multipart" -> "requests_toolbelt.multipart.encoder" [style="dotted"];
		"requests_toolbelt.multipart" -> "requests_toolbelt.multipart.decoder" [style="dotted"];
	}
	subgraph "cluster_langchain.memory" {
		label="langchain.memory";
		"langchain.memory" -> "langchain.memory.buffer" [style="dotted"];
		"langchain.memory" -> "langchain.memory.buffer_window" [style="dotted"];
		"langchain.memory" -> "langchain.memory.combined" [style="dotted"];
		"langchain.memory" -> "langchain.memory.entity" [style="dotted"];
		"langchain.memory" -> "langchain.memory.readonly" [style="dotted"];
		"langchain.memory" -> "langchain.memory.simple" [style="dotted"];
		"langchain.memory" -> "langchain.memory.summary" [style="dotted"];
		"langchain.memory" -> "langchain.memory.summary_buffer" [style="dotted"];
		"langchain.memory" -> "langchain.memory.token_buffer" [style="dotted"];
		"langchain.memory" -> "langchain.memory.vectorstore" [style="dotted"];
		"langchain.memory" -> "langchain.memory.vectorstore_token_buffer_memory" [style="dotted"];
		"langchain.memory" -> "langchain.memory.chat_memory" [style="dotted"];
		"langchain.memory" -> "langchain.memory.prompt" [style="dotted"];
		"langchain.memory" -> "langchain.memory.utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.model_garden_service" {
		label="google.cloud.aiplatform_v1beta1.services.model_garden_service";
		"google.cloud.aiplatform_v1beta1.services.model_garden_service" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_garden_service" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_garden_service" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_garden_service" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.comparison" {
		label="langchain.evaluation.comparison";
		"langchain.evaluation.comparison" -> "langchain.evaluation.comparison.eval_chain" [style="dotted"];
		"langchain.evaluation.comparison" -> "langchain.evaluation.comparison.prompt" [style="dotted"];
	}
	subgraph "cluster_multiprocessing.dummy" {
		label="multiprocessing.dummy";
		"multiprocessing.dummy" -> "multiprocessing.dummy.connection" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.retrieval_qa" {
		label="langchain.chains.retrieval_qa";
		"langchain.chains.retrieval_qa" -> "langchain.chains.retrieval_qa.base" [style="dotted"];
	}
	subgraph "cluster_google.api_core.future" {
		label="google.api_core.future";
		"google.api_core.future" -> "google.api_core.future.base" [style="dotted"];
		"google.api_core.future" -> "google.api_core.future._helpers" [style="dotted"];
		"google.api_core.future" -> "google.api_core.future.polling" [style="dotted"];
		"google.api_core.future" -> "google.api_core.future.async_future" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports";
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.sql" {
		label="langchain_community.agent_toolkits.sql";
		"langchain_community.agent_toolkits.sql" -> "langchain_community.agent_toolkits.sql.base" [style="dotted"];
		"langchain_community.agent_toolkits.sql" -> "langchain_community.agent_toolkits.sql.prompt" [style="dotted"];
		"langchain_community.agent_toolkits.sql" -> "langchain_community.agent_toolkits.sql.toolkit" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports";
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.compat.services" {
		label="google.cloud.aiplatform.compat.services";
		"google.cloud.aiplatform.compat.services" -> "google.cloud.aiplatform.compat.services.endpoint_service_client" [style="dotted"];
		"google.cloud.aiplatform.compat.services" -> "google.cloud.aiplatform.compat.services.deployment_resource_pool_service_client" [style="dotted"];
		"google.cloud.aiplatform.compat.services" -> "google.cloud.aiplatform.compat.services.dataset_service_client" [style="dotted"];
		"google.cloud.aiplatform.compat.services" -> "google.cloud.aiplatform.compat.services.featurestore_service_client" [style="dotted"];
		"google.cloud.aiplatform.compat.services" -> "google.cloud.aiplatform.compat.services.tensorboard_service_client" [style="dotted"];
		"google.cloud.aiplatform.compat.services" -> "google.cloud.aiplatform.compat.services.model_garden_service_client" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.xml" {
		label="langchain.agents.xml";
		"langchain.agents.xml" -> "langchain.agents.xml.base" [style="dotted"];
		"langchain.agents.xml" -> "langchain.agents.xml.prompt" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat" {
		label="cryptography.hazmat";
		"cryptography.hazmat" -> "cryptography.hazmat.bindings" [style="dotted"];
		"cryptography.hazmat" -> "cryptography.hazmat.decrepit" [style="dotted"];
		"cryptography.hazmat" -> "cryptography.hazmat._oid" [style="dotted"];
		"cryptography.hazmat" -> "cryptography.hazmat.primitives" [style="dotted"];
		"cryptography.hazmat" -> "cryptography.hazmat.backends" [style="dotted"];
	}
	subgraph "cluster_docx.dml" {
		label="docx.dml";
		"docx.dml" -> "docx.dml.color" [style="dotted"];
	}
	subgraph "cluster_numpy.random" {
		label="numpy.random";
		"numpy.random" -> "numpy.random._pickle" [style="dotted"];
		"numpy.random" -> "numpy.random._common" [style="dotted"];
		"numpy.random" -> "numpy.random._bounded_integers" [style="dotted"];
		"numpy.random" -> "numpy.random._generator" [style="dotted"];
		"numpy.random" -> "numpy.random.bit_generator" [style="dotted"];
		"numpy.random" -> "numpy.random._mt19937" [style="dotted"];
		"numpy.random" -> "numpy.random._pcg64" [style="dotted"];
		"numpy.random" -> "numpy.random._philox" [style="dotted"];
		"numpy.random" -> "numpy.random._sfc64" [style="dotted"];
		"numpy.random" -> "numpy.random.mtrand" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.sql" {
		label="sqlalchemy.sql";
		"sqlalchemy.sql" -> "sqlalchemy.sql.roles" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.operators" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.coercions" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.type_api" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.base" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.ddl" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.util" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.expression" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.dml" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.crud" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.visitors" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._typing" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.compiler" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.elements" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.lambdas" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.selectable" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.schema" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.traversals" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.annotation" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.events" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.default_comparator" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.cache_key" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.sqltypes" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.functions" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._py_util" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.naming" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._selectable_constructors" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._orm_types" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._dml_constructors" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._elements_constructors" [style="dotted"];
	}
	subgraph "cluster_lxml.includes.libexslt" {
		label="lxml.includes.libexslt";
	}
	subgraph "cluster_langchain_community.tools.google_lens" {
		label="langchain_community.tools.google_lens";
		"langchain_community.tools.google_lens" -> "langchain_community.tools.google_lens.tool" [style="dotted"];
	}
	subgraph "cluster_certifi" {
		label="certifi";
		"certifi" -> "certifi.core" [style="dotted"];
	}
	subgraph "cluster_vertexai.tuning" {
		label="vertexai.tuning";
		"vertexai.tuning" -> "vertexai.tuning._tuning" [style="dotted"];
		"vertexai.tuning" -> "vertexai.tuning._supervised_tuning" [style="dotted"];
	}
	subgraph "cluster_langchain.retrievers" {
		label="langchain.retrievers";
		"langchain.retrievers" -> "langchain.retrievers.contextual_compression" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.ensemble" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.merger_retriever" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.multi_query" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.multi_vector" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.parent_document_retriever" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.re_phraser" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.time_weighted_retriever" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.VectorStoreRetriever" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.self_query" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.document_compressors" [style="dotted"];
	}
	subgraph "cluster_langchain.retrievers.document_compressors" {
		label="langchain.retrievers.document_compressors";
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.base" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.chain_extract" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.chain_filter" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.cohere_rerank" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.cross_encoder_rerank" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.embeddings_filter" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.listwise_rerank" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.cross_encoder" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.chain_filter_prompt" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.chain_extract_prompt" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.azure_ai_services" {
		label="langchain_community.tools.azure_ai_services";
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.document_intelligence" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.image_analysis" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.speech_to_text" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.text_analytics_for_health" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.text_to_speech" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.utils" [style="dotted"];
	}
	subgraph "cluster_docx.oxml" {
		label="docx.oxml";
		"docx.oxml" -> "docx.oxml.drawing" [style="dotted"];
		"docx.oxml" -> "docx.oxml.parser" [style="dotted"];
		"docx.oxml" -> "docx.oxml.shape" [style="dotted"];
		"docx.oxml" -> "docx.oxml.shared" [style="dotted"];
		"docx.oxml" -> "docx.oxml.coreprops" [style="dotted"];
		"docx.oxml" -> "docx.oxml.document" [style="dotted"];
		"docx.oxml" -> "docx.oxml.numbering" [style="dotted"];
		"docx.oxml" -> "docx.oxml.section" [style="dotted"];
		"docx.oxml" -> "docx.oxml.settings" [style="dotted"];
		"docx.oxml" -> "docx.oxml.styles" [style="dotted"];
		"docx.oxml" -> "docx.oxml.table" [style="dotted"];
		"docx.oxml" -> "docx.oxml.ns" [style="dotted"];
		"docx.oxml" -> "docx.oxml.xmlchemy" [style="dotted"];
		"docx.oxml" -> "docx.oxml.text" [style="dotted"];
		"docx.oxml" -> "docx.oxml.simpletypes" [style="dotted"];
		"docx.oxml" -> "docx.oxml.exceptions" [style="dotted"];
	}
	subgraph "cluster_openai.types.fine_tuning.jobs" {
		label="openai.types.fine_tuning.jobs";
		"openai.types.fine_tuning.jobs" -> "openai.types.fine_tuning.jobs.checkpoint_list_params" [style="dotted"];
		"openai.types.fine_tuning.jobs" -> "openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.decrepit.ciphers" {
		label="cryptography.hazmat.decrepit.ciphers";
		"cryptography.hazmat.decrepit.ciphers" -> "cryptography.hazmat.decrepit.ciphers.algorithms" [style="dotted"];
	}
	subgraph "cluster_openai.resources.beta.threads.runs" {
		label="openai.resources.beta.threads.runs";
		"openai.resources.beta.threads.runs" -> "openai.resources.beta.threads.runs.runs" [style="dotted"];
		"openai.resources.beta.threads.runs" -> "openai.resources.beta.threads.runs.steps" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.amadeus" {
		label="langchain_community.agent_toolkits.amadeus";
		"langchain_community.agent_toolkits.amadeus" -> "langchain_community.agent_toolkits.amadeus.toolkit" [style="dotted"];
	}
	subgraph "cluster_multimethod" {
		label="multimethod";
	}
	subgraph "cluster_openai.resources.beta.threads" {
		label="openai.resources.beta.threads";
		"openai.resources.beta.threads" -> "openai.resources.beta.threads.runs" [style="dotted"];
		"openai.resources.beta.threads" -> "openai.resources.beta.threads.threads" [style="dotted"];
		"openai.resources.beta.threads" -> "openai.resources.beta.threads.messages" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.primitives.ciphers" {
		label="cryptography.hazmat.primitives.ciphers";
		"cryptography.hazmat.primitives.ciphers" -> "cryptography.hazmat.primitives.ciphers.algorithms" [style="dotted"];
		"cryptography.hazmat.primitives.ciphers" -> "cryptography.hazmat.primitives.ciphers.modes" [style="dotted"];
		"cryptography.hazmat.primitives.ciphers" -> "cryptography.hazmat.primitives.ciphers.base" [style="dotted"];
	}
	subgraph "cluster__distutils_hack" {
		label="_distutils_hack";
		"_distutils_hack" -> "_distutils_hack.override" [style="dotted"];
	}
	subgraph "cluster_pkg_resources._vendor.packaging" {
		label="pkg_resources._vendor.packaging";
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.__about__" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging._compat" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging._structures" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging._typing" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.markers" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.requirements" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.specifiers" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.tags" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.utils" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.version" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types";
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_object_detection" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_segmentation" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_regression" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_extraction" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_sentiment" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.time_series_forecasting" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_action_recognition" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_object_tracking" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" {
		label="google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports";
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.pubmed" {
		label="langchain_community.tools.pubmed";
		"langchain_community.tools.pubmed" -> "langchain_community.tools.pubmed.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.multion" {
		label="langchain_community.tools.multion";
		"langchain_community.tools.multion" -> "langchain_community.tools.multion.close_session" [style="dotted"];
		"langchain_community.tools.multion" -> "langchain_community.tools.multion.create_session" [style="dotted"];
		"langchain_community.tools.multion" -> "langchain_community.tools.multion.update_session" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.criteria" {
		label="langchain.evaluation.criteria";
		"langchain.evaluation.criteria" -> "langchain.evaluation.criteria.eval_chain" [style="dotted"];
		"langchain.evaluation.criteria" -> "langchain.evaluation.criteria.prompt" [style="dotted"];
	}
	subgraph "cluster_PIL" {
		label="PIL";
		"PIL" -> "PIL._version" [style="dotted"];
		"PIL" -> "PIL.ExifTags" [style="dotted"];
		"PIL" -> "PIL.ImageMode" [style="dotted"];
		"PIL" -> "PIL.TiffTags" [style="dotted"];
		"PIL" -> "PIL._imaging" [style="dotted"];
		"PIL" -> "PIL.Image" [style="dotted"];
		"PIL" -> "PIL.ImageFile" [style="dotted"];
		"PIL" -> "PIL.GimpGradientFile" [style="dotted"];
		"PIL" -> "PIL.GimpPaletteFile" [style="dotted"];
		"PIL" -> "PIL.ImageColor" [style="dotted"];
		"PIL" -> "PIL.PaletteFile" [style="dotted"];
		"PIL" -> "PIL.ImagePalette" [style="dotted"];
		"PIL" -> "PIL.ImageOps" [style="dotted"];
		"PIL" -> "PIL.TiffImagePlugin" [style="dotted"];
		"PIL" -> "PIL.ImageFilter" [style="dotted"];
		"PIL" -> "PIL.ImageQt" [style="dotted"];
		"PIL" -> "PIL.BmpImagePlugin" [style="dotted"];
		"PIL" -> "PIL.ImageChops" [style="dotted"];
		"PIL" -> "PIL._imagingmath" [style="dotted"];
		"PIL" -> "PIL.ImageMath" [style="dotted"];
		"PIL" -> "PIL.ImageSequence" [style="dotted"];
		"PIL" -> "PIL.GifImagePlugin" [style="dotted"];
		"PIL" -> "PIL.JpegImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PpmImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PngImagePlugin" [style="dotted"];
		"PIL" -> "PIL._imagingcms" [style="dotted"];
		"PIL" -> "PIL.ImageWin" [style="dotted"];
		"PIL" -> "PIL.ImageCms" [style="dotted"];
		"PIL" -> "PIL.ImageShow" [style="dotted"];
		"PIL" -> "PIL.ImageDraw" [style="dotted"];
		"PIL" -> "PIL.features" [style="dotted"];
		"PIL" -> "PIL.ImageFont" [style="dotted"];
		"PIL" -> "PIL.ImagePath" [style="dotted"];
		"PIL" -> "PIL.ImageDraw2" [style="dotted"];
		"PIL" -> "PIL._avif" [style="dotted"];
		"PIL" -> "PIL.Jpeg2KImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PdfParser" [style="dotted"];
		"PIL" -> "PIL._imagingtk" [style="dotted"];
		"PIL" -> "PIL.ImageTk" [style="dotted"];
		"PIL" -> "PIL._webp" [style="dotted"];
		"PIL" -> "PIL._binary" [style="dotted"];
		"PIL" -> "PIL._deprecate" [style="dotted"];
		"PIL" -> "PIL._util" [style="dotted"];
		"PIL" -> "PIL._typing" [style="dotted"];
		"PIL" -> "PIL.AvifImagePlugin" [style="dotted"];
		"PIL" -> "PIL.BlpImagePlugin" [style="dotted"];
		"PIL" -> "PIL.BufrStubImagePlugin" [style="dotted"];
		"PIL" -> "PIL.CurImagePlugin" [style="dotted"];
		"PIL" -> "PIL.DcxImagePlugin" [style="dotted"];
		"PIL" -> "PIL.DdsImagePlugin" [style="dotted"];
		"PIL" -> "PIL.EpsImagePlugin" [style="dotted"];
		"PIL" -> "PIL.FitsImagePlugin" [style="dotted"];
		"PIL" -> "PIL.FliImagePlugin" [style="dotted"];
		"PIL" -> "PIL.FpxImagePlugin" [style="dotted"];
		"PIL" -> "PIL.FtexImagePlugin" [style="dotted"];
		"PIL" -> "PIL.GbrImagePlugin" [style="dotted"];
		"PIL" -> "PIL.GribStubImagePlugin" [style="dotted"];
		"PIL" -> "PIL.Hdf5StubImagePlugin" [style="dotted"];
		"PIL" -> "PIL.IcnsImagePlugin" [style="dotted"];
		"PIL" -> "PIL.IcoImagePlugin" [style="dotted"];
		"PIL" -> "PIL.ImImagePlugin" [style="dotted"];
		"PIL" -> "PIL.ImtImagePlugin" [style="dotted"];
		"PIL" -> "PIL.IptcImagePlugin" [style="dotted"];
		"PIL" -> "PIL.McIdasImagePlugin" [style="dotted"];
		"PIL" -> "PIL.MicImagePlugin" [style="dotted"];
		"PIL" -> "PIL.MpegImagePlugin" [style="dotted"];
		"PIL" -> "PIL.MpoImagePlugin" [style="dotted"];
		"PIL" -> "PIL.MspImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PalmImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PcdImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PcxImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PdfImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PixarImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PsdImagePlugin" [style="dotted"];
		"PIL" -> "PIL.QoiImagePlugin" [style="dotted"];
		"PIL" -> "PIL.SgiImagePlugin" [style="dotted"];
		"PIL" -> "PIL.SpiderImagePlugin" [style="dotted"];
		"PIL" -> "PIL.SunImagePlugin" [style="dotted"];
		"PIL" -> "PIL.TgaImagePlugin" [style="dotted"];
		"PIL" -> "PIL.WebPImagePlugin" [style="dotted"];
		"PIL" -> "PIL.WmfImagePlugin" [style="dotted"];
		"PIL" -> "PIL.XVThumbImagePlugin" [style="dotted"];
		"PIL" -> "PIL.XbmImagePlugin" [style="dotted"];
		"PIL" -> "PIL.XpmImagePlugin" [style="dotted"];
		"PIL" -> "PIL.JpegPresets" [style="dotted"];
		"PIL" -> "PIL._imagingft" [style="dotted"];
	}
	subgraph "cluster_google.longrunning" {
		label="google.longrunning";
		"google.longrunning" -> "google.longrunning.operations_proto_pb2" [style="dotted"];
		"google.longrunning" -> "google.longrunning.operations_pb2" [style="dotted"];
		"google.longrunning" -> "google.longrunning.operations_grpc_pb2" [style="dotted"];
		"google.longrunning" -> "google.longrunning.operations_pb2_grpc" [style="dotted"];
	}
	subgraph "cluster_concurrent.futures" {
		label="concurrent.futures";
		"concurrent.futures" -> "concurrent.futures._base" [style="dotted"];
		"concurrent.futures" -> "concurrent.futures.process" [style="dotted"];
		"concurrent.futures" -> "concurrent.futures.thread" [style="dotted"];
	}
	subgraph "cluster_anthropic.lib" {
		label="anthropic.lib";
		"anthropic.lib" -> "anthropic.lib.streaming" [style="dotted"];
		"anthropic.lib" -> "anthropic.lib.bedrock" [style="dotted"];
		"anthropic.lib" -> "anthropic.lib.vertex" [style="dotted"];
		"anthropic.lib" -> "anthropic.lib._extras" [style="dotted"];
	}
	subgraph "cluster_anthropic.types.shared" {
		label="anthropic.types.shared";
		"anthropic.types.shared" -> "anthropic.types.shared.error_object" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.billing_error" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.error_response" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.not_found_error" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.api_error_object" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.overloaded_error" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.permission_error" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.rate_limit_error" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.authentication_error" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.gateway_timeout_error" [style="dotted"];
		"anthropic.types.shared" -> "anthropic.types.shared.invalid_request_error" [style="dotted"];
	}
	subgraph "cluster_pandas.core" {
		label="pandas.core";
		"pandas.core" -> "pandas.core.roperator" [style="dotted"];
		"pandas.core" -> "pandas.core.missing" [style="dotted"];
		"pandas.core" -> "pandas.core.nanops" [style="dotted"];
		"pandas.core" -> "pandas.core.indexing" [style="dotted"];
		"pandas.core" -> "pandas.core.sample" [style="dotted"];
		"pandas.core" -> "pandas.core.algorithms" [style="dotted"];
		"pandas.core" -> "pandas.core.arraylike" [style="dotted"];
		"pandas.core" -> "pandas.core.config_init" [style="dotted"];
		"pandas.core" -> "pandas.core.api" [style="dotted"];
		"pandas.core" -> "pandas.core.frame" [style="dotted"];
		"pandas.core" -> "pandas.core.generic" [style="dotted"];
		"pandas.core" -> "pandas.core.resample" [style="dotted"];
		"pandas.core" -> "pandas.core.series" [style="dotted"];
		"pandas.core" -> "pandas.core.base" [style="dotted"];
		"pandas.core" -> "pandas.core.common" [style="dotted"];
		"pandas.core" -> "pandas.core.dtypes" [style="dotted"];
		"pandas.core" -> "pandas.core.construction" [style="dotted"];
		"pandas.core" -> "pandas.core.internals" [style="dotted"];
		"pandas.core" -> "pandas.core.ops" [style="dotted"];
		"pandas.core" -> "pandas.core.util" [style="dotted"];
		"pandas.core" -> "pandas.core.computation" [style="dotted"];
		"pandas.core" -> "pandas.core.sorting" [style="dotted"];
		"pandas.core" -> "pandas.core.arrays" [style="dotted"];
		"pandas.core" -> "pandas.core.accessor" [style="dotted"];
		"pandas.core" -> "pandas.core.strings" [style="dotted"];
		"pandas.core" -> "pandas.core.groupby" [style="dotted"];
		"pandas.core" -> "pandas.core.apply" [style="dotted"];
		"pandas.core" -> "pandas.core.window" [style="dotted"];
		"pandas.core" -> "pandas.core.shared_docs" [style="dotted"];
		"pandas.core" -> "pandas.core.tools" [style="dotted"];
		"pandas.core" -> "pandas.core._numba" [style="dotted"];
		"pandas.core" -> "pandas.core.indexers" [style="dotted"];
		"pandas.core" -> "pandas.core.array_algos" [style="dotted"];
		"pandas.core" -> "pandas.core.reshape" [style="dotted"];
		"pandas.core" -> "pandas.core.indexes" [style="dotted"];
		"pandas.core" -> "pandas.core.methods" [style="dotted"];
		"pandas.core" -> "pandas.core.flags" [style="dotted"];
		"pandas.core" -> "pandas.core.interchange" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.connectors" {
		label="sqlalchemy.connectors";
		"sqlalchemy.connectors" -> "sqlalchemy.connectors.asyncio" [style="dotted"];
		"sqlalchemy.connectors" -> "sqlalchemy.connectors.pyodbc" [style="dotted"];
		"sqlalchemy.connectors" -> "sqlalchemy.connectors.aioodbc" [style="dotted"];
	}
	subgraph "cluster_anthropic._decoders" {
		label="anthropic._decoders";
		"anthropic._decoders" -> "anthropic._decoders.jsonl" [style="dotted"];
	}
	subgraph "cluster_jiter" {
		label="jiter";
		"jiter" -> "jiter.jiter" [style="dotted"];
		"jiter" -> "jiter.from_json" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.json_chat" {
		label="langchain.agents.json_chat";
		"langchain.agents.json_chat" -> "langchain.agents.json_chat.base" [style="dotted"];
		"langchain.agents.json_chat" -> "langchain.agents.json_chat.prompt" [style="dotted"];
	}
	subgraph "cluster_anthropic.lib.bedrock" {
		label="anthropic.lib.bedrock";
		"anthropic.lib.bedrock" -> "anthropic.lib.bedrock._client" [style="dotted"];
		"anthropic.lib.bedrock" -> "anthropic.lib.bedrock._beta" [style="dotted"];
		"anthropic.lib.bedrock" -> "anthropic.lib.bedrock._stream_decoder" [style="dotted"];
		"anthropic.lib.bedrock" -> "anthropic.lib.bedrock._auth" [style="dotted"];
		"anthropic.lib.bedrock" -> "anthropic.lib.bedrock._beta_messages" [style="dotted"];
	}
	subgraph "cluster_pandas.core.arrays" {
		label="pandas.core.arrays";
		"pandas.core.arrays" -> "pandas.core.arrays.datetimelike" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.arrow" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.base" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.boolean" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.categorical" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.datetimes" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.floating" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.integer" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.interval" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.masked" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.numpy_" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.period" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.sparse" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.string_" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.string_arrow" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.timedeltas" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._ranges" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._mixins" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._arrow_string_mixins" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.numeric" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._utils" [style="dotted"];
	}
	subgraph "cluster_httpcore._backends" {
		label="httpcore._backends";
		"httpcore._backends" -> "httpcore._backends.base" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.mock" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.sync" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.anyio" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.trio" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.auto" [style="dotted"];
	}
	subgraph "cluster_distutils.command" {
		label="distutils.command";
		"distutils.command" -> "distutils.command.build_ext" [style="dotted"];
		"distutils.command" -> "distutils.command.sdist" [style="dotted"];
		"distutils.command" -> "distutils.command.bdist" [style="dotted"];
	}
	subgraph "cluster_vertexai.preview.tuning" {
		label="vertexai.preview.tuning";
		"vertexai.preview.tuning" -> "vertexai.preview.tuning.sft" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.vertex_rag_data_service" {
		label="google.cloud.aiplatform_v1.services.vertex_rag_data_service";
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports";
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_numpy.core" {
		label="numpy.core";
		"numpy.core" -> "numpy.core.overrides" [style="dotted"];
		"numpy.core" -> "numpy.core.multiarray" [style="dotted"];
		"numpy.core" -> "numpy.core.umath" [style="dotted"];
		"numpy.core" -> "numpy.core.numerictypes" [style="dotted"];
		"numpy.core" -> "numpy.core.numeric" [style="dotted"];
		"numpy.core" -> "numpy.core._exceptions" [style="dotted"];
		"numpy.core" -> "numpy.core.getlimits" [style="dotted"];
		"numpy.core" -> "numpy.core.array" [style="dotted"];
		"numpy.core" -> "numpy.core.asarray" [style="dotted"];
		"numpy.core" -> "numpy.core.zeros" [style="dotted"];
		"numpy.core" -> "numpy.core.empty" [style="dotted"];
		"numpy.core" -> "numpy.core.empty_like" [style="dotted"];
		"numpy.core" -> "numpy.core.intc" [style="dotted"];
		"numpy.core" -> "numpy.core.single" [style="dotted"];
		"numpy.core" -> "numpy.core.double" [style="dotted"];
		"numpy.core" -> "numpy.core.csingle" [style="dotted"];
		"numpy.core" -> "numpy.core.cdouble" [style="dotted"];
		"numpy.core" -> "numpy.core.inexact" [style="dotted"];
		"numpy.core" -> "numpy.core.complexfloating" [style="dotted"];
		"numpy.core" -> "numpy.core.newaxis" [style="dotted"];
		"numpy.core" -> "numpy.core.all" [style="dotted"];
		"numpy.core" -> "numpy.core.Inf" [style="dotted"];
		"numpy.core" -> "numpy.core.dot" [style="dotted"];
		"numpy.core" -> "numpy.core.add" [style="dotted"];
		"numpy.core" -> "numpy.core.multiply" [style="dotted"];
		"numpy.core" -> "numpy.core.sqrt" [style="dotted"];
		"numpy.core" -> "numpy.core.sum" [style="dotted"];
		"numpy.core" -> "numpy.core.isfinite" [style="dotted"];
		"numpy.core" -> "numpy.core.finfo" [style="dotted"];
		"numpy.core" -> "numpy.core.errstate" [style="dotted"];
		"numpy.core" -> "numpy.core.geterrobj" [style="dotted"];
		"numpy.core" -> "numpy.core.moveaxis" [style="dotted"];
		"numpy.core" -> "numpy.core.amin" [style="dotted"];
		"numpy.core" -> "numpy.core.amax" [style="dotted"];
		"numpy.core" -> "numpy.core.prod" [style="dotted"];
		"numpy.core" -> "numpy.core.atleast_2d" [style="dotted"];
		"numpy.core" -> "numpy.core.intp" [style="dotted"];
		"numpy.core" -> "numpy.core.asanyarray" [style="dotted"];
		"numpy.core" -> "numpy.core.object_" [style="dotted"];
		"numpy.core" -> "numpy.core.matmul" [style="dotted"];
		"numpy.core" -> "numpy.core.swapaxes" [style="dotted"];
		"numpy.core" -> "numpy.core.divide" [style="dotted"];
		"numpy.core" -> "numpy.core.count_nonzero" [style="dotted"];
		"numpy.core" -> "numpy.core.isnan" [style="dotted"];
		"numpy.core" -> "numpy.core.sign" [style="dotted"];
		"numpy.core" -> "numpy.core.argsort" [style="dotted"];
		"numpy.core" -> "numpy.core.sort" [style="dotted"];
		"numpy.core" -> "numpy.core.reciprocal" [style="dotted"];
		"numpy.core" -> "numpy.core.iinfo" [style="dotted"];
		"numpy.core" -> "numpy.core.float32" [style="dotted"];
		"numpy.core" -> "numpy.core.arange" [style="dotted"];
		"numpy.core" -> "numpy.core.array_repr" [style="dotted"];
		"numpy.core" -> "numpy.core.ndarray" [style="dotted"];
		"numpy.core" -> "numpy.core.isnat" [style="dotted"];
		"numpy.core" -> "numpy.core.isscalar" [style="dotted"];
		"numpy.core" -> "numpy.core.signbit" [style="dotted"];
		"numpy.core" -> "numpy.core.array2string" [style="dotted"];
		"numpy.core" -> "numpy.core.inf" [style="dotted"];
		"numpy.core" -> "numpy.core.bool_" [style="dotted"];
		"numpy.core" -> "numpy.core.max" [style="dotted"];
		"numpy.core" -> "numpy.core.number" [style="dotted"];
		"numpy.core" -> "numpy.core.float_" [style="dotted"];
		"numpy.core" -> "numpy.core.result_type" [style="dotted"];
		"numpy.core" -> "numpy.core.transpose" [style="dotted"];
		"numpy.core" -> "numpy.core.linspace" [style="dotted"];
		"numpy.core" -> "numpy.core.vstack" [style="dotted"];
		"numpy.core" -> "numpy.core.atleast_3d" [style="dotted"];
		"numpy.core" -> "numpy.core.atleast_1d" [style="dotted"];
		"numpy.core" -> "numpy.core.hstack" [style="dotted"];
		"numpy.core" -> "numpy.core.ones" [style="dotted"];
		"numpy.core" -> "numpy.core.ufunc" [style="dotted"];
		"numpy.core" -> "numpy.core._methods" [style="dotted"];
		"numpy.core" -> "numpy.core.fromnumeric" [style="dotted"];
		"numpy.core" -> "numpy.core.shape_base" [style="dotted"];
		"numpy.core" -> "numpy.core._asarray" [style="dotted"];
		"numpy.core" -> "numpy.core.defchararray" [style="dotted"];
		"numpy.core" -> "numpy.core.records" [style="dotted"];
		"numpy.core" -> "numpy.core.memmap" [style="dotted"];
		"numpy.core" -> "numpy.core.function_base" [style="dotted"];
		"numpy.core" -> "numpy.core._machar" [style="dotted"];
		"numpy.core" -> "numpy.core.einsumfunc" [style="dotted"];
		"numpy.core" -> "numpy.core._add_newdocs" [style="dotted"];
		"numpy.core" -> "numpy.core._add_newdocs_scalars" [style="dotted"];
		"numpy.core" -> "numpy.core._dtype_ctypes" [style="dotted"];
		"numpy.core" -> "numpy.core._internal" [style="dotted"];
		"numpy.core" -> "numpy.core._dtype" [style="dotted"];
		"numpy.core" -> "numpy.core.conjugate" [style="dotted"];
		"numpy.core" -> "numpy.core.integer" [style="dotted"];
		"numpy.core" -> "numpy.core._ufunc_config" [style="dotted"];
		"numpy.core" -> "numpy.core.arrayprint" [style="dotted"];
		"numpy.core" -> "numpy.core._string_helpers" [style="dotted"];
		"numpy.core" -> "numpy.core._type_aliases" [style="dotted"];
		"numpy.core" -> "numpy.core._multiarray_umath" [style="dotted"];
		"numpy.core" -> "numpy.core._multiarray_tests" [style="dotted"];
	}
	subgraph "cluster_dotenv" {
		label="dotenv";
		"dotenv" -> "dotenv.main" [style="dotted"];
		"dotenv" -> "dotenv.ipython" [style="dotted"];
		"dotenv" -> "dotenv.parser" [style="dotted"];
		"dotenv" -> "dotenv.variables" [style="dotted"];
	}
	subgraph "cluster_pydantic._internal" {
		label="pydantic._internal";
		"pydantic._internal" -> "pydantic._internal._git" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._repr" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._typing_extra" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._internal_dataclass" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._config" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._core_metadata" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._decorators" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._generics" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._fields" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._forward_ref" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._mock_val_ser" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._model_construction" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._discriminated_union" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._known_annotated_metadata" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._validate_call" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._decorators_v1" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._core_utils" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._schema_generation_shared" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._dataclasses" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._generate_schema" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._namespace_utils" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._utils" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._import_utils" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._docs_extraction" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._schema_gather" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._validators" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._serializers" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._signature" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.persistent_resource_service" {
		label="google.cloud.aiplatform_v1beta1.services.persistent_resource_service";
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" [style="dotted"];
	}
	subgraph "cluster_docstring_parser" {
		label="docstring_parser";
		"docstring_parser" -> "docstring_parser.common" [style="dotted"];
		"docstring_parser" -> "docstring_parser.epydoc" [style="dotted"];
		"docstring_parser" -> "docstring_parser.google" [style="dotted"];
		"docstring_parser" -> "docstring_parser.numpydoc" [style="dotted"];
		"docstring_parser" -> "docstring_parser.rest" [style="dotted"];
		"docstring_parser" -> "docstring_parser.parser" [style="dotted"];
		"docstring_parser" -> "docstring_parser.util" [style="dotted"];
		"docstring_parser" -> "docstring_parser.attrdoc" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.instance" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.instance";
		"google.cloud.aiplatform.v1beta1.schema.predict.instance" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance.gapic_version" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.graphql" {
		label="langchain_community.tools.graphql";
		"langchain_community.tools.graphql" -> "langchain_community.tools.graphql.tool" [style="dotted"];
	}
	subgraph "cluster_neo4j._async._debug" {
		label="neo4j._async._debug";
		"neo4j._async._debug" -> "neo4j._async._debug._concurrency_check" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.query_constructor" {
		label="langchain.chains.query_constructor";
		"langchain.chains.query_constructor" -> "langchain.chains.query_constructor.base" [style="dotted"];
		"langchain.chains.query_constructor" -> "langchain.chains.query_constructor.parser" [style="dotted"];
		"langchain.chains.query_constructor" -> "langchain.chains.query_constructor.prompt" [style="dotted"];
		"langchain.chains.query_constructor" -> "langchain.chains.query_constructor.schema" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.spark_sql" {
		label="langchain_community.agent_toolkits.spark_sql";
		"langchain_community.agent_toolkits.spark_sql" -> "langchain_community.agent_toolkits.spark_sql.base" [style="dotted"];
		"langchain_community.agent_toolkits.spark_sql" -> "langchain_community.agent_toolkits.spark_sql.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.spark_sql" -> "langchain_community.agent_toolkits.spark_sql.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain_neo4j.chains.graph_qa" {
		label="langchain_neo4j.chains.graph_qa";
		"langchain_neo4j.chains.graph_qa" -> "langchain_neo4j.chains.graph_qa.cypher" [style="dotted"];
		"langchain_neo4j.chains.graph_qa" -> "langchain_neo4j.chains.graph_qa.cypher_utils" [style="dotted"];
		"langchain_neo4j.chains.graph_qa" -> "langchain_neo4j.chains.graph_qa.prompts" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.vertex_rag_service.transports" {
		label="google.cloud.aiplatform_v1.services.vertex_rag_service.transports";
		"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec.der" {
		label="pyasn1.codec.der";
		"pyasn1.codec.der" -> "pyasn1.codec.der.decoder" [style="dotted"];
		"pyasn1.codec.der" -> "pyasn1.codec.der.encoder" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.openai_tools" {
		label="langchain.agents.openai_tools";
		"langchain.agents.openai_tools" -> "langchain.agents.openai_tools.base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports";
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_six.moves" {
		label="six.moves";
		"six.moves" -> "six.moves._thread" [style="dotted"];
		"six.moves" -> "six.moves.winreg" [style="dotted"];
		"six.moves" -> "six.moves.range" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.vectorstore" {
		label="langchain_community.tools.vectorstore";
		"langchain_community.tools.vectorstore" -> "langchain_community.tools.vectorstore.tool" [style="dotted"];
	}
	subgraph "cluster_neo4j.graph" {
		label="neo4j.graph";
	}
	subgraph "cluster_langchain_core.runnables" {
		label="langchain_core.runnables";
		"langchain_core.runnables" -> "langchain_core.runnables.base" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.branch" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.config" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.fallbacks" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.history" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.passthrough" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.router" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.utils" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.schema" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.graph" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.graph_ascii" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.graph_png" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.graph_mermaid" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.configurable" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.retry" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.youtube" {
		label="langchain_community.tools.youtube";
		"langchain_community.tools.youtube" -> "langchain_community.tools.youtube.search" [style="dotted"];
	}
	subgraph "cluster_ctypes" {
		label="ctypes";
		"ctypes" -> "ctypes._endian" [style="dotted"];
		"ctypes" -> "ctypes.wintypes" [style="dotted"];
		"ctypes" -> "ctypes.util" [style="dotted"];
		"ctypes" -> "ctypes._aix" [style="dotted"];
		"ctypes" -> "ctypes.macholib" [style="dotted"];
	}
	subgraph "cluster_openai.types.fine_tuning" {
		label="openai.types.fine_tuning";
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.job_list_params" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.job_create_params" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job_event" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.job_list_events_params" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job_integration" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job_wandb_integration" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job_wandb_integration_object" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.checkpoints" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.jobs" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1" {
		label="google.cloud.aiplatform_v1beta1";
		"google.cloud.aiplatform_v1beta1" -> "google.cloud.aiplatform_v1beta1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform_v1beta1" -> "google.cloud.aiplatform_v1beta1.services" [style="dotted"];
		"google.cloud.aiplatform_v1beta1" -> "google.cloud.aiplatform_v1beta1.types" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.scenexplain" {
		label="langchain_community.tools.scenexplain";
		"langchain_community.tools.scenexplain" -> "langchain_community.tools.scenexplain.tool" [style="dotted"];
	}
	subgraph "cluster_google.auth.compute_engine" {
		label="google.auth.compute_engine";
		"google.auth.compute_engine" -> "google.auth.compute_engine._metadata" [style="dotted"];
		"google.auth.compute_engine" -> "google.auth.compute_engine.credentials" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports";
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_vertexai.language_models" {
		label="vertexai.language_models";
		"vertexai.language_models" -> "vertexai.language_models._evaluatable_language_models" [style="dotted"];
		"vertexai.language_models" -> "vertexai.language_models._language_models" [style="dotted"];
		"vertexai.language_models" -> "vertexai.language_models._distillation" [style="dotted"];
	}
	subgraph "cluster_uritemplate" {
		label="uritemplate";
		"uritemplate" -> "uritemplate.variable" [style="dotted"];
		"uritemplate" -> "uritemplate.api" [style="dotted"];
		"uritemplate" -> "uritemplate.orderedset" [style="dotted"];
		"uritemplate" -> "uritemplate.template" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.event" {
		label="sqlalchemy.event";
		"sqlalchemy.event" -> "sqlalchemy.event.legacy" [style="dotted"];
		"sqlalchemy.event" -> "sqlalchemy.event.api" [style="dotted"];
		"sqlalchemy.event" -> "sqlalchemy.event.attr" [style="dotted"];
		"sqlalchemy.event" -> "sqlalchemy.event.base" [style="dotted"];
		"sqlalchemy.event" -> "sqlalchemy.event.registry" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.index_endpoint_service" {
		label="google.cloud.aiplatform_v1.services.index_endpoint_service";
		"google.cloud.aiplatform_v1.services.index_endpoint_service" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_endpoint_service" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_endpoint_service" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.index_endpoint_service" -> "google.cloud.aiplatform_v1.services.index_endpoint_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.file_management" {
		label="langchain_community.tools.file_management";
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.copy" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.delete" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.file_search" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.list_dir" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.move" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.read" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.write" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.utils" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.nla" {
		label="langchain_community.agent_toolkits.nla";
		"langchain_community.agent_toolkits.nla" -> "langchain_community.agent_toolkits.nla.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.nla" -> "langchain_community.agent_toolkits.nla.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.searchapi" {
		label="langchain_community.tools.searchapi";
		"langchain_community.tools.searchapi" -> "langchain_community.tools.searchapi.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports";
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" -> "google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.gmail" {
		label="langchain_community.agent_toolkits.gmail";
		"langchain_community.agent_toolkits.gmail" -> "langchain_community.agent_toolkits.gmail.toolkit" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag.retrievers.external.pinecone" {
		label="neo4j_graphrag.retrievers.external.pinecone";
		"neo4j_graphrag.retrievers.external.pinecone" -> "neo4j_graphrag.retrievers.external.pinecone.pinecone" [style="dotted"];
		"neo4j_graphrag.retrievers.external.pinecone" -> "neo4j_graphrag.retrievers.external.pinecone.types" [style="dotted"];
	}
	subgraph "cluster_tenacity" {
		label="tenacity";
		"tenacity" -> "tenacity._utils" [style="dotted"];
		"tenacity" -> "tenacity.retry" [style="dotted"];
		"tenacity" -> "tenacity.nap" [style="dotted"];
		"tenacity" -> "tenacity.stop" [style="dotted"];
		"tenacity" -> "tenacity.wait" [style="dotted"];
		"tenacity" -> "tenacity.before" [style="dotted"];
		"tenacity" -> "tenacity.after" [style="dotted"];
		"tenacity" -> "tenacity.before_sleep" [style="dotted"];
		"tenacity" -> "tenacity.asyncio" [style="dotted"];
		"tenacity" -> "tenacity.tornadoweb" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.metadata.schema" {
		label="google.cloud.aiplatform.metadata.schema";
		"google.cloud.aiplatform.metadata.schema" -> "google.cloud.aiplatform.metadata.schema.utils" [style="dotted"];
		"google.cloud.aiplatform.metadata.schema" -> "google.cloud.aiplatform.metadata.schema.base_artifact" [style="dotted"];
		"google.cloud.aiplatform.metadata.schema" -> "google.cloud.aiplatform.metadata.schema.google" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.index_endpoint_service" {
		label="google.cloud.aiplatform_v1beta1.services.index_endpoint_service";
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.index_endpoint_service" -> "google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" [style="dotted"];
	}
	subgraph "cluster_numpy.lib" {
		label="numpy.lib";
		"numpy.lib" -> "numpy.lib.mixins" [style="dotted"];
		"numpy.lib" -> "numpy.lib.scimath" [style="dotted"];
		"numpy.lib" -> "numpy.lib.type_check" [style="dotted"];
		"numpy.lib" -> "numpy.lib.iscomplexobj" [style="dotted"];
		"numpy.lib" -> "numpy.lib.real" [style="dotted"];
		"numpy.lib" -> "numpy.lib.imag" [style="dotted"];
		"numpy.lib" -> "numpy.lib.recfunctions" [style="dotted"];
		"numpy.lib" -> "numpy.lib.index_tricks" [style="dotted"];
		"numpy.lib" -> "numpy.lib.function_base" [style="dotted"];
		"numpy.lib" -> "numpy.lib.nanfunctions" [style="dotted"];
		"numpy.lib" -> "numpy.lib.shape_base" [style="dotted"];
		"numpy.lib" -> "numpy.lib.stride_tricks" [style="dotted"];
		"numpy.lib" -> "numpy.lib.twodim_base" [style="dotted"];
		"numpy.lib" -> "numpy.lib.ufunclike" [style="dotted"];
		"numpy.lib" -> "numpy.lib.histograms" [style="dotted"];
		"numpy.lib" -> "numpy.lib.polynomial" [style="dotted"];
		"numpy.lib" -> "numpy.lib.utils" [style="dotted"];
		"numpy.lib" -> "numpy.lib.arraysetops" [style="dotted"];
		"numpy.lib" -> "numpy.lib.format" [style="dotted"];
		"numpy.lib" -> "numpy.lib.npyio" [style="dotted"];
		"numpy.lib" -> "numpy.lib.arrayterator" [style="dotted"];
		"numpy.lib" -> "numpy.lib.arraypad" [style="dotted"];
		"numpy.lib" -> "numpy.lib._version" [style="dotted"];
		"numpy.lib" -> "numpy.lib._iotools" [style="dotted"];
		"numpy.lib" -> "numpy.lib._datasource" [style="dotted"];
	}
	subgraph "cluster_google.api_core.retry" {
		label="google.api_core.retry";
		"google.api_core.retry" -> "google.api_core.retry.retry_base" [style="dotted"];
		"google.api_core.retry" -> "google.api_core.retry.retry_unary" [style="dotted"];
		"google.api_core.retry" -> "google.api_core.retry.retry_unary_async" [style="dotted"];
		"google.api_core.retry" -> "google.api_core.retry.retry_streaming" [style="dotted"];
		"google.api_core.retry" -> "google.api_core.retry.retry_streaming_async" [style="dotted"];
	}
	subgraph "cluster_pandas.compat.numpy" {
		label="pandas.compat.numpy";
		"pandas.compat.numpy" -> "pandas.compat.numpy.function" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.schedule_service.transports" {
		label="google.cloud.aiplatform_v1.services.schedule_service.transports";
		"google.cloud.aiplatform_v1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1.services.schedule_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1.services.schedule_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1.services.schedule_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta" {
		label="google.ai.generativelanguage_v1beta";
		"google.ai.generativelanguage_v1beta" -> "google.ai.generativelanguage_v1beta.gapic_version" [style="dotted"];
		"google.ai.generativelanguage_v1beta" -> "google.ai.generativelanguage_v1beta.types" [style="dotted"];
		"google.ai.generativelanguage_v1beta" -> "google.ai.generativelanguage_v1beta.services" [style="dotted"];
	}
	subgraph "cluster_langchain._api" {
		label="langchain._api";
		"langchain._api" -> "langchain._api.deprecation" [style="dotted"];
		"langchain._api" -> "langchain._api.module_import" [style="dotted"];
		"langchain._api" -> "langchain._api.interactive_env" [style="dotted"];
	}
	subgraph "cluster_langchain_community" {
		label="langchain_community";
		"langchain_community" -> "langchain_community.output_parsers" [style="dotted"];
		"langchain_community" -> "langchain_community.utils" [style="dotted"];
		"langchain_community" -> "langchain_community.adapters" [style="dotted"];
		"langchain_community" -> "langchain_community.vectorstores" [style="dotted"];
		"langchain_community" -> "langchain_community.query_constructors" [style="dotted"];
		"langchain_community" -> "langchain_community.utilities" [style="dotted"];
		"langchain_community" -> "langchain_community.tools" [style="dotted"];
		"langchain_community" -> "langchain_community.llms" [style="dotted"];
		"langchain_community" -> "langchain_community.docstore" [style="dotted"];
		"langchain_community" -> "langchain_community.agent_toolkits" [style="dotted"];
		"langchain_community" -> "langchain_community.chains" [style="dotted"];
		"langchain_community" -> "langchain_community.memory" [style="dotted"];
		"langchain_community" -> "langchain_community.graphs" [style="dotted"];
		"langchain_community" -> "langchain_community.chat_message_histories" [style="dotted"];
		"langchain_community" -> "langchain_community.document_loaders" [style="dotted"];
		"langchain_community" -> "langchain_community.embeddings" [style="dotted"];
		"langchain_community" -> "langchain_community.chat_models" [style="dotted"];
		"langchain_community" -> "langchain_community.retrievers" [style="dotted"];
		"langchain_community" -> "langchain_community.document_transformers" [style="dotted"];
		"langchain_community" -> "langchain_community.storage" [style="dotted"];
		"langchain_community" -> "langchain_community.example_selectors" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.pipeline_service" {
		label="google.cloud.aiplatform_v1.services.pipeline_service";
		"google.cloud.aiplatform_v1.services.pipeline_service" -> "google.cloud.aiplatform_v1.services.pipeline_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.pipeline_service" -> "google.cloud.aiplatform_v1.services.pipeline_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.pipeline_service" -> "google.cloud.aiplatform_v1.services.pipeline_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.pipeline_service" -> "google.cloud.aiplatform_v1.services.pipeline_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" {
		label="google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports";
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_proto.marshal.rules" {
		label="proto.marshal.rules";
		"proto.marshal.rules" -> "proto.marshal.rules.bytes" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.stringy_numbers" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.dates" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.struct" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.wrappers" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.field_mask" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.enums" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.message" [style="dotted"];
	}
	subgraph "cluster_pandas.core.util" {
		label="pandas.core.util";
		"pandas.core.util" -> "pandas.core.util.hashing" [style="dotted"];
		"pandas.core.util" -> "pandas.core.util.numba_" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.primitives.asymmetric" {
		label="cryptography.hazmat.primitives.asymmetric";
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.utils" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.dsa" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.ec" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.rsa" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.ed448" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.ed25519" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.x448" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.x25519" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.dh" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.padding" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.types" [style="dotted"];
	}
	subgraph "cluster_neo4j._codec.hydration.v2" {
		label="neo4j._codec.hydration.v2";
		"neo4j._codec.hydration.v2" -> "neo4j._codec.hydration.v2.temporal" [style="dotted"];
		"neo4j._codec.hydration.v2" -> "neo4j._codec.hydration.v2.hydration_handler" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.prediction" {
		label="google.cloud.aiplatform.v1.schema.predict.prediction";
		"google.cloud.aiplatform.v1.schema.predict.prediction" -> "google.cloud.aiplatform.v1.schema.predict.prediction.gapic_version" [style="dotted"];
	}
	subgraph "cluster_xml.etree" {
		label="xml.etree";
		"xml.etree" -> "xml.etree.ElementPath" [style="dotted"];
		"xml.etree" -> "xml.etree.ElementTree" [style="dotted"];
		"xml.etree" -> "xml.etree.ElementInclude" [style="dotted"];
		"xml.etree" -> "xml.etree.cElementTree" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.discuss_service" {
		label="google.ai.generativelanguage_v1beta.services.discuss_service";
		"google.ai.generativelanguage_v1beta.services.discuss_service" -> "google.ai.generativelanguage_v1beta.services.discuss_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service" -> "google.ai.generativelanguage_v1beta.services.discuss_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports" [style="dotted"];
	}
	subgraph "cluster_pandas.compat" {
		label="pandas.compat";
		"pandas.compat" -> "pandas.compat._constants" [style="dotted"];
		"pandas.compat" -> "pandas.compat.compressors" [style="dotted"];
		"pandas.compat" -> "pandas.compat.numpy" [style="dotted"];
		"pandas.compat" -> "pandas.compat.pyarrow" [style="dotted"];
		"pandas.compat" -> "pandas.compat._optional" [style="dotted"];
		"pandas.compat" -> "pandas.compat.pickle_compat" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.prediction_service" {
		label="google.cloud.aiplatform_v1.services.prediction_service";
		"google.cloud.aiplatform_v1.services.prediction_service" -> "google.cloud.aiplatform_v1.services.prediction_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.prediction_service" -> "google.cloud.aiplatform_v1.services.prediction_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.prediction_service" -> "google.cloud.aiplatform_v1.services.prediction_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.react" {
		label="langchain.agents.react";
		"langchain.agents.react" -> "langchain.agents.react.agent" [style="dotted"];
		"langchain.agents.react" -> "langchain.agents.react.base" [style="dotted"];
		"langchain.agents.react" -> "langchain.agents.react.output_parser" [style="dotted"];
		"langchain.agents.react" -> "langchain.agents.react.textworld_prompt" [style="dotted"];
		"langchain.agents.react" -> "langchain.agents.react.wiki_prompt" [style="dotted"];
	}
	subgraph "cluster_wx" {
		label="wx";
		"wx" -> "wx.__version__" [style="dotted"];
		"wx" -> "wx.core" [style="dotted"];
		"wx" -> "wx.adv" [style="dotted"];
		"wx" -> "wx.html" [style="dotted"];
		"wx" -> "wx.grid" [style="dotted"];
		"wx" -> "wx._xml" [style="dotted"];
		"wx" -> "wx._html" [style="dotted"];
		"wx" -> "wx._adv" [style="dotted"];
		"wx" -> "wx._core" [style="dotted"];
		"wx" -> "wx.lib" [style="dotted"];
		"wx" -> "wx._grid" [style="dotted"];
		"wx" -> "wx.siplib" [style="dotted"];
		"wx" -> "wx.msw" [style="dotted"];
		"wx" -> "wx._msw" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.llm_math" {
		label="langchain.chains.llm_math";
		"langchain.chains.llm_math" -> "langchain.chains.llm_math.base" [style="dotted"];
		"langchain.chains.llm_math" -> "langchain.chains.llm_math.prompt" [style="dotted"];
	}
	subgraph "cluster_distro" {
		label="distro";
		"distro" -> "distro.distro" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.tensorboard" {
		label="google.cloud.aiplatform.tensorboard";
		"google.cloud.aiplatform.tensorboard" -> "google.cloud.aiplatform.tensorboard.tensorboard_resource" [style="dotted"];
		"google.cloud.aiplatform.tensorboard" -> "google.cloud.aiplatform.tensorboard.logdir_loader" [style="dotted"];
		"google.cloud.aiplatform.tensorboard" -> "google.cloud.aiplatform.tensorboard.upload_tracker" [style="dotted"];
		"google.cloud.aiplatform.tensorboard" -> "google.cloud.aiplatform.tensorboard.uploader_constants" [style="dotted"];
		"google.cloud.aiplatform.tensorboard" -> "google.cloud.aiplatform.tensorboard.uploader_utils" [style="dotted"];
		"google.cloud.aiplatform.tensorboard" -> "google.cloud.aiplatform.tensorboard.uploader_tracker" [style="dotted"];
		"google.cloud.aiplatform.tensorboard" -> "google.cloud.aiplatform.tensorboard.uploader" [style="dotted"];
		"google.cloud.aiplatform.tensorboard" -> "google.cloud.aiplatform.tensorboard.plugins" [style="dotted"];
	}
	subgraph "cluster_langchain_core.language_models" {
		label="langchain_core.language_models";
		"langchain_core.language_models" -> "langchain_core.language_models.base" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models.chat_models" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models.fake" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models.fake_chat_models" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models.llms" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models._utils" [style="dotted"];
	}
	subgraph "cluster_googleapiclient" {
		label="googleapiclient";
		"googleapiclient" -> "googleapiclient._auth" [style="dotted"];
		"googleapiclient" -> "googleapiclient._helpers" [style="dotted"];
		"googleapiclient" -> "googleapiclient.version" [style="dotted"];
		"googleapiclient" -> "googleapiclient.mimeparse" [style="dotted"];
		"googleapiclient" -> "googleapiclient.discovery_cache" [style="dotted"];
		"googleapiclient" -> "googleapiclient.discovery" [style="dotted"];
		"googleapiclient" -> "googleapiclient.errors" [style="dotted"];
		"googleapiclient" -> "googleapiclient.http" [style="dotted"];
		"googleapiclient" -> "googleapiclient.model" [style="dotted"];
		"googleapiclient" -> "googleapiclient.schema" [style="dotted"];
	}
	subgraph "cluster_neo4j.time" {
		label="neo4j.time";
		"neo4j.time" -> "neo4j.time._arithmetic" [style="dotted"];
		"neo4j.time" -> "neo4j.time._metaclasses" [style="dotted"];
		"neo4j.time" -> "neo4j.time._clock_implementations" [style="dotted"];
	}
	subgraph "cluster_pydantic_settings" {
		label="pydantic_settings";
		"pydantic_settings" -> "pydantic_settings.exceptions" [style="dotted"];
		"pydantic_settings" -> "pydantic_settings.main" [style="dotted"];
		"pydantic_settings" -> "pydantic_settings.sources" [style="dotted"];
		"pydantic_settings" -> "pydantic_settings.version" [style="dotted"];
		"pydantic_settings" -> "pydantic_settings.utils" [style="dotted"];
	}
	subgraph "cluster_pandas.core.ops" {
		label="pandas.core.ops";
		"pandas.core.ops" -> "pandas.core.ops.missing" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.array_ops" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.common" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.docstrings" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.invalid" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.mask_ops" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.dispatch" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.connery" {
		label="langchain_community.tools.connery";
		"langchain_community.tools.connery" -> "langchain_community.tools.connery.service" [style="dotted"];
		"langchain_community.tools.connery" -> "langchain_community.tools.connery.tool" [style="dotted"];
		"langchain_community.tools.connery" -> "langchain_community.tools.connery.models" [style="dotted"];
	}
	subgraph "cluster_anthropic.resources.beta" {
		label="anthropic.resources.beta";
		"anthropic.resources.beta" -> "anthropic.resources.beta.beta" [style="dotted"];
		"anthropic.resources.beta" -> "anthropic.resources.beta.models" [style="dotted"];
		"anthropic.resources.beta" -> "anthropic.resources.beta.messages" [style="dotted"];
	}
	subgraph "cluster_cryptography.x509" {
		label="cryptography.x509";
		"cryptography.x509" -> "cryptography.x509.certificate_transparency" [style="dotted"];
		"cryptography.x509" -> "cryptography.x509.verification" [style="dotted"];
		"cryptography.x509" -> "cryptography.x509.base" [style="dotted"];
		"cryptography.x509" -> "cryptography.x509.extensions" [style="dotted"];
		"cryptography.x509" -> "cryptography.x509.general_name" [style="dotted"];
		"cryptography.x509" -> "cryptography.x509.name" [style="dotted"];
		"cryptography.x509" -> "cryptography.x509.oid" [style="dotted"];
		"cryptography.x509" -> "cryptography.x509.UnsupportedExtension" [style="dotted"];
	}
	subgraph "cluster_langchain.tools" {
		label="langchain.tools";
		"langchain.tools" -> "langchain.tools.render" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag.embeddings" {
		label="neo4j_graphrag.embeddings";
		"neo4j_graphrag.embeddings" -> "neo4j_graphrag.embeddings.base" [style="dotted"];
		"neo4j_graphrag.embeddings" -> "neo4j_graphrag.embeddings.cohere" [style="dotted"];
		"neo4j_graphrag.embeddings" -> "neo4j_graphrag.embeddings.mistral" [style="dotted"];
		"neo4j_graphrag.embeddings" -> "neo4j_graphrag.embeddings.ollama" [style="dotted"];
		"neo4j_graphrag.embeddings" -> "neo4j_graphrag.embeddings.openai" [style="dotted"];
		"neo4j_graphrag.embeddings" -> "neo4j_graphrag.embeddings.sentence_transformers" [style="dotted"];
		"neo4j_graphrag.embeddings" -> "neo4j_graphrag.embeddings.vertexai" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.model_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.model_service.transports";
		"google.cloud.aiplatform_v1beta1.services.model_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pydantic.deprecated" {
		label="pydantic.deprecated";
		"pydantic.deprecated" -> "pydantic.deprecated.copy_internals" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.parse" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.json" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.class_validators" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.config" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.tools" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.decorator" [style="dotted"];
	}
	subgraph "cluster_anyio._backends" {
		label="anyio._backends";
		"anyio._backends" -> "anyio._backends._asyncio" [style="dotted"];
		"anyio._backends" -> "anyio._backends._trio" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service" {
		label="google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service";
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" [style="dotted"];
	}
	subgraph "cluster_propcache" {
		label="propcache";
		"propcache" -> "propcache.api" [style="dotted"];
		"propcache" -> "propcache._helpers" [style="dotted"];
		"propcache" -> "propcache._helpers_py" [style="dotted"];
		"propcache" -> "propcache._helpers_c" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.schedule_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.schedule_service.transports";
		"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_graphdatascience" {
		label="graphdatascience";
		"graphdatascience" -> "graphdatascience.graph_data_science" [style="dotted"];
		"graphdatascience" -> "graphdatascience.version" [style="dotted"];
		"graphdatascience" -> "graphdatascience.graph" [style="dotted"];
		"graphdatascience" -> "graphdatascience.model" [style="dotted"];
		"graphdatascience" -> "graphdatascience.pipeline" [style="dotted"];
		"graphdatascience" -> "graphdatascience.query_runner" [style="dotted"];
		"graphdatascience" -> "graphdatascience.server_version" [style="dotted"];
		"graphdatascience" -> "graphdatascience.session" [style="dotted"];
		"graphdatascience" -> "graphdatascience.call_parameters" [style="dotted"];
		"graphdatascience" -> "graphdatascience.semantic_version" [style="dotted"];
		"graphdatascience" -> "graphdatascience.error" [style="dotted"];
		"graphdatascience" -> "graphdatascience.ignored_server_endpoints" [style="dotted"];
		"graphdatascience" -> "graphdatascience.call_builder" [style="dotted"];
		"graphdatascience" -> "graphdatascience.endpoints" [style="dotted"];
		"graphdatascience" -> "graphdatascience.utils" [style="dotted"];
		"graphdatascience" -> "graphdatascience.caller_base" [style="dotted"];
		"graphdatascience" -> "graphdatascience.topological_lp" [style="dotted"];
		"graphdatascience" -> "graphdatascience.system" [style="dotted"];
		"graphdatascience" -> "graphdatascience.algo" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.jira" {
		label="langchain_community.tools.jira";
		"langchain_community.tools.jira" -> "langchain_community.tools.jira.tool" [style="dotted"];
		"langchain_community.tools.jira" -> "langchain_community.tools.jira.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain_neo4j.chat_message_histories" {
		label="langchain_neo4j.chat_message_histories";
		"langchain_neo4j.chat_message_histories" -> "langchain_neo4j.chat_message_histories.neo4j" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1";
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types" [style="dotted"];
	}
	subgraph "cluster_xmlrpc" {
		label="xmlrpc";
		"xmlrpc" -> "xmlrpc.client" [style="dotted"];
	}
	subgraph "cluster_langchain_core.vectorstores" {
		label="langchain_core.vectorstores";
		"langchain_core.vectorstores" -> "langchain_core.vectorstores.base" [style="dotted"];
		"langchain_core.vectorstores" -> "langchain_core.vectorstores.in_memory" [style="dotted"];
		"langchain_core.vectorstores" -> "langchain_core.vectorstores.utils" [style="dotted"];
	}
	subgraph "cluster_langchain_experimental.sql" {
		label="langchain_experimental.sql";
		"langchain_experimental.sql" -> "langchain_experimental.sql.base" [style="dotted"];
	}
	subgraph "cluster_langchain_core.tracers" {
		label="langchain_core.tracers";
		"langchain_core.tracers" -> "langchain_core.tracers.base" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.langchain" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.evaluation" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.log_stream" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.schemas" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.stdout" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.context" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.run_collector" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers._streaming" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.memory_stream" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.core" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.root_listeners" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.event_stream" [style="dotted"];
	}
	subgraph "cluster_openai.resources.chat.completions" {
		label="openai.resources.chat.completions";
		"openai.resources.chat.completions" -> "openai.resources.chat.completions.messages" [style="dotted"];
		"openai.resources.chat.completions" -> "openai.resources.chat.completions.completions" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.endpoint_service.transports";
		"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" -> "google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports";
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.protobuf" {
		label="google.protobuf";
		"google.protobuf" -> "google.protobuf.enable_deterministic_proto_serialization" [style="dotted"];
		"google.protobuf" -> "google.protobuf.descriptor" [style="dotted"];
		"google.protobuf" -> "google.protobuf.descriptor_database" [style="dotted"];
		"google.protobuf" -> "google.protobuf.text_encoding" [style="dotted"];
		"google.protobuf" -> "google.protobuf.descriptor_pool" [style="dotted"];
		"google.protobuf" -> "google.protobuf.message" [style="dotted"];
		"google.protobuf" -> "google.protobuf.message_factory" [style="dotted"];
		"google.protobuf" -> "google.protobuf.symbol_database" [style="dotted"];
		"google.protobuf" -> "google.protobuf.unknown_fields" [style="dotted"];
		"google.protobuf" -> "google.protobuf.text_format" [style="dotted"];
		"google.protobuf" -> "google.protobuf.descriptor_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.runtime_version" [style="dotted"];
		"google.protobuf" -> "google.protobuf.reflection" [style="dotted"];
		"google.protobuf" -> "google.protobuf.service_reflection" [style="dotted"];
		"google.protobuf" -> "google.protobuf.duration_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.any_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.timestamp_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.empty_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.field_mask_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.struct_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.wrappers_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.internal" [style="dotted"];
		"google.protobuf" -> "google.protobuf.pyext" [style="dotted"];
		"google.protobuf" -> "google.protobuf.json_format" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.endpoint_service" {
		label="google.cloud.aiplatform_v1.services.endpoint_service";
		"google.cloud.aiplatform_v1.services.endpoint_service" -> "google.cloud.aiplatform_v1.services.endpoint_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.endpoint_service" -> "google.cloud.aiplatform_v1.services.endpoint_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.endpoint_service" -> "google.cloud.aiplatform_v1.services.endpoint_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.endpoint_service" -> "google.cloud.aiplatform_v1.services.endpoint_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain" {
		label="langchain";
		"langchain" -> "langchain.agents" [style="dotted"];
		"langchain" -> "langchain.chains" [style="dotted"];
		"langchain" -> "langchain.globals" [style="dotted"];
		"langchain" -> "langchain.text_splitter" [style="dotted"];
		"langchain" -> "langchain._api" [style="dotted"];
		"langchain" -> "langchain.evaluation" [style="dotted"];
		"langchain" -> "langchain.output_parsers" [style="dotted"];
		"langchain" -> "langchain.smith" [style="dotted"];
		"langchain" -> "langchain.memory" [style="dotted"];
		"langchain" -> "langchain.tools" [style="dotted"];
		"langchain" -> "langchain.utilities" [style="dotted"];
		"langchain" -> "langchain.retrievers" [style="dotted"];
		"langchain" -> "langchain.storage" [style="dotted"];
		"langchain" -> "langchain.embeddings" [style="dotted"];
		"langchain" -> "langchain.schema" [style="dotted"];
		"langchain" -> "langchain.prompts" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.specialist_pool_service.transports" {
		label="google.cloud.aiplatform_v1.services.specialist_pool_service.transports";
		"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_vertexai.generative_models" {
		label="vertexai.generative_models";
		"vertexai.generative_models" -> "vertexai.generative_models._generative_models" [style="dotted"];
		"vertexai.generative_models" -> "vertexai.generative_models._function_calling_utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports";
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation" {
		label="langchain.evaluation";
		"langchain.evaluation" -> "langchain.evaluation.agents" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.comparison" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.criteria" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.embedding_distance" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.loading" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.qa" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.schema" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.scoring" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.string_distance" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.exact_match" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.parsing" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.regex_match" [style="dotted"];
	}
	subgraph "cluster_urllib3.http2" {
		label="urllib3.http2";
		"urllib3.http2" -> "urllib3.http2.connection" [style="dotted"];
		"urllib3.http2" -> "urllib3.http2.probe" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_loaders" {
		label="langchain_community.document_loaders";
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.acreom" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.airbyte" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.airbyte_json" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.airtable" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.apify_dataset" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.arcgis_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.arxiv" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.assemblyai" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.astradb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.async_html" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.athena" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.azlyrics" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.azure_ai_data" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.azure_blob_storage_container" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.azure_blob_storage_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.bibtex" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.bigquery" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.bilibili" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.blackboard" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.blob_loaders" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.blockchain" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.brave_search" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.browserbase" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.browserless" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.cassandra" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.chatgpt" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.chm" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.chromium" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.college_confidential" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.concurrent" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.confluence" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.conllu" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.couchbase" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.csv_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.cube_semantic" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.datadog_logs" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.dataframe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.dedoc" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.diffbot" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.discord" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.doc_intelligence" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.docugami" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.docusaurus" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.dropbox" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.duckdb_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.email" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.epub" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.etherscan" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.evernote" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.excel" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.facebook_chat" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.fauna" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.figma" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.firecrawl" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.gcs_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.gcs_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.geodataframe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.git" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.gitbook" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.github" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.glue_catalog" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.google_speech_to_text" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.googledrive" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.gutenberg" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.hn" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.html" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.html_bs" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.hugging_face_dataset" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.hugging_face_model" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.ifixit" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.image" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.image_captions" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.imsdb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.iugu" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.joplin" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.json_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.kinetica_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.lakefs" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.larksuite" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.llmsherpa" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.markdown" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.mastodon" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.max_compute" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.mediawikidump" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.merge" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.mhtml" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.modern_treasury" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.mongodb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.needle" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.news" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.notebook" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.notion" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.notiondb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.obs_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.obs_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.obsidian" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.odt" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.onedrive" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.onedrive_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.open_city_data" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.oracleadb_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.oracleai" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.org_mode" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.pdf" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.pebblo" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.polars_dataframe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.powerpoint" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.psychic" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.pubmed" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.pyspark_dataframe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.python" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.readthedocs" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.recursive_url_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.reddit" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.roam" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.rocksetdb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.rss" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.rst" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.rtf" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.s3_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.s3_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.scrapfly" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.scrapingant" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.sharepoint" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.sitemap" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.slack_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.snowflake_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.spider" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.spreedly" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.sql_database" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.srt" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.stripe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.surrealdb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.telegram" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tencent_cos_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tencent_cos_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tensorflow_datasets" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.text" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tidb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tomarkdown" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.toml" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.trello" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tsv" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.twitter" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.unstructured" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.url" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.url_playwright" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.url_selenium" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.vsdx" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.weather" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.web_base" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.whatsapp_chat" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.wikipedia" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.word_document" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.xml" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.xorbits" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.youtube" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.yuque" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.base" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.parsers" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.helpers" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.base_o365" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.generic" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.stackexchange" {
		label="langchain_community.tools.stackexchange";
		"langchain_community.tools.stackexchange" -> "langchain_community.tools.stackexchange.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.golden_query" {
		label="langchain_community.tools.golden_query";
		"langchain_community.tools.golden_query" -> "langchain_community.tools.golden_query.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports";
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_numpy._utils" {
		label="numpy._utils";
		"numpy._utils" -> "numpy._utils._convertions" [style="dotted"];
		"numpy._utils" -> "numpy._utils._inspect" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" {
		label="google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports";
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.compat" {
		label="google.cloud.aiplatform.compat";
		"google.cloud.aiplatform.compat" -> "google.cloud.aiplatform.compat.services" [style="dotted"];
		"google.cloud.aiplatform.compat" -> "google.cloud.aiplatform.compat.types" [style="dotted"];
	}
	subgraph "cluster_anyio.streams" {
		label="anyio.streams";
		"anyio.streams" -> "anyio.streams.memory" [style="dotted"];
		"anyio.streams" -> "anyio.streams.stapled" [style="dotted"];
		"anyio.streams" -> "anyio.streams.tls" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.model_garden_service.transports";
		"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_openai.chat_models" {
		label="langchain_openai.chat_models";
		"langchain_openai.chat_models" -> "langchain_openai.chat_models.azure" [style="dotted"];
		"langchain_openai.chat_models" -> "langchain_openai.chat_models.base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.tag_bindings" {
		label="google.cloud.resourcemanager_v3.services.tag_bindings";
		"google.cloud.resourcemanager_v3.services.tag_bindings" -> "google.cloud.resourcemanager_v3.services.tag_bindings.pagers" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_bindings" -> "google.cloud.resourcemanager_v3.services.tag_bindings.async_client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_bindings" -> "google.cloud.resourcemanager_v3.services.tag_bindings.client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_bindings" -> "google.cloud.resourcemanager_v3.services.tag_bindings.transports" [style="dotted"];
	}
	subgraph "cluster_anthropic.resources.beta.messages" {
		label="anthropic.resources.beta.messages";
		"anthropic.resources.beta.messages" -> "anthropic.resources.beta.messages.batches" [style="dotted"];
		"anthropic.resources.beta.messages" -> "anthropic.resources.beta.messages.messages" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.steam" {
		label="langchain_community.tools.steam";
		"langchain_community.tools.steam" -> "langchain_community.tools.steam.prompt" [style="dotted"];
		"langchain_community.tools.steam" -> "langchain_community.tools.steam.tool" [style="dotted"];
	}
	subgraph "cluster_pandas.core.methods" {
		label="pandas.core.methods";
		"pandas.core.methods" -> "pandas.core.methods.selectn" [style="dotted"];
		"pandas.core.methods" -> "pandas.core.methods.describe" [style="dotted"];
		"pandas.core.methods" -> "pandas.core.methods.to_dict" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.schedule_service" {
		label="google.cloud.aiplatform_v1.services.schedule_service";
		"google.cloud.aiplatform_v1.services.schedule_service" -> "google.cloud.aiplatform_v1.services.schedule_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.schedule_service" -> "google.cloud.aiplatform_v1.services.schedule_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.schedule_service" -> "google.cloud.aiplatform_v1.services.schedule_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.schedule_service" -> "google.cloud.aiplatform_v1.services.schedule_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chains" {
		label="langchain_community.chains";
		"langchain_community.chains" -> "langchain_community.chains.openapi" [style="dotted"];
		"langchain_community.chains" -> "langchain_community.chains.pebblo_retrieval" [style="dotted"];
		"langchain_community.chains" -> "langchain_community.chains.llm_requests" [style="dotted"];
		"langchain_community.chains" -> "langchain_community.chains.graph_qa" [style="dotted"];
	}
	subgraph "cluster_pkg_resources.extern" {
		label="pkg_resources.extern";
		"pkg_resources.extern" -> "pkg_resources.extern.appdirs" [style="dotted"];
		"pkg_resources.extern" -> "pkg_resources.extern.packaging" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.connery" {
		label="langchain_community.agent_toolkits.connery";
		"langchain_community.agent_toolkits.connery" -> "langchain_community.agent_toolkits.connery.toolkit" [style="dotted"];
	}
	subgraph "cluster_google.api_core.gapic_v1" {
		label="google.api_core.gapic_v1";
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.client_info" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.config" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.config_async" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.method" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.method_async" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.routing_header" [style="dotted"];
	}
	subgraph "cluster_pandas.io.formats" {
		label="pandas.io.formats";
		"pandas.io.formats" -> "pandas.io.formats.printing" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.style" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.format" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.console" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.html" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.string" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.csvs" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.style_render" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.excel" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats._color_data" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.css" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.info" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.xml" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.model" {
		label="graphdatascience.model";
		"graphdatascience.model" -> "graphdatascience.model.graphsage_model" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.link_prediction_model" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.node_classification_model" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.node_regression_model" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.pipeline_model" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.simple_rel_embedding_model" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.model_endpoints" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.model_alpha_proc_runner" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.model_beta_proc_runner" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.model_proc_runner" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.model" [style="dotted"];
		"graphdatascience.model" -> "graphdatascience.model.model_resolver" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.regex_match" {
		label="langchain.evaluation.regex_match";
		"langchain.evaluation.regex_match" -> "langchain.evaluation.regex_match.base" [style="dotted"];
	}
	subgraph "cluster_langchain_core.beta" {
		label="langchain_core.beta";
		"langchain_core.beta" -> "langchain_core.beta.runnables" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.tensorboard.plugins" {
		label="google.cloud.aiplatform.tensorboard.plugins";
		"google.cloud.aiplatform.tensorboard.plugins" -> "google.cloud.aiplatform.tensorboard.plugins.tf_profiler" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.gen_ai_tuning_service" {
		label="google.cloud.aiplatform_v1.services.gen_ai_tuning_service";
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.embeddings" {
		label="langchain_community.embeddings";
		"langchain_community.embeddings" -> "langchain_community.embeddings.aleph_alpha" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.anyscale" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ascend" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.awa" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.azure_openai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.baichuan" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.baidu_qianfan_endpoint" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.bedrock" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.bookend" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.clarifai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.clova" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.cohere" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.dashscope" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.databricks" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.deepinfra" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.edenai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.elasticsearch" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.embaas" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ernie" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.fake" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.fastembed" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.gigachat" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.google_palm" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.gpt4all" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.gradient_ai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.huggingface" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.huggingface_hub" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.hunyuan" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.infinity" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.infinity_local" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ipex_llm" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.itrex" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.javelin_ai_gateway" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.jina" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.johnsnowlabs" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.laser" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.llamacpp" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.llamafile" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.llm_rails" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.localai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.minimax" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.mlflow" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.mlflow_gateway" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.model2vec" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.modelscope_hub" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.mosaicml" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.naver" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.nemo" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.nlpcloud" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.oci_generative_ai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.octoai_embeddings" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ollama" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.openai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.openvino" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.optimum_intel" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.oracleai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ovhcloud" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.premai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.sagemaker_endpoint" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.sambanova" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.self_hosted" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.self_hosted_hugging_face" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.sentence_transformer" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.solar" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.spacy_embeddings" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.sparkllm" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.tensorflow_hub" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.textembed" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.titan_takeoff" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.vertexai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.volcengine" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.voyageai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.xinference" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.yandex" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.zhipuai" [style="dotted"];
	}
	subgraph "cluster_langchain_core.outputs" {
		label="langchain_core.outputs";
		"langchain_core.outputs" -> "langchain_core.outputs.chat_generation" [style="dotted"];
		"langchain_core.outputs" -> "langchain_core.outputs.chat_result" [style="dotted"];
		"langchain_core.outputs" -> "langchain_core.outputs.generation" [style="dotted"];
		"langchain_core.outputs" -> "langchain_core.outputs.llm_result" [style="dotted"];
		"langchain_core.outputs" -> "langchain_core.outputs.run_info" [style="dotted"];
	}
	subgraph "cluster_regex" {
		label="regex";
		"regex" -> "regex.DEFAULT_VERSION" [style="dotted"];
		"regex" -> "regex.regex" [style="dotted"];
		"regex" -> "regex._regex_core" [style="dotted"];
		"regex" -> "regex._regex" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.helpers" {
		label="google.cloud.aiplatform.helpers";
		"google.cloud.aiplatform.helpers" -> "google.cloud.aiplatform.helpers.container_uri_builders" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.cogniswitch" {
		label="langchain_community.agent_toolkits.cogniswitch";
		"langchain_community.agent_toolkits.cogniswitch" -> "langchain_community.agent_toolkits.cogniswitch.toolkit" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.persistent_resource_service.transports" {
		label="google.cloud.aiplatform_v1.services.persistent_resource_service.transports";
		"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" -> "google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pydantic.experimental" {
		label="pydantic.experimental";
		"pydantic.experimental" -> "pydantic.experimental.arguments_schema" [style="dotted"];
		"pydantic.experimental" -> "pydantic.experimental.pipeline" [style="dotted"];
	}
	subgraph "cluster_neo4j._codec.hydration.v1" {
		label="neo4j._codec.hydration.v1";
		"neo4j._codec.hydration.v1" -> "neo4j._codec.hydration.v1.spatial" [style="dotted"];
		"neo4j._codec.hydration.v1" -> "neo4j._codec.hydration.v1.temporal" [style="dotted"];
		"neo4j._codec.hydration.v1" -> "neo4j._codec.hydration.v1.hydration_handler" [style="dotted"];
	}
	subgraph "cluster_pandas.core.arrays.sparse" {
		label="pandas.core.arrays.sparse";
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.accessor" [style="dotted"];
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.array" [style="dotted"];
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.scipy_sparse" [style="dotted"];
	}
	subgraph "cluster_proto.marshal.collections" {
		label="proto.marshal.collections";
		"proto.marshal.collections" -> "proto.marshal.collections.maps" [style="dotted"];
		"proto.marshal.collections" -> "proto.marshal.collections.repeated" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.hyde" {
		label="langchain.chains.hyde";
		"langchain.chains.hyde" -> "langchain.chains.hyde.base" [style="dotted"];
		"langchain.chains.hyde" -> "langchain.chains.hyde.prompts" [style="dotted"];
	}
	subgraph "cluster_openai._utils" {
		label="openai._utils";
		"openai._utils" -> "openai._utils._logs" [style="dotted"];
		"openai._utils" -> "openai._utils._sync" [style="dotted"];
		"openai._utils" -> "openai._utils._proxy" [style="dotted"];
		"openai._utils" -> "openai._utils._utils" [style="dotted"];
		"openai._utils" -> "openai._utils._typing" [style="dotted"];
		"openai._utils" -> "openai._utils._streams" [style="dotted"];
		"openai._utils" -> "openai._utils._transform" [style="dotted"];
		"openai._utils" -> "openai._utils._reflection" [style="dotted"];
	}
	subgraph "cluster_openai.types.shared_params" {
		label="openai.types.shared_params";
		"openai.types.shared_params" -> "openai.types.shared_params.metadata" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.reasoning" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.chat_model" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.compound_filter" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.responses_model" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.reasoning_effort" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.comparison_filter" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.function_definition" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.function_parameters" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.response_format_text" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.response_format_json_object" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.response_format_json_schema" [style="dotted"];
	}
	subgraph "cluster_pkg_resources" {
		label="pkg_resources";
		"pkg_resources" -> "pkg_resources.extern" [style="dotted"];
		"pkg_resources" -> "pkg_resources._vendor" [style="dotted"];
	}
	subgraph "cluster_email" {
		label="email";
		"email" -> "email.errors" [style="dotted"];
		"email" -> "email.charset" [style="dotted"];
		"email" -> "email.header" [style="dotted"];
		"email" -> "email._header_value_parser" [style="dotted"];
		"email" -> "email.parser" [style="dotted"];
		"email" -> "email.feedparser" [style="dotted"];
		"email" -> "email._policybase" [style="dotted"];
		"email" -> "email.utils" [style="dotted"];
		"email" -> "email._parseaddr" [style="dotted"];
		"email" -> "email.message" [style="dotted"];
		"email" -> "email._encoded_words" [style="dotted"];
		"email" -> "email.generator" [style="dotted"];
		"email" -> "email.iterators" [style="dotted"];
		"email" -> "email.policy" [style="dotted"];
		"email" -> "email.headerregistry" [style="dotted"];
		"email" -> "email.contentmanager" [style="dotted"];
		"email" -> "email.quoprimime" [style="dotted"];
		"email" -> "email.base64mime" [style="dotted"];
		"email" -> "email.encoders" [style="dotted"];
		"email" -> "email.mime" [style="dotted"];
	}
	subgraph "cluster_anthropic.types.beta.messages" {
		label="anthropic.types.beta.messages";
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.batch_list_params" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_message_batch" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.batch_create_params" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_message_batch_result" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_deleted_message_batch" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_message_batch_errored_result" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_message_batch_expired_result" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_message_batch_request_counts" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_message_batch_canceled_result" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_message_batch_succeeded_result" [style="dotted"];
		"anthropic.types.beta.messages" -> "anthropic.types.beta.messages.beta_message_batch_individual_response" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.interaction" {
		label="langchain_community.tools.interaction";
		"langchain_community.tools.interaction" -> "langchain_community.tools.interaction.tool" [style="dotted"];
	}
	subgraph "cluster_httplib2" {
		label="httplib2";
		"httplib2" -> "httplib2.socks" [style="dotted"];
		"httplib2" -> "httplib2.auth" [style="dotted"];
		"httplib2" -> "httplib2.error" [style="dotted"];
		"httplib2" -> "httplib2.iri2uri" [style="dotted"];
		"httplib2" -> "httplib2.certs" [style="dotted"];
	}
	subgraph "cluster_tiktoken" {
		label="tiktoken";
		"tiktoken" -> "tiktoken._tiktoken" [style="dotted"];
		"tiktoken" -> "tiktoken.core" [style="dotted"];
		"tiktoken" -> "tiktoken.model" [style="dotted"];
		"tiktoken" -> "tiktoken.registry" [style="dotted"];
	}
	subgraph "cluster_google" {
		label="google";
		"google" -> "google.resumable_media" [style="dotted"];
		"google" -> "google.auth" [style="dotted"];
		"google" -> "google.oauth2" [style="dotted"];
		"google" -> "google._upb" [style="dotted"];
		"google" -> "google.protobuf" [style="dotted"];
		"google" -> "google.rpc" [style="dotted"];
		"google" -> "google.api" [style="dotted"];
		"google" -> "google.longrunning" [style="dotted"];
		"google" -> "google.type" [style="dotted"];
		"google" -> "google.iam" [style="dotted"];
		"google" -> "google.api_core" [style="dotted"];
		"google" -> "google.cloud" [style="dotted"];
		"google" -> "google.ai" [style="dotted"];
		"google" -> "google.generativeai" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.notebook_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.notebook_service.transports";
		"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.tensorboard_service.transports" {
		label="google.cloud.aiplatform_v1.services.tensorboard_service.transports";
		"google.cloud.aiplatform_v1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1.services.tensorboard_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.tensorboard_service.transports" -> "google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.you" {
		label="langchain_community.tools.you";
		"langchain_community.tools.you" -> "langchain_community.tools.you.tool" [style="dotted"];
	}
	subgraph "cluster_numpy" {
		label="numpy";
		"numpy" -> "numpy._globals" [style="dotted"];
		"numpy" -> "numpy.exceptions" [style="dotted"];
		"numpy" -> "numpy.version" [style="dotted"];
		"numpy" -> "numpy._distributor_init_local" [style="dotted"];
		"numpy" -> "numpy._distributor_init" [style="dotted"];
		"numpy" -> "numpy.histogramdd" [style="dotted"];
		"numpy" -> "numpy.ufunc" [style="dotted"];
		"numpy" -> "numpy.ndarray" [style="dotted"];
		"numpy" -> "numpy.dtype" [style="dotted"];
		"numpy" -> "numpy.generic" [style="dotted"];
		"numpy" -> "numpy.bool_" [style="dotted"];
		"numpy" -> "numpy.unsignedinteger" [style="dotted"];
		"numpy" -> "numpy.integer" [style="dotted"];
		"numpy" -> "numpy.floating" [style="dotted"];
		"numpy" -> "numpy.complexfloating" [style="dotted"];
		"numpy" -> "numpy.number" [style="dotted"];
		"numpy" -> "numpy.timedelta64" [style="dotted"];
		"numpy" -> "numpy.datetime64" [style="dotted"];
		"numpy" -> "numpy.object_" [style="dotted"];
		"numpy" -> "numpy.void" [style="dotted"];
		"numpy" -> "numpy.str_" [style="dotted"];
		"numpy" -> "numpy.bytes_" [style="dotted"];
		"numpy" -> "numpy.array_api" [style="dotted"];
		"numpy" -> "numpy.int8" [style="dotted"];
		"numpy" -> "numpy.int16" [style="dotted"];
		"numpy" -> "numpy.int32" [style="dotted"];
		"numpy" -> "numpy.int64" [style="dotted"];
		"numpy" -> "numpy.uint8" [style="dotted"];
		"numpy" -> "numpy.uint16" [style="dotted"];
		"numpy" -> "numpy.uint32" [style="dotted"];
		"numpy" -> "numpy.uint64" [style="dotted"];
		"numpy" -> "numpy.float32" [style="dotted"];
		"numpy" -> "numpy.float64" [style="dotted"];
		"numpy" -> "numpy.isfinite" [style="dotted"];
		"numpy" -> "numpy.isnan" [style="dotted"];
		"numpy" -> "numpy.isinf" [style="dotted"];
		"numpy" -> "numpy.amax" [style="dotted"];
		"numpy" -> "numpy.amin" [style="dotted"];
		"numpy" -> "numpy.iscomplexobj" [style="dotted"];
		"numpy" -> "numpy.array" [style="dotted"];
		"numpy" -> "numpy.expand_dims" [style="dotted"];
		"numpy" -> "numpy.recarray" [style="dotted"];
		"numpy" -> "numpy.eye" [style="dotted"];
		"numpy" -> "numpy.__config__" [style="dotted"];
		"numpy" -> "numpy.core" [style="dotted"];
		"numpy" -> "numpy.compat" [style="dotted"];
		"numpy" -> "numpy.dtypes" [style="dotted"];
		"numpy" -> "numpy.lib" [style="dotted"];
		"numpy" -> "numpy.linalg" [style="dotted"];
		"numpy" -> "numpy.fft" [style="dotted"];
		"numpy" -> "numpy.polynomial" [style="dotted"];
		"numpy" -> "numpy.uint" [style="dotted"];
		"numpy" -> "numpy.random" [style="dotted"];
		"numpy" -> "numpy.ctypeslib" [style="dotted"];
		"numpy" -> "numpy.ma" [style="dotted"];
		"numpy" -> "numpy.matrixlib" [style="dotted"];
		"numpy" -> "numpy.testing" [style="dotted"];
		"numpy" -> "numpy._pytesttester" [style="dotted"];
		"numpy" -> "numpy._utils" [style="dotted"];
		"numpy" -> "numpy._typing" [style="dotted"];
		"numpy" -> "numpy.typing" [style="dotted"];
	}
	subgraph "cluster_neo4j._util" {
		label="neo4j._util";
		"neo4j._util" -> "neo4j._util._context_bool" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt" {
		label="requests_toolbelt";
		"requests_toolbelt" -> "requests_toolbelt.adapters" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.multipart" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.streaming_iterator" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.exceptions" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt._compat" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.auth" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.utils" [style="dotted"];
	}
	subgraph "cluster_numpy.testing" {
		label="numpy.testing";
		"numpy.testing" -> "numpy.testing._private" [style="dotted"];
		"numpy.testing" -> "numpy.testing.overrides" [style="dotted"];
	}
	subgraph "cluster_langchain_core.beta.runnables" {
		label="langchain_core.beta.runnables";
		"langchain_core.beta.runnables" -> "langchain_core.beta.runnables.context" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports";
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_numpy.linalg" {
		label="numpy.linalg";
		"numpy.linalg" -> "numpy.linalg._umath_linalg" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg.linalg" [style="dotted"];
	}
	subgraph "cluster_langchain_core" {
		label="langchain_core";
		"langchain_core" -> "langchain_core._api" [style="dotted"];
		"langchain_core" -> "langchain_core.version" [style="dotted"];
		"langchain_core" -> "langchain_core._import_utils" [style="dotted"];
		"langchain_core" -> "langchain_core.utils" [style="dotted"];
		"langchain_core" -> "langchain_core.caches" [style="dotted"];
		"langchain_core" -> "langchain_core.outputs" [style="dotted"];
		"langchain_core" -> "langchain_core.runnables" [style="dotted"];
		"langchain_core" -> "langchain_core.load" [style="dotted"];
		"langchain_core" -> "langchain_core.messages" [style="dotted"];
		"langchain_core" -> "langchain_core.exceptions" [style="dotted"];
		"langchain_core" -> "langchain_core.prompt_values" [style="dotted"];
		"langchain_core" -> "langchain_core.language_models" [style="dotted"];
		"langchain_core" -> "langchain_core.globals" [style="dotted"];
		"langchain_core" -> "langchain_core.callbacks" [style="dotted"];
		"langchain_core" -> "langchain_core.tracers" [style="dotted"];
		"langchain_core" -> "langchain_core.memory" [style="dotted"];
		"langchain_core" -> "langchain_core.chat_sessions" [style="dotted"];
		"langchain_core" -> "langchain_core.tools" [style="dotted"];
		"langchain_core" -> "langchain_core.retrievers" [style="dotted"];
		"langchain_core" -> "langchain_core.documents" [style="dotted"];
		"langchain_core" -> "langchain_core.embeddings" [style="dotted"];
		"langchain_core" -> "langchain_core.agents" [style="dotted"];
		"langchain_core" -> "langchain_core.env" [style="dotted"];
		"langchain_core" -> "langchain_core.rate_limiters" [style="dotted"];
		"langchain_core" -> "langchain_core.chat_history" [style="dotted"];
		"langchain_core" -> "langchain_core.beta" [style="dotted"];
		"langchain_core" -> "langchain_core.structured_query" [style="dotted"];
		"langchain_core" -> "langchain_core.example_selectors" [style="dotted"];
		"langchain_core" -> "langchain_core.indexing" [style="dotted"];
		"langchain_core" -> "langchain_core.document_loaders" [style="dotted"];
		"langchain_core" -> "langchain_core.output_parsers" [style="dotted"];
		"langchain_core" -> "langchain_core.prompts" [style="dotted"];
		"langchain_core" -> "langchain_core.stores" [style="dotted"];
		"langchain_core" -> "langchain_core.vectorstores" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.dataforseo_api_search" {
		label="langchain_community.tools.dataforseo_api_search";
		"langchain_community.tools.dataforseo_api_search" -> "langchain_community.tools.dataforseo_api_search.tool" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.generative_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.generative_service.transports";
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_openai.types.beta" {
		label="openai.types.beta";
		"openai.types.beta" -> "openai.types.beta.thread" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.function_tool" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.thread_deleted" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.file_search_tool" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_deleted" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.function_tool_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.thread_create_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.thread_update_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_list_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.code_interpreter_tool" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_stream_event" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.file_search_tool_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_create_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_update_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.code_interpreter_tool_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_option" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.thread_create_and_run_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_function" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_response_format_option" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_option_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_function_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_response_format_option_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.threads" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.realtime" [style="dotted"];
	}
	subgraph "cluster_openai.resources.chat" {
		label="openai.resources.chat";
		"openai.resources.chat" -> "openai.resources.chat.chat" [style="dotted"];
		"openai.resources.chat" -> "openai.resources.chat.completions" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_jobs" {
		label="langchain_community.tools.google_jobs";
		"langchain_community.tools.google_jobs" -> "langchain_community.tools.google_jobs.tool" [style="dotted"];
	}
	subgraph "cluster_pandas.io.parsers" {
		label="pandas.io.parsers";
		"pandas.io.parsers" -> "pandas.io.parsers.readers" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.arrow_parser_wrapper" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.base_parser" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.c_parser_wrapper" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.python_parser" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.embedding_distance" {
		label="langchain.evaluation.embedding_distance";
		"langchain.evaluation.embedding_distance" -> "langchain.evaluation.embedding_distance.base" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.primitives.serialization" {
		label="cryptography.hazmat.primitives.serialization";
		"cryptography.hazmat.primitives.serialization" -> "cryptography.hazmat.primitives.serialization.base" [style="dotted"];
		"cryptography.hazmat.primitives.serialization" -> "cryptography.hazmat.primitives.serialization.ssh" [style="dotted"];
	}
	subgraph "cluster_google.protobuf.internal" {
		label="google.protobuf.internal";
		"google.protobuf.internal" -> "google.protobuf.internal._api_implementation" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.api_implementation" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.python_edition_defaults" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.python_message" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.containers" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.wire_format" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.encoder" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.decoder" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.type_checkers" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.enum_type_wrapper" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.extension_dict" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.message_listener" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.field_mask" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.well_known_types" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.builder" [style="dotted"];
	}
	subgraph "cluster_pypdfium2_raw" {
		label="pypdfium2_raw";
		"pypdfium2_raw" -> "pypdfium2_raw.bindings" [style="dotted"];
	}
	subgraph "cluster_annotated_types" {
		label="annotated_types";
	}
	subgraph "cluster_openai.resources.uploads" {
		label="openai.resources.uploads";
		"openai.resources.uploads" -> "openai.resources.uploads.parts" [style="dotted"];
		"openai.resources.uploads" -> "openai.resources.uploads.uploads" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.vertex_rag_service" {
		label="google.cloud.aiplatform_v1beta1.services.vertex_rag_service";
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_experimental.pal_chain" {
		label="langchain_experimental.pal_chain";
		"langchain_experimental.pal_chain" -> "langchain_experimental.pal_chain.base" [style="dotted"];
		"langchain_experimental.pal_chain" -> "langchain_experimental.pal_chain.colored_object_prompt" [style="dotted"];
		"langchain_experimental.pal_chain" -> "langchain_experimental.pal_chain.math_prompt" [style="dotted"];
	}
	subgraph "cluster_openai.resources.responses" {
		label="openai.resources.responses";
		"openai.resources.responses" -> "openai.resources.responses.responses" [style="dotted"];
		"openai.resources.responses" -> "openai.resources.responses.input_items" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.ddg_search" {
		label="langchain_community.tools.ddg_search";
		"langchain_community.tools.ddg_search" -> "langchain_community.tools.ddg_search.tool" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.backends" {
		label="cryptography.hazmat.backends";
		"cryptography.hazmat.backends" -> "cryptography.hazmat.backends.openssl" [style="dotted"];
	}
	subgraph "cluster_openai.lib.streaming.responses" {
		label="openai.lib.streaming.responses";
		"openai.lib.streaming.responses" -> "openai.lib.streaming.responses._events" [style="dotted"];
		"openai.lib.streaming.responses" -> "openai.lib.streaming.responses._responses" [style="dotted"];
		"openai.lib.streaming.responses" -> "openai.lib.streaming.responses._types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" {
		label="google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports";
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_httpcore" {
		label="httpcore";
		"httpcore" -> "httpcore._api" [style="dotted"];
		"httpcore" -> "httpcore._async" [style="dotted"];
		"httpcore" -> "httpcore._exceptions" [style="dotted"];
		"httpcore" -> "httpcore._models" [style="dotted"];
		"httpcore" -> "httpcore._ssl" [style="dotted"];
		"httpcore" -> "httpcore._sync" [style="dotted"];
		"httpcore" -> "httpcore._backends" [style="dotted"];
		"httpcore" -> "httpcore._utils" [style="dotted"];
		"httpcore" -> "httpcore._synchronization" [style="dotted"];
		"httpcore" -> "httpcore._trace" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.ext.declarative" {
		label="sqlalchemy.ext.declarative";
		"sqlalchemy.ext.declarative" -> "sqlalchemy.ext.declarative.extensions" [style="dotted"];
	}
	subgraph "cluster_openai.types.evals" {
		label="openai.types.evals";
		"openai.types.evals" -> "openai.types.evals.eval_api_error" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_list_params" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_create_params" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_list_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_cancel_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_create_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_delete_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_retrieve_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.create_eval_jsonl_run_data_source" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.create_eval_completions_run_data_source" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.create_eval_jsonl_run_data_source_param" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.create_eval_completions_run_data_source_param" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.runs" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.model_service" {
		label="google.cloud.aiplatform_v1.services.model_service";
		"google.cloud.aiplatform_v1.services.model_service" -> "google.cloud.aiplatform_v1.services.model_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_service" -> "google.cloud.aiplatform_v1.services.model_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_service" -> "google.cloud.aiplatform_v1.services.model_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_service" -> "google.cloud.aiplatform_v1.services.model_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.agents" {
		label="langchain.evaluation.agents";
		"langchain.evaluation.agents" -> "langchain.evaluation.agents.trajectory_eval_chain" [style="dotted"];
		"langchain.evaluation.agents" -> "langchain.evaluation.agents.trajectory_eval_prompt" [style="dotted"];
	}
	subgraph "cluster_aiohttp" {
		label="aiohttp";
		"aiohttp" -> "aiohttp.hdrs" [style="dotted"];
		"aiohttp" -> "aiohttp.http" [style="dotted"];
		"aiohttp" -> "aiohttp.multipart" [style="dotted"];
		"aiohttp" -> "aiohttp.client" [style="dotted"];
		"aiohttp" -> "aiohttp.cookiejar" [style="dotted"];
		"aiohttp" -> "aiohttp.formdata" [style="dotted"];
		"aiohttp" -> "aiohttp.helpers" [style="dotted"];
		"aiohttp" -> "aiohttp.payload" [style="dotted"];
		"aiohttp" -> "aiohttp.payload_streamer" [style="dotted"];
		"aiohttp" -> "aiohttp.resolver" [style="dotted"];
		"aiohttp" -> "aiohttp.streams" [style="dotted"];
		"aiohttp" -> "aiohttp.tracing" [style="dotted"];
		"aiohttp" -> "aiohttp.worker" [style="dotted"];
		"aiohttp" -> "aiohttp.web" [style="dotted"];
		"aiohttp" -> "aiohttp.web_app" [style="dotted"];
		"aiohttp" -> "aiohttp.web_log" [style="dotted"];
		"aiohttp" -> "aiohttp.abc" [style="dotted"];
		"aiohttp" -> "aiohttp.web_request" [style="dotted"];
		"aiohttp" -> "aiohttp.web_response" [style="dotted"];
		"aiohttp" -> "aiohttp.compression_utils" [style="dotted"];
		"aiohttp" -> "aiohttp.typedefs" [style="dotted"];
		"aiohttp" -> "aiohttp.http_parser" [style="dotted"];
		"aiohttp" -> "aiohttp.http_writer" [style="dotted"];
		"aiohttp" -> "aiohttp.web_exceptions" [style="dotted"];
		"aiohttp" -> "aiohttp.web_protocol" [style="dotted"];
		"aiohttp" -> "aiohttp.web_urldispatcher" [style="dotted"];
		"aiohttp" -> "aiohttp.web_fileresponse" [style="dotted"];
		"aiohttp" -> "aiohttp.web_routedef" [style="dotted"];
		"aiohttp" -> "aiohttp.base_protocol" [style="dotted"];
		"aiohttp" -> "aiohttp.http_exceptions" [style="dotted"];
		"aiohttp" -> "aiohttp.log" [style="dotted"];
		"aiohttp" -> "aiohttp.tcp_helpers" [style="dotted"];
		"aiohttp" -> "aiohttp.web_server" [style="dotted"];
		"aiohttp" -> "aiohttp.client_exceptions" [style="dotted"];
		"aiohttp" -> "aiohttp.client_reqrep" [style="dotted"];
		"aiohttp" -> "aiohttp.connector" [style="dotted"];
		"aiohttp" -> "aiohttp.client_proto" [style="dotted"];
		"aiohttp" -> "aiohttp._http_writer" [style="dotted"];
		"aiohttp" -> "aiohttp._http_parser" [style="dotted"];
		"aiohttp" -> "aiohttp.web_middlewares" [style="dotted"];
		"aiohttp" -> "aiohttp.web_runner" [style="dotted"];
		"aiohttp" -> "aiohttp.web_ws" [style="dotted"];
		"aiohttp" -> "aiohttp.http_websocket" [style="dotted"];
		"aiohttp" -> "aiohttp._websocket" [style="dotted"];
		"aiohttp" -> "aiohttp.client_ws" [style="dotted"];
	}
	subgraph "cluster_lxml.includes.extlibs" {
		label="lxml.includes.extlibs";
	}
	subgraph "cluster_pydantic_core" {
		label="pydantic_core";
		"pydantic_core" -> "pydantic_core._pydantic_core" [style="dotted"];
		"pydantic_core" -> "pydantic_core.core_schema" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.job_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.job_service.transports";
		"google.cloud.aiplatform_v1beta1.services.job_service.transports" -> "google.cloud.aiplatform_v1beta1.services.job_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.job_service.transports" -> "google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.job_service.transports" -> "google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.job_service.transports" -> "google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.job_service.transports" -> "google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.job_service.transports" -> "google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_neo4j._debug" {
		label="neo4j._debug";
		"neo4j._debug" -> "neo4j._debug._config" [style="dotted"];
		"neo4j._debug" -> "neo4j._debug._notification_printer" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.featurestore_online_serving_service" {
		label="google.cloud.aiplatform_v1.services.featurestore_online_serving_service";
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.prediction_service.transports" {
		label="google.cloud.aiplatform_v1.services.prediction_service.transports";
		"google.cloud.aiplatform_v1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1.services.prediction_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1.services.prediction_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1.services.prediction_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.vizier_service" {
		label="google.cloud.aiplatform_v1beta1.services.vizier_service";
		"google.cloud.aiplatform_v1beta1.services.vizier_service" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vizier_service" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vizier_service" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vizier_service" -> "google.cloud.aiplatform_v1beta1.services.vizier_service.transports" [style="dotted"];
	}
	subgraph "cluster_openai._extras" {
		label="openai._extras";
		"openai._extras" -> "openai._extras.numpy_proxy" [style="dotted"];
		"openai._extras" -> "openai._extras.pandas_proxy" [style="dotted"];
		"openai._extras" -> "openai._extras.sounddevice_proxy" [style="dotted"];
		"openai._extras" -> "openai._extras._common" [style="dotted"];
	}
	subgraph "cluster_setuptools.extern" {
		label="setuptools.extern";
		"setuptools.extern" -> "setuptools.extern.packaging" [style="dotted"];
		"setuptools.extern" -> "setuptools.extern.ordered_set" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_finance" {
		label="langchain_community.tools.google_finance";
		"langchain_community.tools.google_finance" -> "langchain_community.tools.google_finance.tool" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.retriever_service" {
		label="google.ai.generativelanguage_v1beta.services.retriever_service";
		"google.ai.generativelanguage_v1beta.services.retriever_service" -> "google.ai.generativelanguage_v1beta.services.retriever_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service" -> "google.ai.generativelanguage_v1beta.services.retriever_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service" -> "google.ai.generativelanguage_v1beta.services.retriever_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_openai" {
		label="langchain_openai";
		"langchain_openai" -> "langchain_openai.chat_models" [style="dotted"];
		"langchain_openai" -> "langchain_openai.embeddings" [style="dotted"];
		"langchain_openai" -> "langchain_openai.llms" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service" {
		label="google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service";
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.client" {
		label="google.cloud.client";
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.discuss_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.discuss_service.transports";
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_neo4j._async.work" {
		label="neo4j._async.work";
		"neo4j._async.work" -> "neo4j._async.work.result" [style="dotted"];
		"neo4j._async.work" -> "neo4j._async.work.session" [style="dotted"];
		"neo4j._async.work" -> "neo4j._async.work.transaction" [style="dotted"];
		"neo4j._async.work" -> "neo4j._async.work.workspace" [style="dotted"];
	}
	subgraph "cluster_openai.types.beta.threads.runs" {
		label="openai.types.beta.threads.runs";
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.tool_call" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.tool_call_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step_include" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.step_list_params" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.function_tool_call" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step_delta_event" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.step_retrieve_params" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.code_interpreter_logs" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.file_search_tool_call" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.tool_call_delta_object" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.tool_calls_step_details" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.function_tool_call_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.code_interpreter_tool_call" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.file_search_tool_call_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step_delta_message_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.code_interpreter_output_image" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.message_creation_step_details" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.code_interpreter_tool_call_delta" [style="dotted"];
	}
	subgraph "cluster_langchain_community.vectorstores.redis" {
		label="langchain_community.vectorstores.redis";
		"langchain_community.vectorstores.redis" -> "langchain_community.vectorstores.redis.base" [style="dotted"];
		"langchain_community.vectorstores.redis" -> "langchain_community.vectorstores.redis.filters" [style="dotted"];
		"langchain_community.vectorstores.redis" -> "langchain_community.vectorstores.redis.constants" [style="dotted"];
		"langchain_community.vectorstores.redis" -> "langchain_community.vectorstores.redis.schema" [style="dotted"];
	}
	subgraph "cluster_pypdf._codecs" {
		label="pypdf._codecs";
		"pypdf._codecs" -> "pypdf._codecs.adobe_glyphs" [style="dotted"];
		"pypdf._codecs" -> "pypdf._codecs.pdfdoc" [style="dotted"];
		"pypdf._codecs" -> "pypdf._codecs.std" [style="dotted"];
		"pypdf._codecs" -> "pypdf._codecs.symbol" [style="dotted"];
		"pypdf._codecs" -> "pypdf._codecs.zapfding" [style="dotted"];
		"pypdf._codecs" -> "pypdf._codecs._codecs" [style="dotted"];
	}
	subgraph "cluster_dateutil.zoneinfo" {
		label="dateutil.zoneinfo";
	}
	subgraph "cluster_langchain_community.memory" {
		label="langchain_community.memory";
		"langchain_community.memory" -> "langchain_community.memory.kg" [style="dotted"];
		"langchain_community.memory" -> "langchain_community.memory.motorhead_memory" [style="dotted"];
		"langchain_community.memory" -> "langchain_community.memory.zep_memory" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag.retrievers" {
		label="neo4j_graphrag.retrievers";
		"neo4j_graphrag.retrievers" -> "neo4j_graphrag.retrievers.hybrid" [style="dotted"];
		"neo4j_graphrag.retrievers" -> "neo4j_graphrag.retrievers.text2cypher" [style="dotted"];
		"neo4j_graphrag.retrievers" -> "neo4j_graphrag.retrievers.vector" [style="dotted"];
		"neo4j_graphrag.retrievers" -> "neo4j_graphrag.retrievers.base" [style="dotted"];
		"neo4j_graphrag.retrievers" -> "neo4j_graphrag.retrievers.external" [style="dotted"];
	}
	subgraph "cluster_filetype.types" {
		label="filetype.types";
		"filetype.types" -> "filetype.types.archive" [style="dotted"];
		"filetype.types" -> "filetype.types.audio" [style="dotted"];
		"filetype.types" -> "filetype.types.application" [style="dotted"];
		"filetype.types" -> "filetype.types.document" [style="dotted"];
		"filetype.types" -> "filetype.types.font" [style="dotted"];
		"filetype.types" -> "filetype.types.image" [style="dotted"];
		"filetype.types" -> "filetype.types.video" [style="dotted"];
		"filetype.types" -> "filetype.types.base" [style="dotted"];
		"filetype.types" -> "filetype.types.isobmff" [style="dotted"];
	}
	subgraph "cluster_langchain_community.example_selectors" {
		label="langchain_community.example_selectors";
		"langchain_community.example_selectors" -> "langchain_community.example_selectors.ngram_overlap" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.types" {
		label="google.cloud.aiplatform_v1beta1.types";
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.accelerator_type" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.user_action_reference" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.annotation" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.annotation_spec" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.api_auth" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.artifact" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.completion_stats" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.encryption_spec" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.explanation_metadata" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.io" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.explanation" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.job_state" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.reservation_affinity" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.machine_resources" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.manual_batch_tuning_parameters" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_monitoring_stats" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_monitoring" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_deployment_monitoring_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.deployed_model_ref" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.env_var" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.unmanaged_container_model" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.batch_prediction_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.openapi" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.tool" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.vertex_rag_data" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.content" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.cached_content" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.context" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.service_networking" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.custom_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.data_item" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.data_labeling_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.saved_query" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.dataset" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.dataset_version" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.operation" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.dataset_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.deployed_index_ref" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.deployment_resource_pool" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.endpoint" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.deployment_resource_pool_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.endpoint_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.featurestore_monitoring" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.entity_type" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.evaluated_annotation" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.evaluation_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.event" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.example" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.example_store" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.example_store_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.execution" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.extension" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.extension_execution_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.extension_registry_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_monitor" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_group" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_monitor_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_online_store" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_view" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_view_sync" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_online_store_admin_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_selector" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.types" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.featurestore_online_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_online_store_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.feature_registry_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.featurestore" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.featurestore_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.gen_ai_cache_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.tuning_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.genai_tuning_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.study" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.hyperparameter_tuning_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.index" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.index_endpoint" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.index_endpoint_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.index_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.nas_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.job_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.lineage_subgraph" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.llm_utility_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.match_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.metadata_schema" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.metadata_store" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.metadata_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.migratable_resource" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.migration_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_evaluation_slice" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_evaluation" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.publisher_model" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_garden_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_monitoring_alert" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_monitoring_spec" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_monitor" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_monitoring_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_monitoring_stats" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_monitoring_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.model_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.network_spec" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.notebook_euc_config" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.notebook_execution_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.notebook_idle_shutdown_config" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.notebook_runtime_template_ref" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.notebook_software_config" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.notebook_runtime" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.notebook_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.persistent_resource" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.persistent_resource_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.pipeline_failure_policy" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.pipeline_state" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.value" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.ui_pipeline_spec" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.pipeline_job" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.training_pipeline" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.pipeline_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.prediction_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.reasoning_engine" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.reasoning_engine_execution_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.reasoning_engine_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.schedule" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.schedule_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.session" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.session_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.specialist_pool" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.specialist_pool_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.tensorboard" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.tensorboard_time_series" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.tensorboard_data" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.tensorboard_experiment" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.tensorboard_run" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.tensorboard_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.vertex_rag_data_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.vertex_rag_service" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.types" -> "google.cloud.aiplatform_v1beta1.types.vizier_service" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.session" {
		label="graphdatascience.session";
		"graphdatascience.session" -> "graphdatascience.session.algorithm_category" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.cloud_location" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.dbms_connection_info" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.gds_sessions" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.session_info" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.session_sizes" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.aura_api" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.aura_graph_data_science" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.dedicated_sessions" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.aura_api_responses" [style="dotted"];
		"graphdatascience.session" -> "graphdatascience.session.dbms" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.bindings" {
		label="cryptography.hazmat.bindings";
		"cryptography.hazmat.bindings" -> "cryptography.hazmat.bindings._rust" [style="dotted"];
		"cryptography.hazmat.bindings" -> "cryptography.hazmat.bindings.openssl" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.folders.transports" {
		label="google.cloud.resourcemanager_v3.services.folders.transports";
		"google.cloud.resourcemanager_v3.services.folders.transports" -> "google.cloud.resourcemanager_v3.services.folders.transports.base" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.folders.transports" -> "google.cloud.resourcemanager_v3.services.folders.transports.grpc" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.folders.transports" -> "google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.folders.transports" -> "google.cloud.resourcemanager_v3.services.folders.transports.rest" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.folders.transports" -> "google.cloud.resourcemanager_v3.services.folders.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_docx.text" {
		label="docx.text";
		"docx.text" -> "docx.text.font" [style="dotted"];
		"docx.text" -> "docx.text.parfmt" [style="dotted"];
		"docx.text" -> "docx.text.tabstops" [style="dotted"];
		"docx.text" -> "docx.text.paragraph" [style="dotted"];
		"docx.text" -> "docx.text.hyperlink" [style="dotted"];
		"docx.text" -> "docx.text.pagebreak" [style="dotted"];
		"docx.text" -> "docx.text.run" [style="dotted"];
	}
	subgraph "cluster_pypdf.generic" {
		label="pypdf.generic";
		"pypdf.generic" -> "pypdf.generic._base" [style="dotted"];
		"pypdf.generic" -> "pypdf.generic._data_structures" [style="dotted"];
		"pypdf.generic" -> "pypdf.generic._files" [style="dotted"];
		"pypdf.generic" -> "pypdf.generic._fit" [style="dotted"];
		"pypdf.generic" -> "pypdf.generic._outline" [style="dotted"];
		"pypdf.generic" -> "pypdf.generic._rectangle" [style="dotted"];
		"pypdf.generic" -> "pypdf.generic._utils" [style="dotted"];
		"pypdf.generic" -> "pypdf.generic._viewerpref" [style="dotted"];
		"pypdf.generic" -> "pypdf.generic._image_inline" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag.llm" {
		label="neo4j_graphrag.llm";
		"neo4j_graphrag.llm" -> "neo4j_graphrag.llm.anthropic_llm" [style="dotted"];
		"neo4j_graphrag.llm" -> "neo4j_graphrag.llm.base" [style="dotted"];
		"neo4j_graphrag.llm" -> "neo4j_graphrag.llm.cohere_llm" [style="dotted"];
		"neo4j_graphrag.llm" -> "neo4j_graphrag.llm.mistralai_llm" [style="dotted"];
		"neo4j_graphrag.llm" -> "neo4j_graphrag.llm.ollama_llm" [style="dotted"];
		"neo4j_graphrag.llm" -> "neo4j_graphrag.llm.openai_llm" [style="dotted"];
		"neo4j_graphrag.llm" -> "neo4j_graphrag.llm.types" [style="dotted"];
		"neo4j_graphrag.llm" -> "neo4j_graphrag.llm.vertexai_llm" [style="dotted"];
	}
	subgraph "cluster_frozenlist" {
		label="frozenlist";
		"frozenlist" -> "frozenlist._frozenlist" [style="dotted"];
	}
	subgraph "cluster_langsmith.env" {
		label="langsmith.env";
		"langsmith.env" -> "langsmith.env._git" [style="dotted"];
		"langsmith.env" -> "langsmith.env._runtime_env" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.session.dbms" {
		label="graphdatascience.session.dbms";
		"graphdatascience.session.dbms" -> "graphdatascience.session.dbms.protocol_resolver" [style="dotted"];
		"graphdatascience.session.dbms" -> "graphdatascience.session.dbms.protocol_version" [style="dotted"];
	}
	subgraph "cluster_langsmith" {
		label="langsmith";
		"langsmith" -> "langsmith.schemas" [style="dotted"];
		"langsmith" -> "langsmith.client" [style="dotted"];
		"langsmith" -> "langsmith.utils" [style="dotted"];
		"langsmith" -> "langsmith.run_helpers" [style="dotted"];
		"langsmith" -> "langsmith.run_trees" [style="dotted"];
		"langsmith" -> "langsmith.__version__" [style="dotted"];
		"langsmith" -> "langsmith.env" [style="dotted"];
		"langsmith" -> "langsmith._expect" [style="dotted"];
		"langsmith" -> "langsmith._testing" [style="dotted"];
		"langsmith" -> "langsmith.async_client" [style="dotted"];
		"langsmith" -> "langsmith.evaluation" [style="dotted"];
		"langsmith" -> "langsmith._internal" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.permission_service" {
		label="google.ai.generativelanguage_v1beta.services.permission_service";
		"google.ai.generativelanguage_v1beta.services.permission_service" -> "google.ai.generativelanguage_v1beta.services.permission_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service" -> "google.ai.generativelanguage_v1beta.services.permission_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service" -> "google.ai.generativelanguage_v1beta.services.permission_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.nuclia" {
		label="langchain_community.tools.nuclia";
		"langchain_community.tools.nuclia" -> "langchain_community.tools.nuclia.tool" [style="dotted"];
	}
	subgraph "cluster_pdfplumber" {
		label="pdfplumber";
		"pdfplumber" -> "pdfplumber.utils" [style="dotted"];
		"pdfplumber" -> "pdfplumber._version" [style="dotted"];
		"pdfplumber" -> "pdfplumber.pdf" [style="dotted"];
		"pdfplumber" -> "pdfplumber.repair" [style="dotted"];
		"pdfplumber" -> "pdfplumber._typing" [style="dotted"];
		"pdfplumber" -> "pdfplumber.container" [style="dotted"];
		"pdfplumber" -> "pdfplumber.page" [style="dotted"];
		"pdfplumber" -> "pdfplumber.structure" [style="dotted"];
		"pdfplumber" -> "pdfplumber.table" [style="dotted"];
		"pdfplumber" -> "pdfplumber.display" [style="dotted"];
		"pdfplumber" -> "pdfplumber.convert" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.structured_output" {
		label="langchain.chains.structured_output";
		"langchain.chains.structured_output" -> "langchain.chains.structured_output.base" [style="dotted"];
	}
	subgraph "cluster_multiprocessing" {
		label="multiprocessing";
		"multiprocessing" -> "multiprocessing.process" [style="dotted"];
		"multiprocessing" -> "multiprocessing.util" [style="dotted"];
		"multiprocessing" -> "multiprocessing.AuthenticationError" [style="dotted"];
		"multiprocessing" -> "multiprocessing.BufferTooShort" [style="dotted"];
		"multiprocessing" -> "multiprocessing.resource_sharer" [style="dotted"];
		"multiprocessing" -> "multiprocessing.connection" [style="dotted"];
		"multiprocessing" -> "multiprocessing.get_start_method" [style="dotted"];
		"multiprocessing" -> "multiprocessing.set_start_method" [style="dotted"];
		"multiprocessing" -> "multiprocessing.resource_tracker" [style="dotted"];
		"multiprocessing" -> "multiprocessing.spawn" [style="dotted"];
		"multiprocessing" -> "multiprocessing.forkserver" [style="dotted"];
		"multiprocessing" -> "multiprocessing.reduction" [style="dotted"];
		"multiprocessing" -> "multiprocessing.get_context" [style="dotted"];
		"multiprocessing" -> "multiprocessing.TimeoutError" [style="dotted"];
		"multiprocessing" -> "multiprocessing.pool" [style="dotted"];
		"multiprocessing" -> "multiprocessing.shared_memory" [style="dotted"];
		"multiprocessing" -> "multiprocessing.context" [style="dotted"];
		"multiprocessing" -> "multiprocessing.RLock" [style="dotted"];
		"multiprocessing" -> "multiprocessing.queues" [style="dotted"];
		"multiprocessing" -> "multiprocessing.synchronize" [style="dotted"];
		"multiprocessing" -> "multiprocessing.heap" [style="dotted"];
		"multiprocessing" -> "multiprocessing.managers" [style="dotted"];
		"multiprocessing" -> "multiprocessing.sharedctypes" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_fork" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_spawn_posix" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_forkserver" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_spawn_win32" [style="dotted"];
		"multiprocessing" -> "multiprocessing.dummy" [style="dotted"];
	}
	subgraph "cluster_zipp.compat" {
		label="zipp.compat";
		"zipp.compat" -> "zipp.compat.overlay" [style="dotted"];
		"zipp.compat" -> "zipp.compat.py310" [style="dotted"];
	}
	subgraph "cluster_google.cloud.exceptions" {
		label="google.cloud.exceptions";
	}
	subgraph "cluster_neo4j_graphrag.retrievers.external.weaviate" {
		label="neo4j_graphrag.retrievers.external.weaviate";
		"neo4j_graphrag.retrievers.external.weaviate" -> "neo4j_graphrag.retrievers.external.weaviate.weaviate" [style="dotted"];
		"neo4j_graphrag.retrievers.external.weaviate" -> "neo4j_graphrag.retrievers.external.weaviate.types" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.question_answering" {
		label="langchain.chains.question_answering";
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.map_reduce_prompt" [style="dotted"];
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.refine_prompts" [style="dotted"];
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.stuff_prompt" [style="dotted"];
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.chain" [style="dotted"];
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.map_rerank_prompt" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.cogniswitch" {
		label="langchain_community.tools.cogniswitch";
		"langchain_community.tools.cogniswitch" -> "langchain_community.tools.cogniswitch.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.utils.enhanced_library" {
		label="google.cloud.aiplatform.utils.enhanced_library";
		"google.cloud.aiplatform.utils.enhanced_library" -> "google.cloud.aiplatform.utils.enhanced_library.value_converter" [style="dotted"];
		"google.cloud.aiplatform.utils.enhanced_library" -> "google.cloud.aiplatform.utils.enhanced_library._decorators" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.self_ask_with_search" {
		label="langchain.agents.self_ask_with_search";
		"langchain.agents.self_ask_with_search" -> "langchain.agents.self_ask_with_search.base" [style="dotted"];
		"langchain.agents.self_ask_with_search" -> "langchain.agents.self_ask_with_search.output_parser" [style="dotted"];
		"langchain.agents.self_ask_with_search" -> "langchain.agents.self_ask_with_search.prompt" [style="dotted"];
	}
	subgraph "cluster_shapely.algorithms" {
		label="shapely.algorithms";
		"shapely.algorithms" -> "shapely.algorithms.cga" [style="dotted"];
		"shapely.algorithms" -> "shapely.algorithms._oriented_envelope" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1";
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services" {
		label="google.cloud.aiplatform_v1.services";
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.notebook_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.migration_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.match_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.llm_utility_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.evaluation_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.vertex_rag_data_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.vertex_rag_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.vizier_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.tensorboard_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.specialist_pool_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.schedule_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.reasoning_engine_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.prediction_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.pipeline_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.persistent_resource_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.model_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.model_garden_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.metadata_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.job_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.index_endpoint_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.index_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.featurestore_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.feature_registry_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.feature_online_store_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.endpoint_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service" [style="dotted"];
		"google.cloud.aiplatform_v1.services" -> "google.cloud.aiplatform_v1.services.dataset_service" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1" {
		label="google.cloud.aiplatform_v1";
		"google.cloud.aiplatform_v1" -> "google.cloud.aiplatform_v1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform_v1" -> "google.cloud.aiplatform_v1.services" [style="dotted"];
		"google.cloud.aiplatform_v1" -> "google.cloud.aiplatform_v1.types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict" {
		label="google.cloud.aiplatform.v1beta1.schema.predict";
		"google.cloud.aiplatform.v1beta1.schema.predict" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict" -> "google.cloud.aiplatform.v1beta1.schema.predict.params" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict" -> "google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.preview.featurestore" {
		label="google.cloud.aiplatform.preview.featurestore";
		"google.cloud.aiplatform.preview.featurestore" -> "google.cloud.aiplatform.preview.featurestore.entity_type" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.mysql" {
		label="sqlalchemy.dialects.mysql";
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.reflection" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.aiomysql" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.asyncmy" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.base" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.cymysql" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.mariadbconnector" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.mysqlconnector" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.mysqldb" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.pymysql" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.pyodbc" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.dml" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.expression" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.mariadb" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.types" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.enumerated" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.json" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.reserved_words" [style="dotted"];
	}
	subgraph "cluster_google.resumable_media.requests" {
		label="google.resumable_media.requests";
		"google.resumable_media.requests" -> "google.resumable_media.requests._request_helpers" [style="dotted"];
		"google.resumable_media.requests" -> "google.resumable_media.requests.download" [style="dotted"];
		"google.resumable_media.requests" -> "google.resumable_media.requests.upload" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.openweathermap" {
		label="langchain_community.tools.openweathermap";
		"langchain_community.tools.openweathermap" -> "langchain_community.tools.openweathermap.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.matching_engine._protos" {
		label="google.cloud.aiplatform.matching_engine._protos";
		"google.cloud.aiplatform.matching_engine._protos" -> "google.cloud.aiplatform.matching_engine._protos.match_service_pb2" [style="dotted"];
		"google.cloud.aiplatform.matching_engine._protos" -> "google.cloud.aiplatform.matching_engine._protos.match_service_pb2_grpc" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.primitives" {
		label="cryptography.hazmat.primitives";
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.hashes" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives._serialization" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.constant_time" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.serialization" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.padding" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives._asymmetric" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives._cipheralgorithm" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.ciphers" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.asymmetric" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.steamship_image_generation" {
		label="langchain_community.tools.steamship_image_generation";
		"langchain_community.tools.steamship_image_generation" -> "langchain_community.tools.steamship_image_generation.tool" [style="dotted"];
		"langchain_community.tools.steamship_image_generation" -> "langchain_community.tools.steamship_image_generation.utils" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.cache_service" {
		label="google.ai.generativelanguage_v1beta.services.cache_service";
		"google.ai.generativelanguage_v1beta.services.cache_service" -> "google.ai.generativelanguage_v1beta.services.cache_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service" -> "google.ai.generativelanguage_v1beta.services.cache_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service" -> "google.ai.generativelanguage_v1beta.services.cache_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.notebook_service" {
		label="google.cloud.aiplatform_v1beta1.services.notebook_service";
		"google.cloud.aiplatform_v1beta1.services.notebook_service" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.notebook_service" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.notebook_service" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.notebook_service" -> "google.cloud.aiplatform_v1beta1.services.notebook_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service" {
		label="google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service";
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" [style="dotted"];
	}
	subgraph "cluster_aiosignal" {
		label="aiosignal";
	}
	subgraph "cluster_neo4j._async.io" {
		label="neo4j._async.io";
		"neo4j._async.io" -> "neo4j._async.io._bolt3" [style="dotted"];
		"neo4j._async.io" -> "neo4j._async.io._bolt4" [style="dotted"];
		"neo4j._async.io" -> "neo4j._async.io._bolt5" [style="dotted"];
		"neo4j._async.io" -> "neo4j._async.io._bolt" [style="dotted"];
		"neo4j._async.io" -> "neo4j._async.io._common" [style="dotted"];
		"neo4j._async.io" -> "neo4j._async.io._pool" [style="dotted"];
		"neo4j._async.io" -> "neo4j._async.io._bolt_socket" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.reasoning_engine_service" {
		label="google.cloud.aiplatform_v1beta1.services.reasoning_engine_service";
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" [style="dotted"];
	}
	subgraph "cluster_openai.types" {
		label="openai.types";
		"openai.types" -> "openai.types.eval_list_params" [style="dotted"];
		"openai.types" -> "openai.types.eval_create_params" [style="dotted"];
		"openai.types" -> "openai.types.eval_update_params" [style="dotted"];
		"openai.types" -> "openai.types.file_list_params" [style="dotted"];
		"openai.types" -> "openai.types.file_create_params" [style="dotted"];
		"openai.types" -> "openai.types.image_edit_params" [style="dotted"];
		"openai.types" -> "openai.types.image_generate_params" [style="dotted"];
		"openai.types" -> "openai.types.image_create_variation_params" [style="dotted"];
		"openai.types" -> "openai.types.batch_list_params" [style="dotted"];
		"openai.types" -> "openai.types.batch_create_params" [style="dotted"];
		"openai.types" -> "openai.types.upload_create_params" [style="dotted"];
		"openai.types" -> "openai.types.upload_complete_params" [style="dotted"];
		"openai.types" -> "openai.types.embedding_create_params" [style="dotted"];
		"openai.types" -> "openai.types.completion_create_params" [style="dotted"];
		"openai.types" -> "openai.types.moderation_create_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_list_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_create_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_search_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_update_params" [style="dotted"];
		"openai.types" -> "openai.types.batch" [style="dotted"];
		"openai.types" -> "openai.types.image" [style="dotted"];
		"openai.types" -> "openai.types.model" [style="dotted"];
		"openai.types" -> "openai.types.shared" [style="dotted"];
		"openai.types" -> "openai.types.upload" [style="dotted"];
		"openai.types" -> "openai.types.embedding" [style="dotted"];
		"openai.types" -> "openai.types.chat_model" [style="dotted"];
		"openai.types" -> "openai.types.completion" [style="dotted"];
		"openai.types" -> "openai.types.moderation" [style="dotted"];
		"openai.types" -> "openai.types.audio_model" [style="dotted"];
		"openai.types" -> "openai.types.batch_error" [style="dotted"];
		"openai.types" -> "openai.types.file_object" [style="dotted"];
		"openai.types" -> "openai.types.image_model" [style="dotted"];
		"openai.types" -> "openai.types.file_content" [style="dotted"];
		"openai.types" -> "openai.types.file_deleted" [style="dotted"];
		"openai.types" -> "openai.types.file_purpose" [style="dotted"];
		"openai.types" -> "openai.types.vector_store" [style="dotted"];
		"openai.types" -> "openai.types.model_deleted" [style="dotted"];
		"openai.types" -> "openai.types.embedding_model" [style="dotted"];
		"openai.types" -> "openai.types.images_response" [style="dotted"];
		"openai.types" -> "openai.types.completion_usage" [style="dotted"];
		"openai.types" -> "openai.types.moderation_model" [style="dotted"];
		"openai.types" -> "openai.types.completion_choice" [style="dotted"];
		"openai.types" -> "openai.types.eval_list_response" [style="dotted"];
		"openai.types" -> "openai.types.batch_request_counts" [style="dotted"];
		"openai.types" -> "openai.types.eval_create_response" [style="dotted"];
		"openai.types" -> "openai.types.eval_delete_response" [style="dotted"];
		"openai.types" -> "openai.types.eval_update_response" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_deleted" [style="dotted"];
		"openai.types" -> "openai.types.audio_response_format" [style="dotted"];
		"openai.types" -> "openai.types.eval_retrieve_response" [style="dotted"];
		"openai.types" -> "openai.types.file_chunking_strategy" [style="dotted"];
		"openai.types" -> "openai.types.eval_label_model_grader" [style="dotted"];
		"openai.types" -> "openai.types.eval_string_check_grader" [style="dotted"];
		"openai.types" -> "openai.types.create_embedding_response" [style="dotted"];
		"openai.types" -> "openai.types.moderation_create_response" [style="dotted"];
		"openai.types" -> "openai.types.eval_text_similarity_grader" [style="dotted"];
		"openai.types" -> "openai.types.moderation_text_input_param" [style="dotted"];
		"openai.types" -> "openai.types.file_chunking_strategy_param" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_search_response" [style="dotted"];
		"openai.types" -> "openai.types.websocket_connection_options" [style="dotted"];
		"openai.types" -> "openai.types.static_file_chunking_strategy" [style="dotted"];
		"openai.types" -> "openai.types.eval_custom_data_source_config" [style="dotted"];
		"openai.types" -> "openai.types.eval_string_check_grader_param" [style="dotted"];
		"openai.types" -> "openai.types.moderation_image_url_input_param" [style="dotted"];
		"openai.types" -> "openai.types.auto_file_chunking_strategy_param" [style="dotted"];
		"openai.types" -> "openai.types.eval_text_similarity_grader_param" [style="dotted"];
		"openai.types" -> "openai.types.moderation_multi_modal_input_param" [style="dotted"];
		"openai.types" -> "openai.types.other_file_chunking_strategy_object" [style="dotted"];
		"openai.types" -> "openai.types.static_file_chunking_strategy_param" [style="dotted"];
		"openai.types" -> "openai.types.static_file_chunking_strategy_object" [style="dotted"];
		"openai.types" -> "openai.types.eval_stored_completions_data_source_config" [style="dotted"];
		"openai.types" -> "openai.types.static_file_chunking_strategy_object_param" [style="dotted"];
		"openai.types" -> "openai.types.responses" [style="dotted"];
		"openai.types" -> "openai.types.shared_params" [style="dotted"];
		"openai.types" -> "openai.types.chat" [style="dotted"];
		"openai.types" -> "openai.types.vector_stores" [style="dotted"];
		"openai.types" -> "openai.types.fine_tuning" [style="dotted"];
		"openai.types" -> "openai.types.beta" [style="dotted"];
		"openai.types" -> "openai.types.uploads" [style="dotted"];
		"openai.types" -> "openai.types.evals" [style="dotted"];
		"openai.types" -> "openai.types.audio" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.trainingjob.definition" {
		label="google.cloud.aiplatform.v1beta1.schema.trainingjob.definition";
		"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition" -> "google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.gapic_version" [style="dotted"];
	}
	subgraph "cluster_langchain.smith.evaluation" {
		label="langchain.smith.evaluation";
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.config" [style="dotted"];
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.name_generation" [style="dotted"];
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.progress" [style="dotted"];
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.runner_utils" [style="dotted"];
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.string_run_evaluator" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.wikipedia" {
		label="langchain_community.tools.wikipedia";
		"langchain_community.tools.wikipedia" -> "langchain_community.tools.wikipedia.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_neo4j.chains" {
		label="langchain_neo4j.chains";
		"langchain_neo4j.chains" -> "langchain_neo4j.chains.graph_qa" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.openapi" {
		label="langchain_community.tools.openapi";
		"langchain_community.tools.openapi" -> "langchain_community.tools.openapi.utils" [style="dotted"];
	}
	subgraph "cluster_urllib" {
		label="urllib";
		"urllib" -> "urllib.urlencode" [style="dotted"];
		"urllib" -> "urllib.urlopen" [style="dotted"];
		"urllib" -> "urllib.parse" [style="dotted"];
		"urllib" -> "urllib.request" [style="dotted"];
		"urllib" -> "urllib.error" [style="dotted"];
		"urllib" -> "urllib.response" [style="dotted"];
		"urllib" -> "urllib2" [style="dotted"];
	}
	subgraph "cluster_vertexai.preview" {
		label="vertexai.preview";
		"vertexai.preview" -> "vertexai.preview.tuning" [style="dotted"];
		"vertexai.preview" -> "vertexai.preview.generative_models" [style="dotted"];
		"vertexai.preview" -> "vertexai.preview.language_models" [style="dotted"];
	}
	subgraph "cluster_urllib3.contrib.emscripten" {
		label="urllib3.contrib.emscripten";
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.connection" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.fetch" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.request" [style="dotted"];
		"urllib3.contrib.emscripten" -> "urllib3.contrib.emscripten.response" [style="dotted"];
	}
	subgraph "cluster_numpy.testing._private" {
		label="numpy.testing._private";
		"numpy.testing._private" -> "numpy.testing._private.extbuild" [style="dotted"];
		"numpy.testing._private" -> "numpy.testing._private.utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.tag_values.transports" {
		label="google.cloud.resourcemanager_v3.services.tag_values.transports";
		"google.cloud.resourcemanager_v3.services.tag_values.transports" -> "google.cloud.resourcemanager_v3.services.tag_values.transports.base" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_values.transports" -> "google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_values.transports" -> "google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_values.transports" -> "google.cloud.resourcemanager_v3.services.tag_values.transports.rest" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_values.transports" -> "google.cloud.resourcemanager_v3.services.tag_values.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pyarrow.tests" {
		label="pyarrow.tests";
		"pyarrow.tests" -> "pyarrow.tests.util" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.tool_calling_agent" {
		label="langchain.agents.tool_calling_agent";
		"langchain.agents.tool_calling_agent" -> "langchain.agents.tool_calling_agent.base" [style="dotted"];
	}
	subgraph "cluster_openai" {
		label="openai";
		"openai" -> "openai._legacy_response" [style="dotted"];
		"openai" -> "openai.types" [style="dotted"];
		"openai" -> "openai._types" [style="dotted"];
		"openai" -> "openai._utils" [style="dotted"];
		"openai" -> "openai._client" [style="dotted"];
		"openai" -> "openai._models" [style="dotted"];
		"openai" -> "openai._version" [style="dotted"];
		"openai" -> "openai._response" [style="dotted"];
		"openai" -> "openai._constants" [style="dotted"];
		"openai" -> "openai._exceptions" [style="dotted"];
		"openai" -> "openai._base_client" [style="dotted"];
		"openai" -> "openai.lib" [style="dotted"];
		"openai" -> "openai.version" [style="dotted"];
		"openai" -> "openai._module_client" [style="dotted"];
		"openai" -> "openai._compat" [style="dotted"];
		"openai" -> "openai._files" [style="dotted"];
		"openai" -> "openai._streaming" [style="dotted"];
		"openai" -> "openai._qs" [style="dotted"];
		"openai" -> "openai.resources" [style="dotted"];
		"openai" -> "openai._resource" [style="dotted"];
		"openai" -> "openai.pagination" [style="dotted"];
		"openai" -> "openai._extras" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.ainetwork" {
		label="langchain_community.tools.ainetwork";
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.app" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.owner" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.rule" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.transfer" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.value" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.base" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.feature_online_store_admin_service" {
		label="google.cloud.aiplatform_v1.services.feature_online_store_admin_service";
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_admin_service" -> "google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_core.example_selectors" {
		label="langchain_core.example_selectors";
		"langchain_core.example_selectors" -> "langchain_core.example_selectors.base" [style="dotted"];
		"langchain_core.example_selectors" -> "langchain_core.example_selectors.length_based" [style="dotted"];
		"langchain_core.example_selectors" -> "langchain_core.example_selectors.semantic_similarity" [style="dotted"];
	}
	subgraph "cluster_pandas.api" {
		label="pandas.api";
		"pandas.api" -> "pandas.api.extensions" [style="dotted"];
		"pandas.api" -> "pandas.api.indexers" [style="dotted"];
		"pandas.api" -> "pandas.api.interchange" [style="dotted"];
		"pandas.api" -> "pandas.api.types" [style="dotted"];
		"pandas.api" -> "pandas.api.typing" [style="dotted"];
	}
	subgraph "cluster_numpy.ma" {
		label="numpy.ma";
		"numpy.ma" -> "numpy.ma.core" [style="dotted"];
		"numpy.ma" -> "numpy.ma.extras" [style="dotted"];
		"numpy.ma" -> "numpy.ma.mrecords" [style="dotted"];
	}
	subgraph "cluster_pypdf._text_extraction._layout_mode" {
		label="pypdf._text_extraction._layout_mode";
		"pypdf._text_extraction._layout_mode" -> "pypdf._text_extraction._layout_mode._fixed_width_page" [style="dotted"];
		"pypdf._text_extraction._layout_mode" -> "pypdf._text_extraction._layout_mode._font" [style="dotted"];
		"pypdf._text_extraction._layout_mode" -> "pypdf._text_extraction._layout_mode._font_widths" [style="dotted"];
		"pypdf._text_extraction._layout_mode" -> "pypdf._text_extraction._layout_mode._text_state_manager" [style="dotted"];
		"pypdf._text_extraction._layout_mode" -> "pypdf._text_extraction._layout_mode._text_state_params" [style="dotted"];
	}
	subgraph "cluster_anthropic.types.beta" {
		label="anthropic.types.beta";
		"anthropic.types.beta" -> "anthropic.types.beta.beta_usage" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_message" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_model_info" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_text_block" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_text_delta" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_stop_reason" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.model_list_params" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_content_block" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_message_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_text_citation" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_metadata_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_thinking_block" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_thinking_delta" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_use_block" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_citations_delta" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_signature_delta" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_input_json_delta" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_text_block_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_union_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.message_create_params" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_image_block_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_choice_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_content_block_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_message_delta_usage" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_text_citation_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_message_tokens_count" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_thinking_block_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_use_block_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_url_pdf_source_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_thinking_config_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_choice_any_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_base64_pdf_block_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_citation_char_location" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_citation_page_location" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_citations_config_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_raw_message_stop_event" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_choice_auto_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_choice_none_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_choice_tool_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_url_image_source_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.message_count_tokens_params" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_base64_pdf_source_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_plain_text_source_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_raw_content_block_delta" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_raw_message_delta_event" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_raw_message_start_event" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_redacted_thinking_block" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_result_block_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_raw_message_stream_event" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_bash_20241022_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_bash_20250124_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_base64_image_source_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_content_block_source_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_citation_char_location_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_citation_page_location_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_raw_content_block_stop_event" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_cache_control_ephemeral_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_raw_content_block_delta_event" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_raw_content_block_start_event" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_redacted_thinking_block_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_thinking_config_enabled_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_thinking_config_disabled_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_citation_content_block_location" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_text_editor_20241022_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_text_editor_20250124_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_computer_use_20241022_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_tool_computer_use_20250124_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_content_block_source_content_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.beta_citation_content_block_location_param" [style="dotted"];
		"anthropic.types.beta" -> "anthropic.types.beta.messages" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.feature_registry_service" {
		label="google.cloud.aiplatform_v1.services.feature_registry_service";
		"google.cloud.aiplatform_v1.services.feature_registry_service" -> "google.cloud.aiplatform_v1.services.feature_registry_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_registry_service" -> "google.cloud.aiplatform_v1.services.feature_registry_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_registry_service" -> "google.cloud.aiplatform_v1.services.feature_registry_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_registry_service" -> "google.cloud.aiplatform_v1.services.feature_registry_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports";
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" -> "google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pandas.core._numba.kernels" {
		label="pandas.core._numba.kernels";
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.mean_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.min_max_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.sum_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.var_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.shared" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.asknews" {
		label="langchain_community.tools.asknews";
		"langchain_community.tools.asknews" -> "langchain_community.tools.asknews.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.model_service.transports" {
		label="google.cloud.aiplatform_v1.services.model_service.transports";
		"google.cloud.aiplatform_v1.services.model_service.transports" -> "google.cloud.aiplatform_v1.services.model_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_service.transports" -> "google.cloud.aiplatform_v1.services.model_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_service.transports" -> "google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_service.transports" -> "google.cloud.aiplatform_v1.services.model_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_service.transports" -> "google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_service.transports" -> "google.cloud.aiplatform_v1.services.model_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_dateutil" {
		label="dateutil";
		"dateutil" -> "dateutil._version" [style="dotted"];
		"dateutil" -> "dateutil.relativedelta" [style="dotted"];
		"dateutil" -> "dateutil.easter" [style="dotted"];
		"dateutil" -> "dateutil.tz" [style="dotted"];
		"dateutil" -> "dateutil.rrule" [style="dotted"];
		"dateutil" -> "dateutil._common" [style="dotted"];
		"dateutil" -> "dateutil.parser" [style="dotted"];
		"dateutil" -> "dateutil.zoneinfo" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits" {
		label="langchain_community.agent_toolkits";
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.azure_ai_services" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.azure_cognitive_services" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.connery" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.load_tools" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.sql" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.ainetwork" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.amadeus" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.cassandra_database" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.cogniswitch" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.file_management" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.gmail" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.jira" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.json" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.multion" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.nasa" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.nla" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.office365" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.openapi" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.playwright" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.polygon" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.powerbi" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.slack" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.spark_sql" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.steam" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.zapier" [style="dotted"];
	}
	subgraph "cluster_openai.types.beta.threads" {
		label="openai.types.beta.threads";
		"openai.types.beta.threads" -> "openai.types.beta.threads.run" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_status" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_content" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_deleted" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_list_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.annotation_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text_delta_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_create_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_update_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text_content_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_delta_event" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_list_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.refusal_delta_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.file_path_annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_delta_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_content_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_create_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_update_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.refusal_content_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_delta_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_content_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.file_citation_annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_content_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text_content_block_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.file_path_delta_annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_content_part_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_content_block_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.file_citation_delta_annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_content_block_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_submit_tool_outputs_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.required_action_function_tool_call" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.runs" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.schedule_service" {
		label="google.cloud.aiplatform_v1beta1.services.schedule_service";
		"google.cloud.aiplatform_v1beta1.services.schedule_service" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.schedule_service" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.schedule_service" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.schedule_service" -> "google.cloud.aiplatform_v1beta1.services.schedule_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" {
		label="google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports";
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.vizier_service" {
		label="google.cloud.aiplatform_v1.services.vizier_service";
		"google.cloud.aiplatform_v1.services.vizier_service" -> "google.cloud.aiplatform_v1.services.vizier_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vizier_service" -> "google.cloud.aiplatform_v1.services.vizier_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vizier_service" -> "google.cloud.aiplatform_v1.services.vizier_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vizier_service" -> "google.cloud.aiplatform_v1.services.vizier_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.docstore" {
		label="langchain_community.docstore";
		"langchain_community.docstore" -> "langchain_community.docstore.arbitrary_fn" [style="dotted"];
		"langchain_community.docstore" -> "langchain_community.docstore.in_memory" [style="dotted"];
		"langchain_community.docstore" -> "langchain_community.docstore.wikipedia" [style="dotted"];
		"langchain_community.docstore" -> "langchain_community.docstore.document" [style="dotted"];
		"langchain_community.docstore" -> "langchain_community.docstore.base" [style="dotted"];
	}
	subgraph "cluster_grpc.experimental.aio" {
		label="grpc.experimental.aio";
	}
	subgraph "cluster_langchain_community.tools.zapier" {
		label="langchain_community.tools.zapier";
		"langchain_community.tools.zapier" -> "langchain_community.tools.zapier.tool" [style="dotted"];
		"langchain_community.tools.zapier" -> "langchain_community.tools.zapier.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain.agents" {
		label="langchain.agents";
		"langchain.agents" -> "langchain.agents.agent" [style="dotted"];
		"langchain.agents" -> "langchain.agents.agent_iterator" [style="dotted"];
		"langchain.agents" -> "langchain.agents.agent_types" [style="dotted"];
		"langchain.agents" -> "langchain.agents.initialize" [style="dotted"];
		"langchain.agents" -> "langchain.agents.loading" [style="dotted"];
		"langchain.agents" -> "langchain.agents.conversational" [style="dotted"];
		"langchain.agents" -> "langchain.agents.conversational_chat" [style="dotted"];
		"langchain.agents" -> "langchain.agents.json_chat" [style="dotted"];
		"langchain.agents" -> "langchain.agents.mrkl" [style="dotted"];
		"langchain.agents" -> "langchain.agents.openai_functions_agent" [style="dotted"];
		"langchain.agents" -> "langchain.agents.openai_functions_multi_agent" [style="dotted"];
		"langchain.agents" -> "langchain.agents.openai_tools" [style="dotted"];
		"langchain.agents" -> "langchain.agents.react" [style="dotted"];
		"langchain.agents" -> "langchain.agents.self_ask_with_search" [style="dotted"];
		"langchain.agents" -> "langchain.agents.structured_chat" [style="dotted"];
		"langchain.agents" -> "langchain.agents.tool_calling_agent" [style="dotted"];
		"langchain.agents" -> "langchain.agents.xml" [style="dotted"];
		"langchain.agents" -> "langchain.agents.output_parsers" [style="dotted"];
		"langchain.agents" -> "langchain.agents.chat" [style="dotted"];
		"langchain.agents" -> "langchain.agents.format_scratchpad" [style="dotted"];
		"langchain.agents" -> "langchain.agents.utils" [style="dotted"];
		"langchain.agents" -> "langchain.agents.types" [style="dotted"];
		"langchain.agents" -> "langchain.agents.agent_toolkits" [style="dotted"];
		"langchain.agents" -> "langchain.agents.tools" [style="dotted"];
	}
	subgraph "cluster_neo4j_graphrag.utils" {
		label="neo4j_graphrag.utils";
		"neo4j_graphrag.utils" -> "neo4j_graphrag.utils.driver_config" [style="dotted"];
		"neo4j_graphrag.utils" -> "neo4j_graphrag.utils.version_utils" [style="dotted"];
		"neo4j_graphrag.utils" -> "neo4j_graphrag.utils.validation" [style="dotted"];
	}
	subgraph "cluster_pyarrow.parquet" {
		label="pyarrow.parquet";
		"pyarrow.parquet" -> "pyarrow.parquet.core" [style="dotted"];
		"pyarrow.parquet" -> "pyarrow.parquet.encryption" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.featurestore_service" {
		label="google.cloud.aiplatform_v1.services.featurestore_service";
		"google.cloud.aiplatform_v1.services.featurestore_service" -> "google.cloud.aiplatform_v1.services.featurestore_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_service" -> "google.cloud.aiplatform_v1.services.featurestore_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_service" -> "google.cloud.aiplatform_v1.services.featurestore_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_service" -> "google.cloud.aiplatform_v1.services.featurestore_service.transports" [style="dotted"];
	}
	subgraph "cluster_pandas.io.clipboard" {
		label="pandas.io.clipboard";
	}
	subgraph "cluster_langchain.smith" {
		label="langchain.smith";
		"langchain.smith" -> "langchain.smith.evaluation" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.projects" {
		label="google.cloud.resourcemanager_v3.services.projects";
		"google.cloud.resourcemanager_v3.services.projects" -> "google.cloud.resourcemanager_v3.services.projects.pagers" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.projects" -> "google.cloud.resourcemanager_v3.services.projects.async_client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.projects" -> "google.cloud.resourcemanager_v3.services.projects.client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.projects" -> "google.cloud.resourcemanager_v3.services.projects.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.llm_utility_service" {
		label="google.cloud.aiplatform_v1.services.llm_utility_service";
		"google.cloud.aiplatform_v1.services.llm_utility_service" -> "google.cloud.aiplatform_v1.services.llm_utility_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.llm_utility_service" -> "google.cloud.aiplatform_v1.services.llm_utility_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.llm_utility_service" -> "google.cloud.aiplatform_v1.services.llm_utility_service.transports" [style="dotted"];
	}
	subgraph "cluster_pandas.util" {
		label="pandas.util";
		"pandas.util" -> "pandas.util._decorators" [style="dotted"];
		"pandas.util" -> "pandas.util._print_versions" [style="dotted"];
		"pandas.util" -> "pandas.util._tester" [style="dotted"];
		"pandas.util" -> "pandas.util._exceptions" [style="dotted"];
		"pandas.util" -> "pandas.util.version" [style="dotted"];
		"pandas.util" -> "pandas.util._validators" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.metadata_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.metadata_service.transports";
		"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_serper" {
		label="langchain_community.tools.google_serper";
		"langchain_community.tools.google_serper" -> "langchain_community.tools.google_serper.tool" [style="dotted"];
	}
	subgraph "cluster_openai.resources.fine_tuning.checkpoints" {
		label="openai.resources.fine_tuning.checkpoints";
		"openai.resources.fine_tuning.checkpoints" -> "openai.resources.fine_tuning.checkpoints.checkpoints" [style="dotted"];
		"openai.resources.fine_tuning.checkpoints" -> "openai.resources.fine_tuning.checkpoints.permissions" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.preview" {
		label="google.cloud.aiplatform.preview";
		"google.cloud.aiplatform.preview" -> "google.cloud.aiplatform.preview.models" [style="dotted"];
		"google.cloud.aiplatform.preview" -> "google.cloud.aiplatform.preview.featurestore" [style="dotted"];
	}
	subgraph "cluster_anthropic.types" {
		label="anthropic.types";
		"anthropic.types" -> "anthropic.types.model" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_count_tokens_params" [style="dotted"];
		"anthropic.types" -> "anthropic.types.model_list_params" [style="dotted"];
		"anthropic.types" -> "anthropic.types.completion_create_params" [style="dotted"];
		"anthropic.types" -> "anthropic.types.usage" [style="dotted"];
		"anthropic.types" -> "anthropic.types.shared" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.completion" [style="dotted"];
		"anthropic.types" -> "anthropic.types.model_info" [style="dotted"];
		"anthropic.types" -> "anthropic.types.text_block" [style="dotted"];
		"anthropic.types" -> "anthropic.types.text_delta" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.model_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.stop_reason" [style="dotted"];
		"anthropic.types" -> "anthropic.types.content_block" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.text_citation" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_api_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.metadata_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.thinking_block" [style="dotted"];
		"anthropic.types" -> "anthropic.types.thinking_delta" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_use_block" [style="dotted"];
		"anthropic.types" -> "anthropic.types.citations_delta" [style="dotted"];
		"anthropic.types" -> "anthropic.types.signature_delta" [style="dotted"];
		"anthropic.types" -> "anthropic.types.input_json_delta" [style="dotted"];
		"anthropic.types" -> "anthropic.types.text_block_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_union_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.image_block_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_choice_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_billing_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_stop_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_error_response" [style="dotted"];
		"anthropic.types" -> "anthropic.types.content_block_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_delta_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_delta_usage" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_start_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.text_citation_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.anthropic_beta_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_not_found_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.document_block_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_stream_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_tokens_count" [style="dotted"];
		"anthropic.types" -> "anthropic.types.thinking_block_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_use_block_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.url_pdf_source_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_overloaded_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_permission_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_rate_limit_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_create_params" [style="dotted"];
		"anthropic.types" -> "anthropic.types.thinking_config_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_choice_any_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.citation_char_location" [style="dotted"];
		"anthropic.types" -> "anthropic.types.citation_page_location" [style="dotted"];
		"anthropic.types" -> "anthropic.types.citations_config_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.raw_message_stop_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_choice_auto_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_choice_none_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_choice_tool_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.url_image_source_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.base64_pdf_source_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.plain_text_source_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.raw_content_block_delta" [style="dotted"];
		"anthropic.types" -> "anthropic.types.raw_message_delta_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.raw_message_start_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.redacted_thinking_block" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_result_block_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.content_block_stop_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.raw_message_stream_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_bash_20250124_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.base64_image_source_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_authentication_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.content_block_delta_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.content_block_start_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_gateway_timeout_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta_invalid_request_error" [style="dotted"];
		"anthropic.types" -> "anthropic.types.content_block_source_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.citation_char_location_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.citation_page_location_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.raw_content_block_stop_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.cache_control_ephemeral_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.raw_content_block_delta_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.raw_content_block_start_event" [style="dotted"];
		"anthropic.types" -> "anthropic.types.redacted_thinking_block_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.thinking_config_enabled_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.thinking_config_disabled_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.citation_content_block_location" [style="dotted"];
		"anthropic.types" -> "anthropic.types.message_count_tokens_tool_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.tool_text_editor_20250124_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.content_block_source_content_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.citation_content_block_location_param" [style="dotted"];
		"anthropic.types" -> "anthropic.types.beta" [style="dotted"];
		"anthropic.types" -> "anthropic.types.messages" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_scholar" {
		label="langchain_community.tools.google_scholar";
		"langchain_community.tools.google_scholar" -> "langchain_community.tools.google_scholar.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.specialist_pool_service" {
		label="google.cloud.aiplatform_v1.services.specialist_pool_service";
		"google.cloud.aiplatform_v1.services.specialist_pool_service" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.specialist_pool_service" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.specialist_pool_service" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.specialist_pool_service" -> "google.cloud.aiplatform_v1.services.specialist_pool_service.transports" [style="dotted"];
	}
	subgraph "cluster_openai.types.evals.runs" {
		label="openai.types.evals.runs";
		"openai.types.evals.runs" -> "openai.types.evals.runs.output_item_list_params" [style="dotted"];
		"openai.types.evals.runs" -> "openai.types.evals.runs.output_item_list_response" [style="dotted"];
		"openai.types.evals.runs" -> "openai.types.evals.runs.output_item_retrieve_response" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.azure_cognitive_services" {
		label="langchain_community.tools.azure_cognitive_services";
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.form_recognizer" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.image_analysis" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.speech2text" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.text2speech" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.text_analytics_health" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.feature_online_store_service.transports" {
		label="google.cloud.aiplatform_v1.services.feature_online_store_service.transports";
		"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" -> "google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.powerbi" {
		label="langchain_community.tools.powerbi";
		"langchain_community.tools.powerbi" -> "langchain_community.tools.powerbi.tool" [style="dotted"];
		"langchain_community.tools.powerbi" -> "langchain_community.tools.powerbi.prompt" [style="dotted"];
	}
	subgraph "cluster_lxml.html" {
		label="lxml.html";
		"lxml.html" -> "lxml.html.defs" [style="dotted"];
		"lxml.html" -> "lxml.html._setmixin" [style="dotted"];
		"lxml.html" -> "lxml.html._diffcommand" [style="dotted"];
		"lxml.html" -> "lxml.html.ElementSoup" [style="dotted"];
		"lxml.html" -> "lxml.html._html5builder" [style="dotted"];
		"lxml.html" -> "lxml.html.builder" [style="dotted"];
		"lxml.html" -> "lxml.html.clean" [style="dotted"];
		"lxml.html" -> "lxml.html.diff" [style="dotted"];
		"lxml.html" -> "lxml.html.formfill" [style="dotted"];
		"lxml.html" -> "lxml.html.html5parser" [style="dotted"];
		"lxml.html" -> "lxml.html.soupparser" [style="dotted"];
		"lxml.html" -> "lxml.html.usedoctest" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" {
		label="google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports";
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" -> "google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.topological_lp" {
		label="graphdatascience.topological_lp";
		"graphdatascience.topological_lp" -> "graphdatascience.topological_lp.topological_lp_endpoints" [style="dotted"];
		"graphdatascience.topological_lp" -> "graphdatascience.topological_lp.topological_lp_alpha_runner" [style="dotted"];
	}
	subgraph "cluster_tenacity.asyncio" {
		label="tenacity.asyncio";
		"tenacity.asyncio" -> "tenacity.asyncio.retry" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.playwright" {
		label="langchain_community.agent_toolkits.playwright";
		"langchain_community.agent_toolkits.playwright" -> "langchain_community.agent_toolkits.playwright.toolkit" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.agent_toolkits" {
		label="langchain.agents.agent_toolkits";
		"langchain.agents.agent_toolkits" -> "langchain.agents.agent_toolkits.vectorstore" [style="dotted"];
		"langchain.agents.agent_toolkits" -> "langchain.agents.agent_toolkits.conversational_retrieval" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.error" {
		label="graphdatascience.error";
		"graphdatascience.error" -> "graphdatascience.error.endpoint_suggester" [style="dotted"];
		"graphdatascience.error" -> "graphdatascience.error.gds_not_installed" [style="dotted"];
		"graphdatascience.error" -> "graphdatascience.error.unable_to_connect" [style="dotted"];
		"graphdatascience.error" -> "graphdatascience.error.uncallable_namespace" [style="dotted"];
		"graphdatascience.error" -> "graphdatascience.error.cypher_warning_handler" [style="dotted"];
		"graphdatascience.error" -> "graphdatascience.error.illegal_attr_checker" [style="dotted"];
		"graphdatascience.error" -> "graphdatascience.error.client_only_endpoint" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.eleven_labs" {
		label="langchain_community.tools.eleven_labs";
		"langchain_community.tools.eleven_labs" -> "langchain_community.tools.eleven_labs.text2speech" [style="dotted"];
	}
	subgraph "cluster_email.mime" {
		label="email.mime";
		"email.mime" -> "email.mime.application" [style="dotted"];
		"email.mime" -> "email.mime.multipart" [style="dotted"];
		"email.mime" -> "email.mime.base" [style="dotted"];
		"email.mime" -> "email.mime.nonmultipart" [style="dotted"];
		"email.mime" -> "email.mime.text" [style="dotted"];
	}
	subgraph "cluster_packaging" {
		label="packaging";
		"packaging" -> "packaging.version" [style="dotted"];
		"packaging" -> "packaging.requirements" [style="dotted"];
		"packaging" -> "packaging._elffile" [style="dotted"];
		"packaging" -> "packaging._manylinux" [style="dotted"];
		"packaging" -> "packaging._musllinux" [style="dotted"];
		"packaging" -> "packaging._parser" [style="dotted"];
		"packaging" -> "packaging._structures" [style="dotted"];
		"packaging" -> "packaging._tokenizer" [style="dotted"];
		"packaging" -> "packaging.markers" [style="dotted"];
		"packaging" -> "packaging.metadata" [style="dotted"];
		"packaging" -> "packaging.specifiers" [style="dotted"];
		"packaging" -> "packaging.tags" [style="dotted"];
		"packaging" -> "packaging.utils" [style="dotted"];
		"packaging" -> "packaging.licenses" [style="dotted"];
	}
	subgraph "cluster_anthropic.lib.vertex" {
		label="anthropic.lib.vertex";
		"anthropic.lib.vertex" -> "anthropic.lib.vertex._client" [style="dotted"];
		"anthropic.lib.vertex" -> "anthropic.lib.vertex._auth" [style="dotted"];
		"anthropic.lib.vertex" -> "anthropic.lib.vertex._beta" [style="dotted"];
		"anthropic.lib.vertex" -> "anthropic.lib.vertex._beta_messages" [style="dotted"];
	}
	subgraph "cluster_neo4j._async_compat.network" {
		label="neo4j._async_compat.network";
		"neo4j._async_compat.network" -> "neo4j._async_compat.network._bolt_socket" [style="dotted"];
		"neo4j._async_compat.network" -> "neo4j._async_compat.network._util" [style="dotted"];
	}
	subgraph "cluster_pyasn1.type" {
		label="pyasn1.type";
		"pyasn1.type" -> "pyasn1.type.error" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.constraint" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.tag" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.tagmap" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.base" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.namedtype" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.namedval" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.univ" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.char" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.useful" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.opentype" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.constitutional_ai" {
		label="langchain.chains.constitutional_ai";
		"langchain.chains.constitutional_ai" -> "langchain.chains.constitutional_ai.models" [style="dotted"];
	}
	subgraph "cluster_wx.lib.agw" {
		label="wx.lib.agw";
	}
	subgraph "cluster_json" {
		label="json";
		"json" -> "json.scanner" [style="dotted"];
		"json" -> "json.decoder" [style="dotted"];
		"json" -> "json.encoder" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.office365" {
		label="langchain_community.agent_toolkits.office365";
		"langchain_community.agent_toolkits.office365" -> "langchain_community.agent_toolkits.office365.toolkit" [style="dotted"];
	}
	subgraph "cluster_h11" {
		label="h11";
		"h11" -> "h11._connection" [style="dotted"];
		"h11" -> "h11._events" [style="dotted"];
		"h11" -> "h11._state" [style="dotted"];
		"h11" -> "h11._util" [style="dotted"];
		"h11" -> "h11._version" [style="dotted"];
		"h11" -> "h11._abnf" [style="dotted"];
		"h11" -> "h11._headers" [style="dotted"];
		"h11" -> "h11._readers" [style="dotted"];
		"h11" -> "h11._receivebuffer" [style="dotted"];
		"h11" -> "h11._writers" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.metaphor_search" {
		label="langchain_community.tools.metaphor_search";
		"langchain_community.tools.metaphor_search" -> "langchain_community.tools.metaphor_search.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.metadata_service" {
		label="google.cloud.aiplatform_v1beta1.services.metadata_service";
		"google.cloud.aiplatform_v1beta1.services.metadata_service" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.metadata_service" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.metadata_service" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.metadata_service" -> "google.cloud.aiplatform_v1beta1.services.metadata_service.transports" [style="dotted"];
	}
	subgraph "cluster_pandas.api.typing" {
		label="pandas.api.typing";
	}
	subgraph "cluster_langsmith.evaluation" {
		label="langsmith.evaluation";
		"langsmith.evaluation" -> "langsmith.evaluation._arunner" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation._runner" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation.evaluator" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation.string_evaluator" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation.integrations" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation._name_generation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.openapi.utils" {
		label="langchain_community.tools.openapi.utils";
		"langchain_community.tools.openapi.utils" -> "langchain_community.tools.openapi.utils.api_models" [style="dotted"];
		"langchain_community.tools.openapi.utils" -> "langchain_community.tools.openapi.utils.openapi_utils" [style="dotted"];
	}
	subgraph "cluster_lxml" {
		label="lxml";
		"lxml" -> "lxml.etree" [style="dotted"];
		"lxml" -> "lxml.ElementInclude" [style="dotted"];
		"lxml" -> "lxml._elementpath" [style="dotted"];
		"lxml" -> "lxml.builder" [style="dotted"];
		"lxml" -> "lxml.cssselect" [style="dotted"];
		"lxml" -> "lxml.doctestcompare" [style="dotted"];
		"lxml" -> "lxml.html" [style="dotted"];
		"lxml" -> "lxml.includes" [style="dotted"];
		"lxml" -> "lxml.isoschematron" [style="dotted"];
		"lxml" -> "lxml.objectify" [style="dotted"];
		"lxml" -> "lxml.pyclasslookup" [style="dotted"];
		"lxml" -> "lxml.sax" [style="dotted"];
		"lxml" -> "lxml.usedoctest" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.evaluation_service" {
		label="google.cloud.aiplatform_v1beta1.services.evaluation_service";
		"google.cloud.aiplatform_v1beta1.services.evaluation_service" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.evaluation_service" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.evaluation_service" -> "google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain.storage" {
		label="langchain.storage";
		"langchain.storage" -> "langchain.storage._lc_store" [style="dotted"];
		"langchain.storage" -> "langchain.storage.encoder_backed" [style="dotted"];
		"langchain.storage" -> "langchain.storage.file_system" [style="dotted"];
		"langchain.storage" -> "langchain.storage.exceptions" [style="dotted"];
	}
	subgraph "cluster_google.api_core" {
		label="google.api_core";
		"google.api_core" -> "google.api_core.version" [style="dotted"];
		"google.api_core" -> "google.api_core.exceptions" [style="dotted"];
		"google.api_core" -> "google.api_core.client_info" [style="dotted"];
		"google.api_core" -> "google.api_core.datetime_helpers" [style="dotted"];
		"google.api_core" -> "google.api_core.retry" [style="dotted"];
		"google.api_core" -> "google.api_core.timeout" [style="dotted"];
		"google.api_core" -> "google.api_core.retry_async" [style="dotted"];
		"google.api_core" -> "google.api_core.grpc_helpers" [style="dotted"];
		"google.api_core" -> "google.api_core.grpc_helpers_async" [style="dotted"];
		"google.api_core" -> "google.api_core.gapic_v1" [style="dotted"];
		"google.api_core" -> "google.api_core.client_logging" [style="dotted"];
		"google.api_core" -> "google.api_core.rest_helpers" [style="dotted"];
		"google.api_core" -> "google.api_core.rest_streaming" [style="dotted"];
		"google.api_core" -> "google.api_core.path_template" [style="dotted"];
		"google.api_core" -> "google.api_core.protobuf_helpers" [style="dotted"];
		"google.api_core" -> "google.api_core.operation" [style="dotted"];
		"google.api_core" -> "google.api_core.operation_async" [style="dotted"];
		"google.api_core" -> "google.api_core.page_iterator_async" [style="dotted"];
		"google.api_core" -> "google.api_core.operations_v1" [style="dotted"];
		"google.api_core" -> "google.api_core.universe" [style="dotted"];
		"google.api_core" -> "google.api_core.rest_streaming_async" [style="dotted"];
		"google.api_core" -> "google.api_core.client_options" [style="dotted"];
		"google.api_core" -> "google.api_core._rest_streaming_base" [style="dotted"];
		"google.api_core" -> "google.api_core.page_iterator" [style="dotted"];
		"google.api_core" -> "google.api_core.future" [style="dotted"];
		"google.api_core" -> "google.api_core.iam" [style="dotted"];
		"google.api_core" -> "google.api_core.version_header" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.semantic_version" {
		label="graphdatascience.semantic_version";
		"graphdatascience.semantic_version" -> "graphdatascience.semantic_version.semantic_version" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.prediction_v1" {
		label="google.cloud.aiplatform.v1.schema.predict.prediction_v1";
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" [style="dotted"];
	}
	subgraph "cluster_ctypes.macholib" {
		label="ctypes.macholib";
		"ctypes.macholib" -> "ctypes.macholib.dyld" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.framework" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.dylib" [style="dotted"];
	}
	subgraph "cluster_docx.opc" {
		label="docx.opc";
		"docx.opc" -> "docx.opc.part" [style="dotted"];
		"docx.opc" -> "docx.opc.constants" [style="dotted"];
		"docx.opc" -> "docx.opc.packuri" [style="dotted"];
		"docx.opc" -> "docx.opc.package" [style="dotted"];
		"docx.opc" -> "docx.opc.pkgreader" [style="dotted"];
		"docx.opc" -> "docx.opc.pkgwriter" [style="dotted"];
		"docx.opc" -> "docx.opc.rel" [style="dotted"];
		"docx.opc" -> "docx.opc.coreprops" [style="dotted"];
		"docx.opc" -> "docx.opc.oxml" [style="dotted"];
		"docx.opc" -> "docx.opc.phys_pkg" [style="dotted"];
		"docx.opc" -> "docx.opc.shared" [style="dotted"];
		"docx.opc" -> "docx.opc.spec" [style="dotted"];
		"docx.opc" -> "docx.opc.exceptions" [style="dotted"];
		"docx.opc" -> "docx.opc.parts" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.compat.types" {
		label="google.cloud.aiplatform.compat.types";
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.accelerator_type" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.encryption_spec" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.pipeline_state" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.explanation" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.explanation_metadata" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.batch_prediction_job" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.completion_stats" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.custom_job" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.execution" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.io" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.job_state" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.hyperparameter_tuning_job" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.study" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.model_deployment_monitoring_job" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.artifact" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.tensorboard" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.tensorboard_data" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.tensorboard_experiment" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.tensorboard_run" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.tensorboard_service" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.tensorboard_time_series" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.machine_resources" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.manual_batch_tuning_parameters" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.endpoint" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.context" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.lineage_subgraph" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.metadata_service" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.event" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.metadata_store" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.deployment_resource_pool" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.deployed_model_ref" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.model" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.model_service" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.env_var" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.service_networking" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.pipeline_failure_policy" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.pipeline_job" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.dataset" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.dataset_service" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.entity_type" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.feature_selector" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.featurestore_service" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.featurestore_online_service" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.types" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.feature" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.featurestore" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.index_service" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.matching_engine_deployed_index_ref" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.matching_engine_index" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.matching_engine_index_endpoint" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.schedule" [style="dotted"];
		"google.cloud.aiplatform.compat.types" -> "google.cloud.aiplatform.compat.types.training_pipeline" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.decrepit" {
		label="cryptography.hazmat.decrepit";
		"cryptography.hazmat.decrepit" -> "cryptography.hazmat.decrepit.ciphers" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.arxiv" {
		label="langchain_community.tools.arxiv";
		"langchain_community.tools.arxiv" -> "langchain_community.tools.arxiv.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.vectorstores" {
		label="langchain_community.vectorstores";
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.aerospike" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.alibabacloud_opensearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.analyticdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.annoy" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.apache_doris" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.aperturedb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.astradb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.atlas" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.awadb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.azure_cosmos_db" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.azure_cosmos_db_no_sql" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.azuresearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.bagel" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.baiducloud_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.baiduvectordb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.bigquery_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.cassandra" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.chroma" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.clarifai" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.clickhouse" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.couchbase" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.dashvector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.databricks_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.deeplake" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.dingo" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.docarray" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.documentdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.duckdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.ecloud_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.elastic_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.elasticsearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.epsilla" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.faiss" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.hanavector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.hologres" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.infinispanvs" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.inmemory" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.kdbai" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.kinetica" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.lancedb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.lantern" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.llm_rails" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.manticore_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.marqo" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.matching_engine" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.meilisearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.milvus" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.momento_vector_index" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.mongodb_atlas" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.myscale" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.neo4j_vector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.opensearch_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.oraclevs" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.pathway" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.pgembedding" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.pgvector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.pinecone" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.qdrant" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.redis" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.relyt" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.rocksetdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.scann" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.semadb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.singlestoredb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.sklearn" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.sqlitevec" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.sqlitevss" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.starrocks" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.supabase" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.surrealdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tablestore" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tair" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tencentvectordb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.thirdai_neuraldb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tidb_vector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tigris" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tiledb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.timescalevector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.typesense" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.upstash" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.usearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vald" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vdms" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vectara" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vespa" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vlite" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.weaviate" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.yellowbrick" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.zep" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.zep_cloud" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.zilliz" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.gapic.schema" {
		label="google.cloud.aiplatform.gapic.schema";
	}
	subgraph "cluster_yarl" {
		label="yarl";
		"yarl" -> "yarl._query" [style="dotted"];
		"yarl" -> "yarl._url" [style="dotted"];
		"yarl" -> "yarl._parse" [style="dotted"];
		"yarl" -> "yarl._path" [style="dotted"];
		"yarl" -> "yarl._quoters" [style="dotted"];
		"yarl" -> "yarl._quoting" [style="dotted"];
		"yarl" -> "yarl._quoting_py" [style="dotted"];
		"yarl" -> "yarl._quoting_c" [style="dotted"];
	}
	subgraph "cluster_pdfplumber.utils" {
		label="pdfplumber.utils";
		"pdfplumber.utils" -> "pdfplumber.utils.clustering" [style="dotted"];
		"pdfplumber.utils" -> "pdfplumber.utils.generic" [style="dotted"];
		"pdfplumber.utils" -> "pdfplumber.utils.geometry" [style="dotted"];
		"pdfplumber.utils" -> "pdfplumber.utils.pdfinternals" [style="dotted"];
		"pdfplumber.utils" -> "pdfplumber.utils.text" [style="dotted"];
		"pdfplumber.utils" -> "pdfplumber.utils.exceptions" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.file_service" {
		label="google.ai.generativelanguage_v1beta.services.file_service";
		"google.ai.generativelanguage_v1beta.services.file_service" -> "google.ai.generativelanguage_v1beta.services.file_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service" -> "google.ai.generativelanguage_v1beta.services.file_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service" -> "google.ai.generativelanguage_v1beta.services.file_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service" -> "google.ai.generativelanguage_v1beta.services.file_service.transports" [style="dotted"];
	}
	subgraph "cluster_pandas.core.strings" {
		label="pandas.core.strings";
		"pandas.core.strings" -> "pandas.core.strings.object_array" [style="dotted"];
		"pandas.core.strings" -> "pandas.core.strings.base" [style="dotted"];
		"pandas.core.strings" -> "pandas.core.strings.accessor" [style="dotted"];
	}
	subgraph "cluster_pyarrow.interchange" {
		label="pyarrow.interchange";
		"pyarrow.interchange" -> "pyarrow.interchange.from_dataframe" [style="dotted"];
		"pyarrow.interchange" -> "pyarrow.interchange.buffer" [style="dotted"];
		"pyarrow.interchange" -> "pyarrow.interchange.column" [style="dotted"];
		"pyarrow.interchange" -> "pyarrow.interchange.dataframe" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.migration_service" {
		label="google.cloud.aiplatform_v1.services.migration_service";
		"google.cloud.aiplatform_v1.services.migration_service" -> "google.cloud.aiplatform_v1.services.migration_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.migration_service" -> "google.cloud.aiplatform_v1.services.migration_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.migration_service" -> "google.cloud.aiplatform_v1.services.migration_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.migration_service" -> "google.cloud.aiplatform_v1.services.migration_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.match_service" {
		label="google.cloud.aiplatform_v1beta1.services.match_service";
		"google.cloud.aiplatform_v1beta1.services.match_service" -> "google.cloud.aiplatform_v1beta1.services.match_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.match_service" -> "google.cloud.aiplatform_v1beta1.services.match_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.match_service" -> "google.cloud.aiplatform_v1beta1.services.match_service.transports" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.engine" {
		label="sqlalchemy.engine";
		"sqlalchemy.engine" -> "sqlalchemy.engine.processors" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.characteristics" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.cursor" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.events" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.util" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.base" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.create" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.interfaces" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.mock" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.reflection" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.result" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.row" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.url" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.default" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine._py_row" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine._py_util" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine._py_processors" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.cassandra_database" {
		label="langchain_community.tools.cassandra_database";
		"langchain_community.tools.cassandra_database" -> "langchain_community.tools.cassandra_database.tool" [style="dotted"];
	}
	subgraph "cluster_pandas.core.internals" {
		label="pandas.core.internals";
		"pandas.core.internals" -> "pandas.core.internals.Block" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.api" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.array_manager" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.base" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.concat" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.managers" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.blocks" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.construction" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.ops" [style="dotted"];
	}
	subgraph "cluster_openai.types.shared" {
		label="openai.types.shared";
		"openai.types.shared" -> "openai.types.shared.metadata" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.reasoning" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.all_models" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.chat_model" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.error_object" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.compound_filter" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.responses_model" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.reasoning_effort" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.comparison_filter" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.function_definition" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.function_parameters" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.response_format_text" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.response_format_json_object" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.response_format_json_schema" [style="dotted"];
	}
	subgraph "cluster_anthropic.types.messages" {
		label="anthropic.types.messages";
		"anthropic.types.messages" -> "anthropic.types.messages.message_batch" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.batch_list_params" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.batch_create_params" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.message_batch_result" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.deleted_message_batch" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.message_batch_errored_result" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.message_batch_expired_result" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.message_batch_request_counts" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.message_batch_canceled_result" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.message_batch_succeeded_result" [style="dotted"];
		"anthropic.types.messages" -> "anthropic.types.messages.message_batch_individual_response" [style="dotted"];
	}
	subgraph "cluster_proto" {
		label="proto";
		"proto" -> "proto.datetime_helpers" [style="dotted"];
		"proto" -> "proto._file_info" [style="dotted"];
		"proto" -> "proto._package_info" [style="dotted"];
		"proto" -> "proto.enums" [style="dotted"];
		"proto" -> "proto.fields" [style="dotted"];
		"proto" -> "proto.marshal" [style="dotted"];
		"proto" -> "proto.message" [style="dotted"];
		"proto" -> "proto.modules" [style="dotted"];
		"proto" -> "proto.primitives" [style="dotted"];
		"proto" -> "proto.version" [style="dotted"];
		"proto" -> "proto.utils" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" {
		label="google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports";
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" -> "google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.trainingjob.definition" {
		label="google.cloud.aiplatform.v1.schema.trainingjob.definition";
		"google.cloud.aiplatform.v1.schema.trainingjob.definition" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition.gapic_version" [style="dotted"];
	}
	subgraph "cluster_multidict" {
		label="multidict";
		"multidict" -> "multidict._abc" [style="dotted"];
		"multidict" -> "multidict._multidict" [style="dotted"];
		"multidict" -> "multidict._compat" [style="dotted"];
		"multidict" -> "multidict._multidict_py" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.retriever_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.retriever_service.transports";
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.format_scratchpad" {
		label="langchain.agents.format_scratchpad";
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.log" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.log_to_messages" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.openai_functions" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.tools" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.xml" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.openai_tools" [style="dotted"];
	}
	subgraph "cluster_grpc.experimental" {
		label="grpc.experimental";
		"grpc.experimental" -> "grpc.experimental.aio" [style="dotted"];
	}
	subgraph "cluster_neo4j._async" {
		label="neo4j._async";
		"neo4j._async" -> "neo4j._async.driver" [style="dotted"];
		"neo4j._async" -> "neo4j._async.auth_management" [style="dotted"];
		"neo4j._async" -> "neo4j._async.io" [style="dotted"];
		"neo4j._async" -> "neo4j._async.config" [style="dotted"];
		"neo4j._async" -> "neo4j._async.home_db_cache" [style="dotted"];
		"neo4j._async" -> "neo4j._async.work" [style="dotted"];
		"neo4j._async" -> "neo4j._async._debug" [style="dotted"];
		"neo4j._async" -> "neo4j._async.bookmark_manager" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.match_service" {
		label="google.cloud.aiplatform_v1.services.match_service";
		"google.cloud.aiplatform_v1.services.match_service" -> "google.cloud.aiplatform_v1.services.match_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.match_service" -> "google.cloud.aiplatform_v1.services.match_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.match_service" -> "google.cloud.aiplatform_v1.services.match_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.example_store_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.example_store_service.transports";
		"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" -> "google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_openai.types.audio" {
		label="openai.types.audio";
		"openai.types.audio" -> "openai.types.audio.translation" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.speech_model" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_word" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.translation_verbose" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.speech_create_params" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_include" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_segment" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_verbose" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.translation_create_params" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_stream_event" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_create_params" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.translation_create_response" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_create_response" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_text_done_event" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_text_delta_event" [style="dotted"];
	}
	subgraph "cluster_neo4j.spatial" {
		label="neo4j.spatial";
	}
	subgraph "cluster_langchain_community.document_loaders.parsers" {
		label="langchain_community.document_loaders.parsers";
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.audio" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.doc_intelligence" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.docai" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.grobid" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.html" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.images" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.language" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.pdf" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.vsdx" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.generic" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.registry" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.msword" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.txt" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.searx_search" {
		label="langchain_community.tools.searx_search";
		"langchain_community.tools.searx_search" -> "langchain_community.tools.searx_search.tool" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt.utils" {
		label="requests_toolbelt.utils";
		"requests_toolbelt.utils" -> "requests_toolbelt.utils.user_agent" [style="dotted"];
	}
	subgraph "cluster_lxml.includes.libxml" {
		label="lxml.includes.libxml";
	}
	subgraph "cluster_pandas.core.groupby" {
		label="pandas.core.groupby";
		"pandas.core.groupby" -> "pandas.core.groupby.ops" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.grouper" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.base" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.numba_" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.groupby" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.generic" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.PanelGroupBy" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.categorical" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.indexing" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.job_service" {
		label="google.cloud.aiplatform_v1.services.job_service";
		"google.cloud.aiplatform_v1.services.job_service" -> "google.cloud.aiplatform_v1.services.job_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.job_service" -> "google.cloud.aiplatform_v1.services.job_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.job_service" -> "google.cloud.aiplatform_v1.services.job_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.job_service" -> "google.cloud.aiplatform_v1.services.job_service.transports" [style="dotted"];
	}
	subgraph "cluster_openai.types.beta.realtime" {
		label="openai.types.beta.realtime";
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.error_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_response" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_update_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_client_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_server_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_cancel_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_create_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_create_params" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_created_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_updated_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_created_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_connect_params" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_response_usage" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_create_response" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_response_status" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_text_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_content" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.rate_limits_updated_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_audio_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_text_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_created_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_audio_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_update_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_client_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_cancel_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_create_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session_update" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_create_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_delete_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_clear_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_content_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_created_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_deleted_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_append_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_commit_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_output_item_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_retrieve_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_truncate_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_with_reference" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_cleared_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_content_part_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_output_item_added_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_truncated_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_content_part_added_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_committed_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session_update_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session_create_params" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session_updated_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_create_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_delete_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_clear_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_audio_transcript_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_append_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_commit_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_audio_transcript_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_retrieve_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_truncate_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_with_reference_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_speech_started_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_speech_stopped_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_function_call_arguments_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_function_call_arguments_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.explain" {
		label="google.cloud.aiplatform.explain";
	}
	subgraph "cluster_pypdfium2._helpers" {
		label="pypdfium2._helpers";
		"pypdfium2._helpers" -> "pypdfium2._helpers.unsupported" [style="dotted"];
		"pypdfium2._helpers" -> "pypdfium2._helpers.misc" [style="dotted"];
		"pypdfium2._helpers" -> "pypdfium2._helpers.matrix" [style="dotted"];
		"pypdfium2._helpers" -> "pypdfium2._helpers.bitmap" [style="dotted"];
		"pypdfium2._helpers" -> "pypdfium2._helpers.document" [style="dotted"];
		"pypdfium2._helpers" -> "pypdfium2._helpers.attachment" [style="dotted"];
		"pypdfium2._helpers" -> "pypdfium2._helpers.page" [style="dotted"];
		"pypdfium2._helpers" -> "pypdfium2._helpers.pageobjects" [style="dotted"];
		"pypdfium2._helpers" -> "pypdfium2._helpers.textpage" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.conversational" {
		label="langchain.agents.conversational";
		"langchain.agents.conversational" -> "langchain.agents.conversational.base" [style="dotted"];
		"langchain.agents.conversational" -> "langchain.agents.conversational.output_parser" [style="dotted"];
		"langchain.agents.conversational" -> "langchain.agents.conversational.prompt" [style="dotted"];
	}
	subgraph "cluster_async_timeout" {
		label="async_timeout";
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.vizier_service.transports" {
		label="google.cloud.aiplatform_v1.services.vizier_service.transports";
		"google.cloud.aiplatform_v1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1.services.vizier_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1.services.vizier_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.vizier_service.transports" -> "google.cloud.aiplatform_v1.services.vizier_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_httpcore._sync" {
		label="httpcore._sync";
		"httpcore._sync" -> "httpcore._sync.connection" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.connection_pool" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http11" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http_proxy" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.interfaces" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http2" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.socks_proxy" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.permission_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.permission_service.transports";
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3" {
		label="google.cloud.resourcemanager_v3";
		"google.cloud.resourcemanager_v3" -> "google.cloud.resourcemanager_v3.gapic_version" [style="dotted"];
		"google.cloud.resourcemanager_v3" -> "google.cloud.resourcemanager_v3.types" [style="dotted"];
		"google.cloud.resourcemanager_v3" -> "google.cloud.resourcemanager_v3.services" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.text_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.text_service.transports";
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.api.openapi" {
		label="langchain.chains.api.openapi";
		"langchain.chains.api.openapi" -> "langchain.chains.api.openapi.requests_chain" [style="dotted"];
		"langchain.chains.api.openapi" -> "langchain.chains.api.openapi.response_chain" [style="dotted"];
		"langchain.chains.api.openapi" -> "langchain.chains.api.openapi.prompts" [style="dotted"];
	}
	subgraph "cluster_langchain.chains" {
		label="langchain.chains";
		"langchain.chains" -> "langchain.chains.LLMChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.ReduceDocumentsChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.ConversationChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.LLMCheckerChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.LLMMathChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.QAWithSourcesChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.VectorDBQA" [style="dotted"];
		"langchain.chains" -> "langchain.chains.VectorDBQAWithSourcesChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.base" [style="dotted"];
		"langchain.chains" -> "langchain.chains.llm" [style="dotted"];
		"langchain.chains" -> "langchain.chains.constitutional_ai" [style="dotted"];
		"langchain.chains" -> "langchain.chains.openai_functions" [style="dotted"];
		"langchain.chains" -> "langchain.chains.structured_output" [style="dotted"];
		"langchain.chains" -> "langchain.chains.query_constructor" [style="dotted"];
		"langchain.chains" -> "langchain.chains.qa_with_sources" [style="dotted"];
		"langchain.chains" -> "langchain.chains.question_answering" [style="dotted"];
		"langchain.chains" -> "langchain.chains.prompt_selector" [style="dotted"];
		"langchain.chains" -> "langchain.chains.combine_documents" [style="dotted"];
		"langchain.chains" -> "langchain.chains.retrieval_qa" [style="dotted"];
		"langchain.chains" -> "langchain.chains.api" [style="dotted"];
		"langchain.chains" -> "langchain.chains.llm_math" [style="dotted"];
		"langchain.chains" -> "langchain.chains.loading" [style="dotted"];
		"langchain.chains" -> "langchain.chains.llm_requests" [style="dotted"];
		"langchain.chains" -> "langchain.chains.sql_database" [style="dotted"];
		"langchain.chains" -> "langchain.chains.sequential" [style="dotted"];
		"langchain.chains" -> "langchain.chains.llm_checker" [style="dotted"];
		"langchain.chains" -> "langchain.chains.hyde" [style="dotted"];
	}
	subgraph "cluster_neo4j._work" {
		label="neo4j._work";
		"neo4j._work" -> "neo4j._work.eager_result" [style="dotted"];
		"neo4j._work" -> "neo4j._work.query" [style="dotted"];
		"neo4j._work" -> "neo4j._work.summary" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.nasa" {
		label="langchain_community.agent_toolkits.nasa";
		"langchain_community.agent_toolkits.nasa" -> "langchain_community.agent_toolkits.nasa.toolkit" [style="dotted"];
	}
	subgraph "cluster_openai.resources.audio" {
		label="openai.resources.audio";
		"openai.resources.audio" -> "openai.resources.audio.audio" [style="dotted"];
		"openai.resources.audio" -> "openai.resources.audio.speech" [style="dotted"];
		"openai.resources.audio" -> "openai.resources.audio.translations" [style="dotted"];
		"openai.resources.audio" -> "openai.resources.audio.transcriptions" [style="dotted"];
	}
	subgraph "cluster_pytz" {
		label="pytz";
		"pytz" -> "pytz.exceptions" [style="dotted"];
		"pytz" -> "pytz.lazy" [style="dotted"];
		"pytz" -> "pytz.tzinfo" [style="dotted"];
		"pytz" -> "pytz.tzfile" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.dataset_service" {
		label="google.cloud.aiplatform_v1beta1.services.dataset_service";
		"google.cloud.aiplatform_v1beta1.services.dataset_service" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.dataset_service" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.dataset_service" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.dataset_service" -> "google.cloud.aiplatform_v1beta1.services.dataset_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.cache_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.cache_service.transports";
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_wsgiref" {
		label="wsgiref";
		"wsgiref" -> "wsgiref.handlers" [style="dotted"];
		"wsgiref" -> "wsgiref.util" [style="dotted"];
		"wsgiref" -> "wsgiref.headers" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.merriam_webster" {
		label="langchain_community.tools.merriam_webster";
		"langchain_community.tools.merriam_webster" -> "langchain_community.tools.merriam_webster.tool" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema" {
		label="google.cloud.aiplatform.v1.schema";
		"google.cloud.aiplatform.v1.schema" -> "google.cloud.aiplatform.v1.schema.predict" [style="dotted"];
		"google.cloud.aiplatform.v1.schema" -> "google.cloud.aiplatform.v1.schema.trainingjob" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.ext.asyncio" {
		label="sqlalchemy.ext.asyncio";
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.exc" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.engine" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.result" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.scoping" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.session" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.base" [style="dotted"];
	}
	subgraph "cluster_langchain_core.utils" {
		label="langchain_core.utils";
		"langchain_core.utils" -> "langchain_core.utils.image" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.aiter" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.env" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.formatting" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.input" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.iter" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.loading" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.pydantic" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.strings" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.utils" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.mustache" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.interactive_env" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.json" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.function_calling" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.json_schema" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils._merge" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.usage" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.html" [style="dotted"];
	}
	subgraph "cluster_collections" {
		label="collections";
		"collections" -> "collections.Mapping" [style="dotted"];
		"collections" -> "collections.Callable" [style="dotted"];
		"collections" -> "collections.MutableMapping" [style="dotted"];
		"collections" -> "collections.Sequence" [style="dotted"];
		"collections" -> "collections.MutableSequence" [style="dotted"];
		"collections" -> "collections.Iterable" [style="dotted"];
		"collections" -> "collections.MutableSet" [style="dotted"];
		"collections" -> "collections.abc" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service" {
		label="google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service";
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service" -> "google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports";
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" -> "google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.evaluation_service.transports" {
		label="google.cloud.aiplatform_v1.services.evaluation_service.transports";
		"google.cloud.aiplatform_v1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1.services.evaluation_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.evaluation_service.transports" -> "google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.util" {
		label="sqlalchemy.util";
		"sqlalchemy.util" -> "sqlalchemy.util.compat" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.preloaded" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util._collections" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.langhelpers" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.topological" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.queue" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.concurrency" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.deprecations" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.typing" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util._has_cy" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util._py_collections" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util._concurrency_py3k" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_places" {
		label="langchain_community.tools.google_places";
		"langchain_community.tools.google_places" -> "langchain_community.tools.google_places.tool" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.generative_service" {
		label="google.ai.generativelanguage_v1beta.services.generative_service";
		"google.ai.generativelanguage_v1beta.services.generative_service" -> "google.ai.generativelanguage_v1beta.services.generative_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service" -> "google.ai.generativelanguage_v1beta.services.generative_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports" [style="dotted"];
	}
	subgraph "cluster_anthropic.resources" {
		label="anthropic.resources";
		"anthropic.resources" -> "anthropic.resources.beta" [style="dotted"];
		"anthropic.resources" -> "anthropic.resources.models" [style="dotted"];
		"anthropic.resources" -> "anthropic.resources.messages" [style="dotted"];
		"anthropic.resources" -> "anthropic.resources.completions" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.migration_service" {
		label="google.cloud.aiplatform_v1beta1.services.migration_service";
		"google.cloud.aiplatform_v1beta1.services.migration_service" -> "google.cloud.aiplatform_v1beta1.services.migration_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.migration_service" -> "google.cloud.aiplatform_v1beta1.services.migration_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.migration_service" -> "google.cloud.aiplatform_v1beta1.services.migration_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.migration_service" -> "google.cloud.aiplatform_v1beta1.services.migration_service.transports" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.bindings.openssl" {
		label="cryptography.hazmat.bindings.openssl";
		"cryptography.hazmat.bindings.openssl" -> "cryptography.hazmat.bindings.openssl.binding" [style="dotted"];
		"cryptography.hazmat.bindings.openssl" -> "cryptography.hazmat.bindings.openssl._conditional" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.match_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.match_service.transports";
		"google.cloud.aiplatform_v1beta1.services.match_service.transports" -> "google.cloud.aiplatform_v1beta1.services.match_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.match_service.transports" -> "google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.match_service.transports" -> "google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.match_service.transports" -> "google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.match_service.transports" -> "google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.match_service.transports" -> "google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_langchain_core.embeddings" {
		label="langchain_core.embeddings";
		"langchain_core.embeddings" -> "langchain_core.embeddings.embeddings" [style="dotted"];
		"langchain_core.embeddings" -> "langchain_core.embeddings.fake" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.file_management" {
		label="langchain_community.agent_toolkits.file_management";
		"langchain_community.agent_toolkits.file_management" -> "langchain_community.agent_toolkits.file_management.toolkit" [style="dotted"];
	}
	subgraph "cluster_openai.types.vector_stores" {
		label="openai.types.vector_stores";
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_list_params" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.vector_store_file" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_create_params" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_update_params" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_content_response" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.vector_store_file_batch" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_batch_create_params" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.vector_store_file_deleted" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_batch_list_files_params" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.notebook_service" {
		label="google.cloud.aiplatform_v1.services.notebook_service";
		"google.cloud.aiplatform_v1.services.notebook_service" -> "google.cloud.aiplatform_v1.services.notebook_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.notebook_service" -> "google.cloud.aiplatform_v1.services.notebook_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.notebook_service" -> "google.cloud.aiplatform_v1.services.notebook_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.notebook_service" -> "google.cloud.aiplatform_v1.services.notebook_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.feature_online_store_service" {
		label="google.cloud.aiplatform_v1beta1.services.feature_online_store_service";
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_online_store_service" -> "google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" [style="dotted"];
	}
	subgraph "cluster_docx.drawing" {
		label="docx.drawing";
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.model_garden_service" {
		label="google.cloud.aiplatform_v1.services.model_garden_service";
		"google.cloud.aiplatform_v1.services.model_garden_service" -> "google.cloud.aiplatform_v1.services.model_garden_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_garden_service" -> "google.cloud.aiplatform_v1.services.model_garden_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.model_garden_service" -> "google.cloud.aiplatform_v1.services.model_garden_service.transports" [style="dotted"];
	}
	subgraph "cluster_openai.types.chat.completions" {
		label="openai.types.chat.completions";
		"openai.types.chat.completions" -> "openai.types.chat.completions.message_list_params" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.cyextension" {
		label="sqlalchemy.cyextension";
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.collections" [style="dotted"];
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.immutabledict" [style="dotted"];
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.processors" [style="dotted"];
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.resultproxy" [style="dotted"];
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.util" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.edenai" {
		label="langchain_community.tools.edenai";
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.audio_speech_to_text" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.audio_text_to_speech" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.edenai_base_tool" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.image_explicitcontent" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.image_objectdetection" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.ocr_identityparser" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.ocr_invoiceparser" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.text_moderation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.sleep" {
		label="langchain_community.tools.sleep";
		"langchain_community.tools.sleep" -> "langchain_community.tools.sleep.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.wolfram_alpha" {
		label="langchain_community.tools.wolfram_alpha";
		"langchain_community.tools.wolfram_alpha" -> "langchain_community.tools.wolfram_alpha.tool" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.packaging" {
		label="setuptools._vendor.packaging";
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.__about__" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._compat" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._structures" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._typing" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.markers" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.requirements" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.specifiers" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.tags" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.utils" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.version" [style="dotted"];
	}
	subgraph "cluster_docx.styles" {
		label="docx.styles";
		"docx.styles" -> "docx.styles.styles" [style="dotted"];
		"docx.styles" -> "docx.styles.style" [style="dotted"];
		"docx.styles" -> "docx.styles.latent" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.multion" {
		label="langchain_community.agent_toolkits.multion";
		"langchain_community.agent_toolkits.multion" -> "langchain_community.agent_toolkits.multion.toolkit" [style="dotted"];
	}
	subgraph "cluster_concurrent" {
		label="concurrent";
		"concurrent" -> "concurrent.futures" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.parsing" {
		label="langchain.evaluation.parsing";
		"langchain.evaluation.parsing" -> "langchain.evaluation.parsing.base" [style="dotted"];
		"langchain.evaluation.parsing" -> "langchain.evaluation.parsing.json_distance" [style="dotted"];
		"langchain.evaluation.parsing" -> "langchain.evaluation.parsing.json_schema" [style="dotted"];
	}
	subgraph "cluster_vertexai.caching" {
		label="vertexai.caching";
		"vertexai.caching" -> "vertexai.caching._caching" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.prediction_service" {
		label="google.ai.generativelanguage_v1beta.services.prediction_service";
		"google.ai.generativelanguage_v1beta.services.prediction_service" -> "google.ai.generativelanguage_v1beta.services.prediction_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service" -> "google.ai.generativelanguage_v1beta.services.prediction_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.metadata.schema.google" {
		label="google.cloud.aiplatform.metadata.schema.google";
		"google.cloud.aiplatform.metadata.schema.google" -> "google.cloud.aiplatform.metadata.schema.google.artifact_schema" [style="dotted"];
	}
	subgraph "cluster_anthropic" {
		label="anthropic";
		"anthropic" -> "anthropic._exceptions" [style="dotted"];
		"anthropic" -> "anthropic._legacy_response" [style="dotted"];
		"anthropic" -> "anthropic.types" [style="dotted"];
		"anthropic" -> "anthropic._types" [style="dotted"];
		"anthropic" -> "anthropic._utils" [style="dotted"];
		"anthropic" -> "anthropic._client" [style="dotted"];
		"anthropic" -> "anthropic._models" [style="dotted"];
		"anthropic" -> "anthropic._version" [style="dotted"];
		"anthropic" -> "anthropic._response" [style="dotted"];
		"anthropic" -> "anthropic._constants" [style="dotted"];
		"anthropic" -> "anthropic._base_client" [style="dotted"];
		"anthropic" -> "anthropic.lib" [style="dotted"];
		"anthropic" -> "anthropic._streaming" [style="dotted"];
		"anthropic" -> "anthropic._files" [style="dotted"];
		"anthropic" -> "anthropic._compat" [style="dotted"];
		"anthropic" -> "anthropic._resource" [style="dotted"];
		"anthropic" -> "anthropic.resources" [style="dotted"];
		"anthropic" -> "anthropic.pagination" [style="dotted"];
		"anthropic" -> "anthropic._decoders" [style="dotted"];
		"anthropic" -> "anthropic._qs" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" {
		label="google.cloud.aiplatform.v1.schema.predict.prediction_v1.types";
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_object_detection" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_segmentation" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_regression" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_extraction" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_sentiment" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_action_recognition" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_object_tracking" [style="dotted"];
	}
	subgraph "cluster_google.cloud" {
		label="google.cloud";
		"google.cloud" -> "google.cloud._helpers" [style="dotted"];
		"google.cloud" -> "google.cloud.exceptions" [style="dotted"];
		"google.cloud" -> "google.cloud.version" [style="dotted"];
		"google.cloud" -> "google.cloud._http" [style="dotted"];
		"google.cloud" -> "google.cloud.storage" [style="dotted"];
		"google.cloud" -> "google.cloud.bigquery_storage" [style="dotted"];
		"google.cloud" -> "google.cloud.bigquery" [style="dotted"];
		"google.cloud" -> "google.cloud.resourcemanager" [style="dotted"];
		"google.cloud" -> "google.cloud.documentai" [style="dotted"];
		"google.cloud" -> "google.cloud.texttospeech" [style="dotted"];
		"google.cloud" -> "google.cloud.translate" [style="dotted"];
		"google.cloud" -> "google.cloud.discoveryengine_v1beta" [style="dotted"];
		"google.cloud" -> "google.cloud.location" [style="dotted"];
		"google.cloud" -> "google.cloud.aiplatform_v1" [style="dotted"];
		"google.cloud" -> "google.cloud.aiplatform_v1beta1" [style="dotted"];
		"google.cloud" -> "google.cloud.client" [style="dotted"];
		"google.cloud" -> "google.cloud.resourcemanager_v3" [style="dotted"];
		"google.cloud" -> "google.cloud.aiplatform" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.nasa" {
		label="langchain_community.tools.nasa";
		"langchain_community.tools.nasa" -> "langchain_community.tools.nasa.tool" [style="dotted"];
		"langchain_community.tools.nasa" -> "langchain_community.tools.nasa.prompt" [style="dotted"];
	}
	subgraph "cluster_exceptiongroup" {
		label="exceptiongroup";
		"exceptiongroup" -> "exceptiongroup._catch" [style="dotted"];
		"exceptiongroup" -> "exceptiongroup._version" [style="dotted"];
		"exceptiongroup" -> "exceptiongroup._exceptions" [style="dotted"];
		"exceptiongroup" -> "exceptiongroup._formatting" [style="dotted"];
		"exceptiongroup" -> "exceptiongroup._suppress" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_cloud" {
		label="langchain_community.tools.google_cloud";
		"langchain_community.tools.google_cloud" -> "langchain_community.tools.google_cloud.texttospeech" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.bearly" {
		label="langchain_community.tools.bearly";
		"langchain_community.tools.bearly" -> "langchain_community.tools.bearly.tool" [style="dotted"];
	}
	subgraph "cluster_google.api_core.operations_v1.transports" {
		label="google.api_core.operations_v1.transports";
		"google.api_core.operations_v1.transports" -> "google.api_core.operations_v1.transports.base" [style="dotted"];
		"google.api_core.operations_v1.transports" -> "google.api_core.operations_v1.transports.rest" [style="dotted"];
		"google.api_core.operations_v1.transports" -> "google.api_core.operations_v1.transports.rest_asyncio" [style="dotted"];
	}
	subgraph "cluster_httpcore._async" {
		label="httpcore._async";
		"httpcore._async" -> "httpcore._async.connection" [style="dotted"];
		"httpcore._async" -> "httpcore._async.connection_pool" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http11" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http_proxy" [style="dotted"];
		"httpcore._async" -> "httpcore._async.interfaces" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http2" [style="dotted"];
		"httpcore._async" -> "httpcore._async.socks_proxy" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.openai_functions" {
		label="langchain.chains.openai_functions";
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.base" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.citation_fuzzy_match" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.extraction" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.qa_with_structure" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.tagging" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.utils" [style="dotted"];
	}
	subgraph "cluster_filetype" {
		label="filetype";
		"filetype" -> "filetype.filetype" [style="dotted"];
		"filetype" -> "filetype.helpers" [style="dotted"];
		"filetype" -> "filetype.match" [style="dotted"];
		"filetype" -> "filetype.types" [style="dotted"];
		"filetype" -> "filetype.utils" [style="dotted"];
	}
	subgraph "cluster_google.api_core.operations_v1" {
		label="google.api_core.operations_v1";
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.pagers" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.abstract_operations_client" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.operations_async_client" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.operations_client" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.pagers_async" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.operations_rest_client_async" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.transports" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.abstract_operations_base_client" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.pagers_base" [style="dotted"];
	}
	subgraph "cluster_xml.dom" {
		label="xml.dom";
		"xml.dom" -> "xml.dom.domreg" [style="dotted"];
		"xml.dom" -> "xml.dom.xmlbuilder" [style="dotted"];
		"xml.dom" -> "xml.dom.minidom" [style="dotted"];
		"xml.dom" -> "xml.dom.pulldom" [style="dotted"];
		"xml.dom" -> "xml.dom.minicompat" [style="dotted"];
		"xml.dom" -> "xml.dom.expatbuilder" [style="dotted"];
		"xml.dom" -> "xml.dom.NodeFilter" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.query_runner.progress" {
		label="graphdatascience.query_runner.progress";
		"graphdatascience.query_runner.progress" -> "graphdatascience.query_runner.progress.query_progress_logger" [style="dotted"];
		"graphdatascience.query_runner.progress" -> "graphdatascience.query_runner.progress.progress_provider" [style="dotted"];
		"graphdatascience.query_runner.progress" -> "graphdatascience.query_runner.progress.query_progress_provider" [style="dotted"];
		"graphdatascience.query_runner.progress" -> "graphdatascience.query_runner.progress.static_progress_provider" [style="dotted"];
	}
	subgraph "cluster_pandas.util.version" {
		label="pandas.util.version";
	}
	subgraph "cluster_docx.enum" {
		label="docx.enum";
		"docx.enum" -> "docx.enum.text" [style="dotted"];
		"docx.enum" -> "docx.enum.base" [style="dotted"];
		"docx.enum" -> "docx.enum.dml" [style="dotted"];
		"docx.enum" -> "docx.enum.table" [style="dotted"];
		"docx.enum" -> "docx.enum.style" [style="dotted"];
		"docx.enum" -> "docx.enum.section" [style="dotted"];
		"docx.enum" -> "docx.enum.shape" [style="dotted"];
	}
	subgraph "cluster_pandas._libs" {
		label="pandas._libs";
		"pandas._libs" -> "pandas._libs.pandas_parser" [style="dotted"];
		"pandas._libs" -> "pandas._libs.pandas_datetime" [style="dotted"];
		"pandas._libs" -> "pandas._libs.lib" [style="dotted"];
		"pandas._libs" -> "pandas._libs.missing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.algos" [style="dotted"];
		"pandas._libs" -> "pandas._libs.index" [style="dotted"];
		"pandas._libs" -> "pandas._libs.writers" [style="dotted"];
		"pandas._libs" -> "pandas._libs.ops" [style="dotted"];
		"pandas._libs" -> "pandas._libs.tslib" [style="dotted"];
		"pandas._libs" -> "pandas._libs.reshape" [style="dotted"];
		"pandas._libs" -> "pandas._libs.join" [style="dotted"];
		"pandas._libs" -> "pandas._libs.interval" [style="dotted"];
		"pandas._libs" -> "pandas._libs.tslibs" [style="dotted"];
		"pandas._libs" -> "pandas._libs.arrays" [style="dotted"];
		"pandas._libs" -> "pandas._libs.byteswap" [style="dotted"];
		"pandas._libs" -> "pandas._libs.groupby" [style="dotted"];
		"pandas._libs" -> "pandas._libs.hashing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.hashtable" [style="dotted"];
		"pandas._libs" -> "pandas._libs.indexing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.internals" [style="dotted"];
		"pandas._libs" -> "pandas._libs.json" [style="dotted"];
		"pandas._libs" -> "pandas._libs.ops_dispatch" [style="dotted"];
		"pandas._libs" -> "pandas._libs.parsers" [style="dotted"];
		"pandas._libs" -> "pandas._libs.properties" [style="dotted"];
		"pandas._libs" -> "pandas._libs.sas" [style="dotted"];
		"pandas._libs" -> "pandas._libs.sparse" [style="dotted"];
		"pandas._libs" -> "pandas._libs.testing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.window" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.string_distance" {
		label="langchain.evaluation.string_distance";
		"langchain.evaluation.string_distance" -> "langchain.evaluation.string_distance.base" [style="dotted"];
	}
	subgraph "cluster_sniffio" {
		label="sniffio";
		"sniffio" -> "sniffio._version" [style="dotted"];
		"sniffio" -> "sniffio._impl" [style="dotted"];
	}
	subgraph "cluster_pandas.tseries" {
		label="pandas.tseries";
		"pandas.tseries" -> "pandas.tseries.frequencies" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.offsets" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.api" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.holiday" [style="dotted"];
	}
	subgraph "cluster_neo4j._sync.io" {
		label="neo4j._sync.io";
		"neo4j._sync.io" -> "neo4j._sync.io._bolt3" [style="dotted"];
		"neo4j._sync.io" -> "neo4j._sync.io._bolt4" [style="dotted"];
		"neo4j._sync.io" -> "neo4j._sync.io._bolt5" [style="dotted"];
		"neo4j._sync.io" -> "neo4j._sync.io._bolt" [style="dotted"];
		"neo4j._sync.io" -> "neo4j._sync.io._common" [style="dotted"];
		"neo4j._sync.io" -> "neo4j._sync.io._pool" [style="dotted"];
		"neo4j._sync.io" -> "neo4j._sync.io._bolt_socket" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports";
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" -> "google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pandas._libs.window" {
		label="pandas._libs.window";
		"pandas._libs.window" -> "pandas._libs.window.aggregations" [style="dotted"];
		"pandas._libs.window" -> "pandas._libs.window.indexers" [style="dotted"];
	}
	subgraph "cluster_neo4j._sync._debug" {
		label="neo4j._sync._debug";
		"neo4j._sync._debug" -> "neo4j._sync._debug._concurrency_check" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service" {
		label="google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service";
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.specialist_pool_service" {
		label="google.cloud.aiplatform_v1beta1.services.specialist_pool_service";
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" [style="dotted"];
	}
	subgraph "cluster_openai.resources.beta.chat" {
		label="openai.resources.beta.chat";
		"openai.resources.beta.chat" -> "openai.resources.beta.chat.chat" [style="dotted"];
		"openai.resources.beta.chat" -> "openai.resources.beta.chat.completions" [style="dotted"];
	}
	subgraph "cluster_pydantic" {
		label="pydantic";
		"pydantic" -> "pydantic.BaseModel" [style="dotted"];
		"pydantic" -> "pydantic.PydanticSchemaGenerationError" [style="dotted"];
		"pydantic" -> "pydantic.PydanticUserError" [style="dotted"];
		"pydantic" -> "pydantic.types" [style="dotted"];
		"pydantic" -> "pydantic._migration" [style="dotted"];
		"pydantic" -> "pydantic.version" [style="dotted"];
		"pydantic" -> "pydantic.dataclasses" [style="dotted"];
		"pydantic" -> "pydantic.aliases" [style="dotted"];
		"pydantic" -> "pydantic.annotated_handlers" [style="dotted"];
		"pydantic" -> "pydantic.config" [style="dotted"];
		"pydantic" -> "pydantic.errors" [style="dotted"];
		"pydantic" -> "pydantic.fields" [style="dotted"];
		"pydantic" -> "pydantic.functional_serializers" [style="dotted"];
		"pydantic" -> "pydantic.functional_validators" [style="dotted"];
		"pydantic" -> "pydantic.json_schema" [style="dotted"];
		"pydantic" -> "pydantic.main" [style="dotted"];
		"pydantic" -> "pydantic.networks" [style="dotted"];
		"pydantic" -> "pydantic.type_adapter" [style="dotted"];
		"pydantic" -> "pydantic.validate_call_decorator" [style="dotted"];
		"pydantic" -> "pydantic.warnings" [style="dotted"];
		"pydantic" -> "pydantic.root_model" [style="dotted"];
		"pydantic" -> "pydantic.validate_arguments" [style="dotted"];
		"pydantic" -> "pydantic._internal" [style="dotted"];
		"pydantic" -> "pydantic.alias_generators" [style="dotted"];
		"pydantic" -> "pydantic.class_validators" [style="dotted"];
		"pydantic" -> "pydantic.color" [style="dotted"];
		"pydantic" -> "pydantic.datetime_parse" [style="dotted"];
		"pydantic" -> "pydantic.decorator" [style="dotted"];
		"pydantic" -> "pydantic.deprecated" [style="dotted"];
		"pydantic" -> "pydantic.env_settings" [style="dotted"];
		"pydantic" -> "pydantic.error_wrappers" [style="dotted"];
		"pydantic" -> "pydantic.experimental" [style="dotted"];
		"pydantic" -> "pydantic.generics" [style="dotted"];
		"pydantic" -> "pydantic.json" [style="dotted"];
		"pydantic" -> "pydantic.mypy" [style="dotted"];
		"pydantic" -> "pydantic.parse" [style="dotted"];
		"pydantic" -> "pydantic.plugin" [style="dotted"];
		"pydantic" -> "pydantic.schema" [style="dotted"];
		"pydantic" -> "pydantic.tools" [style="dotted"];
		"pydantic" -> "pydantic.typing" [style="dotted"];
		"pydantic" -> "pydantic.utils" [style="dotted"];
		"pydantic" -> "pydantic.v1" [style="dotted"];
		"pydantic" -> "pydantic.validators" [style="dotted"];
	}
	subgraph "cluster_anyio" {
		label="anyio";
		"anyio" -> "anyio.to_thread" [style="dotted"];
		"anyio" -> "anyio._backends" [style="dotted"];
		"anyio" -> "anyio._core" [style="dotted"];
		"anyio" -> "anyio.lowlevel" [style="dotted"];
		"anyio" -> "anyio.streams" [style="dotted"];
		"anyio" -> "anyio.from_thread" [style="dotted"];
		"anyio" -> "anyio.abc" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_loaders.blob_loaders" {
		label="langchain_community.document_loaders.blob_loaders";
		"langchain_community.document_loaders.blob_loaders" -> "langchain_community.document_loaders.blob_loaders.cloud_blob_loader" [style="dotted"];
		"langchain_community.document_loaders.blob_loaders" -> "langchain_community.document_loaders.blob_loaders.file_system" [style="dotted"];
		"langchain_community.document_loaders.blob_loaders" -> "langchain_community.document_loaders.blob_loaders.youtube_audio" [style="dotted"];
		"langchain_community.document_loaders.blob_loaders" -> "langchain_community.document_loaders.blob_loaders.schema" [style="dotted"];
	}
	subgraph "cluster_pyarrow.vendored" {
		label="pyarrow.vendored";
		"pyarrow.vendored" -> "pyarrow.vendored.docscrape" [style="dotted"];
		"pyarrow.vendored" -> "pyarrow.vendored.version" [style="dotted"];
	}
	subgraph "cluster_importlib" {
		label="importlib";
		"importlib" -> "importlib._bootstrap" [style="dotted"];
		"importlib" -> "importlib._bootstrap_external" [style="dotted"];
		"importlib" -> "importlib.machinery" [style="dotted"];
		"importlib" -> "importlib._common" [style="dotted"];
		"importlib" -> "importlib.util" [style="dotted"];
		"importlib" -> "importlib.metadata" [style="dotted"];
		"importlib" -> "importlib.abc" [style="dotted"];
		"importlib" -> "importlib.resources" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.pipeline" {
		label="graphdatascience.pipeline";
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.lp_training_pipeline" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.nc_training_pipeline" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.nr_training_pipeline" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.pipeline_endpoints" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.pipeline_alpha_proc_runner" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.pipeline_beta_proc_runner" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.pipeline_proc_runner" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.training_pipeline" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.lp_pipeline_create_runner" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.nc_pipeline_create_runner" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.nr_pipeline_create_runner" [style="dotted"];
		"graphdatascience.pipeline" -> "graphdatascience.pipeline.classification_training_pipeline" [style="dotted"];
	}
	subgraph "cluster_httpx._transports" {
		label="httpx._transports";
		"httpx._transports" -> "httpx._transports.asgi" [style="dotted"];
		"httpx._transports" -> "httpx._transports.base" [style="dotted"];
		"httpx._transports" -> "httpx._transports.default" [style="dotted"];
		"httpx._transports" -> "httpx._transports.mock" [style="dotted"];
		"httpx._transports" -> "httpx._transports.wsgi" [style="dotted"];
	}
	subgraph "cluster_openai.resources.evals.runs" {
		label="openai.resources.evals.runs";
		"openai.resources.evals.runs" -> "openai.resources.evals.runs.runs" [style="dotted"];
		"openai.resources.evals.runs" -> "openai.resources.evals.runs.output_items" [style="dotted"];
	}
	subgraph "cluster_anthropic._utils" {
		label="anthropic._utils";
		"anthropic._utils" -> "anthropic._utils._sync" [style="dotted"];
		"anthropic._utils" -> "anthropic._utils._proxy" [style="dotted"];
		"anthropic._utils" -> "anthropic._utils._utils" [style="dotted"];
		"anthropic._utils" -> "anthropic._utils._typing" [style="dotted"];
		"anthropic._utils" -> "anthropic._utils._streams" [style="dotted"];
		"anthropic._utils" -> "anthropic._utils._transform" [style="dotted"];
		"anthropic._utils" -> "anthropic._utils._reflection" [style="dotted"];
		"anthropic._utils" -> "anthropic._utils._logs" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.tensorboard_service" {
		label="google.cloud.aiplatform_v1.services.tensorboard_service";
		"google.cloud.aiplatform_v1.services.tensorboard_service" -> "google.cloud.aiplatform_v1.services.tensorboard_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.tensorboard_service" -> "google.cloud.aiplatform_v1.services.tensorboard_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.tensorboard_service" -> "google.cloud.aiplatform_v1.services.tensorboard_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.tensorboard_service" -> "google.cloud.aiplatform_v1.services.tensorboard_service.transports" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.orm" {
		label="sqlalchemy.orm";
		"sqlalchemy.orm" -> "sqlalchemy.orm.exc" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.collections" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.util" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.loading" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.context" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.evaluator" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.sync" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.persistence" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.bulk_persistence" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.clsregistry" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.strategy_options" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.unitofwork" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.properties" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.relationships" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.descriptor_props" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.state" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.instrumentation" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.path_registry" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.interfaces" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.attributes" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.mapper" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm._orm_constructors" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.base" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.decl_api" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.decl_base" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.dynamic" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.events" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.identity" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.mapped_collection" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.query" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.scoping" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.session" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.writeonly" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.dependency" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.strategies" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm._typing" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.state_changes" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.llm_checker" {
		label="langchain.chains.llm_checker";
		"langchain.chains.llm_checker" -> "langchain.chains.llm_checker.base" [style="dotted"];
		"langchain.chains.llm_checker" -> "langchain.chains.llm_checker.prompt" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.feature_registry_service" {
		label="google.cloud.aiplatform_v1beta1.services.feature_registry_service";
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.feature_registry_service" -> "google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" [style="dotted"];
	}
	subgraph "cluster_shapely.geometry" {
		label="shapely.geometry";
		"shapely.geometry" -> "shapely.geometry.base" [style="dotted"];
		"shapely.geometry" -> "shapely.geometry.collection" [style="dotted"];
		"shapely.geometry" -> "shapely.geometry.polygon" [style="dotted"];
		"shapely.geometry" -> "shapely.geometry.geo" [style="dotted"];
		"shapely.geometry" -> "shapely.geometry.linestring" [style="dotted"];
		"shapely.geometry" -> "shapely.geometry.multilinestring" [style="dotted"];
		"shapely.geometry" -> "shapely.geometry.multipoint" [style="dotted"];
		"shapely.geometry" -> "shapely.geometry.multipolygon" [style="dotted"];
		"shapely.geometry" -> "shapely.geometry.point" [style="dotted"];
	}
	subgraph "cluster_pdfminer" {
		label="pdfminer";
		"pdfminer" -> "pdfminer.pdfexceptions" [style="dotted"];
		"pdfminer" -> "pdfminer.settings" [style="dotted"];
		"pdfminer" -> "pdfminer.utils" [style="dotted"];
		"pdfminer" -> "pdfminer.psparser" [style="dotted"];
		"pdfminer" -> "pdfminer.pdfpage" [style="dotted"];
		"pdfminer" -> "pdfminer.converter" [style="dotted"];
		"pdfminer" -> "pdfminer.layout" [style="dotted"];
		"pdfminer" -> "pdfminer.pdfinterp" [style="dotted"];
		"pdfminer" -> "pdfminer.image" [style="dotted"];
		"pdfminer" -> "pdfminer.jbig2" [style="dotted"];
		"pdfminer" -> "pdfminer.pdfcolor" [style="dotted"];
		"pdfminer" -> "pdfminer.pdftypes" [style="dotted"];
		"pdfminer" -> "pdfminer.ascii85" [style="dotted"];
		"pdfminer" -> "pdfminer.ccitt" [style="dotted"];
		"pdfminer" -> "pdfminer.lzw" [style="dotted"];
		"pdfminer" -> "pdfminer.runlength" [style="dotted"];
		"pdfminer" -> "pdfminer.pdfdocument" [style="dotted"];
		"pdfminer" -> "pdfminer.arcfour" [style="dotted"];
		"pdfminer" -> "pdfminer.data_structures" [style="dotted"];
		"pdfminer" -> "pdfminer.pdfparser" [style="dotted"];
		"pdfminer" -> "pdfminer.psexceptions" [style="dotted"];
		"pdfminer" -> "pdfminer._saslprep" [style="dotted"];
		"pdfminer" -> "pdfminer.casting" [style="dotted"];
		"pdfminer" -> "pdfminer.cmapdb" [style="dotted"];
		"pdfminer" -> "pdfminer.pdfdevice" [style="dotted"];
		"pdfminer" -> "pdfminer.pdffont" [style="dotted"];
		"pdfminer" -> "pdfminer.encodingdb" [style="dotted"];
		"pdfminer" -> "pdfminer.fontmetrics" [style="dotted"];
		"pdfminer" -> "pdfminer.glyphlist" [style="dotted"];
		"pdfminer" -> "pdfminer.latin_enc" [style="dotted"];
		"pdfminer" -> "pdfminer.high_level" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.bing_search" {
		label="langchain_community.tools.bing_search";
		"langchain_community.tools.bing_search" -> "langchain_community.tools.bing_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chat_models" {
		label="langchain_community.chat_models";
		"langchain_community.chat_models" -> "langchain_community.chat_models.anthropic" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.anyscale" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.azure_openai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.baichuan" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.baidu_qianfan_endpoint" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.bedrock" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.cohere" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.coze" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.databricks" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.deepinfra" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.edenai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.ernie" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.everlyai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.fake" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.fireworks" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.friendli" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.gigachat" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.google_palm" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.gpt_router" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.huggingface" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.human" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.hunyuan" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.javelin_ai_gateway" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.jinachat" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.kinetica" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.konko" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.litellm" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.litellm_router" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.llama_edge" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.llamacpp" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.maritalk" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.minimax" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.mlflow" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.mlflow_ai_gateway" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.mlx" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.moonshot" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.naver" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.oci_data_science" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.oci_generative_ai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.octoai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.ollama" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.openai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.outlines" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.pai_eas_endpoint" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.perplexity" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.premai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.promptlayer_openai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.reka" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.sambanova" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.snowflake" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.solar" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.sparkllm" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.symblai_nebula" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.tongyi" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.vertexai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.volcengine_maas" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.yandex" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.yi" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.yuan2" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.zhipuai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.meta" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.gen_ai_cache_service" {
		label="google.cloud.aiplatform_v1.services.gen_ai_cache_service";
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.gen_ai_cache_service" -> "google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.docker_utils" {
		label="google.cloud.aiplatform.docker_utils";
		"google.cloud.aiplatform.docker_utils" -> "google.cloud.aiplatform.docker_utils.run" [style="dotted"];
		"google.cloud.aiplatform.docker_utils" -> "google.cloud.aiplatform.docker_utils.local_util" [style="dotted"];
		"google.cloud.aiplatform.docker_utils" -> "google.cloud.aiplatform.docker_utils.build" [style="dotted"];
		"google.cloud.aiplatform.docker_utils" -> "google.cloud.aiplatform.docker_utils.errors" [style="dotted"];
		"google.cloud.aiplatform.docker_utils" -> "google.cloud.aiplatform.docker_utils.utils" [style="dotted"];
	}
	subgraph "cluster_charset_normalizer" {
		label="charset_normalizer";
		"charset_normalizer" -> "charset_normalizer.api" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.legacy" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.models" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.utils" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.version" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.md__mypyc" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.constant" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.cd" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.md" [style="dotted"];
	}
	subgraph "cluster_websockets.sync" {
		label="websockets.sync";
		"websockets.sync" -> "websockets.sync.client" [style="dotted"];
		"websockets.sync" -> "websockets.sync.connection" [style="dotted"];
		"websockets.sync" -> "websockets.sync.messages" [style="dotted"];
		"websockets.sync" -> "websockets.sync.router" [style="dotted"];
		"websockets.sync" -> "websockets.sync.server" [style="dotted"];
		"websockets.sync" -> "websockets.sync.utils" [style="dotted"];
	}
	subgraph "cluster_openai.lib._parsing" {
		label="openai.lib._parsing";
		"openai.lib._parsing" -> "openai.lib._parsing._completions" [style="dotted"];
		"openai.lib._parsing" -> "openai.lib._parsing._responses" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_loaders.parsers.language" {
		label="langchain_community.document_loaders.parsers.language";
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.language_parser" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.c" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.cobol" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.cpp" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.csharp" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.elixir" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.go" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.java" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.javascript" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.kotlin" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.lua" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.perl" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.php" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.python" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.ruby" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.rust" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.scala" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.sql" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.typescript" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.code_segmenter" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.query_runner.protocol" {
		label="graphdatascience.query_runner.protocol";
		"graphdatascience.query_runner.protocol" -> "graphdatascience.query_runner.protocol.project_protocols" [style="dotted"];
		"graphdatascience.query_runner.protocol" -> "graphdatascience.query_runner.protocol.write_protocols" [style="dotted"];
		"graphdatascience.query_runner.protocol" -> "graphdatascience.query_runner.protocol.retry_utils" [style="dotted"];
		"graphdatascience.query_runner.protocol" -> "graphdatascience.query_runner.protocol.status" [style="dotted"];
	}
	subgraph "cluster_neo4j._codec" {
		label="neo4j._codec";
		"neo4j._codec" -> "neo4j._codec.packstream" [style="dotted"];
		"neo4j._codec" -> "neo4j._codec.hydration" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports";
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" -> "google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pandas.errors" {
		label="pandas.errors";
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict.params_v1" {
		label="google.cloud.aiplatform.v1.schema.predict.params_v1";
		"google.cloud.aiplatform.v1.schema.predict.params_v1" -> "google.cloud.aiplatform.v1.schema.predict.params_v1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict.params_v1" -> "google.cloud.aiplatform.v1.schema.predict.params_v1.types" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.slack" {
		label="langchain_community.tools.slack";
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.get_channel" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.get_message" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.schedule_message" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.send_message" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.utils" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.base" [style="dotted"];
	}
	subgraph "cluster_textdistance.algorithms" {
		label="textdistance.algorithms";
		"textdistance.algorithms" -> "textdistance.algorithms.compression_based" [style="dotted"];
		"textdistance.algorithms" -> "textdistance.algorithms.edit_based" [style="dotted"];
		"textdistance.algorithms" -> "textdistance.algorithms.phonetic" [style="dotted"];
		"textdistance.algorithms" -> "textdistance.algorithms.sequence_based" [style="dotted"];
		"textdistance.algorithms" -> "textdistance.algorithms.simple" [style="dotted"];
		"textdistance.algorithms" -> "textdistance.algorithms.token_based" [style="dotted"];
		"textdistance.algorithms" -> "textdistance.algorithms.base" [style="dotted"];
		"textdistance.algorithms" -> "textdistance.algorithms.types" [style="dotted"];
		"textdistance.algorithms" -> "textdistance.algorithms.vector_based" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.gapic" {
		label="google.cloud.aiplatform.gapic";
		"google.cloud.aiplatform.gapic" -> "google.cloud.aiplatform.gapic.schema" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.utils" {
		label="graphdatascience.utils";
		"graphdatascience.utils" -> "graphdatascience.utils.util_remote_proc_runner" [style="dotted"];
		"graphdatascience.utils" -> "graphdatascience.utils.util_node_property_func_runner" [style="dotted"];
		"graphdatascience.utils" -> "graphdatascience.utils.util_proc_runner" [style="dotted"];
		"graphdatascience.utils" -> "graphdatascience.utils.direct_util_endpoints" [style="dotted"];
	}
	subgraph "cluster_google.cloud.location" {
		label="google.cloud.location";
		"google.cloud.location" -> "google.cloud.location.locations_pb2" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chains.openapi" {
		label="langchain_community.chains.openapi";
		"langchain_community.chains.openapi" -> "langchain_community.chains.openapi.chain" [style="dotted"];
		"langchain_community.chains.openapi" -> "langchain_community.chains.openapi.response_chain" [style="dotted"];
		"langchain_community.chains.openapi" -> "langchain_community.chains.openapi.prompts" [style="dotted"];
		"langchain_community.chains.openapi" -> "langchain_community.chains.openapi.requests_chain" [style="dotted"];
	}
	subgraph "cluster_google.cloud.bigquery.routine" {
		label="google.cloud.bigquery.routine";
		"google.cloud.bigquery.routine" -> "google.cloud.bigquery.routine.routine" [style="dotted"];
	}
	subgraph "cluster_pandas.core.interchange" {
		label="pandas.core.interchange";
		"pandas.core.interchange" -> "pandas.core.interchange.dataframe_protocol" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.dataframe" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.column" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.utils" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.buffer" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.from_dataframe" [style="dotted"];
	}
	subgraph "cluster_tqdm" {
		label="tqdm";
		"tqdm" -> "tqdm._monitor" [style="dotted"];
		"tqdm" -> "tqdm._tqdm_pandas" [style="dotted"];
		"tqdm" -> "tqdm.cli" [style="dotted"];
		"tqdm" -> "tqdm.gui" [style="dotted"];
		"tqdm" -> "tqdm.std" [style="dotted"];
		"tqdm" -> "tqdm.version" [style="dotted"];
		"tqdm" -> "tqdm.notebook" [style="dotted"];
		"tqdm" -> "tqdm._dist_ver" [style="dotted"];
		"tqdm" -> "tqdm.utils" [style="dotted"];
		"tqdm" -> "tqdm.auto" [style="dotted"];
		"tqdm" -> "tqdm.autonotebook" [style="dotted"];
		"tqdm" -> "tqdm.asyncio" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools" {
		label="langchain_community.tools";
		"langchain_community.tools" -> "langchain_community.tools.azure_ai_services" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.azure_cognitive_services" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.connery" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.convert_to_openai" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.dataherald" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.edenai" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.file_management" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.gmail" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_books" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.ifttt" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.metaphor_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.playwright" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.plugin" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.steamship_image_generation" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.tavily_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.yahoo_finance_news" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.steam" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.ainetwork" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.arxiv" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.asknews" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.bearly" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.bing_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.brave_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.cassandra_database" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.cogniswitch" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.ddg_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.e2b_data_analysis" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.eleven_labs" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.financial_datasets" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_cloud" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_places" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_serper" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.graphql" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.human" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.interaction" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.jina_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.jira" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.json" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.merriam_webster" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.mojeek_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.nasa" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.office365" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.openweathermap" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.polygon" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.powerbi" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.pubmed" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.reddit_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.requests" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.scenexplain" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.searchapi" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.searx_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.shell" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.slack" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.sleep" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.spark_sql" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.sql_database" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.stackexchange" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.vectorstore" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.wikipedia" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.wolfram_alpha" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.you" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.youtube" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.zapier" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.zenguard" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.openapi" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.multion" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.amadeus" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.memorize" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_trends" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_scholar" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_lens" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_jobs" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_finance" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.golden_query" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.dataforseo_api_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.nuclia" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.polygon" {
		label="langchain_community.agent_toolkits.polygon";
		"langchain_community.agent_toolkits.polygon" -> "langchain_community.agent_toolkits.polygon.toolkit" [style="dotted"];
	}
	subgraph "cluster_google.cloud._http" {
		label="google.cloud._http";
	}
	subgraph "cluster_langchain.output_parsers" {
		label="langchain.output_parsers";
		"langchain.output_parsers" -> "langchain.output_parsers.boolean" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.combining" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.datetime" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.enum" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.fix" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.pandas_dataframe" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.regex" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.regex_dict" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.retry" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.structured" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.yaml" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.format_instructions" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.prompts" [style="dotted"];
	}
	subgraph "cluster_langchain_google_genai" {
		label="langchain_google_genai";
		"langchain_google_genai" -> "langchain_google_genai._enums" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai._genai_extension" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.chat_models" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.embeddings" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.genai_aqa" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.google_vector_store" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.llms" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai._common" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai._function_utils" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai._image_utils" [style="dotted"];
	}
	subgraph "cluster_proto.marshal" {
		label="proto.marshal";
		"proto.marshal" -> "proto.marshal.compat" [style="dotted"];
		"proto.marshal" -> "proto.marshal.marshal" [style="dotted"];
		"proto.marshal" -> "proto.marshal.collections" [style="dotted"];
		"proto.marshal" -> "proto.marshal.rules" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.sqlite" {
		label="sqlalchemy.dialects.sqlite";
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.aiosqlite" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.base" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.pysqlcipher" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.pysqlite" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.dml" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.json" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.mrkl" {
		label="langchain.agents.mrkl";
		"langchain.agents.mrkl" -> "langchain.agents.mrkl.base" [style="dotted"];
		"langchain.agents.mrkl" -> "langchain.agents.mrkl.prompt" [style="dotted"];
		"langchain.agents.mrkl" -> "langchain.agents.mrkl.output_parser" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.tensorboard.plugins.tf_profiler" {
		label="google.cloud.aiplatform.tensorboard.plugins.tf_profiler";
		"google.cloud.aiplatform.tensorboard.plugins.tf_profiler" -> "google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" [style="dotted"];
	}
	subgraph "cluster_langchain_experimental.utilities" {
		label="langchain_experimental.utilities";
		"langchain_experimental.utilities" -> "langchain_experimental.utilities.python" [style="dotted"];
	}
	subgraph "cluster_pypdf" {
		label="pypdf";
		"pypdf" -> "pypdf._crypt_providers" [style="dotted"];
		"pypdf" -> "pypdf._doc_common" [style="dotted"];
		"pypdf" -> "pypdf._encryption" [style="dotted"];
		"pypdf" -> "pypdf._merger" [style="dotted"];
		"pypdf" -> "pypdf._page" [style="dotted"];
		"pypdf" -> "pypdf._reader" [style="dotted"];
		"pypdf" -> "pypdf._version" [style="dotted"];
		"pypdf" -> "pypdf._writer" [style="dotted"];
		"pypdf" -> "pypdf.constants" [style="dotted"];
		"pypdf" -> "pypdf.pagerange" [style="dotted"];
		"pypdf" -> "pypdf.papersizes" [style="dotted"];
		"pypdf" -> "pypdf.errors" [style="dotted"];
		"pypdf" -> "pypdf._cmap" [style="dotted"];
		"pypdf" -> "pypdf._page_labels" [style="dotted"];
		"pypdf" -> "pypdf._utils" [style="dotted"];
		"pypdf" -> "pypdf.generic" [style="dotted"];
		"pypdf" -> "pypdf.types" [style="dotted"];
		"pypdf" -> "pypdf.xmp" [style="dotted"];
		"pypdf" -> "pypdf._protocols" [style="dotted"];
		"pypdf" -> "pypdf.filters" [style="dotted"];
		"pypdf" -> "pypdf._xobj_image_helpers" [style="dotted"];
		"pypdf" -> "pypdf._codecs" [style="dotted"];
		"pypdf" -> "pypdf._text_extraction" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.pipeline_service.transports";
		"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.algo" {
		label="graphdatascience.algo";
		"graphdatascience.algo" -> "graphdatascience.algo.single_mode_algo_endpoints" [style="dotted"];
		"graphdatascience.algo" -> "graphdatascience.algo.algo_proc_runner" [style="dotted"];
		"graphdatascience.algo" -> "graphdatascience.algo.algo_endpoints" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.jina_search" {
		label="langchain_community.tools.jina_search";
		"langchain_community.tools.jina_search" -> "langchain_community.tools.jina_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.human" {
		label="langchain_community.tools.human";
		"langchain_community.tools.human" -> "langchain_community.tools.human.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_transformers" {
		label="langchain_community.document_transformers";
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.beautiful_soup_transformer" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.doctran_text_extract" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.doctran_text_qa" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.doctran_text_translate" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.embeddings_redundant_filter" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.google_translate" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.html2text" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.long_context_reorder" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.markdownify" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.nuclia_text_transform" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.openai_functions" [style="dotted"];
	}
	subgraph "cluster_google.cloud.storage" {
		label="google.cloud.storage";
		"google.cloud.storage" -> "google.cloud.storage.version" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage._helpers" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.batch" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.blob" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.bucket" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.client" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage._opentelemetry_tracing" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage._http" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage._signing" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.hmac_key" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.acl" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.constants" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.retry" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.notification" [style="dotted"];
		"google.cloud.storage" -> "google.cloud.storage.fileio" [style="dotted"];
	}
	subgraph "cluster_xml" {
		label="xml";
		"xml" -> "xml.parsers" [style="dotted"];
		"xml" -> "xml.sax" [style="dotted"];
		"xml" -> "xml.dom" [style="dotted"];
		"xml" -> "xml.etree" [style="dotted"];
	}
	subgraph "cluster_googleapiclient.discovery_cache" {
		label="googleapiclient.discovery_cache";
		"googleapiclient.discovery_cache" -> "googleapiclient.discovery_cache.base" [style="dotted"];
		"googleapiclient.discovery_cache" -> "googleapiclient.discovery_cache.appengine_memcache" [style="dotted"];
		"googleapiclient.discovery_cache" -> "googleapiclient.discovery_cache.file_cache" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types";
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_object_detection" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_segmentation" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_extraction" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_sentiment" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_action_recognition" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_classification" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types" -> "google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_object_tracking" [style="dotted"];
	}
	subgraph "cluster_pyparsing.diagram" {
		label="pyparsing.diagram";
	}
	subgraph "cluster_openai.resources.beta" {
		label="openai.resources.beta";
		"openai.resources.beta" -> "openai.resources.beta.beta" [style="dotted"];
		"openai.resources.beta" -> "openai.resources.beta.threads" [style="dotted"];
		"openai.resources.beta" -> "openai.resources.beta.assistants" [style="dotted"];
		"openai.resources.beta" -> "openai.resources.beta.realtime" [style="dotted"];
		"openai.resources.beta" -> "openai.resources.beta.chat" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.deployment_resource_pool_service" {
		label="google.cloud.aiplatform_v1.services.deployment_resource_pool_service";
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.pagers" [style="dotted"];
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1.services.deployment_resource_pool_service" -> "google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" [style="dotted"];
	}
	subgraph "cluster_pydantic.plugin" {
		label="pydantic.plugin";
		"pydantic.plugin" -> "pydantic.plugin._schema_validator" [style="dotted"];
		"pydantic.plugin" -> "pydantic.plugin._loader" [style="dotted"];
	}
	subgraph "cluster_google.rpc" {
		label="google.rpc";
		"google.rpc" -> "google.rpc.error_details_pb2" [style="dotted"];
		"google.rpc" -> "google.rpc.status_pb2" [style="dotted"];
		"google.rpc" -> "google.rpc.code_pb2" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_trends" {
		label="langchain_community.tools.google_trends";
		"langchain_community.tools.google_trends" -> "langchain_community.tools.google_trends.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chat_message_histories" {
		label="langchain_community.chat_message_histories";
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.astradb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.cassandra" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.cosmos_db" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.dynamodb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.elasticsearch" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.file" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.firestore" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.in_memory" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.kafka" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.momento" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.mongodb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.neo4j" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.postgres" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.redis" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.rocksetdb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.singlestoredb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.sql" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.streamlit" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.tidb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.upstash_redis" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.xata" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.zep" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.zep_cloud" [style="dotted"];
	}
	subgraph "cluster_pydantic_settings.sources.providers" {
		label="pydantic_settings.sources.providers";
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.aws" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.azure" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.cli" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.dotenv" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.env" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.gcp" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.json" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.pyproject" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.secrets" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.toml" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.yaml" [style="dotted"];
	}
	subgraph "cluster_langchain_openai.embeddings" {
		label="langchain_openai.embeddings";
		"langchain_openai.embeddings" -> "langchain_openai.embeddings.azure" [style="dotted"];
		"langchain_openai.embeddings" -> "langchain_openai.embeddings.base" [style="dotted"];
	}
	subgraph "cluster_openai.lib.streaming" {
		label="openai.lib.streaming";
		"openai.lib.streaming" -> "openai.lib.streaming._assistants" [style="dotted"];
		"openai.lib.streaming" -> "openai.lib.streaming.responses" [style="dotted"];
		"openai.lib.streaming" -> "openai.lib.streaming.chat" [style="dotted"];
		"openai.lib.streaming" -> "openai.lib.streaming._deltas" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.feature_registry_service.transports" {
		label="google.cloud.aiplatform_v1.services.feature_registry_service.transports";
		"google.cloud.aiplatform_v1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1.services.feature_registry_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.feature_registry_service.transports" -> "google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud._helpers" {
		label="google.cloud._helpers";
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.prediction_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.prediction_service.transports";
		"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" -> "google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_cryptography" {
		label="cryptography";
		"cryptography" -> "cryptography.utils" [style="dotted"];
		"cryptography" -> "cryptography.__about__" [style="dotted"];
		"cryptography" -> "cryptography.x509" [style="dotted"];
		"cryptography" -> "cryptography.hazmat" [style="dotted"];
		"cryptography" -> "cryptography.exceptions" [style="dotted"];
	}
	subgraph "cluster_dateutil.tz" {
		label="dateutil.tz";
		"dateutil.tz" -> "dateutil.tz.tzfile" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz.tz" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz._common" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz._factories" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz.win" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform._pipeline_based_service" {
		label="google.cloud.aiplatform._pipeline_based_service";
		"google.cloud.aiplatform._pipeline_based_service" -> "google.cloud.aiplatform._pipeline_based_service.pipeline_based_service" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.future" {
		label="sqlalchemy.future";
		"sqlalchemy.future" -> "sqlalchemy.future.engine" [style="dotted"];
	}
	subgraph "cluster_google.cloud.bigquery.magics" {
		label="google.cloud.bigquery.magics";
		"google.cloud.bigquery.magics" -> "google.cloud.bigquery.magics.line_arg_parser" [style="dotted"];
		"google.cloud.bigquery.magics" -> "google.cloud.bigquery.magics.magics" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" {
		label="google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types";
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_object_detection" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_segmentation" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.export_evaluated_data_items_config" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_tables" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_extraction" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_sentiment" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_action_recognition" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_classification" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types" -> "google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_object_tracking" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1";
		"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.gapic_version" [style="dotted"];
		"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1" -> "google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1beta1.schema.predict.params" {
		label="google.cloud.aiplatform.v1beta1.schema.predict.params";
		"google.cloud.aiplatform.v1beta1.schema.predict.params" -> "google.cloud.aiplatform.v1beta1.schema.predict.params.gapic_version" [style="dotted"];
	}
	subgraph "cluster_xml.parsers" {
		label="xml.parsers";
		"xml.parsers" -> "xml.parsers.expat" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.polygon" {
		label="langchain_community.tools.polygon";
		"langchain_community.tools.polygon" -> "langchain_community.tools.polygon.aggregates" [style="dotted"];
		"langchain_community.tools.polygon" -> "langchain_community.tools.polygon.financials" [style="dotted"];
		"langchain_community.tools.polygon" -> "langchain_community.tools.polygon.last_quote" [style="dotted"];
		"langchain_community.tools.polygon" -> "langchain_community.tools.polygon.ticker_news" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.brave_search" {
		label="langchain_community.tools.brave_search";
		"langchain_community.tools.brave_search" -> "langchain_community.tools.brave_search.tool" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt.auth" {
		label="requests_toolbelt.auth";
		"requests_toolbelt.auth" -> "requests_toolbelt.auth._digest_auth_compat" [style="dotted"];
		"requests_toolbelt.auth" -> "requests_toolbelt.auth.http_proxy_digest" [style="dotted"];
		"requests_toolbelt.auth" -> "requests_toolbelt.auth.guess" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.llm_utility_service.transports" {
		label="google.cloud.aiplatform_v1.services.llm_utility_service.transports";
		"google.cloud.aiplatform_v1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1.services.llm_utility_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.llm_utility_service.transports" -> "google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.v1.schema.predict" {
		label="google.cloud.aiplatform.v1.schema.predict";
		"google.cloud.aiplatform.v1.schema.predict" -> "google.cloud.aiplatform.v1.schema.predict.instance" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict" -> "google.cloud.aiplatform.v1.schema.predict.params" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict" -> "google.cloud.aiplatform.v1.schema.predict.prediction" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict" -> "google.cloud.aiplatform.v1.schema.predict.prediction_v1" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict" -> "google.cloud.aiplatform.v1.schema.predict.params_v1" [style="dotted"];
		"google.cloud.aiplatform.v1.schema.predict" -> "google.cloud.aiplatform.v1.schema.predict.instance_v1" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" {
		label="google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports";
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" -> "google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_numpy.matrixlib" {
		label="numpy.matrixlib";
		"numpy.matrixlib" -> "numpy.matrixlib.defmatrix" [style="dotted"];
	}
	subgraph "cluster_grpc.aio" {
		label="grpc.aio";
		"grpc.aio" -> "grpc.aio._base_call" [style="dotted"];
		"grpc.aio" -> "grpc.aio._base_channel" [style="dotted"];
		"grpc.aio" -> "grpc.aio._base_server" [style="dotted"];
		"grpc.aio" -> "grpc.aio._call" [style="dotted"];
		"grpc.aio" -> "grpc.aio._channel" [style="dotted"];
		"grpc.aio" -> "grpc.aio._interceptor" [style="dotted"];
		"grpc.aio" -> "grpc.aio._metadata" [style="dotted"];
		"grpc.aio" -> "grpc.aio._server" [style="dotted"];
		"grpc.aio" -> "grpc.aio._typing" [style="dotted"];
		"grpc.aio" -> "grpc.aio._utils" [style="dotted"];
	}
	subgraph "cluster_idna" {
		label="idna";
		"idna" -> "idna.idnadata" [style="dotted"];
		"idna" -> "idna.core" [style="dotted"];
		"idna" -> "idna.intranges" [style="dotted"];
		"idna" -> "idna.package_data" [style="dotted"];
		"idna" -> "idna.uts46data" [style="dotted"];
	}
	subgraph "cluster_google_crc32c" {
		label="google_crc32c";
		"google_crc32c" -> "google_crc32c.cext" [style="dotted"];
		"google_crc32c" -> "google_crc32c.python" [style="dotted"];
		"google_crc32c" -> "google_crc32c._checksum" [style="dotted"];
		"google_crc32c" -> "google_crc32c.__config__" [style="dotted"];
		"google_crc32c" -> "google_crc32c._crc32c" [style="dotted"];
	}
	subgraph "cluster_docx" {
		label="docx";
		"docx" -> "docx.api" [style="dotted"];
		"docx" -> "docx.opc" [style="dotted"];
		"docx" -> "docx.parts" [style="dotted"];
		"docx" -> "docx.shared" [style="dotted"];
		"docx" -> "docx.oxml" [style="dotted"];
		"docx" -> "docx.exceptions" [style="dotted"];
		"docx" -> "docx.enum" [style="dotted"];
		"docx" -> "docx.types" [style="dotted"];
		"docx" -> "docx.text" [style="dotted"];
		"docx" -> "docx.dml" [style="dotted"];
		"docx" -> "docx.styles" [style="dotted"];
		"docx" -> "docx.image" [style="dotted"];
		"docx" -> "docx.settings" [style="dotted"];
		"docx" -> "docx.package" [style="dotted"];
		"docx" -> "docx.document" [style="dotted"];
		"docx" -> "docx.shape" [style="dotted"];
		"docx" -> "docx.blkcntnr" [style="dotted"];
		"docx" -> "docx.section" [style="dotted"];
		"docx" -> "docx.table" [style="dotted"];
		"docx" -> "docx.drawing" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.model_monitoring" {
		label="google.cloud.aiplatform.model_monitoring";
		"google.cloud.aiplatform.model_monitoring" -> "google.cloud.aiplatform.model_monitoring.alert" [style="dotted"];
		"google.cloud.aiplatform.model_monitoring" -> "google.cloud.aiplatform.model_monitoring.objective" [style="dotted"];
		"google.cloud.aiplatform.model_monitoring" -> "google.cloud.aiplatform.model_monitoring.sampling" [style="dotted"];
		"google.cloud.aiplatform.model_monitoring" -> "google.cloud.aiplatform.model_monitoring.schedule" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform.featurestore" {
		label="google.cloud.aiplatform.featurestore";
		"google.cloud.aiplatform.featurestore" -> "google.cloud.aiplatform.featurestore._entity_type" [style="dotted"];
		"google.cloud.aiplatform.featurestore" -> "google.cloud.aiplatform.featurestore.entity_type" [style="dotted"];
		"google.cloud.aiplatform.featurestore" -> "google.cloud.aiplatform.featurestore.feature" [style="dotted"];
		"google.cloud.aiplatform.featurestore" -> "google.cloud.aiplatform.featurestore.featurestore" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.spark_sql" {
		label="langchain_community.tools.spark_sql";
		"langchain_community.tools.spark_sql" -> "langchain_community.tools.spark_sql.tool" [style="dotted"];
		"langchain_community.tools.spark_sql" -> "langchain_community.tools.spark_sql.prompt" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.more_itertools" {
		label="setuptools._vendor.more_itertools";
		"setuptools._vendor.more_itertools" -> "setuptools._vendor.more_itertools.more" [style="dotted"];
		"setuptools._vendor.more_itertools" -> "setuptools._vendor.more_itertools.recipes" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.requests" {
		label="langchain_community.tools.requests";
		"langchain_community.tools.requests" -> "langchain_community.tools.requests.tool" [style="dotted"];
	}
	subgraph "cluster_websockets" {
		label="websockets";
		"websockets" -> "websockets.imports" [style="dotted"];
		"websockets" -> "websockets.version" [style="dotted"];
		"websockets" -> "websockets.extensions" [style="dotted"];
		"websockets" -> "websockets.frames" [style="dotted"];
		"websockets" -> "websockets.http11" [style="dotted"];
		"websockets" -> "websockets.client" [style="dotted"];
		"websockets" -> "websockets.datastructures" [style="dotted"];
		"websockets" -> "websockets.exceptions" [style="dotted"];
		"websockets" -> "websockets.protocol" [style="dotted"];
		"websockets" -> "websockets.server" [style="dotted"];
		"websockets" -> "websockets.typing" [style="dotted"];
		"websockets" -> "websockets.__main__" [style="dotted"];
		"websockets" -> "websockets.asyncio" [style="dotted"];
		"websockets" -> "websockets.auth" [style="dotted"];
		"websockets" -> "websockets.cli" [style="dotted"];
		"websockets" -> "websockets.connection" [style="dotted"];
		"websockets" -> "websockets.headers" [style="dotted"];
		"websockets" -> "websockets.http" [style="dotted"];
		"websockets" -> "websockets.legacy" [style="dotted"];
		"websockets" -> "websockets.speedups" [style="dotted"];
		"websockets" -> "websockets.streams" [style="dotted"];
		"websockets" -> "websockets.sync" [style="dotted"];
		"websockets" -> "websockets.uri" [style="dotted"];
		"websockets" -> "websockets.utils" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.sql_database" {
		label="langchain.chains.sql_database";
		"langchain.chains.sql_database" -> "langchain.chains.sql_database.prompt" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.tag_keys.transports" {
		label="google.cloud.resourcemanager_v3.services.tag_keys.transports";
		"google.cloud.resourcemanager_v3.services.tag_keys.transports" -> "google.cloud.resourcemanager_v3.services.tag_keys.transports.base" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_keys.transports" -> "google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_keys.transports" -> "google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_keys.transports" -> "google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_keys.transports" -> "google.cloud.resourcemanager_v3.services.tag_keys.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1beta1.services.llm_utility_service" {
		label="google.cloud.aiplatform_v1beta1.services.llm_utility_service";
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.async_client" [style="dotted"];
		"google.cloud.aiplatform_v1beta1.services.llm_utility_service" -> "google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.zenguard" {
		label="langchain_community.tools.zenguard";
		"langchain_community.tools.zenguard" -> "langchain_community.tools.zenguard.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.utils" {
		label="langchain_community.utils";
		"langchain_community.utils" -> "langchain_community.utils.openai" [style="dotted"];
		"langchain_community.utils" -> "langchain_community.utils.math" [style="dotted"];
		"langchain_community.utils" -> "langchain_community.utils.google" [style="dotted"];
		"langchain_community.utils" -> "langchain_community.utils.user_agent" [style="dotted"];
	}
	subgraph "cluster_graphdatascience.query_runner" {
		label="graphdatascience.query_runner";
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.query_runner" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.neo4j_query_runner" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.cypher_graph_constructor" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.graph_constructor" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.progress" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.arrow_info" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.arrow_query_runner" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.gds_arrow_client" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.session_query_runner" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.termination_flag" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.protocol" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.arrow_endpoint_version" [style="dotted"];
		"graphdatascience.query_runner" -> "graphdatascience.query_runner.arrow_graph_constructor" [style="dotted"];
	}
	subgraph "cluster_setuptools.command" {
		label="setuptools.command";
		"setuptools.command" -> "setuptools.command.bdist_egg" [style="dotted"];
		"setuptools.command" -> "setuptools.command.egg_info" [style="dotted"];
		"setuptools.command" -> "setuptools.command.sdist" [style="dotted"];
		"setuptools.command" -> "setuptools.command.setopt" [style="dotted"];
		"setuptools.command" -> "setuptools.command.py36compat" [style="dotted"];
	}
	subgraph "cluster_google.cloud.resourcemanager_v3.services.tag_keys" {
		label="google.cloud.resourcemanager_v3.services.tag_keys";
		"google.cloud.resourcemanager_v3.services.tag_keys" -> "google.cloud.resourcemanager_v3.services.tag_keys.pagers" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_keys" -> "google.cloud.resourcemanager_v3.services.tag_keys.async_client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_keys" -> "google.cloud.resourcemanager_v3.services.tag_keys.client" [style="dotted"];
		"google.cloud.resourcemanager_v3.services.tag_keys" -> "google.cloud.resourcemanager_v3.services.tag_keys.transports" [style="dotted"];
	}
	subgraph "cluster_openai.resources.fine_tuning" {
		label="openai.resources.fine_tuning";
		"openai.resources.fine_tuning" -> "openai.resources.fine_tuning.jobs" [style="dotted"];
		"openai.resources.fine_tuning" -> "openai.resources.fine_tuning.checkpoints" [style="dotted"];
		"openai.resources.fine_tuning" -> "openai.resources.fine_tuning.fine_tuning" [style="dotted"];
	}
	subgraph "cluster_pyasn1.compat" {
		label="pyasn1.compat";
		"pyasn1.compat" -> "pyasn1.compat.integer" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.zapier" {
		label="langchain_community.agent_toolkits.zapier";
		"langchain_community.agent_toolkits.zapier" -> "langchain_community.agent_toolkits.zapier.toolkit" [style="dotted"];
	}
	subgraph "cluster_packaging.licenses" {
		label="packaging.licenses";
		"packaging.licenses" -> "packaging.licenses._spdx" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage" {
		label="google.ai.generativelanguage";
		"google.ai.generativelanguage" -> "google.ai.generativelanguage.gapic_version" [style="dotted"];
	}
	subgraph "cluster_pandas.io.sas" {
		label="pandas.io.sas";
		"pandas.io.sas" -> "pandas.io.sas.sasreader" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas7bdat" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas_constants" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas_xport" [style="dotted"];
	}
	subgraph "cluster_langchain_neo4j" {
		label="langchain_neo4j";
		"langchain_neo4j" -> "langchain_neo4j.chat_message_histories" [style="dotted"];
		"langchain_neo4j" -> "langchain_neo4j.graphs" [style="dotted"];
		"langchain_neo4j" -> "langchain_neo4j.vectorstores" [style="dotted"];
		"langchain_neo4j" -> "langchain_neo4j.chains" [style="dotted"];
	}
	subgraph "cluster_google.oauth2" {
		label="google.oauth2";
		"google.oauth2" -> "google.oauth2._client" [style="dotted"];
		"google.oauth2" -> "google.oauth2.service_account" [style="dotted"];
		"google.oauth2" -> "google.oauth2.webauthn_handler_factory" [style="dotted"];
		"google.oauth2" -> "google.oauth2.challenges" [style="dotted"];
		"google.oauth2" -> "google.oauth2.reauth" [style="dotted"];
		"google.oauth2" -> "google.oauth2.credentials" [style="dotted"];
		"google.oauth2" -> "google.oauth2.utils" [style="dotted"];
		"google.oauth2" -> "google.oauth2.sts" [style="dotted"];
		"google.oauth2" -> "google.oauth2.gdch_credentials" [style="dotted"];
		"google.oauth2" -> "google.oauth2.webauthn_types" [style="dotted"];
		"google.oauth2" -> "google.oauth2.webauthn_handler" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.featurestore_service.transports" {
		label="google.cloud.aiplatform_v1.services.featurestore_service.transports";
		"google.cloud.aiplatform_v1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.featurestore_service.transports" -> "google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_openai.resources.evals" {
		label="openai.resources.evals";
		"openai.resources.evals" -> "openai.resources.evals.runs" [style="dotted"];
		"openai.resources.evals" -> "openai.resources.evals.evals" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.jira" {
		label="langchain_community.agent_toolkits.jira";
		"langchain_community.agent_toolkits.jira" -> "langchain_community.agent_toolkits.jira.toolkit" [style="dotted"];
	}
	subgraph "cluster_google.cloud.aiplatform_v1.services.pipeline_service.transports" {
		label="google.cloud.aiplatform_v1.services.pipeline_service.transports";
		"google.cloud.aiplatform_v1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1.services.pipeline_service.transports.base" [style="dotted"];
		"google.cloud.aiplatform_v1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" [style="dotted"];
		"google.cloud.aiplatform_v1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" [style="dotted"];
		"google.cloud.aiplatform_v1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio" [style="dotted"];
		"google.cloud.aiplatform_v1.services.pipeline_service.transports" -> "google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_base" [style="dotted"];
	}
	"<PyiModuleGraph>" -> "gc" [];
	"<PyiModuleGraph>" -> "time" [];
	"<PyiModuleGraph>" -> "codecs" [];
	"<PyiModuleGraph>" -> "_sre" [];
	"<PyiModuleGraph>" -> "posix" [];
	"<PyiModuleGraph>" -> "posixpath" [];
	"<PyiModuleGraph>" -> "_posixsubprocess" [];
	"<PyiModuleGraph>" -> "_datetime" [];
	"<PyiModuleGraph>" -> "datetime" [];
	"<PyiModuleGraph>" -> "_pickle" [];
	"<PyiModuleGraph>" -> "linecache" [];
	"<PyiModuleGraph>" -> "traceback" [];
	"<PyiModuleGraph>" -> "locale" [];
	"<PyiModuleGraph>" -> "sre_parse" [];
	"<PyiModuleGraph>" -> "operator" [];
	"<PyiModuleGraph>" -> "keyword" [];
	"<PyiModuleGraph>" -> "_collections_abc" [];
	"<PyiModuleGraph>" -> "re" [];
	"<PyiModuleGraph>" -> "sre_compile" [];
	"<PyiModuleGraph>" -> "reprlib" [];
	"<PyiModuleGraph>" -> "stat" [];
	"<PyiModuleGraph>" -> "weakref" [];
	"<PyiModuleGraph>" -> "collections" [];
	"<PyiModuleGraph>" -> "encodings" [];
	"<PyiModuleGraph>" -> "types" [];
	"<PyiModuleGraph>" -> "io" [];
	"<PyiModuleGraph>" -> "enum" [];
	"<PyiModuleGraph>" -> "heapq" [];
	"<PyiModuleGraph>" -> "warnings" [];
	"<PyiModuleGraph>" -> "copyreg" [];
	"<PyiModuleGraph>" -> "_weakrefset" [];
	"<PyiModuleGraph>" -> "_bootlocale" [];
	"<PyiModuleGraph>" -> "abc" [];
	"<PyiModuleGraph>" -> "sre_constants" [];
	"<PyiModuleGraph>" -> "os" [];
	"<PyiModuleGraph>" -> "genericpath" [];
	"<PyiModuleGraph>" -> "functools" [];
	"<PyiModuleGraph>" -> "ntpath" [];
	"<PyiModuleGraph>" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" [];
	"<PyiModuleGraph>" -> "_json" [];
	"<PyiModuleGraph>" -> "_ssl" [];
	"<PyiModuleGraph>" -> "zipimport" [];
	"<PyiModuleGraph>" -> "_elementtree" [];
	"<PyiModuleGraph>" -> "_thread" [];
	"<PyiModuleGraph>" -> "graphdatascience" [];
	"graphdatascience.session.gds_sessions" -> "__future__" [];
	"graphdatascience.session.gds_sessions" -> "os" [];
	"graphdatascience.session.gds_sessions" -> "dataclasses" [];
	"graphdatascience.session.gds_sessions" -> "datetime" [];
	"graphdatascience.session.gds_sessions" -> "typing" [];
	"graphdatascience.session.session_sizes" -> "__future__" [];
	"graphdatascience.session.session_sizes" -> "dataclasses" [];
	"graphdatascience.session.session_sizes" -> "enum" [];
	"graphdatascience.session.session_sizes" -> "typing" [];
	"graphdatascience.session.session_info" -> "__future__" [];
	"graphdatascience.session.session_info" -> "dataclasses" [];
	"graphdatascience.session.session_info" -> "datetime" [];
	"graphdatascience.session.session_info" -> "typing" [];
	"graphdatascience.session.aura_api_responses" -> "__future__" [];
	"graphdatascience.session.aura_api_responses" -> "dataclasses" [];
	"graphdatascience.session.aura_api_responses" -> "sys" [];
	"graphdatascience.session.aura_api_responses" -> "datetime" [];
	"graphdatascience.session.aura_api_responses" -> "typing" [];
	"graphdatascience.session.aura_api_responses" -> "pandas" [];
	"pandas" -> "__future__" [];
	"pandas" -> "os" [];
	"pandas" -> "warnings" [];
	"pandas" -> "cmath" [];
	"pandas._libs.writers" -> "numpy" [];
	"pandas._typing" -> "__future__" [];
	"pandas._typing" -> "datetime" [];
	"pandas._typing" -> "os" [];
	"pandas._typing" -> "sys" [];
	"pandas._typing" -> "typing" [];
	"pandas._typing" -> "numpy" [];
	"pandas._typing" -> "typing_extensions" [];
	"typing_extensions" -> "abc" [];
	"typing_extensions" -> "builtins" [];
	"typing_extensions" -> "collections" [];
	"typing_extensions" -> "contextlib" [];
	"typing_extensions" -> "enum" [];
	"typing_extensions" -> "functools" [];
	"typing_extensions" -> "inspect" [];
	"typing_extensions" -> "keyword" [];
	"typing_extensions" -> "operator" [];
	"typing_extensions" -> "sys" [];
	"typing_extensions" -> "types" [];
	"typing_extensions" -> "typing" [];
	"typing_extensions" -> "warnings" [];
	"typing_extensions" -> "_socket" [];
	"asyncio.coroutines" -> "functools" [];
	"asyncio.coroutines" -> "inspect" [];
	"asyncio.coroutines" -> "os" [];
	"asyncio.coroutines" -> "sys" [];
	"asyncio.coroutines" -> "traceback" [];
	"asyncio.coroutines" -> "types" [];
	"asyncio.coroutines" -> "warnings" [];
	"asyncio.log" -> "logging" [];
	"logging" -> "sys" [];
	"logging" -> "os" [];
	"logging" -> "time" [];
	"logging" -> "io" [];
	"logging" -> "re" [];
	"logging" -> "traceback" [];
	"logging" -> "warnings" [];
	"logging" -> "weakref" [];
	"logging" -> "string" [];
	"logging" -> "threading" [];
	"logging" -> "pickle" [];
	"logging" -> "atexit" [];
	"pickle" -> "types" [];
	"pickle" -> "copyreg" [];
	"pickle" -> "itertools" [];
	"pickle" -> "functools" [];
	"pickle" -> "sys" [];
	"pickle" -> "struct" [];
	"pickle" -> "re" [];
	"pickle" -> "io" [];
	"pickle" -> "codecs" [];
	"pickle" -> "_compat_pickle" [];
	"pickle" -> "_pickle" [];
	"pickle" -> "org" [];
	"pickle" -> "pprint" [];
	"pprint" -> "collections" [];
	"pprint" -> "re" [];
	"pprint" -> "sys" [];
	"pprint" -> "types" [];
	"pprint" -> "io" [];
	"pprint" -> "time" [];
	"struct" -> "_struct" [];
	"threading" -> "os" [];
	"threading" -> "sys" [];
	"threading" -> "_thread" [];
	"threading" -> "functools" [];
	"threading" -> "time" [];
	"threading" -> "_weakrefset" [];
	"threading" -> "itertools" [];
	"threading" -> "_collections" [];
	"threading" -> "collections" [];
	"threading" -> "traceback" [];
	"threading" -> "_threading_local" [];
	"_threading_local" -> "weakref" [];
	"_threading_local" -> "contextlib" [];
	"_threading_local" -> "threading" [];
	"string" -> "_string" [];
	"string" -> "re" [];
	"string" -> "collections" [];
	"asyncio.format_helpers" -> "functools" [];
	"asyncio.format_helpers" -> "inspect" [];
	"asyncio.format_helpers" -> "reprlib" [];
	"asyncio.format_helpers" -> "sys" [];
	"asyncio.format_helpers" -> "traceback" [];
	"asyncio.constants" -> "enum" [];
	"asyncio.base_futures" -> "reprlib" [];
	"asyncio.base_futures" -> "_thread" [];
	"asyncio" -> "sys" [];
	"asyncio.unix_events" -> "errno" [];
	"asyncio.unix_events" -> "io" [];
	"asyncio.unix_events" -> "itertools" [];
	"asyncio.unix_events" -> "os" [];
	"asyncio.unix_events" -> "selectors" [];
	"asyncio.unix_events" -> "signal" [];
	"asyncio.unix_events" -> "socket" [];
	"asyncio.unix_events" -> "stat" [];
	"asyncio.unix_events" -> "subprocess" [];
	"asyncio.unix_events" -> "sys" [];
	"asyncio.unix_events" -> "threading" [];
	"asyncio.unix_events" -> "warnings" [];
	"subprocess" -> "builtins" [];
	"subprocess" -> "errno" [];
	"subprocess" -> "io" [];
	"subprocess" -> "os" [];
	"subprocess" -> "time" [];
	"subprocess" -> "signal" [];
	"subprocess" -> "sys" [];
	"subprocess" -> "threading" [];
	"subprocess" -> "warnings" [];
	"subprocess" -> "contextlib" [];
	"subprocess" -> "types" [];
	"subprocess" -> "pwd" [];
	"subprocess" -> "grp" [];
	"subprocess" -> "msvcrt" [];
	"subprocess" -> "_winapi" [];
	"subprocess" -> "_posixsubprocess" [];
	"subprocess" -> "select" [];
	"subprocess" -> "selectors" [];
	"socket" -> "_socket" [];
	"socket" -> "os" [];
	"socket" -> "sys" [];
	"socket" -> "io" [];
	"socket" -> "selectors" [];
	"socket" -> "enum" [];
	"socket" -> "errno" [];
	"socket" -> "array" [];
	"signal" -> "_signal" [];
	"signal" -> "functools" [];
	"signal" -> "enum" [];
	"selectors" -> "abc" [];
	"selectors" -> "collections" [];
	"selectors" -> "math" [];
	"selectors" -> "select" [];
	"selectors" -> "sys" [];
	"asyncio.windows_events" -> "_overlapped" [];
	"asyncio.windows_events" -> "_winapi" [];
	"asyncio.windows_events" -> "errno" [];
	"asyncio.windows_events" -> "math" [];
	"asyncio.windows_events" -> "msvcrt" [];
	"asyncio.windows_events" -> "socket" [];
	"asyncio.windows_events" -> "struct" [];
	"asyncio.windows_events" -> "time" [];
	"asyncio.windows_events" -> "weakref" [];
	"asyncio.windows_utils" -> "sys" [];
	"asyncio.windows_utils" -> "_winapi" [];
	"asyncio.windows_utils" -> "itertools" [];
	"asyncio.windows_utils" -> "msvcrt" [];
	"asyncio.windows_utils" -> "os" [];
	"asyncio.windows_utils" -> "subprocess" [];
	"asyncio.windows_utils" -> "tempfile" [];
	"asyncio.windows_utils" -> "warnings" [];
	"tempfile" -> "functools" [];
	"tempfile" -> "warnings" [];
	"tempfile" -> "io" [];
	"tempfile" -> "os" [];
	"tempfile" -> "shutil" [];
	"tempfile" -> "errno" [];
	"tempfile" -> "random" [];
	"tempfile" -> "sys" [];
	"tempfile" -> "types" [];
	"tempfile" -> "weakref" [];
	"tempfile" -> "_thread" [];
	"random" -> "warnings" [];
	"random" -> "math" [];
	"random" -> "os" [];
	"random" -> "_collections_abc" [];
	"random" -> "itertools" [];
	"random" -> "bisect" [];
	"random" -> "_random" [];
	"random" -> "_sha512" [];
	"random" -> "hashlib" [];
	"random" -> "statistics" [];
	"random" -> "time" [];
	"statistics" -> "math" [];
	"statistics" -> "numbers" [];
	"statistics" -> "random" [];
	"statistics" -> "fractions" [];
	"statistics" -> "decimal" [];
	"statistics" -> "itertools" [];
	"statistics" -> "bisect" [];
	"statistics" -> "operator" [];
	"statistics" -> "collections" [];
	"statistics" -> "_statistics" [];
	"decimal" -> "_decimal" [];
	"decimal" -> "_pydecimal" [];
	"_pydecimal" -> "math" [];
	"_pydecimal" -> "numbers" [];
	"_pydecimal" -> "sys" [];
	"_pydecimal" -> "collections" [];
	"_pydecimal" -> "contextvars" [];
	"_pydecimal" -> "re" [];
	"_pydecimal" -> "locale" [];
	"_pydecimal" -> "itertools" [];
	"contextvars" -> "_contextvars" [];
	"fractions" -> "decimal" [];
	"fractions" -> "math" [];
	"fractions" -> "numbers" [];
	"fractions" -> "operator" [];
	"fractions" -> "re" [];
	"fractions" -> "sys" [];
	"numbers" -> "abc" [];
	"hashlib" -> "_sha1" [];
	"hashlib" -> "_md5" [];
	"hashlib" -> "_sha256" [];
	"hashlib" -> "_sha512" [];
	"hashlib" -> "_blake2" [];
	"hashlib" -> "_sha3" [];
	"hashlib" -> "_hashlib" [];
	"hashlib" -> "logging" [];
	"bisect" -> "_bisect" [];
	"shutil" -> "os" [];
	"shutil" -> "sys" [];
	"shutil" -> "stat" [];
	"shutil" -> "fnmatch" [];
	"shutil" -> "collections" [];
	"shutil" -> "errno" [];
	"shutil" -> "zlib" [];
	"shutil" -> "bz2" [];
	"shutil" -> "lzma" [];
	"shutil" -> "pwd" [];
	"shutil" -> "grp" [];
	"shutil" -> "posix" [];
	"shutil" -> "nt" [];
	"shutil" -> "tarfile" [];
	"shutil" -> "zipfile" [];
	"zipfile" -> "binascii" [];
	"zipfile" -> "io" [];
	"zipfile" -> "itertools" [];
	"zipfile" -> "os" [];
	"zipfile" -> "posixpath" [];
	"zipfile" -> "shutil" [];
	"zipfile" -> "stat" [];
	"zipfile" -> "struct" [];
	"zipfile" -> "sys" [];
	"zipfile" -> "threading" [];
	"zipfile" -> "time" [];
	"zipfile" -> "contextlib" [];
	"zipfile" -> "zlib" [];
	"zipfile" -> "bz2" [];
	"zipfile" -> "lzma" [];
	"zipfile" -> "warnings" [];
	"zipfile" -> "py_compile" [];
	"zipfile" -> "argparse" [];
	"argparse" -> "os" [];
	"argparse" -> "re" [];
	"argparse" -> "sys" [];
	"argparse" -> "gettext" [];
	"argparse" -> "copy" [];
	"argparse" -> "shutil" [];
	"argparse" -> "textwrap" [];
	"argparse" -> "warnings" [];
	"textwrap" -> "re" [];
	"copy" -> "types" [];
	"copy" -> "weakref" [];
	"copy" -> "copyreg" [];
	"copy" -> "'org.python'" [];
	"gettext" -> "os" [];
	"gettext" -> "re" [];
	"gettext" -> "sys" [];
	"gettext" -> "warnings" [];
	"gettext" -> "locale" [];
	"gettext" -> "builtins" [];
	"gettext" -> "struct" [];
	"gettext" -> "errno" [];
	"gettext" -> "copy" [];
	"py_compile" -> "enum" [];
	"py_compile" -> "os" [];
	"py_compile" -> "os.path" [];
	"py_compile" -> "sys" [];
	"py_compile" -> "traceback" [];
	"os.path" -> "posixpath" [];
	"os.path" -> "os" [];
	"importlib.machinery" -> "_imp" [];
	"importlib" -> "_imp" [];
	"importlib" -> "sys" [];
	"importlib" -> "_frozen_importlib" [];
	"importlib" -> "_frozen_importlib_external" [];
	"importlib" -> "types" [];
	"importlib" -> "warnings" [];
	"importlib._common" -> "os" [];
	"importlib._common" -> "pathlib" [];
	"importlib._common" -> "zipfile" [];
	"importlib._common" -> "tempfile" [];
	"importlib._common" -> "functools" [];
	"importlib._common" -> "contextlib" [];
	"pathlib" -> "fnmatch" [];
	"pathlib" -> "functools" [];
	"pathlib" -> "io" [];
	"pathlib" -> "ntpath" [];
	"pathlib" -> "os" [];
	"pathlib" -> "posixpath" [];
	"pathlib" -> "re" [];
	"pathlib" -> "sys" [];
	"pathlib" -> "_collections_abc" [];
	"pathlib" -> "errno" [];
	"pathlib" -> "operator" [];
	"pathlib" -> "stat" [];
	"pathlib" -> "nt" [];
	"pathlib" -> "pwd" [];
	"pathlib" -> "grp" [];
	"urllib.parse" -> "re" [];
	"urllib.parse" -> "sys" [];
	"urllib.parse" -> "types" [];
	"urllib.parse" -> "collections" [];
	"urllib.parse" -> "warnings" [];
	"urllib.parse" -> "unicodedata" [];
	"importlib._bootstrap" -> "_frozen_importlib_external" [];
	"importlib._bootstrap_external" -> "_imp" [];
	"importlib._bootstrap_external" -> "_io" [];
	"importlib._bootstrap_external" -> "sys" [];
	"importlib._bootstrap_external" -> "_warnings" [];
	"importlib._bootstrap_external" -> "marshal" [];
	"importlib._bootstrap_external" -> "nt" [];
	"importlib._bootstrap_external" -> "winreg" [];
	"importlib._bootstrap_external" -> "posix" [];
	"importlib._bootstrap_external" -> "tokenize" [];
	"importlib.metadata" -> "io" [];
	"importlib.metadata" -> "os" [];
	"importlib.metadata" -> "re" [];
	"importlib.metadata" -> "abc" [];
	"importlib.metadata" -> "csv" [];
	"importlib.metadata" -> "sys" [];
	"importlib.metadata" -> "email" [];
	"importlib.metadata" -> "pathlib" [];
	"importlib.metadata" -> "zipfile" [];
	"importlib.metadata" -> "operator" [];
	"importlib.metadata" -> "functools" [];
	"importlib.metadata" -> "itertools" [];
	"importlib.metadata" -> "posixpath" [];
	"importlib.metadata" -> "collections" [];
	"importlib.metadata" -> "configparser" [];
	"importlib.metadata" -> "contextlib" [];
	"importlib.metadata" -> "pep517" [];
	"importlib.abc" -> "_frozen_importlib" [];
	"importlib.abc" -> "_frozen_importlib_external" [];
	"importlib.abc" -> "abc" [];
	"importlib.abc" -> "warnings" [];
	"importlib.abc" -> "typing" [];
	"configparser" -> "collections" [];
	"configparser" -> "functools" [];
	"configparser" -> "io" [];
	"configparser" -> "itertools" [];
	"configparser" -> "os" [];
	"configparser" -> "re" [];
	"configparser" -> "sys" [];
	"configparser" -> "warnings" [];
	"email.parser" -> "io" [];
	"email._policybase" -> "abc" [];
	"email.utils" -> "os" [];
	"email.utils" -> "re" [];
	"email.utils" -> "time" [];
	"email.utils" -> "random" [];
	"email.utils" -> "socket" [];
	"email.utils" -> "datetime" [];
	"email._parseaddr" -> "time" [];
	"email._parseaddr" -> "calendar" [];
	"calendar" -> "sys" [];
	"calendar" -> "datetime" [];
	"calendar" -> "locale" [];
	"calendar" -> "itertools" [];
	"calendar" -> "argparse" [];
	"email.feedparser" -> "re" [];
	"email.feedparser" -> "collections" [];
	"email.feedparser" -> "io" [];
	"email.message" -> "re" [];
	"email.message" -> "uu" [];
	"email.message" -> "quopri" [];
	"email.message" -> "io" [];
	"email.policy" -> "re" [];
	"email.policy" -> "sys" [];
	"email.contentmanager" -> "binascii" [];
	"email.quoprimime" -> "re" [];
	"email.quoprimime" -> "string" [];
	"email.headerregistry" -> "types" [];
	"email.iterators" -> "sys" [];
	"email.iterators" -> "io" [];
	"email.generator" -> "re" [];
	"email.generator" -> "sys" [];
	"email.generator" -> "time" [];
	"email.generator" -> "random" [];
	"email.generator" -> "copy" [];
	"email.generator" -> "io" [];
	"email._encoded_words" -> "re" [];
	"email._encoded_words" -> "base64" [];
	"email._encoded_words" -> "binascii" [];
	"email._encoded_words" -> "functools" [];
	"email._encoded_words" -> "string" [];
	"base64" -> "re" [];
	"base64" -> "struct" [];
	"base64" -> "binascii" [];
	"base64" -> "sys" [];
	"base64" -> "getopt" [];
	"getopt" -> "os" [];
	"getopt" -> "gettext" [];
	"getopt" -> "sys" [];
	"quopri" -> "binascii" [];
	"quopri" -> "io" [];
	"quopri" -> "sys" [];
	"quopri" -> "getopt" [];
	"uu" -> "binascii" [];
	"uu" -> "os" [];
	"uu" -> "sys" [];
	"uu" -> "optparse" [];
	"optparse" -> "sys" [];
	"optparse" -> "os" [];
	"optparse" -> "textwrap" [];
	"optparse" -> "gettext" [];
	"email._header_value_parser" -> "re" [];
	"email._header_value_parser" -> "sys" [];
	"email._header_value_parser" -> "urllib" [];
	"email._header_value_parser" -> "string" [];
	"email._header_value_parser" -> "operator" [];
	"email.header" -> "re" [];
	"email.header" -> "binascii" [];
	"email.base64mime" -> "base64" [];
	"email.base64mime" -> "binascii" [];
	"email.charset" -> "functools" [];
	"email.encoders" -> "base64" [];
	"email.encoders" -> "quopri" [];
	"csv" -> "re" [];
	"csv" -> "_csv" [];
	"csv" -> "io" [];
	"tokenize" -> "builtins" [];
	"tokenize" -> "codecs" [];
	"tokenize" -> "collections" [];
	"tokenize" -> "io" [];
	"tokenize" -> "itertools" [];
	"tokenize" -> "re" [];
	"tokenize" -> "sys" [];
	"tokenize" -> "token" [];
	"tokenize" -> "argparse" [];
	"importlib.util" -> "contextlib" [];
	"importlib.util" -> "_imp" [];
	"importlib.util" -> "functools" [];
	"importlib.util" -> "sys" [];
	"importlib.util" -> "types" [];
	"importlib.util" -> "warnings" [];
	"tarfile" -> "builtins" [];
	"tarfile" -> "sys" [];
	"tarfile" -> "os" [];
	"tarfile" -> "io" [];
	"tarfile" -> "shutil" [];
	"tarfile" -> "stat" [];
	"tarfile" -> "time" [];
	"tarfile" -> "struct" [];
	"tarfile" -> "copy" [];
	"tarfile" -> "re" [];
	"tarfile" -> "pwd" [];
	"tarfile" -> "grp" [];
	"tarfile" -> "zlib" [];
	"tarfile" -> "bz2" [];
	"tarfile" -> "lzma" [];
	"tarfile" -> "gzip" [];
	"tarfile" -> "argparse" [];
	"gzip" -> "struct" [];
	"gzip" -> "sys" [];
	"gzip" -> "time" [];
	"gzip" -> "os" [];
	"gzip" -> "zlib" [];
	"gzip" -> "builtins" [];
	"gzip" -> "io" [];
	"gzip" -> "_compression" [];
	"gzip" -> "warnings" [];
	"gzip" -> "errno" [];
	"gzip" -> "argparse" [];
	"_compression" -> "io" [];
	"lzma" -> "builtins" [];
	"lzma" -> "io" [];
	"lzma" -> "os" [];
	"lzma" -> "_lzma" [];
	"lzma" -> "_compression" [];
	"bz2" -> "builtins" [];
	"bz2" -> "io" [];
	"bz2" -> "os" [];
	"bz2" -> "_compression" [];
	"bz2" -> "threading" [];
	"bz2" -> "_bz2" [];
	"fnmatch" -> "os" [];
	"fnmatch" -> "posixpath" [];
	"fnmatch" -> "re" [];
	"fnmatch" -> "functools" [];
	"fnmatch" -> "itertools" [];
	"asyncio.selector_events" -> "collections" [];
	"asyncio.selector_events" -> "errno" [];
	"asyncio.selector_events" -> "functools" [];
	"asyncio.selector_events" -> "selectors" [];
	"asyncio.selector_events" -> "socket" [];
	"asyncio.selector_events" -> "warnings" [];
	"asyncio.selector_events" -> "weakref" [];
	"asyncio.selector_events" -> "ssl" [];
	"ssl" -> "sys" [];
	"ssl" -> "os" [];
	"ssl" -> "collections" [];
	"ssl" -> "enum" [];
	"ssl" -> "_ssl" [];
	"ssl" -> "socket" [];
	"ssl" -> "base64" [];
	"ssl" -> "errno" [];
	"ssl" -> "warnings" [];
	"ssl" -> "time" [];
	"ssl" -> "calendar" [];
	"asyncio.proactor_events" -> "io" [];
	"asyncio.proactor_events" -> "os" [];
	"asyncio.proactor_events" -> "socket" [];
	"asyncio.proactor_events" -> "warnings" [];
	"asyncio.proactor_events" -> "signal" [];
	"asyncio.proactor_events" -> "threading" [];
	"asyncio.proactor_events" -> "collections" [];
	"asyncio.base_subprocess" -> "collections" [];
	"asyncio.base_subprocess" -> "subprocess" [];
	"asyncio.base_subprocess" -> "warnings" [];
	"asyncio.threads" -> "functools" [];
	"asyncio.threads" -> "contextvars" [];
	"asyncio.subprocess" -> "subprocess" [];
	"asyncio.subprocess" -> "warnings" [];
	"asyncio.streams" -> "socket" [];
	"asyncio.streams" -> "sys" [];
	"asyncio.streams" -> "warnings" [];
	"asyncio.streams" -> "weakref" [];
	"asyncio.queues" -> "collections" [];
	"asyncio.queues" -> "heapq" [];
	"asyncio.queues" -> "warnings" [];
	"asyncio.base_events" -> "collections" [];
	"asyncio.base_events" -> "functools" [];
	"asyncio.base_events" -> "heapq" [];
	"asyncio.base_events" -> "itertools" [];
	"asyncio.base_events" -> "os" [];
	"asyncio.base_events" -> "socket" [];
	"asyncio.base_events" -> "stat" [];
	"asyncio.base_events" -> "subprocess" [];
	"asyncio.base_events" -> "threading" [];
	"asyncio.base_events" -> "time" [];
	"asyncio.base_events" -> "traceback" [];
	"asyncio.base_events" -> "sys" [];
	"asyncio.base_events" -> "warnings" [];
	"asyncio.base_events" -> "weakref" [];
	"asyncio.base_events" -> "ssl" [];
	"concurrent.futures.thread" -> "itertools" [];
	"concurrent.futures.thread" -> "queue" [];
	"concurrent.futures.thread" -> "threading" [];
	"concurrent.futures.thread" -> "types" [];
	"concurrent.futures.thread" -> "weakref" [];
	"concurrent.futures.thread" -> "os" [];
	"queue" -> "threading" [];
	"queue" -> "types" [];
	"queue" -> "collections" [];
	"queue" -> "heapq" [];
	"queue" -> "time" [];
	"queue" -> "_queue" [];
	"concurrent.futures.process" -> "os" [];
	"concurrent.futures.process" -> "queue" [];
	"concurrent.futures.process" -> "multiprocessing" [];
	"concurrent.futures.process" -> "threading" [];
	"concurrent.futures.process" -> "weakref" [];
	"concurrent.futures.process" -> "functools" [];
	"concurrent.futures.process" -> "itertools" [];
	"concurrent.futures.process" -> "sys" [];
	"concurrent.futures.process" -> "traceback" [];
	"multiprocessing.queues" -> "sys" [];
	"multiprocessing.queues" -> "os" [];
	"multiprocessing.queues" -> "threading" [];
	"multiprocessing.queues" -> "collections" [];
	"multiprocessing.queues" -> "time" [];
	"multiprocessing.queues" -> "types" [];
	"multiprocessing.queues" -> "weakref" [];
	"multiprocessing.queues" -> "errno" [];
	"multiprocessing.queues" -> "queue" [];
	"multiprocessing.queues" -> "_multiprocessing" [];
	"multiprocessing.queues" -> "traceback" [];
	"multiprocessing.synchronize" -> "threading" [];
	"multiprocessing.synchronize" -> "sys" [];
	"multiprocessing.synchronize" -> "tempfile" [];
	"multiprocessing.synchronize" -> "_multiprocessing" [];
	"multiprocessing.synchronize" -> "time" [];
	"multiprocessing.synchronize" -> "struct" [];
	"multiprocessing.heap" -> "bisect" [];
	"multiprocessing.heap" -> "collections" [];
	"multiprocessing.heap" -> "mmap" [];
	"multiprocessing.heap" -> "os" [];
	"multiprocessing.heap" -> "sys" [];
	"multiprocessing.heap" -> "tempfile" [];
	"multiprocessing.heap" -> "threading" [];
	"multiprocessing.heap" -> "_winapi" [];
	"multiprocessing.resource_tracker" -> "os" [];
	"multiprocessing.resource_tracker" -> "signal" [];
	"multiprocessing.resource_tracker" -> "sys" [];
	"multiprocessing.resource_tracker" -> "threading" [];
	"multiprocessing.resource_tracker" -> "warnings" [];
	"multiprocessing.resource_tracker" -> "_multiprocessing" [];
	"multiprocessing.resource_tracker" -> "_posixshmem" [];
	"multiprocessing.spawn" -> "os" [];
	"multiprocessing.spawn" -> "sys" [];
	"multiprocessing.spawn" -> "runpy" [];
	"multiprocessing.spawn" -> "types" [];
	"multiprocessing.spawn" -> "msvcrt" [];
	"multiprocessing.spawn" -> "_winapi" [];
	"runpy" -> "sys" [];
	"runpy" -> "io" [];
	"runpy" -> "types" [];
	"runpy" -> "os" [];
	"runpy" -> "pkgutil" [];
	"runpy" -> "warnings" [];
	"pkgutil" -> "collections" [];
	"pkgutil" -> "functools" [];
	"pkgutil" -> "importlib" [];
	"pkgutil" -> "os" [];
	"pkgutil" -> "os.path" [];
	"pkgutil" -> "re" [];
	"pkgutil" -> "sys" [];
	"pkgutil" -> "types" [];
	"pkgutil" -> "warnings" [];
	"pkgutil" -> "marshal" [];
	"pkgutil" -> "inspect" [];
	"pkgutil" -> "zipimport" [];
	"multiprocessing.process" -> "os" [];
	"multiprocessing.process" -> "sys" [];
	"multiprocessing.process" -> "signal" [];
	"multiprocessing.process" -> "itertools" [];
	"multiprocessing.process" -> "threading" [];
	"multiprocessing.process" -> "_weakrefset" [];
	"multiprocessing.process" -> "traceback" [];
	"multiprocessing.util" -> "os" [];
	"multiprocessing.util" -> "itertools" [];
	"multiprocessing.util" -> "sys" [];
	"multiprocessing.util" -> "weakref" [];
	"multiprocessing.util" -> "atexit" [];
	"multiprocessing.util" -> "threading" [];
	"multiprocessing.util" -> "subprocess" [];
	"multiprocessing.util" -> "logging" [];
	"multiprocessing.util" -> "shutil" [];
	"multiprocessing.util" -> "tempfile" [];
	"multiprocessing.util" -> "traceback" [];
	"multiprocessing.util" -> "_posixsubprocess" [];
	"multiprocessing.forkserver" -> "errno" [];
	"multiprocessing.forkserver" -> "os" [];
	"multiprocessing.forkserver" -> "selectors" [];
	"multiprocessing.forkserver" -> "signal" [];
	"multiprocessing.forkserver" -> "socket" [];
	"multiprocessing.forkserver" -> "struct" [];
	"multiprocessing.forkserver" -> "sys" [];
	"multiprocessing.forkserver" -> "threading" [];
	"multiprocessing.forkserver" -> "warnings" [];
	"multiprocessing.context" -> "os" [];
	"multiprocessing.context" -> "sys" [];
	"multiprocessing.context" -> "threading" [];
	"multiprocessing.popen_spawn_win32" -> "os" [];
	"multiprocessing.popen_spawn_win32" -> "msvcrt" [];
	"multiprocessing.popen_spawn_win32" -> "signal" [];
	"multiprocessing.popen_spawn_win32" -> "sys" [];
	"multiprocessing.popen_spawn_win32" -> "_winapi" [];
	"multiprocessing.popen_forkserver" -> "io" [];
	"multiprocessing.popen_forkserver" -> "os" [];
	"multiprocessing.popen_spawn_posix" -> "io" [];
	"multiprocessing.popen_spawn_posix" -> "os" [];
	"multiprocessing.popen_fork" -> "os" [];
	"multiprocessing.popen_fork" -> "signal" [];
	"multiprocessing.sharedctypes" -> "ctypes" [];
	"multiprocessing.sharedctypes" -> "weakref" [];
	"ctypes" -> "os" [];
	"ctypes" -> "sys" [];
	"ctypes" -> "types" [];
	"ctypes" -> "_ctypes" [];
	"ctypes" -> "struct" [];
	"ctypes" -> "nt" [];
	"ctypes._endian" -> "sys" [];
	"multiprocessing.pool" -> "collections" [];
	"multiprocessing.pool" -> "itertools" [];
	"multiprocessing.pool" -> "os" [];
	"multiprocessing.pool" -> "queue" [];
	"multiprocessing.pool" -> "threading" [];
	"multiprocessing.pool" -> "time" [];
	"multiprocessing.pool" -> "traceback" [];
	"multiprocessing.pool" -> "types" [];
	"multiprocessing.pool" -> "warnings" [];
	"multiprocessing.dummy" -> "threading" [];
	"multiprocessing.dummy" -> "sys" [];
	"multiprocessing.dummy" -> "weakref" [];
	"multiprocessing.dummy" -> "array" [];
	"multiprocessing.dummy" -> "queue" [];
	"multiprocessing.dummy.connection" -> "queue" [];
	"multiprocessing.managers" -> "sys" [];
	"multiprocessing.managers" -> "threading" [];
	"multiprocessing.managers" -> "signal" [];
	"multiprocessing.managers" -> "array" [];
	"multiprocessing.managers" -> "queue" [];
	"multiprocessing.managers" -> "time" [];
	"multiprocessing.managers" -> "types" [];
	"multiprocessing.managers" -> "os" [];
	"multiprocessing.managers" -> "traceback" [];
	"multiprocessing.shared_memory" -> "functools" [];
	"multiprocessing.shared_memory" -> "mmap" [];
	"multiprocessing.shared_memory" -> "os" [];
	"multiprocessing.shared_memory" -> "errno" [];
	"multiprocessing.shared_memory" -> "struct" [];
	"multiprocessing.shared_memory" -> "secrets" [];
	"multiprocessing.shared_memory" -> "types" [];
	"multiprocessing.shared_memory" -> "_winapi" [];
	"multiprocessing.shared_memory" -> "_posixshmem" [];
	"secrets" -> "base64" [];
	"secrets" -> "binascii" [];
	"secrets" -> "hmac" [];
	"secrets" -> "random" [];
	"hmac" -> "warnings" [];
	"hmac" -> "_hashlib" [];
	"hmac" -> "_operator" [];
	"hmac" -> "hashlib" [];
	"multiprocessing.reduction" -> "abc" [];
	"multiprocessing.reduction" -> "copyreg" [];
	"multiprocessing.reduction" -> "functools" [];
	"multiprocessing.reduction" -> "io" [];
	"multiprocessing.reduction" -> "os" [];
	"multiprocessing.reduction" -> "pickle" [];
	"multiprocessing.reduction" -> "socket" [];
	"multiprocessing.reduction" -> "sys" [];
	"multiprocessing.reduction" -> "_winapi" [];
	"multiprocessing.reduction" -> "array" [];
	"multiprocessing.resource_sharer" -> "os" [];
	"multiprocessing.resource_sharer" -> "signal" [];
	"multiprocessing.resource_sharer" -> "socket" [];
	"multiprocessing.resource_sharer" -> "sys" [];
	"multiprocessing.resource_sharer" -> "threading" [];
	"multiprocessing.connection" -> "io" [];
	"multiprocessing.connection" -> "os" [];
	"multiprocessing.connection" -> "sys" [];
	"multiprocessing.connection" -> "socket" [];
	"multiprocessing.connection" -> "struct" [];
	"multiprocessing.connection" -> "time" [];
	"multiprocessing.connection" -> "tempfile" [];
	"multiprocessing.connection" -> "itertools" [];
	"multiprocessing.connection" -> "_multiprocessing" [];
	"multiprocessing.connection" -> "_winapi" [];
	"multiprocessing.connection" -> "hmac" [];
	"multiprocessing.connection" -> "selectors" [];
	"xmlrpc.client" -> "base64" [];
	"xmlrpc.client" -> "sys" [];
	"xmlrpc.client" -> "time" [];
	"xmlrpc.client" -> "datetime" [];
	"xmlrpc.client" -> "decimal" [];
	"xmlrpc.client" -> "errno" [];
	"xmlrpc.client" -> "io" [];
	"xmlrpc.client" -> "gzip" [];
	"xml.parsers.expat" -> "sys" [];
	"xml.parsers.expat" -> "pyexpat" [];
	"xml.sax.expatreader" -> "sys" [];
	"xml.sax.expatreader" -> "_weakref" [];
	"xml.sax.expatreader" -> "weakref" [];
	"xml.sax.saxutils" -> "os" [];
	"xml.sax.saxutils" -> "io" [];
	"xml.sax.saxutils" -> "codecs" [];
	"xml.sax.saxutils" -> "sys" [];
	"urllib.request" -> "base64" [];
	"urllib.request" -> "bisect" [];
	"urllib.request" -> "email" [];
	"urllib.request" -> "hashlib" [];
	"urllib.request" -> "io" [];
	"urllib.request" -> "os" [];
	"urllib.request" -> "posixpath" [];
	"urllib.request" -> "re" [];
	"urllib.request" -> "socket" [];
	"urllib.request" -> "string" [];
	"urllib.request" -> "sys" [];
	"urllib.request" -> "time" [];
	"urllib.request" -> "tempfile" [];
	"urllib.request" -> "contextlib" [];
	"urllib.request" -> "warnings" [];
	"urllib.request" -> "ssl" [];
	"urllib.request" -> "mimetypes" [];
	"urllib.request" -> "ftplib" [];
	"urllib.request" -> "nturl2path" [];
	"urllib.request" -> "getpass" [];
	"urllib.request" -> "fnmatch" [];
	"urllib.request" -> "_scproxy" [];
	"urllib.request" -> "winreg" [];
	"getpass" -> "contextlib" [];
	"getpass" -> "io" [];
	"getpass" -> "os" [];
	"getpass" -> "sys" [];
	"getpass" -> "warnings" [];
	"getpass" -> "pwd" [];
	"getpass" -> "termios" [];
	"getpass" -> "msvcrt" [];
	"nturl2path" -> "string" [];
	"ftplib" -> "sys" [];
	"ftplib" -> "socket" [];
	"ftplib" -> "ssl" [];
	"ftplib" -> "warnings" [];
	"ftplib" -> "re" [];
	"ftplib" -> "netrc" [];
	"netrc" -> "os" [];
	"netrc" -> "shlex" [];
	"netrc" -> "stat" [];
	"netrc" -> "pwd" [];
	"shlex" -> "os" [];
	"shlex" -> "re" [];
	"shlex" -> "sys" [];
	"shlex" -> "collections" [];
	"shlex" -> "io" [];
	"shlex" -> "warnings" [];
	"mimetypes" -> "os" [];
	"mimetypes" -> "sys" [];
	"mimetypes" -> "posixpath" [];
	"mimetypes" -> "winreg" [];
	"mimetypes" -> "getopt" [];
	"http.cookiejar" -> "os" [];
	"http.cookiejar" -> "copy" [];
	"http.cookiejar" -> "datetime" [];
	"http.cookiejar" -> "re" [];
	"http.cookiejar" -> "time" [];
	"http.cookiejar" -> "threading" [];
	"http.cookiejar" -> "calendar" [];
	"http.cookiejar" -> "logging" [];
	"http.cookiejar" -> "io" [];
	"http.cookiejar" -> "warnings" [];
	"http.cookiejar" -> "traceback" [];
	"http" -> "enum" [];
	"urllib.response" -> "tempfile" [];
	"xml.sax" -> "io" [];
	"xml.sax" -> "os" [];
	"xml.sax" -> "sys" [];
	"xml.sax" -> "'org.python'" [];
	"xml.sax._exceptions" -> "sys" [];
	"xml.sax._exceptions" -> "'java.lang'" [];
	"http.client" -> "io" [];
	"http.client" -> "re" [];
	"http.client" -> "socket" [];
	"http.client" -> "ssl" [];
	"http.client" -> "warnings" [];
	"multiprocessing" -> "sys" [];
	"concurrent.futures._base" -> "collections" [];
	"concurrent.futures._base" -> "logging" [];
	"concurrent.futures._base" -> "threading" [];
	"concurrent.futures._base" -> "time" [];
	"concurrent.futures._base" -> "types" [];
	"asyncio.trsock" -> "socket" [];
	"asyncio.trsock" -> "warnings" [];
	"asyncio.staggered" -> "contextlib" [];
	"asyncio.staggered" -> "typing" [];
	"asyncio.tasks" -> "contextvars" [];
	"asyncio.tasks" -> "functools" [];
	"asyncio.tasks" -> "inspect" [];
	"asyncio.tasks" -> "itertools" [];
	"asyncio.tasks" -> "types" [];
	"asyncio.tasks" -> "warnings" [];
	"asyncio.tasks" -> "weakref" [];
	"asyncio.tasks" -> "_asyncio" [];
	"asyncio.base_tasks" -> "linecache" [];
	"asyncio.base_tasks" -> "traceback" [];
	"asyncio.locks" -> "collections" [];
	"asyncio.locks" -> "warnings" [];
	"asyncio.sslproto" -> "collections" [];
	"asyncio.sslproto" -> "warnings" [];
	"asyncio.sslproto" -> "ssl" [];
	"asyncio.futures" -> "contextvars" [];
	"asyncio.futures" -> "logging" [];
	"asyncio.futures" -> "sys" [];
	"asyncio.futures" -> "_asyncio" [];
	"asyncio.events" -> "contextvars" [];
	"asyncio.events" -> "os" [];
	"asyncio.events" -> "socket" [];
	"asyncio.events" -> "subprocess" [];
	"asyncio.events" -> "sys" [];
	"asyncio.events" -> "threading" [];
	"asyncio.events" -> "_asyncio" [];
	"inspect" -> "abc" [];
	"inspect" -> "ast" [];
	"inspect" -> "dis" [];
	"inspect" -> "enum" [];
	"inspect" -> "itertools" [];
	"inspect" -> "linecache" [];
	"inspect" -> "os" [];
	"inspect" -> "re" [];
	"inspect" -> "sys" [];
	"inspect" -> "tokenize" [];
	"inspect" -> "token" [];
	"inspect" -> "types" [];
	"inspect" -> "warnings" [];
	"inspect" -> "functools" [];
	"inspect" -> "builtins" [];
	"inspect" -> "operator" [];
	"inspect" -> "collections" [];
	"inspect" -> "argparse" [];
	"inspect" -> "importlib" [];
	"dis" -> "sys" [];
	"dis" -> "types" [];
	"dis" -> "collections" [];
	"dis" -> "io" [];
	"dis" -> "opcode" [];
	"dis" -> "argparse" [];
	"opcode" -> "_opcode" [];
	"ast" -> "sys" [];
	"ast" -> "_ast" [];
	"ast" -> "contextlib" [];
	"ast" -> "enum" [];
	"ast" -> "inspect" [];
	"ast" -> "collections" [];
	"ast" -> "warnings" [];
	"ast" -> "argparse" [];
	"contextlib" -> "abc" [];
	"contextlib" -> "sys" [];
	"contextlib" -> "_collections_abc" [];
	"contextlib" -> "collections" [];
	"contextlib" -> "functools" [];
	"contextlib" -> "types" [];
	"pandas.tseries.holiday" -> "__future__" [];
	"pandas.tseries.holiday" -> "datetime" [];
	"pandas.tseries.holiday" -> "warnings" [];
	"pandas.tseries.holiday" -> "numpy" [];
	"pandas.tseries.holiday" -> "pandas" [];
	"dateutil.relativedelta" -> "datetime" [];
	"dateutil.relativedelta" -> "calendar" [];
	"dateutil.relativedelta" -> "operator" [];
	"dateutil.relativedelta" -> "math" [];
	"dateutil.relativedelta" -> "six" [];
	"dateutil.relativedelta" -> "warnings" [];
	"dateutil" -> "sys" [];
	"dateutil" -> "importlib" [];
	"dateutil.rrule" -> "calendar" [];
	"dateutil.rrule" -> "datetime" [];
	"dateutil.rrule" -> "heapq" [];
	"dateutil.rrule" -> "itertools" [];
	"dateutil.rrule" -> "re" [];
	"dateutil.rrule" -> "sys" [];
	"dateutil.rrule" -> "functools" [];
	"dateutil.rrule" -> "warnings" [];
	"dateutil.rrule" -> "six" [];
	"dateutil.rrule" -> "six.moves" [];
	"dateutil.rrule" -> "math" [];
	"dateutil.rrule" -> "fractions" [];
	"dateutil.parser" -> "functools" [];
	"dateutil.parser" -> "warnings" [];
	"dateutil.parser.isoparser" -> "datetime" [];
	"dateutil.parser.isoparser" -> "calendar" [];
	"dateutil.parser.isoparser" -> "dateutil" [];
	"dateutil.parser.isoparser" -> "functools" [];
	"dateutil.parser.isoparser" -> "re" [];
	"dateutil.parser.isoparser" -> "six" [];
	"dateutil.parser._parser" -> "__future__" [];
	"dateutil.parser._parser" -> "datetime" [];
	"dateutil.parser._parser" -> "re" [];
	"dateutil.parser._parser" -> "string" [];
	"dateutil.parser._parser" -> "time" [];
	"dateutil.parser._parser" -> "warnings" [];
	"dateutil.parser._parser" -> "calendar" [];
	"dateutil.parser._parser" -> "io" [];
	"dateutil.parser._parser" -> "six" [];
	"dateutil.parser._parser" -> "decimal" [];
	"dateutil.parser._parser" -> "dateutil" [];
	"six.moves._thread" -> "_thread" [];
	"six.moves" -> "six" [];
	"dateutil.tz.tz" -> "datetime" [];
	"dateutil.tz.tz" -> "struct" [];
	"dateutil.tz.tz" -> "time" [];
	"dateutil.tz.tz" -> "sys" [];
	"dateutil.tz.tz" -> "os" [];
	"dateutil.tz.tz" -> "bisect" [];
	"dateutil.tz.tz" -> "weakref" [];
	"dateutil.tz.tz" -> "collections" [];
	"dateutil.tz.tz" -> "six" [];
	"dateutil.tz.tz" -> "six.moves" [];
	"dateutil.tz.tz" -> "warnings" [];
	"dateutil.tz.tz" -> "dateutil" [];
	"dateutil.tz.tz" -> "contextlib" [];
	"dateutil.zoneinfo" -> "warnings" [];
	"dateutil.zoneinfo" -> "json" [];
	"dateutil.zoneinfo" -> "tarfile" [];
	"dateutil.zoneinfo" -> "pkgutil" [];
	"dateutil.zoneinfo" -> "io" [];
	"json" -> "codecs" [];
	"json.encoder" -> "re" [];
	"json.encoder" -> "_json" [];
	"json.decoder" -> "re" [];
	"json.decoder" -> "_json" [];
	"json.scanner" -> "re" [];
	"json.scanner" -> "_json" [];
	"dateutil.tz.win" -> "datetime" [];
	"dateutil.tz.win" -> "struct" [];
	"dateutil.tz.win" -> "six.moves" [];
	"dateutil.tz.win" -> "six" [];
	"dateutil.tz.win" -> "ctypes" [];
	"dateutil.tz._factories" -> "datetime" [];
	"dateutil.tz._factories" -> "weakref" [];
	"dateutil.tz._factories" -> "collections" [];
	"dateutil.tz._factories" -> "six.moves" [];
	"dateutil.tz._common" -> "six" [];
	"dateutil.tz._common" -> "functools" [];
	"dateutil.tz._common" -> "datetime" [];
	"dateutil.easter" -> "datetime" [];
	"six" -> "__future__" [];
	"six" -> "functools" [];
	"six" -> "itertools" [];
	"six" -> "operator" [];
	"six" -> "sys" [];
	"six" -> "types" [];
	"six" -> "struct" [];
	"six" -> "io" [];
	"six" -> "StringIO" [];
	"pandas.io.formats.format" -> "__future__" [];
	"pandas.io.formats.format" -> "contextlib" [];
	"pandas.io.formats.format" -> "csv" [];
	"pandas.io.formats.format" -> "decimal" [];
	"pandas.io.formats.format" -> "functools" [];
	"pandas.io.formats.format" -> "io" [];
	"pandas.io.formats.format" -> "math" [];
	"pandas.io.formats.format" -> "re" [];
	"pandas.io.formats.format" -> "shutil" [];
	"pandas.io.formats.format" -> "typing" [];
	"pandas.io.formats.format" -> "numpy" [];
	"pandas.io.formats.format" -> "pandas" [];
	"pandas.io.formats.csvs" -> "__future__" [];
	"pandas.io.formats.csvs" -> "csv" [];
	"pandas.io.formats.csvs" -> "os" [];
	"pandas.io.formats.csvs" -> "typing" [];
	"pandas.io.formats.csvs" -> "numpy" [];
	"pandas.core.dtypes.generic" -> "__future__" [];
	"pandas.core.dtypes.generic" -> "typing" [];
	"pandas.core.dtypes.generic" -> "pandas" [];
	"pandas.core.arraylike" -> "__future__" [];
	"pandas.core.arraylike" -> "operator" [];
	"pandas.core.arraylike" -> "typing" [];
	"pandas.core.arraylike" -> "numpy" [];
	"pandas.core.ops.common" -> "__future__" [];
	"pandas.core.ops.common" -> "functools" [];
	"pandas.core.ops.common" -> "typing" [];
	"pandas.core.ops" -> "__future__" [];
	"pandas.core.ops.mask_ops" -> "__future__" [];
	"pandas.core.ops.mask_ops" -> "numpy" [];
	"pandas.core.ops.invalid" -> "__future__" [];
	"pandas.core.ops.invalid" -> "operator" [];
	"pandas.core.ops.invalid" -> "typing" [];
	"pandas.core.ops.invalid" -> "numpy" [];
	"pandas.core.ops.docstrings" -> "__future__" [];
	"pandas.core.ops.array_ops" -> "__future__" [];
	"pandas.core.ops.array_ops" -> "datetime" [];
	"pandas.core.ops.array_ops" -> "functools" [];
	"pandas.core.ops.array_ops" -> "operator" [];
	"pandas.core.ops.array_ops" -> "typing" [];
	"pandas.core.ops.array_ops" -> "warnings" [];
	"pandas.core.ops.array_ops" -> "numpy" [];
	"pandas.core.ops.dispatch" -> "__future__" [];
	"pandas.core.ops.dispatch" -> "typing" [];
	"pandas.core.computation.expressions" -> "__future__" [];
	"pandas.core.computation.expressions" -> "operator" [];
	"pandas.core.computation.expressions" -> "typing" [];
	"pandas.core.computation.expressions" -> "warnings" [];
	"pandas.core.computation.expressions" -> "numpy" [];
	"pandas.core.computation.expressions" -> "numexpr" [];
	"pandas.core.computation.check" -> "__future__" [];
	"pandas.compat._optional" -> "__future__" [];
	"pandas.compat._optional" -> "importlib" [];
	"pandas.compat._optional" -> "sys" [];
	"pandas.compat._optional" -> "typing" [];
	"pandas.compat._optional" -> "warnings" [];
	"pandas.compat._optional" -> "types" [];
	"pandas.util.version" -> "__future__" [];
	"pandas.util.version" -> "collections" [];
	"pandas.util.version" -> "itertools" [];
	"pandas.util.version" -> "re" [];
	"pandas.util.version" -> "typing" [];
	"pandas.util.version" -> "warnings" [];
	"pandas.core.util.hashing" -> "__future__" [];
	"pandas.core.util.hashing" -> "itertools" [];
	"pandas.core.util.hashing" -> "typing" [];
	"pandas.core.util.hashing" -> "numpy" [];
	"pandas.core.util.hashing" -> "pandas" [];
	"pandas.core.computation.expr" -> "__future__" [];
	"pandas.core.computation.expr" -> "ast" [];
	"pandas.core.computation.expr" -> "functools" [];
	"pandas.core.computation.expr" -> "keyword" [];
	"pandas.core.computation.expr" -> "tokenize" [];
	"pandas.core.computation.expr" -> "typing" [];
	"pandas.core.computation.expr" -> "numpy" [];
	"pandas.core.computation.expr" -> "pandas" [];
	"pandas.core.computation.scope" -> "__future__" [];
	"pandas.core.computation.scope" -> "collections" [];
	"pandas.core.computation.scope" -> "datetime" [];
	"pandas.core.computation.scope" -> "inspect" [];
	"pandas.core.computation.scope" -> "io" [];
	"pandas.core.computation.scope" -> "itertools" [];
	"pandas.core.computation.scope" -> "pprint" [];
	"pandas.core.computation.scope" -> "struct" [];
	"pandas.core.computation.scope" -> "sys" [];
	"pandas.core.computation.scope" -> "typing" [];
	"pandas.core.computation.scope" -> "numpy" [];
	"pandas.core.computation.parsing" -> "__future__" [];
	"pandas.core.computation.parsing" -> "io" [];
	"pandas.core.computation.parsing" -> "keyword" [];
	"pandas.core.computation.parsing" -> "token" [];
	"pandas.core.computation.parsing" -> "tokenize" [];
	"pandas.core.computation.parsing" -> "typing" [];
	"pandas.core.computation.ops" -> "__future__" [];
	"pandas.core.computation.ops" -> "datetime" [];
	"pandas.core.computation.ops" -> "functools" [];
	"pandas.core.computation.ops" -> "operator" [];
	"pandas.core.computation.ops" -> "typing" [];
	"pandas.core.computation.ops" -> "numpy" [];
	"pandas.core.computation.eval" -> "__future__" [];
	"pandas.core.computation.eval" -> "tokenize" [];
	"pandas.core.computation.eval" -> "typing" [];
	"pandas.core.computation.eval" -> "warnings" [];
	"pandas.core.computation.engines" -> "__future__" [];
	"pandas.core.computation.engines" -> "abc" [];
	"pandas.core.computation.engines" -> "typing" [];
	"pandas.core.computation.engines" -> "numexpr" [];
	"pandas.core.computation.align" -> "__future__" [];
	"pandas.core.computation.align" -> "functools" [];
	"pandas.core.computation.align" -> "typing" [];
	"pandas.core.computation.align" -> "warnings" [];
	"pandas.core.computation.align" -> "numpy" [];
	"pandas.core.computation.align" -> "pandas" [];
	"pandas.util._validators" -> "__future__" [];
	"pandas.util._validators" -> "typing" [];
	"pandas.util._validators" -> "numpy" [];
	"pandas.core.computation.common" -> "__future__" [];
	"pandas.core.computation.common" -> "functools" [];
	"pandas.core.computation.common" -> "numpy" [];
	"pandas.core.dtypes.cast" -> "__future__" [];
	"pandas.core.dtypes.cast" -> "datetime" [];
	"pandas.core.dtypes.cast" -> "functools" [];
	"pandas.core.dtypes.cast" -> "typing" [];
	"pandas.core.dtypes.cast" -> "warnings" [];
	"pandas.core.dtypes.cast" -> "numpy" [];
	"pandas.core.dtypes.cast" -> "pandas" [];
	"pandas.core.dtypes.cast" -> "pyarrow" [];
	"pandas.core.arrays.timedeltas" -> "__future__" [];
	"pandas.core.arrays.timedeltas" -> "datetime" [];
	"pandas.core.arrays.timedeltas" -> "operator" [];
	"pandas.core.arrays.timedeltas" -> "typing" [];
	"pandas.core.arrays.timedeltas" -> "numpy" [];
	"pandas.core.arrays.timedeltas" -> "pandas" [];
	"pandas.core.arrays.timedeltas" -> "textwrap" [];
	"pandas.core.arrays._ranges" -> "__future__" [];
	"pandas.core.arrays._ranges" -> "typing" [];
	"pandas.core.arrays._ranges" -> "numpy" [];
	"pandas.core.arrays.datetimelike" -> "__future__" [];
	"pandas.core.arrays.datetimelike" -> "datetime" [];
	"pandas.core.arrays.datetimelike" -> "functools" [];
	"pandas.core.arrays.datetimelike" -> "operator" [];
	"pandas.core.arrays.datetimelike" -> "typing" [];
	"pandas.core.arrays.datetimelike" -> "warnings" [];
	"pandas.core.arrays.datetimelike" -> "numpy" [];
	"pandas.core.arrays.datetimelike" -> "pandas" [];
	"pandas.core.groupby.ops" -> "__future__" [];
	"pandas.core.groupby.ops" -> "collections" [];
	"pandas.core.groupby.ops" -> "functools" [];
	"pandas.core.groupby.ops" -> "typing" [];
	"pandas.core.groupby.ops" -> "numpy" [];
	"pandas.core.sorting" -> "__future__" [];
	"pandas.core.sorting" -> "collections" [];
	"pandas.core.sorting" -> "typing" [];
	"pandas.core.sorting" -> "numpy" [];
	"pandas.core.sorting" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "__future__" [];
	"pandas.core.groupby.grouper" -> "typing" [];
	"pandas.core.groupby.grouper" -> "warnings" [];
	"pandas.core.groupby.grouper" -> "numpy" [];
	"pandas.core.groupby.categorical" -> "__future__" [];
	"pandas.core.groupby.categorical" -> "numpy" [];
	"pandas.core.arrays.categorical" -> "__future__" [];
	"pandas.core.arrays.categorical" -> "csv" [];
	"pandas.core.arrays.categorical" -> "functools" [];
	"pandas.core.arrays.categorical" -> "operator" [];
	"pandas.core.arrays.categorical" -> "shutil" [];
	"pandas.core.arrays.categorical" -> "typing" [];
	"pandas.core.arrays.categorical" -> "warnings" [];
	"pandas.core.arrays.categorical" -> "numpy" [];
	"pandas.core.arrays.categorical" -> "pandas" [];
	"pandas.core.dtypes.concat" -> "__future__" [];
	"pandas.core.dtypes.concat" -> "typing" [];
	"pandas.core.dtypes.concat" -> "warnings" [];
	"pandas.core.dtypes.concat" -> "numpy" [];
	"pandas.core.dtypes.concat" -> "pandas" [];
	"pandas.core.dtypes.astype" -> "__future__" [];
	"pandas.core.dtypes.astype" -> "inspect" [];
	"pandas.core.dtypes.astype" -> "typing" [];
	"pandas.core.dtypes.astype" -> "warnings" [];
	"pandas.core.dtypes.astype" -> "numpy" [];
	"pandas.core.strings.object_array" -> "__future__" [];
	"pandas.core.strings.object_array" -> "functools" [];
	"pandas.core.strings.object_array" -> "re" [];
	"pandas.core.strings.object_array" -> "textwrap" [];
	"pandas.core.strings.object_array" -> "typing" [];
	"pandas.core.strings.object_array" -> "unicodedata" [];
	"pandas.core.strings.object_array" -> "numpy" [];
	"pandas.core.strings.object_array" -> "pandas" [];
	"pandas.core.strings.base" -> "__future__" [];
	"pandas.core.strings.base" -> "abc" [];
	"pandas.core.strings.base" -> "typing" [];
	"pandas.core.strings.base" -> "numpy" [];
	"pandas.core.strings.base" -> "re" [];
	"pandas.core.strings.base" -> "pandas" [];
	"pandas.core.accessor" -> "__future__" [];
	"pandas.core.accessor" -> "typing" [];
	"pandas.core.accessor" -> "warnings" [];
	"pandas.core.accessor" -> "pandas" [];
	"pandas.core.groupby.groupby" -> "__future__" [];
	"pandas.core.groupby.groupby" -> "datetime" [];
	"pandas.core.groupby.groupby" -> "functools" [];
	"pandas.core.groupby.groupby" -> "inspect" [];
	"pandas.core.groupby.groupby" -> "textwrap" [];
	"pandas.core.groupby.groupby" -> "typing" [];
	"pandas.core.groupby.groupby" -> "warnings" [];
	"pandas.core.groupby.groupby" -> "numpy" [];
	"pandas.core._numba.kernels.var_" -> "__future__" [];
	"pandas.core._numba.kernels.var_" -> "typing" [];
	"pandas.core._numba.kernels.var_" -> "numba" [];
	"pandas.core._numba.kernels.var_" -> "numpy" [];
	"pandas.core._numba.kernels.shared" -> "__future__" [];
	"pandas.core._numba.kernels.shared" -> "typing" [];
	"pandas.core._numba.kernels.shared" -> "numba" [];
	"pandas.core._numba.kernels.shared" -> "numpy" [];
	"pandas.core._numba.kernels.sum_" -> "__future__" [];
	"pandas.core._numba.kernels.sum_" -> "typing" [];
	"pandas.core._numba.kernels.sum_" -> "numba" [];
	"pandas.core._numba.kernels.sum_" -> "'numba.extending'" [];
	"pandas.core._numba.kernels.sum_" -> "numpy" [];
	"pandas.core._numba.kernels.min_max_" -> "__future__" [];
	"pandas.core._numba.kernels.min_max_" -> "typing" [];
	"pandas.core._numba.kernels.min_max_" -> "numba" [];
	"pandas.core._numba.kernels.min_max_" -> "numpy" [];
	"pandas.core._numba.kernels.mean_" -> "__future__" [];
	"pandas.core._numba.kernels.mean_" -> "typing" [];
	"pandas.core._numba.kernels.mean_" -> "numba" [];
	"pandas.core._numba.kernels.mean_" -> "numpy" [];
	"pandas.core.window.expanding" -> "__future__" [];
	"pandas.core.window.expanding" -> "textwrap" [];
	"pandas.core.window.expanding" -> "typing" [];
	"pandas.core.window.expanding" -> "pandas" [];
	"pandas.core.window.doc" -> "__future__" [];
	"pandas.core.window.doc" -> "textwrap" [];
	"pandas.core.shared_docs" -> "__future__" [];
	"pandas.core.indexers.objects" -> "__future__" [];
	"pandas.core.indexers.objects" -> "datetime" [];
	"pandas.core.indexers.objects" -> "numpy" [];
	"pandas.core.window.ewm" -> "__future__" [];
	"pandas.core.window.ewm" -> "datetime" [];
	"pandas.core.window.ewm" -> "functools" [];
	"pandas.core.window.ewm" -> "textwrap" [];
	"pandas.core.window.ewm" -> "typing" [];
	"pandas.core.window.ewm" -> "numpy" [];
	"pandas.core.window.ewm" -> "pandas" [];
	"pandas.core.window.online" -> "__future__" [];
	"pandas.core.window.online" -> "typing" [];
	"pandas.core.window.online" -> "numpy" [];
	"pandas.core.window.online" -> "numba" [];
	"pandas.core.window.numba_" -> "__future__" [];
	"pandas.core.window.numba_" -> "functools" [];
	"pandas.core.window.numba_" -> "typing" [];
	"pandas.core.window.numba_" -> "numpy" [];
	"pandas.core.window.numba_" -> "numba" [];
	"pandas.core.window.common" -> "__future__" [];
	"pandas.core.window.common" -> "collections" [];
	"pandas.core.window.common" -> "typing" [];
	"pandas.core.window.common" -> "numpy" [];
	"pandas.core.window.common" -> "pandas" [];
	"pandas.core.util.numba_" -> "__future__" [];
	"pandas.core.util.numba_" -> "types" [];
	"pandas.core.util.numba_" -> "typing" [];
	"pandas.core.util.numba_" -> "numpy" [];
	"pandas.core.util.numba_" -> "numba" [];
	"pandas.core.internals.blocks" -> "__future__" [];
	"pandas.core.internals.blocks" -> "functools" [];
	"pandas.core.internals.blocks" -> "inspect" [];
	"pandas.core.internals.blocks" -> "re" [];
	"pandas.core.internals.blocks" -> "typing" [];
	"pandas.core.internals.blocks" -> "warnings" [];
	"pandas.core.internals.blocks" -> "weakref" [];
	"pandas.core.internals.blocks" -> "numpy" [];
	"pandas.core.array_algos.transforms" -> "__future__" [];
	"pandas.core.array_algos.transforms" -> "typing" [];
	"pandas.core.array_algos.transforms" -> "numpy" [];
	"pandas.core.array_algos.replace" -> "__future__" [];
	"pandas.core.array_algos.replace" -> "operator" [];
	"pandas.core.array_algos.replace" -> "re" [];
	"pandas.core.array_algos.replace" -> "typing" [];
	"pandas.core.array_algos.replace" -> "numpy" [];
	"pandas.core.array_algos.quantile" -> "__future__" [];
	"pandas.core.array_algos.quantile" -> "typing" [];
	"pandas.core.array_algos.quantile" -> "numpy" [];
	"pandas.core.array_algos.putmask" -> "__future__" [];
	"pandas.core.array_algos.putmask" -> "typing" [];
	"pandas.core.array_algos.putmask" -> "numpy" [];
	"pandas.core.array_algos.putmask" -> "pandas" [];
	"pandas.core.groupby.indexing" -> "__future__" [];
	"pandas.core.groupby.indexing" -> "typing" [];
	"pandas.core.groupby.indexing" -> "numpy" [];
	"pandas.core.groupby.indexing" -> "pandas" [];
	"pandas.core.arrays.string_arrow" -> "__future__" [];
	"pandas.core.arrays.string_arrow" -> "functools" [];
	"pandas.core.arrays.string_arrow" -> "operator" [];
	"pandas.core.arrays.string_arrow" -> "re" [];
	"pandas.core.arrays.string_arrow" -> "typing" [];
	"pandas.core.arrays.string_arrow" -> "warnings" [];
	"pandas.core.arrays.string_arrow" -> "numpy" [];
	"pandas.core.arrays.string_arrow" -> "pyarrow" [];
	"pandas.core.arrays.string_arrow" -> "pandas" [];
	"pandas.core.arrays.masked" -> "__future__" [];
	"pandas.core.arrays.masked" -> "typing" [];
	"pandas.core.arrays.masked" -> "warnings" [];
	"pandas.core.arrays.masked" -> "numpy" [];
	"pandas.core.arrays.masked" -> "pandas" [];
	"pandas.core.arrays.masked" -> "pyarrow" [];
	"pandas.core.arrays._utils" -> "__future__" [];
	"pandas.core.arrays._utils" -> "typing" [];
	"pandas.core.arrays._utils" -> "numpy" [];
	"pandas.core.array_algos.masked_reductions" -> "__future__" [];
	"pandas.core.array_algos.masked_reductions" -> "typing" [];
	"pandas.core.array_algos.masked_reductions" -> "warnings" [];
	"pandas.core.array_algos.masked_reductions" -> "numpy" [];
	"pandas.core.array_algos.masked_accumulations" -> "__future__" [];
	"pandas.core.array_algos.masked_accumulations" -> "typing" [];
	"pandas.core.array_algos.masked_accumulations" -> "numpy" [];
	"pandas.core.dtypes.base" -> "__future__" [];
	"pandas.core.dtypes.base" -> "typing" [];
	"pandas.core.dtypes.base" -> "numpy" [];
	"pandas.core.dtypes.base" -> "pandas" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "__future__" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "warnings" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "numpy" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "pyarrow" [];
	"pyarrow.compute" -> "collections" [];
	"pyarrow.compute" -> "inspect" [];
	"pyarrow.compute" -> "textwrap" [];
	"pyarrow.compute" -> "warnings" [];
	"pyarrow.vendored.docscrape" -> "inspect" [];
	"pyarrow.vendored.docscrape" -> "textwrap" [];
	"pyarrow.vendored.docscrape" -> "re" [];
	"pyarrow.vendored.docscrape" -> "pydoc" [];
	"pyarrow.vendored.docscrape" -> "warnings" [];
	"pyarrow.vendored.docscrape" -> "collections" [];
	"pyarrow.vendored.docscrape" -> "copy" [];
	"pyarrow.vendored.docscrape" -> "sys" [];
	"pyarrow.vendored.docscrape" -> "sphinx" [];
	"pydoc" -> "builtins" [];
	"pydoc" -> "inspect" [];
	"pydoc" -> "io" [];
	"pydoc" -> "os" [];
	"pydoc" -> "pkgutil" [];
	"pydoc" -> "platform" [];
	"pydoc" -> "re" [];
	"pydoc" -> "sys" [];
	"pydoc" -> "sysconfig" [];
	"pydoc" -> "time" [];
	"pydoc" -> "tokenize" [];
	"pydoc" -> "warnings" [];
	"pydoc" -> "collections" [];
	"pydoc" -> "reprlib" [];
	"pydoc" -> "traceback" [];
	"pydoc" -> "tempfile" [];
	"pydoc" -> "subprocess" [];
	"pydoc" -> "tty" [];
	"pydoc" -> "textwrap" [];
	"pydoc" -> "select" [];
	"pydoc" -> "threading" [];
	"pydoc" -> "webbrowser" [];
	"pydoc" -> "getopt" [];
	"webbrowser" -> "os" [];
	"webbrowser" -> "shlex" [];
	"webbrowser" -> "shutil" [];
	"webbrowser" -> "sys" [];
	"webbrowser" -> "subprocess" [];
	"webbrowser" -> "threading" [];
	"webbrowser" -> "copy" [];
	"webbrowser" -> "glob" [];
	"webbrowser" -> "pwd" [];
	"webbrowser" -> "socket" [];
	"webbrowser" -> "tempfile" [];
	"webbrowser" -> "getopt" [];
	"glob" -> "contextlib" [];
	"glob" -> "os" [];
	"glob" -> "re" [];
	"glob" -> "fnmatch" [];
	"glob" -> "sys" [];
	"http.server" -> "copy" [];
	"http.server" -> "datetime" [];
	"http.server" -> "html" [];
	"http.server" -> "io" [];
	"http.server" -> "mimetypes" [];
	"http.server" -> "os" [];
	"http.server" -> "posixpath" [];
	"http.server" -> "select" [];
	"http.server" -> "shutil" [];
	"http.server" -> "socket" [];
	"http.server" -> "socketserver" [];
	"http.server" -> "sys" [];
	"http.server" -> "time" [];
	"http.server" -> "contextlib" [];
	"http.server" -> "functools" [];
	"http.server" -> "pwd" [];
	"http.server" -> "base64" [];
	"http.server" -> "binascii" [];
	"http.server" -> "subprocess" [];
	"http.server" -> "argparse" [];
	"socketserver" -> "socket" [];
	"socketserver" -> "selectors" [];
	"socketserver" -> "os" [];
	"socketserver" -> "sys" [];
	"socketserver" -> "threading" [];
	"socketserver" -> "io" [];
	"socketserver" -> "time" [];
	"socketserver" -> "traceback" [];
	"html" -> "re" [];
	"tty" -> "termios" [];
	"sysconfig" -> "os" [];
	"sysconfig" -> "sys" [];
	"sysconfig" -> "os.path" [];
	"sysconfig" -> "re" [];
	"sysconfig" -> "pprint" [];
	"sysconfig" -> "types" [];
	"sysconfig" -> "_imp" [];
	"sysconfig" -> "_osx_support" [];
	"sysconfig" -> "warnings" [];
	"sysconfig" -> "_aix_support" [];
	"sysconfig" -> "_sysconfigdata__darwin_darwin" [];
	"_aix_support" -> "sys" [];
	"_aix_support" -> "sysconfig" [];
	"_aix_support" -> "subprocess" [];
	"_aix_support" -> "_bootsubprocess" [];
	"_bootsubprocess" -> "os" [];
	"_osx_support" -> "os" [];
	"_osx_support" -> "re" [];
	"_osx_support" -> "sys" [];
	"_osx_support" -> "contextlib" [];
	"_osx_support" -> "tempfile" [];
	"platform" -> "collections" [];
	"platform" -> "os" [];
	"platform" -> "re" [];
	"platform" -> "sys" [];
	"platform" -> "subprocess" [];
	"platform" -> "functools" [];
	"platform" -> "itertools" [];
	"platform" -> "winreg" [];
	"platform" -> "_winreg" [];
	"platform" -> "plistlib" [];
	"platform" -> "java" [];
	"platform" -> "'java.lang'" [];
	"platform" -> "socket" [];
	"platform" -> "struct" [];
	"platform" -> "vms_lib" [];
	"plistlib" -> "binascii" [];
	"plistlib" -> "codecs" [];
	"plistlib" -> "datetime" [];
	"plistlib" -> "enum" [];
	"plistlib" -> "io" [];
	"plistlib" -> "itertools" [];
	"plistlib" -> "os" [];
	"plistlib" -> "re" [];
	"plistlib" -> "struct" [];
	"pandas.core.arrays.numeric" -> "__future__" [];
	"pandas.core.arrays.numeric" -> "numbers" [];
	"pandas.core.arrays.numeric" -> "typing" [];
	"pandas.core.arrays.numeric" -> "numpy" [];
	"pandas.core.arrays.numeric" -> "pyarrow" [];
	"pandas.core.tools.numeric" -> "__future__" [];
	"pandas.core.tools.numeric" -> "typing" [];
	"pandas.core.tools.numeric" -> "warnings" [];
	"pandas.core.tools.numeric" -> "numpy" [];
	"pandas.core.tools.numeric" -> "pandas" [];
	"pandas.core.arrays.boolean" -> "__future__" [];
	"pandas.core.arrays.boolean" -> "numbers" [];
	"pandas.core.arrays.boolean" -> "typing" [];
	"pandas.core.arrays.boolean" -> "numpy" [];
	"pandas.core.arrays.boolean" -> "pyarrow" [];
	"pandas.core.arrays.arrow.accessors" -> "__future__" [];
	"pandas.core.arrays.arrow.accessors" -> "abc" [];
	"pandas.core.arrays.arrow.accessors" -> "typing" [];
	"pandas.core.arrays.arrow.accessors" -> "pyarrow" [];
	"pandas.core.arrays.arrow.accessors" -> "pandas" [];
	"pandas.core.arrays._arrow_string_mixins" -> "__future__" [];
	"pandas.core.arrays._arrow_string_mixins" -> "typing" [];
	"pandas.core.arrays._arrow_string_mixins" -> "numpy" [];
	"pandas.core.arrays._arrow_string_mixins" -> "pyarrow" [];
	"pandas.core.apply" -> "__future__" [];
	"pandas.core.apply" -> "abc" [];
	"pandas.core.apply" -> "collections" [];
	"pandas.core.apply" -> "functools" [];
	"pandas.core.apply" -> "inspect" [];
	"pandas.core.apply" -> "typing" [];
	"pandas.core.apply" -> "warnings" [];
	"pandas.core.apply" -> "numpy" [];
	"pandas.core.apply" -> "pandas" [];
	"pandas.core._numba.extensions" -> "__future__" [];
	"pandas.core._numba.extensions" -> "contextlib" [];
	"pandas.core._numba.extensions" -> "operator" [];
	"pandas.core._numba.extensions" -> "numba" [];
	"pandas.core._numba.extensions" -> "'numba.core'" [];
	"pandas.core._numba.extensions" -> "numpy" [];
	"pandas.core._numba.extensions" -> "'numba.typed'" [];
	"pandas.core._numba.executor" -> "__future__" [];
	"pandas.core._numba.executor" -> "functools" [];
	"pandas.core._numba.executor" -> "typing" [];
	"pandas.core._numba.executor" -> "numpy" [];
	"pandas.core._numba.executor" -> "numba" [];
	"pandas.core.groupby.numba_" -> "__future__" [];
	"pandas.core.groupby.numba_" -> "functools" [];
	"pandas.core.groupby.numba_" -> "inspect" [];
	"pandas.core.groupby.numba_" -> "typing" [];
	"pandas.core.groupby.numba_" -> "numpy" [];
	"pandas.core.groupby.numba_" -> "numba" [];
	"pandas.core.groupby.base" -> "__future__" [];
	"pandas.core.groupby.base" -> "dataclasses" [];
	"pandas.core.groupby.base" -> "typing" [];
	"pandas.core.arrays.period" -> "__future__" [];
	"pandas.core.arrays.period" -> "datetime" [];
	"pandas.core.arrays.period" -> "operator" [];
	"pandas.core.arrays.period" -> "typing" [];
	"pandas.core.arrays.period" -> "warnings" [];
	"pandas.core.arrays.period" -> "numpy" [];
	"pandas.core.arrays.period" -> "pyarrow" [];
	"pandas.core.arrays.arrow.extension_types" -> "__future__" [];
	"pandas.core.arrays.arrow.extension_types" -> "json" [];
	"pandas.core.arrays.arrow.extension_types" -> "typing" [];
	"pandas.core.arrays.arrow.extension_types" -> "pyarrow" [];
	"pandas.core.arrays.arrow.extension_types" -> "io" [];
	"pandas.core.arrays.arrow.extension_types" -> "pickletools" [];
	"pickletools" -> "codecs" [];
	"pickletools" -> "io" [];
	"pickletools" -> "pickle" [];
	"pickletools" -> "re" [];
	"pickletools" -> "sys" [];
	"pickletools" -> "struct" [];
	"pickletools" -> "doctest" [];
	"pickletools" -> "argparse" [];
	"doctest" -> "__future__" [];
	"doctest" -> "difflib" [];
	"doctest" -> "inspect" [];
	"doctest" -> "linecache" [];
	"doctest" -> "os" [];
	"doctest" -> "pdb" [];
	"doctest" -> "re" [];
	"doctest" -> "sys" [];
	"doctest" -> "traceback" [];
	"doctest" -> "unittest" [];
	"doctest" -> "io" [];
	"doctest" -> "collections" [];
	"doctest" -> "builtins" [];
	"doctest" -> "argparse" [];
	"unittest" -> "os.path" [];
	"unittest.async_case" -> "asyncio" [];
	"unittest.async_case" -> "inspect" [];
	"unittest.signals" -> "signal" [];
	"unittest.signals" -> "weakref" [];
	"unittest.signals" -> "functools" [];
	"unittest.main" -> "sys" [];
	"unittest.main" -> "argparse" [];
	"unittest.main" -> "os" [];
	"unittest.runner" -> "sys" [];
	"unittest.runner" -> "time" [];
	"unittest.runner" -> "warnings" [];
	"unittest.loader" -> "os" [];
	"unittest.loader" -> "re" [];
	"unittest.loader" -> "sys" [];
	"unittest.loader" -> "traceback" [];
	"unittest.loader" -> "types" [];
	"unittest.loader" -> "functools" [];
	"unittest.loader" -> "warnings" [];
	"unittest.loader" -> "fnmatch" [];
	"unittest.suite" -> "sys" [];
	"unittest.case" -> "sys" [];
	"unittest.case" -> "functools" [];
	"unittest.case" -> "difflib" [];
	"unittest.case" -> "pprint" [];
	"unittest.case" -> "re" [];
	"unittest.case" -> "warnings" [];
	"unittest.case" -> "collections" [];
	"unittest.case" -> "contextlib" [];
	"unittest.case" -> "traceback" [];
	"unittest.case" -> "types" [];
	"unittest._log" -> "logging" [];
	"unittest._log" -> "collections" [];
	"unittest.result" -> "io" [];
	"unittest.result" -> "sys" [];
	"unittest.result" -> "traceback" [];
	"unittest.result" -> "functools" [];
	"unittest.util" -> "collections" [];
	"unittest.util" -> "os.path" [];
	"pdb" -> "os" [];
	"pdb" -> "io" [];
	"pdb" -> "re" [];
	"pdb" -> "sys" [];
	"pdb" -> "cmd" [];
	"pdb" -> "bdb" [];
	"pdb" -> "dis" [];
	"pdb" -> "code" [];
	"pdb" -> "glob" [];
	"pdb" -> "pprint" [];
	"pdb" -> "signal" [];
	"pdb" -> "inspect" [];
	"pdb" -> "tokenize" [];
	"pdb" -> "traceback" [];
	"pdb" -> "linecache" [];
	"pdb" -> "readline" [];
	"pdb" -> "shlex" [];
	"pdb" -> "runpy" [];
	"pdb" -> "pydoc" [];
	"pdb" -> "getopt" [];
	"pdb" -> "pdb" [];
	"code" -> "sys" [];
	"code" -> "traceback" [];
	"code" -> "codeop" [];
	"code" -> "readline" [];
	"code" -> "argparse" [];
	"codeop" -> "__future__" [];
	"codeop" -> "warnings" [];
	"bdb" -> "fnmatch" [];
	"bdb" -> "sys" [];
	"bdb" -> "os" [];
	"bdb" -> "inspect" [];
	"bdb" -> "linecache" [];
	"bdb" -> "reprlib" [];
	"cmd" -> "string" [];
	"cmd" -> "sys" [];
	"cmd" -> "readline" [];
	"difflib" -> "heapq" [];
	"difflib" -> "collections" [];
	"difflib" -> "types" [];
	"difflib" -> "re" [];
	"difflib" -> "difflib" [];
	"pandas.core.arrays.interval" -> "__future__" [];
	"pandas.core.arrays.interval" -> "operator" [];
	"pandas.core.arrays.interval" -> "textwrap" [];
	"pandas.core.arrays.interval" -> "typing" [];
	"pandas.core.arrays.interval" -> "warnings" [];
	"pandas.core.arrays.interval" -> "numpy" [];
	"pandas.core.arrays.interval" -> "pandas" [];
	"pandas.core.arrays.interval" -> "pyarrow" [];
	"pandas.tseries.frequencies" -> "__future__" [];
	"pandas.tseries.frequencies" -> "typing" [];
	"pandas.tseries.frequencies" -> "numpy" [];
	"pandas.tseries.frequencies" -> "pandas" [];
	"pandas.core.indexers.utils" -> "__future__" [];
	"pandas.core.indexers.utils" -> "typing" [];
	"pandas.core.indexers.utils" -> "numpy" [];
	"pandas.core.arrays._mixins" -> "__future__" [];
	"pandas.core.arrays._mixins" -> "functools" [];
	"pandas.core.arrays._mixins" -> "typing" [];
	"pandas.core.arrays._mixins" -> "numpy" [];
	"pandas.core.arrays._mixins" -> "pandas" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "__future__" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "typing" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "numpy" [];
	"pandas.compat.numpy.function" -> "__future__" [];
	"pandas.compat.numpy.function" -> "typing" [];
	"pandas.compat.numpy.function" -> "numpy" [];
	"pandas.compat.numpy" -> "warnings" [];
	"pandas.compat.numpy" -> "numpy" [];
	"pandas.core.arrays.datetimes" -> "__future__" [];
	"pandas.core.arrays.datetimes" -> "datetime" [];
	"pandas.core.arrays.datetimes" -> "typing" [];
	"pandas.core.arrays.datetimes" -> "warnings" [];
	"pandas.core.arrays.datetimes" -> "numpy" [];
	"pandas.core.arrays.datetimes" -> "pandas" [];
	"pyarrow" -> "gc" [];
	"pyarrow" -> "importlib" [];
	"pyarrow" -> "os" [];
	"pyarrow" -> "platform" [];
	"pyarrow" -> "sys" [];
	"pyarrow" -> "warnings" [];
	"pyarrow" -> "setuptools_scm" [];
	"pyarrow" -> "'setuptools_scm.git'" [];
	"pyarrow" -> "subprocess" [];
	"pyarrow" -> "glob" [];
	"pyarrow.vendored.version" -> "collections" [];
	"pyarrow.vendored.version" -> "itertools" [];
	"pyarrow.vendored.version" -> "re" [];
	"pyarrow.vendored.version" -> "warnings" [];
	"pyarrow.parquet.core" -> "collections" [];
	"pyarrow.parquet.core" -> "contextlib" [];
	"pyarrow.parquet.core" -> "functools" [];
	"pyarrow.parquet.core" -> "inspect" [];
	"pyarrow.parquet.core" -> "json" [];
	"pyarrow.parquet.core" -> "os" [];
	"pyarrow.parquet.core" -> "re" [];
	"pyarrow.parquet.core" -> "operator" [];
	"pyarrow.parquet.core" -> "warnings" [];
	"pyarrow.parquet.core" -> "pyarrow" [];
	"pyarrow.pandas_compat" -> "ast" [];
	"pyarrow.pandas_compat" -> "concurrent" [];
	"pyarrow.pandas_compat" -> "copy" [];
	"pyarrow.pandas_compat" -> "decimal" [];
	"pyarrow.pandas_compat" -> "itertools" [];
	"pyarrow.pandas_compat" -> "json" [];
	"pyarrow.pandas_compat" -> "operator" [];
	"pyarrow.pandas_compat" -> "re" [];
	"pyarrow.pandas_compat" -> "warnings" [];
	"pyarrow.pandas_compat" -> "numpy" [];
	"pyarrow.pandas_compat" -> "'pandas.api.internals'" [];
	"pyarrow.pandas_compat" -> "pandas" [];
	"pyarrow.orc" -> "numbers" [];
	"pyarrow.orc" -> "warnings" [];
	"pyarrow.interchange.from_dataframe" -> "__future__" [];
	"pyarrow.interchange.from_dataframe" -> "typing" [];
	"pyarrow.interchange.from_dataframe" -> "pyarrow" [];
	"pyarrow.interchange.from_dataframe" -> "re" [];
	"pyarrow.interchange.dataframe" -> "__future__" [];
	"pyarrow.interchange.dataframe" -> "typing" [];
	"pyarrow.interchange.dataframe" -> "pyarrow" [];
	"pyarrow.interchange.column" -> "__future__" [];
	"pyarrow.interchange.column" -> "enum" [];
	"pyarrow.interchange.column" -> "typing" [];
	"pyarrow.interchange.column" -> "sys" [];
	"pyarrow.interchange.column" -> "typing_extensions" [];
	"pyarrow.interchange.column" -> "pyarrow" [];
	"pyarrow.interchange.buffer" -> "__future__" [];
	"pyarrow.interchange.buffer" -> "enum" [];
	"pyarrow.interchange.buffer" -> "pyarrow" [];
	"pyarrow.cuda" -> "'pyarrow._cuda'" [];
	"pyarrow.conftest" -> "pytest" [];
	"pyarrow.conftest" -> "os" [];
	"pyarrow.conftest" -> "sys" [];
	"pyarrow.conftest" -> "cython" [];
	"pyarrow.conftest" -> "fastparquet" [];
	"pyarrow.conftest" -> "'pyarrow.gandiva'" [];
	"pyarrow.conftest" -> "pandas" [];
	"pyarrow.conftest" -> "numpy" [];
	"pyarrow.tests.util" -> "contextlib" [];
	"pyarrow.tests.util" -> "decimal" [];
	"pyarrow.tests.util" -> "gc" [];
	"pyarrow.tests.util" -> "os" [];
	"pyarrow.tests.util" -> "random" [];
	"pyarrow.tests.util" -> "re" [];
	"pyarrow.tests.util" -> "shutil" [];
	"pyarrow.tests.util" -> "signal" [];
	"pyarrow.tests.util" -> "socket" [];
	"pyarrow.tests.util" -> "string" [];
	"pyarrow.tests.util" -> "subprocess" [];
	"pyarrow.tests.util" -> "sys" [];
	"pyarrow.tests.util" -> "time" [];
	"pyarrow.tests.util" -> "pytest" [];
	"pyarrow.tests.util" -> "pyarrow" [];
	"pyarrow.tests.util" -> "psutil" [];
	"pyarrow.cffi" -> "__future__" [];
	"pyarrow.cffi" -> "cffi" [];
	"cffi.api" -> "sys" [];
	"cffi.api" -> "types" [];
	"cffi.api" -> "collections" [];
	"cffi.api" -> "_cffi_backend" [];
	"cffi.api" -> "os" [];
	"cffi.api" -> "sysconfig" [];
	"cffi.api" -> "re" [];
	"ctypes.util" -> "os" [];
	"ctypes.util" -> "shutil" [];
	"ctypes.util" -> "subprocess" [];
	"ctypes.util" -> "sys" [];
	"ctypes.util" -> "re" [];
	"ctypes.util" -> "tempfile" [];
	"ctypes.util" -> "struct" [];
	"ctypes._aix" -> "re" [];
	"ctypes._aix" -> "os" [];
	"ctypes._aix" -> "sys" [];
	"ctypes._aix" -> "subprocess" [];
	"ctypes.macholib.dyld" -> "os" [];
	"ctypes.macholib.dyld" -> "sys" [];
	"ctypes.macholib.dyld" -> "itertools" [];
	"ctypes.macholib.dyld" -> "_ctypes" [];
	"ctypes.macholib.dylib" -> "re" [];
	"ctypes.macholib.framework" -> "re" [];
	"cffi.recompiler" -> "os" [];
	"cffi.recompiler" -> "sys" [];
	"cffi.recompiler" -> "io" [];
	"cffi._shimmed_dist_utils" -> "sys" [];
	"cffi._shimmed_dist_utils" -> "setuptools" [];
	"cffi._shimmed_dist_utils" -> "distutils" [];
	"distutils.msvc9compiler" -> "os" [];
	"distutils.msvc9compiler" -> "subprocess" [];
	"distutils.msvc9compiler" -> "sys" [];
	"distutils.msvc9compiler" -> "re" [];
	"distutils.msvc9compiler" -> "winreg" [];
	"distutils.util" -> "os" [];
	"distutils.util" -> "re" [];
	"distutils.util" -> "string" [];
	"distutils.util" -> "sys" [];
	"distutils.util" -> "_aix_support" [];
	"distutils.util" -> "_osx_support" [];
	"distutils.util" -> "pwd" [];
	"distutils.util" -> "subprocess" [];
	"distutils.util" -> "tempfile" [];
	"distutils.util" -> "py_compile" [];
	"distutils.filelist" -> "os" [];
	"distutils.filelist" -> "re" [];
	"distutils.filelist" -> "fnmatch" [];
	"distutils.filelist" -> "functools" [];
	"distutils.debug" -> "os" [];
	"distutils.file_util" -> "os" [];
	"distutils.file_util" -> "stat" [];
	"distutils.file_util" -> "os.path" [];
	"distutils.file_util" -> "errno" [];
	"distutils.spawn" -> "sys" [];
	"distutils.spawn" -> "os" [];
	"distutils.spawn" -> "subprocess" [];
	"distutils.dep_util" -> "os" [];
	"distutils.dep_util" -> "stat" [];
	"distutils.dir_util" -> "os" [];
	"distutils.dir_util" -> "errno" [];
	"distutils.core" -> "os" [];
	"distutils.core" -> "sys" [];
	"distutils.extension" -> "os" [];
	"distutils.extension" -> "warnings" [];
	"distutils.text_file" -> "sys" [];
	"distutils.text_file" -> "io" [];
	"distutils.config" -> "os" [];
	"distutils.config" -> "configparser" [];
	"distutils.config" -> "cgi" [];
	"cgi" -> "io" [];
	"cgi" -> "sys" [];
	"cgi" -> "os" [];
	"cgi" -> "html" [];
	"cgi" -> "locale" [];
	"cgi" -> "tempfile" [];
	"cgi" -> "traceback" [];
	"cgi" -> "re" [];
	"distutils.cmd" -> "sys" [];
	"distutils.cmd" -> "os" [];
	"distutils.cmd" -> "re" [];
	"distutils.fancy_getopt" -> "sys" [];
	"distutils.fancy_getopt" -> "string" [];
	"distutils.fancy_getopt" -> "re" [];
	"distutils.fancy_getopt" -> "getopt" [];
	"distutils.archive_util" -> "os" [];
	"distutils.archive_util" -> "warnings" [];
	"distutils.archive_util" -> "sys" [];
	"distutils.archive_util" -> "zipfile" [];
	"distutils.archive_util" -> "pwd" [];
	"distutils.archive_util" -> "grp" [];
	"distutils.archive_util" -> "tarfile" [];
	"distutils.dist" -> "sys" [];
	"distutils.dist" -> "os" [];
	"distutils.dist" -> "re" [];
	"distutils.dist" -> "email" [];
	"distutils.dist" -> "warnings" [];
	"distutils.dist" -> "pprint" [];
	"distutils.dist" -> "configparser" [];
	"distutils.versionpredicate" -> "re" [];
	"distutils.versionpredicate" -> "operator" [];
	"distutils.version" -> "re" [];
	"distutils.command.build_ext" -> "contextlib" [];
	"distutils.command.build_ext" -> "os" [];
	"distutils.command.build_ext" -> "re" [];
	"distutils.command.build_ext" -> "sys" [];
	"distutils.command.build_ext" -> "distutils" [];
	"distutils.command.build_ext" -> "site" [];
	"distutils._msvccompiler" -> "os" [];
	"distutils._msvccompiler" -> "subprocess" [];
	"distutils._msvccompiler" -> "winreg" [];
	"distutils._msvccompiler" -> "itertools" [];
	"site" -> "sys" [];
	"site" -> "os" [];
	"site" -> "builtins" [];
	"site" -> "_sitebuiltins" [];
	"site" -> "io" [];
	"site" -> "traceback" [];
	"site" -> "atexit" [];
	"site" -> "readline" [];
	"site" -> "rlcompleter" [];
	"site" -> "sitecustomize" [];
	"site" -> "usercustomize" [];
	"site" -> "textwrap" [];
	"rlcompleter" -> "atexit" [];
	"rlcompleter" -> "builtins" [];
	"rlcompleter" -> "keyword" [];
	"rlcompleter" -> "re" [];
	"rlcompleter" -> "readline" [];
	"_sitebuiltins" -> "sys" [];
	"_sitebuiltins" -> "os" [];
	"_sitebuiltins" -> "pydoc" [];
	"distutils.ccompiler" -> "sys" [];
	"distutils.ccompiler" -> "os" [];
	"distutils.ccompiler" -> "re" [];
	"distutils.ccompiler" -> "tempfile" [];
	"distutils.sysconfig" -> "_imp" [];
	"distutils.sysconfig" -> "os" [];
	"distutils.sysconfig" -> "re" [];
	"distutils.sysconfig" -> "sys" [];
	"distutils.sysconfig" -> "_osx_support" [];
	"distutils.sysconfig" -> "warnings" [];
	"distutils.log" -> "sys" [];
	"distutils" -> "sys" [];
	"distutils" -> "_sysconfigdata__darwin_darwin" [];
	"setuptools" -> "fnmatch" [];
	"setuptools" -> "functools" [];
	"setuptools" -> "os" [];
	"setuptools" -> "re" [];
	"setuptools" -> "syslog" [];
	"setuptools._vendor.pyparsing" -> "string" [];
	"setuptools._vendor.pyparsing" -> "weakref" [];
	"setuptools._vendor.pyparsing" -> "copy" [];
	"setuptools._vendor.pyparsing" -> "sys" [];
	"setuptools._vendor.pyparsing" -> "warnings" [];
	"setuptools._vendor.pyparsing" -> "re" [];
	"setuptools._vendor.pyparsing" -> "sre_constants" [];
	"setuptools._vendor.pyparsing" -> "collections" [];
	"setuptools._vendor.pyparsing" -> "pprint" [];
	"setuptools._vendor.pyparsing" -> "traceback" [];
	"setuptools._vendor.pyparsing" -> "types" [];
	"setuptools._vendor.pyparsing" -> "datetime" [];
	"setuptools._vendor.pyparsing" -> "_thread" [];
	"setuptools._vendor.pyparsing" -> "threading" [];
	"setuptools._vendor.pyparsing" -> "ordereddict" [];
	"setuptools._vendor.pyparsing" -> "__builtin__" [];
	"setuptools._vendor.pyparsing" -> "pdb" [];
	"setuptools._vendor.pyparsing" -> "uuid" [];
	"uuid" -> "os" [];
	"uuid" -> "sys" [];
	"uuid" -> "enum" [];
	"uuid" -> "platform" [];
	"uuid" -> "io" [];
	"uuid" -> "shutil" [];
	"uuid" -> "subprocess" [];
	"uuid" -> "socket" [];
	"uuid" -> "_uuid" [];
	"uuid" -> "random" [];
	"uuid" -> "time" [];
	"uuid" -> "hashlib" [];
	"setuptools._vendor.packaging.version" -> "__future__" [];
	"setuptools._vendor.packaging.version" -> "collections" [];
	"setuptools._vendor.packaging.version" -> "itertools" [];
	"setuptools._vendor.packaging.version" -> "re" [];
	"setuptools._vendor.packaging.version" -> "typing" [];
	"setuptools._vendor.packaging.utils" -> "__future__" [];
	"setuptools._vendor.packaging.utils" -> "re" [];
	"setuptools._vendor.packaging.utils" -> "typing" [];
	"setuptools._vendor.packaging.tags" -> "__future__" [];
	"setuptools._vendor.packaging.tags" -> "imp" [];
	"setuptools._vendor.packaging.tags" -> "logging" [];
	"setuptools._vendor.packaging.tags" -> "os" [];
	"setuptools._vendor.packaging.tags" -> "platform" [];
	"setuptools._vendor.packaging.tags" -> "re" [];
	"setuptools._vendor.packaging.tags" -> "struct" [];
	"setuptools._vendor.packaging.tags" -> "sys" [];
	"setuptools._vendor.packaging.tags" -> "sysconfig" [];
	"setuptools._vendor.packaging.tags" -> "warnings" [];
	"setuptools._vendor.packaging.tags" -> "typing" [];
	"setuptools._vendor.packaging.tags" -> "_manylinux" [];
	"setuptools._vendor.packaging.tags" -> "ctypes" [];
	"imp" -> "_imp" [];
	"imp" -> "importlib" [];
	"imp" -> "os" [];
	"imp" -> "sys" [];
	"imp" -> "tokenize" [];
	"imp" -> "types" [];
	"imp" -> "warnings" [];
	"setuptools._vendor.packaging.specifiers" -> "__future__" [];
	"setuptools._vendor.packaging.specifiers" -> "abc" [];
	"setuptools._vendor.packaging.specifiers" -> "functools" [];
	"setuptools._vendor.packaging.specifiers" -> "itertools" [];
	"setuptools._vendor.packaging.specifiers" -> "re" [];
	"setuptools._vendor.packaging.specifiers" -> "typing" [];
	"setuptools._vendor.packaging.requirements" -> "__future__" [];
	"setuptools._vendor.packaging.requirements" -> "string" [];
	"setuptools._vendor.packaging.requirements" -> "re" [];
	"setuptools._vendor.packaging.requirements" -> "'setuptools.extern.pyparsing'" [];
	"setuptools._vendor.packaging.requirements" -> "urllib" [];
	"setuptools._vendor.packaging.requirements" -> "typing" [];
	"setuptools._vendor.packaging.markers" -> "__future__" [];
	"setuptools._vendor.packaging.markers" -> "operator" [];
	"setuptools._vendor.packaging.markers" -> "os" [];
	"setuptools._vendor.packaging.markers" -> "platform" [];
	"setuptools._vendor.packaging.markers" -> "sys" [];
	"setuptools._vendor.packaging.markers" -> "'setuptools.extern.pyparsing'" [];
	"setuptools._vendor.packaging.markers" -> "typing" [];
	"setuptools._vendor.packaging._typing" -> "typing" [];
	"setuptools._vendor.packaging._structures" -> "__future__" [];
	"setuptools._vendor.packaging._compat" -> "__future__" [];
	"setuptools._vendor.packaging._compat" -> "sys" [];
	"setuptools._vendor.packaging._compat" -> "typing" [];
	"setuptools._vendor.packaging.__about__" -> "__future__" [];
	"setuptools._vendor.packaging" -> "__future__" [];
	"setuptools._vendor.ordered_set" -> "itertools" [];
	"setuptools._vendor.ordered_set" -> "collections" [];
	"setuptools._vendor.more_itertools.recipes" -> "warnings" [];
	"setuptools._vendor.more_itertools.recipes" -> "collections" [];
	"setuptools._vendor.more_itertools.recipes" -> "itertools" [];
	"setuptools._vendor.more_itertools.recipes" -> "operator" [];
	"setuptools._vendor.more_itertools.recipes" -> "random" [];
	"setuptools._vendor.more_itertools.more" -> "warnings" [];
	"setuptools._vendor.more_itertools.more" -> "collections" [];
	"setuptools._vendor.more_itertools.more" -> "functools" [];
	"setuptools._vendor.more_itertools.more" -> "heapq" [];
	"setuptools._vendor.more_itertools.more" -> "itertools" [];
	"setuptools._vendor.more_itertools.more" -> "math" [];
	"setuptools._vendor.more_itertools.more" -> "queue" [];
	"setuptools._vendor.more_itertools.more" -> "random" [];
	"setuptools._vendor.more_itertools.more" -> "operator" [];
	"setuptools._vendor.more_itertools.more" -> "sys" [];
	"setuptools._vendor.more_itertools.more" -> "time" [];
	"setuptools.msvc" -> "json" [];
	"setuptools.msvc" -> "io" [];
	"setuptools.msvc" -> "os" [];
	"setuptools.msvc" -> "os.path" [];
	"setuptools.msvc" -> "sys" [];
	"setuptools.msvc" -> "contextlib" [];
	"setuptools.msvc" -> "platform" [];
	"setuptools.msvc" -> "itertools" [];
	"setuptools.msvc" -> "subprocess" [];
	"setuptools.msvc" -> "'setuptools.extern.packaging.version'" [];
	"setuptools.msvc" -> "'setuptools.extern.more_itertools'" [];
	"setuptools.msvc" -> "winreg" [];
	"setuptools.msvc" -> "glob" [];
	"setuptools.monkey" -> "sys" [];
	"setuptools.monkey" -> "platform" [];
	"setuptools.monkey" -> "types" [];
	"setuptools.monkey" -> "functools" [];
	"setuptools.monkey" -> "importlib" [];
	"setuptools.monkey" -> "inspect" [];
	"setuptools.depends" -> "sys" [];
	"setuptools.depends" -> "marshal" [];
	"setuptools.depends" -> "contextlib" [];
	"setuptools.depends" -> "dis" [];
	"setuptools._imp" -> "os" [];
	"setuptools.py34compat" -> "importlib" [];
	"setuptools.dist" -> "io" [];
	"setuptools.dist" -> "sys" [];
	"setuptools.dist" -> "re" [];
	"setuptools.dist" -> "os" [];
	"setuptools.dist" -> "warnings" [];
	"setuptools.dist" -> "numbers" [];
	"setuptools.dist" -> "glob" [];
	"setuptools.dist" -> "itertools" [];
	"setuptools.dist" -> "textwrap" [];
	"setuptools.dist" -> "typing" [];
	"setuptools.dist" -> "collections" [];
	"setuptools.dist" -> "email" [];
	"setuptools.dist" -> "'setuptools.extern.more_itertools'" [];
	"setuptools.dist" -> "pkg_resources" [];
	"setuptools.dist" -> "configparser" [];
	"setuptools.dist" -> "shlex" [];
	"setuptools.installer" -> "glob" [];
	"setuptools.installer" -> "os" [];
	"setuptools.installer" -> "subprocess" [];
	"setuptools.installer" -> "sys" [];
	"setuptools.installer" -> "tempfile" [];
	"setuptools.installer" -> "distutils" [];
	"setuptools.installer" -> "pkg_resources" [];
	"setuptools.wheel" -> "distutils" [];
	"setuptools.wheel" -> "email" [];
	"setuptools.wheel" -> "itertools" [];
	"setuptools.wheel" -> "os" [];
	"setuptools.wheel" -> "posixpath" [];
	"setuptools.wheel" -> "re" [];
	"setuptools.wheel" -> "zipfile" [];
	"setuptools.wheel" -> "pkg_resources" [];
	"setuptools.wheel" -> "'setuptools.extern.packaging.tags'" [];
	"setuptools.wheel" -> "'setuptools.extern.packaging.utils'" [];
	"setuptools.command.egg_info" -> "distutils" [];
	"setuptools.command.egg_info" -> "functools" [];
	"setuptools.command.egg_info" -> "os" [];
	"setuptools.command.egg_info" -> "re" [];
	"setuptools.command.egg_info" -> "sys" [];
	"setuptools.command.egg_info" -> "io" [];
	"setuptools.command.egg_info" -> "warnings" [];
	"setuptools.command.egg_info" -> "time" [];
	"setuptools.command.egg_info" -> "collections" [];
	"setuptools.command.egg_info" -> "setuptools" [];
	"setuptools.command.egg_info" -> "pkg_resources" [];
	"setuptools.glob" -> "os" [];
	"setuptools.glob" -> "re" [];
	"setuptools.glob" -> "fnmatch" [];
	"setuptools.unicode_utils" -> "unicodedata" [];
	"setuptools.unicode_utils" -> "sys" [];
	"setuptools.command.bdist_egg" -> "distutils" [];
	"setuptools.command.bdist_egg" -> "types" [];
	"setuptools.command.bdist_egg" -> "sys" [];
	"setuptools.command.bdist_egg" -> "os" [];
	"setuptools.command.bdist_egg" -> "re" [];
	"setuptools.command.bdist_egg" -> "textwrap" [];
	"setuptools.command.bdist_egg" -> "marshal" [];
	"setuptools.command.bdist_egg" -> "pkg_resources" [];
	"setuptools.command.bdist_egg" -> "setuptools" [];
	"setuptools.command.bdist_egg" -> "sysconfig" [];
	"setuptools.command.bdist_egg" -> "zipfile" [];
	"setuptools.command.setopt" -> "distutils" [];
	"setuptools.command.setopt" -> "os" [];
	"setuptools.command.setopt" -> "configparser" [];
	"setuptools.command.setopt" -> "setuptools" [];
	"setuptools.command.sdist" -> "distutils" [];
	"setuptools.command.sdist" -> "os" [];
	"setuptools.command.sdist" -> "sys" [];
	"setuptools.command.sdist" -> "io" [];
	"setuptools.command.sdist" -> "contextlib" [];
	"setuptools.command.sdist" -> "pkg_resources" [];
	"setuptools.command.py36compat" -> "os" [];
	"setuptools.command.py36compat" -> "glob" [];
	"distutils.command.sdist" -> "os" [];
	"distutils.command.sdist" -> "sys" [];
	"distutils.command.sdist" -> "glob" [];
	"distutils.command.sdist" -> "warnings" [];
	"distutils.command.sdist" -> "distutils" [];
	"pkg_resources" -> "sys" [];
	"pkg_resources" -> "os" [];
	"pkg_resources" -> "io" [];
	"pkg_resources" -> "time" [];
	"pkg_resources" -> "re" [];
	"pkg_resources" -> "types" [];
	"pkg_resources" -> "zipfile" [];
	"pkg_resources" -> "zipimport" [];
	"pkg_resources" -> "warnings" [];
	"pkg_resources" -> "stat" [];
	"pkg_resources" -> "functools" [];
	"pkg_resources" -> "pkgutil" [];
	"pkg_resources" -> "operator" [];
	"pkg_resources" -> "platform" [];
	"pkg_resources" -> "collections" [];
	"pkg_resources" -> "plistlib" [];
	"pkg_resources" -> "errno" [];
	"pkg_resources" -> "tempfile" [];
	"pkg_resources" -> "textwrap" [];
	"pkg_resources" -> "itertools" [];
	"pkg_resources" -> "inspect" [];
	"pkg_resources" -> "ntpath" [];
	"pkg_resources" -> "posixpath" [];
	"pkg_resources" -> "importlib" [];
	"pkg_resources" -> "_imp" [];
	"pkg_resources" -> "imp" [];
	"pkg_resources" -> "os.path" [];
	"pkg_resources" -> "sysconfig" [];
	"pkg_resources" -> "linecache" [];
	"pkg_resources" -> "packaging" [];
	"packaging.version" -> "__future__" [];
	"packaging.version" -> "itertools" [];
	"packaging.version" -> "re" [];
	"packaging.version" -> "typing" [];
	"packaging.utils" -> "__future__" [];
	"packaging.utils" -> "functools" [];
	"packaging.utils" -> "re" [];
	"packaging.utils" -> "typing" [];
	"packaging.tags" -> "__future__" [];
	"packaging.tags" -> "logging" [];
	"packaging.tags" -> "platform" [];
	"packaging.tags" -> "re" [];
	"packaging.tags" -> "struct" [];
	"packaging.tags" -> "subprocess" [];
	"packaging.tags" -> "sys" [];
	"packaging.tags" -> "sysconfig" [];
	"packaging.tags" -> "typing" [];
	"packaging.specifiers" -> "__future__" [];
	"packaging.specifiers" -> "abc" [];
	"packaging.specifiers" -> "itertools" [];
	"packaging.specifiers" -> "re" [];
	"packaging.specifiers" -> "typing" [];
	"packaging.requirements" -> "__future__" [];
	"packaging.requirements" -> "typing" [];
	"packaging.metadata" -> "__future__" [];
	"packaging.metadata" -> "pathlib" [];
	"packaging.metadata" -> "sys" [];
	"packaging.metadata" -> "typing" [];
	"packaging.markers" -> "__future__" [];
	"packaging.markers" -> "operator" [];
	"packaging.markers" -> "os" [];
	"packaging.markers" -> "platform" [];
	"packaging.markers" -> "sys" [];
	"packaging.markers" -> "typing" [];
	"packaging.licenses._spdx" -> "__future__" [];
	"packaging.licenses._spdx" -> "typing" [];
	"packaging.licenses" -> "__future__" [];
	"packaging.licenses" -> "re" [];
	"packaging.licenses" -> "typing" [];
	"packaging._tokenizer" -> "__future__" [];
	"packaging._tokenizer" -> "contextlib" [];
	"packaging._tokenizer" -> "re" [];
	"packaging._tokenizer" -> "dataclasses" [];
	"packaging._tokenizer" -> "typing" [];
	"packaging._parser" -> "__future__" [];
	"packaging._parser" -> "ast" [];
	"packaging._parser" -> "typing" [];
	"packaging._musllinux" -> "__future__" [];
	"packaging._musllinux" -> "functools" [];
	"packaging._musllinux" -> "re" [];
	"packaging._musllinux" -> "subprocess" [];
	"packaging._musllinux" -> "sys" [];
	"packaging._musllinux" -> "typing" [];
	"packaging._musllinux" -> "sysconfig" [];
	"packaging._manylinux" -> "__future__" [];
	"packaging._manylinux" -> "collections" [];
	"packaging._manylinux" -> "contextlib" [];
	"packaging._manylinux" -> "functools" [];
	"packaging._manylinux" -> "os" [];
	"packaging._manylinux" -> "re" [];
	"packaging._manylinux" -> "sys" [];
	"packaging._manylinux" -> "warnings" [];
	"packaging._manylinux" -> "typing" [];
	"packaging._manylinux" -> "ctypes" [];
	"packaging._manylinux" -> "_manylinux" [];
	"packaging._elffile" -> "__future__" [];
	"packaging._elffile" -> "enum" [];
	"packaging._elffile" -> "os" [];
	"packaging._elffile" -> "struct" [];
	"packaging._elffile" -> "typing" [];
	"packaging" -> "pkg_resources" [];
	"pkg_resources._vendor.pyparsing" -> "string" [];
	"pkg_resources._vendor.pyparsing" -> "weakref" [];
	"pkg_resources._vendor.pyparsing" -> "copy" [];
	"pkg_resources._vendor.pyparsing" -> "sys" [];
	"pkg_resources._vendor.pyparsing" -> "warnings" [];
	"pkg_resources._vendor.pyparsing" -> "re" [];
	"pkg_resources._vendor.pyparsing" -> "sre_constants" [];
	"pkg_resources._vendor.pyparsing" -> "collections" [];
	"pkg_resources._vendor.pyparsing" -> "pprint" [];
	"pkg_resources._vendor.pyparsing" -> "traceback" [];
	"pkg_resources._vendor.pyparsing" -> "types" [];
	"pkg_resources._vendor.pyparsing" -> "datetime" [];
	"pkg_resources._vendor.pyparsing" -> "_thread" [];
	"pkg_resources._vendor.pyparsing" -> "threading" [];
	"pkg_resources._vendor.pyparsing" -> "ordereddict" [];
	"pkg_resources._vendor.pyparsing" -> "__builtin__" [];
	"pkg_resources._vendor.pyparsing" -> "pdb" [];
	"pkg_resources._vendor.pyparsing" -> "uuid" [];
	"pkg_resources._vendor.packaging.version" -> "__future__" [];
	"pkg_resources._vendor.packaging.version" -> "collections" [];
	"pkg_resources._vendor.packaging.version" -> "itertools" [];
	"pkg_resources._vendor.packaging.version" -> "re" [];
	"pkg_resources._vendor.packaging.version" -> "typing" [];
	"pkg_resources._vendor.packaging.utils" -> "__future__" [];
	"pkg_resources._vendor.packaging.utils" -> "re" [];
	"pkg_resources._vendor.packaging.utils" -> "typing" [];
	"pkg_resources._vendor.packaging.tags" -> "__future__" [];
	"pkg_resources._vendor.packaging.tags" -> "imp" [];
	"pkg_resources._vendor.packaging.tags" -> "logging" [];
	"pkg_resources._vendor.packaging.tags" -> "os" [];
	"pkg_resources._vendor.packaging.tags" -> "platform" [];
	"pkg_resources._vendor.packaging.tags" -> "re" [];
	"pkg_resources._vendor.packaging.tags" -> "struct" [];
	"pkg_resources._vendor.packaging.tags" -> "sys" [];
	"pkg_resources._vendor.packaging.tags" -> "sysconfig" [];
	"pkg_resources._vendor.packaging.tags" -> "warnings" [];
	"pkg_resources._vendor.packaging.tags" -> "typing" [];
	"pkg_resources._vendor.packaging.tags" -> "_manylinux" [];
	"pkg_resources._vendor.packaging.tags" -> "ctypes" [];
	"pkg_resources._vendor.packaging.specifiers" -> "__future__" [];
	"pkg_resources._vendor.packaging.specifiers" -> "abc" [];
	"pkg_resources._vendor.packaging.specifiers" -> "functools" [];
	"pkg_resources._vendor.packaging.specifiers" -> "itertools" [];
	"pkg_resources._vendor.packaging.specifiers" -> "re" [];
	"pkg_resources._vendor.packaging.specifiers" -> "typing" [];
	"pkg_resources._vendor.packaging.requirements" -> "__future__" [];
	"pkg_resources._vendor.packaging.requirements" -> "string" [];
	"pkg_resources._vendor.packaging.requirements" -> "re" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'" [];
	"pkg_resources._vendor.packaging.requirements" -> "urllib" [];
	"pkg_resources._vendor.packaging.requirements" -> "typing" [];
	"pkg_resources._vendor.packaging.markers" -> "__future__" [];
	"pkg_resources._vendor.packaging.markers" -> "operator" [];
	"pkg_resources._vendor.packaging.markers" -> "os" [];
	"pkg_resources._vendor.packaging.markers" -> "platform" [];
	"pkg_resources._vendor.packaging.markers" -> "sys" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'" [];
	"pkg_resources._vendor.packaging.markers" -> "typing" [];
	"pkg_resources._vendor.packaging._typing" -> "typing" [];
	"pkg_resources._vendor.packaging._structures" -> "__future__" [];
	"pkg_resources._vendor.packaging._compat" -> "__future__" [];
	"pkg_resources._vendor.packaging._compat" -> "sys" [];
	"pkg_resources._vendor.packaging._compat" -> "typing" [];
	"pkg_resources._vendor.packaging.__about__" -> "__future__" [];
	"pkg_resources._vendor.packaging" -> "__future__" [];
	"pkg_resources._vendor.appdirs" -> "sys" [];
	"pkg_resources._vendor.appdirs" -> "os" [];
	"pkg_resources._vendor.appdirs" -> "platform" [];
	"pkg_resources._vendor.appdirs" -> "winreg" [];
	"pkg_resources._vendor.appdirs" -> "_winreg" [];
	"pkg_resources._vendor.appdirs" -> "win32com" [];
	"pkg_resources._vendor.appdirs" -> "win32api" [];
	"pkg_resources._vendor.appdirs" -> "ctypes" [];
	"pkg_resources._vendor.appdirs" -> "array" [];
	"pkg_resources._vendor.appdirs" -> "com" [];
	"pkg_resources._vendor.appdirs" -> "'com.sun'" [];
	"pkg_resources._vendor.appdirs" -> "'win32com.shell'" [];
	"pkg_resources.extern" -> "sys" [];
	"setuptools.config" -> "ast" [];
	"setuptools.config" -> "io" [];
	"setuptools.config" -> "os" [];
	"setuptools.config" -> "sys" [];
	"setuptools.config" -> "warnings" [];
	"setuptools.config" -> "functools" [];
	"setuptools.config" -> "importlib" [];
	"setuptools.config" -> "collections" [];
	"setuptools.config" -> "glob" [];
	"setuptools.config" -> "contextlib" [];
	"setuptools.config" -> "'setuptools.extern.packaging.version'" [];
	"setuptools.config" -> "'setuptools.extern.packaging.specifiers'" [];
	"setuptools.command" -> "sys" [];
	"distutils.command.bdist" -> "os" [];
	"setuptools.extern" -> "sys" [];
	"setuptools.windows_support" -> "platform" [];
	"setuptools.windows_support" -> "ctypes" [];
	"setuptools.extension" -> "re" [];
	"setuptools.extension" -> "functools" [];
	"setuptools.version" -> "pkg_resources" [];
	"_distutils_hack" -> "sys" [];
	"_distutils_hack" -> "os" [];
	"_distutils_hack" -> "re" [];
	"_distutils_hack" -> "importlib" [];
	"_distutils_hack" -> "warnings" [];
	"_distutils_hack" -> "traceback" [];
	"cffi.verifier" -> "sys" [];
	"cffi.verifier" -> "os" [];
	"cffi.verifier" -> "binascii" [];
	"cffi.verifier" -> "shutil" [];
	"cffi.verifier" -> "io" [];
	"cffi.verifier" -> "imp" [];
	"cffi.verifier" -> "_cffi_backend" [];
	"cffi.lock" -> "sys" [];
	"cffi.lock" -> "thread" [];
	"cffi.lock" -> "dummy_thread" [];
	"cffi.lock" -> "_thread" [];
	"cffi.lock" -> "_dummy_thread" [];
	"cffi.pkgconfig" -> "sys" [];
	"cffi.pkgconfig" -> "os" [];
	"cffi.pkgconfig" -> "subprocess" [];
	"cffi.vengine_cpy" -> "sys" [];
	"cffi.vengine_cpy" -> "warnings" [];
	"cffi._imp_emulation" -> "imp" [];
	"cffi._imp_emulation" -> "_imp" [];
	"cffi._imp_emulation" -> "importlib" [];
	"cffi._imp_emulation" -> "os" [];
	"cffi._imp_emulation" -> "sys" [];
	"cffi._imp_emulation" -> "tokenize" [];
	"cffi.vengine_gen" -> "sys" [];
	"cffi.vengine_gen" -> "os" [];
	"cffi.vengine_gen" -> "types" [];
	"cffi.ffiplatform" -> "sys" [];
	"cffi.ffiplatform" -> "os" [];
	"cffi.ffiplatform" -> "os.path" [];
	"cffi.ffiplatform" -> "cStringIO" [];
	"cffi.ffiplatform" -> "io" [];
	"cffi.cparser" -> "pycparser" [];
	"cffi.cparser" -> "weakref" [];
	"cffi.cparser" -> "re" [];
	"cffi.cparser" -> "sys" [];
	"cffi.cparser" -> "thread" [];
	"cffi.cparser" -> "_thread" [];
	"cffi.cparser" -> "warnings" [];
	"pycparser" -> "io" [];
	"pycparser" -> "subprocess" [];
	"pycparser.plyparser" -> "warnings" [];
	"pycparser.c_lexer" -> "re" [];
	"pycparser.ply.lex" -> "re" [];
	"pycparser.ply.lex" -> "sys" [];
	"pycparser.ply.lex" -> "types" [];
	"pycparser.ply.lex" -> "copy" [];
	"pycparser.ply.lex" -> "os" [];
	"pycparser.ply.lex" -> "inspect" [];
	"pycparser.ply.yacc" -> "re" [];
	"pycparser.ply.yacc" -> "types" [];
	"pycparser.ply.yacc" -> "sys" [];
	"pycparser.ply.yacc" -> "os.path" [];
	"pycparser.ply.yacc" -> "inspect" [];
	"pycparser.ply.yacc" -> "base64" [];
	"pycparser.ply.yacc" -> "warnings" [];
	"pycparser.ply.yacc" -> "cPickle" [];
	"pycparser.ply.yacc" -> "pickle" [];
	"pycparser.c_ast" -> "sys" [];
	"cffi.commontypes" -> "sys" [];
	"cffi.commontypes" -> "_cffi_backend" [];
	"cffi.model" -> "types" [];
	"cffi.model" -> "weakref" [];
	"cffi.model" -> "warnings" [];
	"pyarrow.feather" -> "os" [];
	"pyarrow.util" -> "os" [];
	"pyarrow.util" -> "contextlib" [];
	"pyarrow.util" -> "functools" [];
	"pyarrow.util" -> "gc" [];
	"pyarrow.util" -> "socket" [];
	"pyarrow.util" -> "sys" [];
	"pyarrow.util" -> "textwrap" [];
	"pyarrow.util" -> "types" [];
	"pyarrow.util" -> "warnings" [];
	"pyarrow.util" -> "uuid" [];
	"pyarrow.util" -> "requests" [];
	"pyarrow.util" -> "tarfile" [];
	"requests" -> "warnings" [];
	"requests" -> "charset_normalizer" [];
	"requests" -> "chardet" [];
	"requests" -> "ssl" [];
	"requests" -> "cryptography" [];
	"requests" -> "logging" [];
	"requests.structures" -> "collections" [];
	"requests.compat" -> "importlib" [];
	"requests.compat" -> "sys" [];
	"requests.compat" -> "simplejson" [];
	"requests.compat" -> "json" [];
	"requests.compat" -> "collections" [];
	"requests.compat" -> "http" [];
	"requests.compat" -> "io" [];
	"http.cookies" -> "re" [];
	"http.cookies" -> "string" [];
	"http.cookies" -> "types" [];
	"http.cookies" -> "time" [];
	"requests.models" -> "datetime" [];
	"requests.models" -> "io" [];
	"requests.models" -> "idna" [];
	"idna.intranges" -> "bisect" [];
	"idna.intranges" -> "typing" [];
	"idna.core" -> "bisect" [];
	"idna.core" -> "re" [];
	"idna.core" -> "unicodedata" [];
	"idna.core" -> "typing" [];
	"idna.uts46data" -> "typing" [];
	"requests.cookies" -> "calendar" [];
	"requests.cookies" -> "copy" [];
	"requests.cookies" -> "time" [];
	"requests.cookies" -> "threading" [];
	"requests.cookies" -> "dummy_threading" [];
	"requests.auth" -> "hashlib" [];
	"requests.auth" -> "os" [];
	"requests.auth" -> "re" [];
	"requests.auth" -> "threading" [];
	"requests.auth" -> "time" [];
	"requests.auth" -> "warnings" [];
	"requests.auth" -> "base64" [];
	"requests._internal_utils" -> "re" [];
	"urllib3.util" -> "__future__" [];
	"urllib3.util.wait" -> "__future__" [];
	"urllib3.util.wait" -> "select" [];
	"urllib3.util.wait" -> "socket" [];
	"urllib3.util.wait" -> "functools" [];
	"urllib3.util.url" -> "__future__" [];
	"urllib3.util.url" -> "re" [];
	"urllib3.util.url" -> "typing" [];
	"urllib3.util.url" -> "idna" [];
	"urllib3.util.util" -> "__future__" [];
	"urllib3.util.util" -> "typing" [];
	"urllib3.util.util" -> "types" [];
	"urllib3.util.timeout" -> "__future__" [];
	"urllib3.util.timeout" -> "time" [];
	"urllib3.util.timeout" -> "typing" [];
	"urllib3.util.timeout" -> "enum" [];
	"urllib3.util.timeout" -> "socket" [];
	"urllib3.util.ssl_" -> "__future__" [];
	"urllib3.util.ssl_" -> "hashlib" [];
	"urllib3.util.ssl_" -> "hmac" [];
	"urllib3.util.ssl_" -> "os" [];
	"urllib3.util.ssl_" -> "socket" [];
	"urllib3.util.ssl_" -> "sys" [];
	"urllib3.util.ssl_" -> "typing" [];
	"urllib3.util.ssl_" -> "warnings" [];
	"urllib3.util.ssl_" -> "binascii" [];
	"urllib3.util.ssl_" -> "ssl" [];
	"urllib3.util.ssltransport" -> "__future__" [];
	"urllib3.util.ssltransport" -> "io" [];
	"urllib3.util.ssltransport" -> "socket" [];
	"urllib3.util.ssltransport" -> "ssl" [];
	"urllib3.util.ssltransport" -> "typing" [];
	"urllib3.util.ssltransport" -> "typing_extensions" [];
	"urllib3.util.retry" -> "__future__" [];
	"urllib3.util.retry" -> "email" [];
	"urllib3.util.retry" -> "logging" [];
	"urllib3.util.retry" -> "random" [];
	"urllib3.util.retry" -> "re" [];
	"urllib3.util.retry" -> "time" [];
	"urllib3.util.retry" -> "typing" [];
	"urllib3.util.retry" -> "itertools" [];
	"urllib3.util.retry" -> "types" [];
	"urllib3.util.retry" -> "typing_extensions" [];
	"urllib3.response" -> "__future__" [];
	"urllib3.response" -> "collections" [];
	"urllib3.response" -> "io" [];
	"urllib3.response" -> "json" [];
	"urllib3.response" -> "logging" [];
	"urllib3.response" -> "re" [];
	"urllib3.response" -> "socket" [];
	"urllib3.response" -> "sys" [];
	"urllib3.response" -> "typing" [];
	"urllib3.response" -> "warnings" [];
	"urllib3.response" -> "zlib" [];
	"urllib3.response" -> "contextlib" [];
	"urllib3.response" -> "brotlicffi" [];
	"urllib3.response" -> "brotli" [];
	"urllib3.response" -> "zstandard" [];
	"urllib3.connection" -> "__future__" [];
	"urllib3.connection" -> "datetime" [];
	"urllib3.connection" -> "logging" [];
	"urllib3.connection" -> "os" [];
	"urllib3.connection" -> "re" [];
	"urllib3.connection" -> "socket" [];
	"urllib3.connection" -> "sys" [];
	"urllib3.connection" -> "threading" [];
	"urllib3.connection" -> "typing" [];
	"urllib3.connection" -> "warnings" [];
	"urllib3.connection" -> "ssl" [];
	"urllib3.util.ssl_match_hostname" -> "__future__" [];
	"urllib3.util.ssl_match_hostname" -> "ipaddress" [];
	"urllib3.util.ssl_match_hostname" -> "re" [];
	"urllib3.util.ssl_match_hostname" -> "typing" [];
	"ipaddress" -> "functools" [];
	"ipaddress" -> "re" [];
	"urllib3._version" -> "typing" [];
	"urllib3.http2.probe" -> "__future__" [];
	"urllib3.http2.probe" -> "threading" [];
	"urllib3.http2" -> "__future__" [];
	"urllib3.http2" -> "typing" [];
	"urllib3.http2.connection" -> "__future__" [];
	"urllib3.http2.connection" -> "logging" [];
	"urllib3.http2.connection" -> "re" [];
	"urllib3.http2.connection" -> "threading" [];
	"urllib3.http2.connection" -> "types" [];
	"urllib3.http2.connection" -> "typing" [];
	"urllib3.http2.connection" -> "h2" [];
	"urllib3.http2.connection" -> "'h2.connection'" [];
	"urllib3.http2.connection" -> "'h2.events'" [];
	"urllib3._collections" -> "__future__" [];
	"urllib3._collections" -> "typing" [];
	"urllib3._collections" -> "collections" [];
	"urllib3._collections" -> "enum" [];
	"urllib3._collections" -> "threading" [];
	"urllib3._collections" -> "typing_extensions" [];
	"zstandard" -> "__future__" [];
	"zstandard" -> "builtins" [];
	"zstandard" -> "io" [];
	"zstandard" -> "os" [];
	"zstandard" -> "platform" [];
	"zstandard" -> "typing" [];
	"zstandard.backend_cffi" -> "__future__" [];
	"zstandard.backend_cffi" -> "io" [];
	"zstandard.backend_cffi" -> "os" [];
	"urllib3._base_connection" -> "__future__" [];
	"urllib3._base_connection" -> "typing" [];
	"urllib3._base_connection" -> "ssl" [];
	"urllib3.connectionpool" -> "__future__" [];
	"urllib3.connectionpool" -> "errno" [];
	"urllib3.connectionpool" -> "logging" [];
	"urllib3.connectionpool" -> "queue" [];
	"urllib3.connectionpool" -> "sys" [];
	"urllib3.connectionpool" -> "typing" [];
	"urllib3.connectionpool" -> "warnings" [];
	"urllib3.connectionpool" -> "weakref" [];
	"urllib3.connectionpool" -> "socket" [];
	"urllib3.connectionpool" -> "types" [];
	"urllib3.connectionpool" -> "ssl" [];
	"urllib3.connectionpool" -> "typing_extensions" [];
	"urllib3.util.proxy" -> "__future__" [];
	"urllib3.util.proxy" -> "typing" [];
	"urllib3._request_methods" -> "__future__" [];
	"urllib3._request_methods" -> "json" [];
	"urllib3._request_methods" -> "typing" [];
	"urllib3.util.response" -> "__future__" [];
	"urllib3.util.request" -> "__future__" [];
	"urllib3.util.request" -> "io" [];
	"urllib3.util.request" -> "typing" [];
	"urllib3.util.request" -> "base64" [];
	"urllib3.util.request" -> "enum" [];
	"urllib3.util.request" -> "brotlicffi" [];
	"urllib3.util.request" -> "brotli" [];
	"urllib3.util.request" -> "zstandard" [];
	"urllib3.util.connection" -> "__future__" [];
	"urllib3.util.connection" -> "socket" [];
	"urllib3.util.connection" -> "typing" [];
	"urllib3.filepost" -> "__future__" [];
	"urllib3.filepost" -> "binascii" [];
	"urllib3.filepost" -> "codecs" [];
	"urllib3.filepost" -> "os" [];
	"urllib3.filepost" -> "typing" [];
	"urllib3.filepost" -> "io" [];
	"urllib3.fields" -> "__future__" [];
	"urllib3.fields" -> "mimetypes" [];
	"urllib3.fields" -> "typing" [];
	"urllib3.fields" -> "warnings" [];
	"requests.sessions" -> "os" [];
	"requests.sessions" -> "sys" [];
	"requests.sessions" -> "time" [];
	"requests.sessions" -> "collections" [];
	"requests.sessions" -> "datetime" [];
	"requests.adapters" -> "os.path" [];
	"requests.adapters" -> "socket" [];
	"requests.adapters" -> "typing" [];
	"requests.adapters" -> "warnings" [];
	"requests.adapters" -> "ssl" [];
	"urllib3.contrib.socks" -> "__future__" [];
	"urllib3.contrib.socks" -> "socks" [];
	"urllib3.contrib.socks" -> "warnings" [];
	"urllib3.contrib.socks" -> "typing" [];
	"urllib3.contrib.socks" -> "socket" [];
	"urllib3.contrib.socks" -> "ssl" [];
	"urllib3.poolmanager" -> "__future__" [];
	"urllib3.poolmanager" -> "functools" [];
	"urllib3.poolmanager" -> "logging" [];
	"urllib3.poolmanager" -> "typing" [];
	"urllib3.poolmanager" -> "warnings" [];
	"urllib3.poolmanager" -> "types" [];
	"urllib3.poolmanager" -> "ssl" [];
	"urllib3.poolmanager" -> "typing_extensions" [];
	"requests.utils" -> "codecs" [];
	"requests.utils" -> "contextlib" [];
	"requests.utils" -> "io" [];
	"requests.utils" -> "os" [];
	"requests.utils" -> "re" [];
	"requests.utils" -> "socket" [];
	"requests.utils" -> "struct" [];
	"requests.utils" -> "sys" [];
	"requests.utils" -> "tempfile" [];
	"requests.utils" -> "warnings" [];
	"requests.utils" -> "zipfile" [];
	"requests.utils" -> "collections" [];
	"requests.utils" -> "winreg" [];
	"requests.utils" -> "netrc" [];
	"requests.certs" -> "certifi" [];
	"certifi.core" -> "sys" [];
	"certifi.core" -> "atexit" [];
	"certifi.core" -> "os" [];
	"certifi.core" -> "types" [];
	"certifi.core" -> "typing" [];
	"importlib.resources" -> "os" [];
	"importlib.resources" -> "contextlib" [];
	"importlib.resources" -> "io" [];
	"importlib.resources" -> "pathlib" [];
	"importlib.resources" -> "types" [];
	"importlib.resources" -> "typing" [];
	"importlib.resources" -> "'typing.io'" [];
	"requests.packages" -> "sys" [];
	"urllib3.exceptions" -> "__future__" [];
	"urllib3.exceptions" -> "socket" [];
	"urllib3.exceptions" -> "typing" [];
	"urllib3.exceptions" -> "warnings" [];
	"cryptography" -> "__future__" [];
	"cryptography" -> "sys" [];
	"cryptography" -> "warnings" [];
	"cryptography" -> "_cffi_backend" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "__future__" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "os" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "sys" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "threading" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "types" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "typing" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "warnings" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "cryptography" [];
	"cryptography.hazmat" -> "__future__" [];
	"cryptography.exceptions" -> "__future__" [];
	"cryptography.exceptions" -> "typing" [];
	"cryptography.hazmat.bindings.openssl._conditional" -> "__future__" [];
	"cryptography.hazmat.backends.openssl.backend" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.modes" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.modes" -> "abc" [];
	"cryptography.hazmat.primitives.ciphers.modes" -> "cryptography" [];
	"cryptography.hazmat.primitives._cipheralgorithm" -> "__future__" [];
	"cryptography.hazmat.primitives._cipheralgorithm" -> "abc" [];
	"cryptography.hazmat.primitives._cipheralgorithm" -> "cryptography" [];
	"cryptography.hazmat.primitives.ciphers.algorithms" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.algorithms" -> "cryptography" [];
	"cryptography.hazmat.decrepit.ciphers.algorithms" -> "__future__" [];
	"cryptography.hazmat.decrepit.ciphers" -> "__future__" [];
	"cryptography.hazmat.decrepit" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.base" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.base" -> "abc" [];
	"cryptography.hazmat.primitives.ciphers.base" -> "typing" [];
	"cryptography.hazmat.primitives.asymmetric.padding" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.padding" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "random" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "typing" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "math" [];
	"cryptography.hazmat.primitives._serialization" -> "__future__" [];
	"cryptography.hazmat.primitives._serialization" -> "abc" [];
	"cryptography.hazmat.primitives._serialization" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.utils" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.ec" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.ec" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.ec" -> "typing" [];
	"cryptography.hazmat.primitives.asymmetric.ec" -> "cryptography" [];
	"cryptography.hazmat._oid" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.dh" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.dh" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.x25519" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.x25519" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.x448" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.x448" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.ed25519" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.ed25519" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.ed448" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.ed448" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.dsa" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.dsa" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.dsa" -> "typing" [];
	"cryptography.hazmat.primitives._asymmetric" -> "__future__" [];
	"cryptography.hazmat.primitives._asymmetric" -> "abc" [];
	"cryptography.hazmat.primitives.hashes" -> "__future__" [];
	"cryptography.hazmat.primitives.hashes" -> "abc" [];
	"cryptography.hazmat.primitives.padding" -> "__future__" [];
	"cryptography.hazmat.primitives.padding" -> "abc" [];
	"cryptography.hazmat.primitives.padding" -> "typing" [];
	"cryptography.hazmat.primitives.padding" -> "cryptography" [];
	"cryptography.hazmat.primitives.serialization" -> "__future__" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "__future__" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "binascii" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "enum" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "os" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "re" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "typing" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "warnings" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "base64" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "dataclasses" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "cryptography" [];
	"cryptography.hazmat.primitives.serialization.ssh" -> "bcrypt" [];
	"cryptography.hazmat.primitives.constant_time" -> "__future__" [];
	"cryptography.hazmat.primitives.constant_time" -> "hmac" [];
	"cryptography.hazmat.backends.openssl" -> "__future__" [];
	"cryptography.hazmat.backends" -> "__future__" [];
	"cryptography.hazmat.backends" -> "typing" [];
	"cryptography.x509" -> "__future__" [];
	"cryptography.x509.oid" -> "__future__" [];
	"cryptography.x509.name" -> "__future__" [];
	"cryptography.x509.name" -> "binascii" [];
	"cryptography.x509.name" -> "re" [];
	"cryptography.x509.name" -> "sys" [];
	"cryptography.x509.name" -> "typing" [];
	"cryptography.x509.name" -> "warnings" [];
	"cryptography.x509.name" -> "cryptography" [];
	"cryptography.x509.general_name" -> "__future__" [];
	"cryptography.x509.general_name" -> "abc" [];
	"cryptography.x509.general_name" -> "ipaddress" [];
	"cryptography.x509.general_name" -> "typing" [];
	"cryptography.x509.extensions" -> "__future__" [];
	"cryptography.x509.extensions" -> "abc" [];
	"cryptography.x509.extensions" -> "datetime" [];
	"cryptography.x509.extensions" -> "hashlib" [];
	"cryptography.x509.extensions" -> "ipaddress" [];
	"cryptography.x509.extensions" -> "typing" [];
	"cryptography.x509.extensions" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.types" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.types" -> "typing" [];
	"cryptography.hazmat.primitives.asymmetric.types" -> "cryptography" [];
	"cryptography.x509.base" -> "__future__" [];
	"cryptography.x509.base" -> "abc" [];
	"cryptography.x509.base" -> "datetime" [];
	"cryptography.x509.base" -> "os" [];
	"cryptography.x509.base" -> "typing" [];
	"cryptography.x509.base" -> "warnings" [];
	"cryptography.x509.base" -> "cryptography" [];
	"cryptography.x509.verification" -> "__future__" [];
	"cryptography.x509.verification" -> "typing" [];
	"cryptography.x509.certificate_transparency" -> "__future__" [];
	"cryptography.x509.certificate_transparency" -> "cryptography" [];
	"cryptography.__about__" -> "__future__" [];
	"cryptography.utils" -> "__future__" [];
	"cryptography.utils" -> "enum" [];
	"cryptography.utils" -> "sys" [];
	"cryptography.utils" -> "types" [];
	"cryptography.utils" -> "typing" [];
	"cryptography.utils" -> "warnings" [];
	"urllib3.contrib.pyopenssl" -> "__future__" [];
	"urllib3.contrib.pyopenssl" -> "OpenSSL" [];
	"urllib3.contrib.pyopenssl" -> "cryptography" [];
	"urllib3.contrib.pyopenssl" -> "logging" [];
	"urllib3.contrib.pyopenssl" -> "ssl" [];
	"urllib3.contrib.pyopenssl" -> "typing" [];
	"urllib3.contrib.pyopenssl" -> "io" [];
	"urllib3.contrib.pyopenssl" -> "socket" [];
	"urllib3.contrib.pyopenssl" -> "'OpenSSL.crypto'" [];
	"urllib3.contrib.pyopenssl" -> "idna" [];
	"charset_normalizer" -> "__future__" [];
	"charset_normalizer" -> "logging" [];
	"charset_normalizer.version" -> "__future__" [];
	"charset_normalizer.utils" -> "__future__" [];
	"charset_normalizer.utils" -> "importlib" [];
	"charset_normalizer.utils" -> "logging" [];
	"charset_normalizer.utils" -> "unicodedata" [];
	"charset_normalizer.utils" -> "codecs" [];
	"charset_normalizer.utils" -> "functools" [];
	"charset_normalizer.utils" -> "re" [];
	"charset_normalizer.utils" -> "typing" [];
	"charset_normalizer.utils" -> "_multibytecodec" [];
	"charset_normalizer.constant" -> "__future__" [];
	"charset_normalizer.constant" -> "codecs" [];
	"charset_normalizer.constant" -> "re" [];
	"charset_normalizer.models" -> "__future__" [];
	"charset_normalizer.models" -> "hashlib" [];
	"charset_normalizer.models" -> "json" [];
	"charset_normalizer.models" -> "re" [];
	"charset_normalizer.models" -> "typing" [];
	"charset_normalizer.cd" -> "__future__" [];
	"charset_normalizer.cd" -> "importlib" [];
	"charset_normalizer.cd" -> "codecs" [];
	"charset_normalizer.cd" -> "collections" [];
	"charset_normalizer.cd" -> "functools" [];
	"charset_normalizer.cd" -> "typing" [];
	"charset_normalizer.md" -> "__future__" [];
	"charset_normalizer.md" -> "functools" [];
	"charset_normalizer.md" -> "logging" [];
	"charset_normalizer.legacy" -> "__future__" [];
	"charset_normalizer.legacy" -> "typing" [];
	"charset_normalizer.legacy" -> "warnings" [];
	"charset_normalizer.legacy" -> "typing_extensions" [];
	"charset_normalizer.api" -> "__future__" [];
	"charset_normalizer.api" -> "logging" [];
	"charset_normalizer.api" -> "os" [];
	"charset_normalizer.api" -> "typing" [];
	"urllib3" -> "__future__" [];
	"urllib3" -> "logging" [];
	"urllib3" -> "sys" [];
	"urllib3" -> "typing" [];
	"urllib3" -> "warnings" [];
	"urllib3" -> "ssl" [];
	"urllib3.contrib.emscripten" -> "__future__" [];
	"urllib3.contrib.emscripten.connection" -> "__future__" [];
	"urllib3.contrib.emscripten.connection" -> "os" [];
	"urllib3.contrib.emscripten.connection" -> "typing" [];
	"urllib3.contrib.emscripten.response" -> "__future__" [];
	"urllib3.contrib.emscripten.response" -> "json" [];
	"urllib3.contrib.emscripten.response" -> "logging" [];
	"urllib3.contrib.emscripten.response" -> "typing" [];
	"urllib3.contrib.emscripten.response" -> "contextlib" [];
	"urllib3.contrib.emscripten.response" -> "dataclasses" [];
	"urllib3.contrib.emscripten.response" -> "io" [];
	"urllib3.contrib.emscripten.request" -> "__future__" [];
	"urllib3.contrib.emscripten.request" -> "dataclasses" [];
	"urllib3.contrib.emscripten.fetch" -> "__future__" [];
	"urllib3.contrib.emscripten.fetch" -> "io" [];
	"urllib3.contrib.emscripten.fetch" -> "json" [];
	"urllib3.contrib.emscripten.fetch" -> "typing" [];
	"urllib3.contrib.emscripten.fetch" -> "js" [];
	"urllib3.contrib.emscripten.fetch" -> "pyodide" [];
	"urllib3.contrib.emscripten.fetch" -> "typing_extensions" [];
	"urllib3.contrib.emscripten.fetch" -> "'pyodide.ffi'" [];
	"pyarrow.ipc" -> "os" [];
	"pyarrow.fs" -> "atexit" [];
	"pyarrow.fs" -> "fsspec" [];
	"fsspec.utils" -> "__future__" [];
	"fsspec.utils" -> "contextlib" [];
	"fsspec.utils" -> "logging" [];
	"fsspec.utils" -> "math" [];
	"fsspec.utils" -> "os" [];
	"fsspec.utils" -> "re" [];
	"fsspec.utils" -> "sys" [];
	"fsspec.utils" -> "tempfile" [];
	"fsspec.utils" -> "functools" [];
	"fsspec.utils" -> "hashlib" [];
	"fsspec.utils" -> "typing" [];
	"fsspec.utils" -> "pathlib" [];
	"fsspec.utils" -> "typing_extensions" [];
	"fsspec.utils" -> "importlib" [];
	"fsspec.transaction" -> "collections" [];
	"fsspec.transaction" -> "distributed" [];
	"fsspec.parquet" -> "io" [];
	"fsspec.parquet" -> "json" [];
	"fsspec.parquet" -> "warnings" [];
	"fsspec.parquet" -> "fastparquet" [];
	"fsspec.json" -> "json" [];
	"fsspec.json" -> "contextlib" [];
	"fsspec.json" -> "pathlib" [];
	"fsspec.json" -> "typing" [];
	"fsspec.implementations.zip" -> "os" [];
	"fsspec.implementations.zip" -> "zipfile" [];
	"fsspec.implementations.zip" -> "fsspec" [];
	"fsspec.implementations.webhdfs" -> "logging" [];
	"fsspec.implementations.webhdfs" -> "os" [];
	"fsspec.implementations.webhdfs" -> "secrets" [];
	"fsspec.implementations.webhdfs" -> "shutil" [];
	"fsspec.implementations.webhdfs" -> "tempfile" [];
	"fsspec.implementations.webhdfs" -> "uuid" [];
	"fsspec.implementations.webhdfs" -> "contextlib" [];
	"fsspec.implementations.webhdfs" -> "requests" [];
	"fsspec.implementations.webhdfs" -> "requests_kerberos" [];
	"fsspec.implementations.tar" -> "logging" [];
	"fsspec.implementations.tar" -> "tarfile" [];
	"fsspec.implementations.tar" -> "fsspec" [];
	"fsspec.implementations.smb" -> "datetime" [];
	"fsspec.implementations.smb" -> "re" [];
	"fsspec.implementations.smb" -> "uuid" [];
	"fsspec.implementations.smb" -> "stat" [];
	"fsspec.implementations.smb" -> "smbclient" [];
	"fsspec.implementations.smb" -> "smbprotocol" [];
	"fsspec.implementations.smb" -> "fsspec" [];
	"fsspec.implementations.smb" -> "time" [];
	"fsspec.implementations.sftp" -> "datetime" [];
	"fsspec.implementations.sftp" -> "logging" [];
	"fsspec.implementations.sftp" -> "os" [];
	"fsspec.implementations.sftp" -> "types" [];
	"fsspec.implementations.sftp" -> "uuid" [];
	"fsspec.implementations.sftp" -> "stat" [];
	"fsspec.implementations.sftp" -> "paramiko" [];
	"fsspec.implementations.sftp" -> "fsspec" [];
	"fsspec.implementations.reference" -> "base64" [];
	"fsspec.implementations.reference" -> "collections" [];
	"fsspec.implementations.reference" -> "io" [];
	"fsspec.implementations.reference" -> "itertools" [];
	"fsspec.implementations.reference" -> "logging" [];
	"fsspec.implementations.reference" -> "math" [];
	"fsspec.implementations.reference" -> "os" [];
	"fsspec.implementations.reference" -> "functools" [];
	"fsspec.implementations.reference" -> "typing" [];
	"fsspec.implementations.reference" -> "ujson" [];
	"fsspec.implementations.reference" -> "json" [];
	"fsspec.implementations.reference" -> "numpy" [];
	"fsspec.implementations.reference" -> "pandas" [];
	"fsspec.implementations.reference" -> "kerchunk" [];
	"fsspec.implementations.reference" -> "jinja2" [];
	"fsspec.implementations.memory" -> "__future__" [];
	"fsspec.implementations.memory" -> "logging" [];
	"fsspec.implementations.memory" -> "datetime" [];
	"fsspec.implementations.memory" -> "errno" [];
	"fsspec.implementations.memory" -> "io" [];
	"fsspec.implementations.memory" -> "pathlib" [];
	"fsspec.implementations.memory" -> "typing" [];
	"fsspec.implementations.memory" -> "fsspec" [];
	"fsspec.implementations.local" -> "datetime" [];
	"fsspec.implementations.local" -> "io" [];
	"fsspec.implementations.local" -> "logging" [];
	"fsspec.implementations.local" -> "os" [];
	"fsspec.implementations.local" -> "os.path" [];
	"fsspec.implementations.local" -> "shutil" [];
	"fsspec.implementations.local" -> "stat" [];
	"fsspec.implementations.local" -> "tempfile" [];
	"fsspec.implementations.local" -> "fsspec" [];
	"fsspec.implementations.libarchive" -> "contextlib" [];
	"fsspec.implementations.libarchive" -> "ctypes" [];
	"fsspec.implementations.libarchive" -> "libarchive" [];
	"fsspec.implementations.libarchive" -> "'libarchive.ffi'" [];
	"fsspec.implementations.libarchive" -> "fsspec" [];
	"fsspec.implementations.jupyter" -> "base64" [];
	"fsspec.implementations.jupyter" -> "io" [];
	"fsspec.implementations.jupyter" -> "re" [];
	"fsspec.implementations.jupyter" -> "requests" [];
	"fsspec.implementations.jupyter" -> "fsspec" [];
	"fsspec.implementations.http" -> "asyncio" [];
	"fsspec.implementations.http" -> "io" [];
	"fsspec.implementations.http" -> "logging" [];
	"fsspec.implementations.http" -> "re" [];
	"fsspec.implementations.http" -> "weakref" [];
	"fsspec.implementations.http" -> "copy" [];
	"fsspec.implementations.http" -> "aiohttp" [];
	"fsspec.implementations.http" -> "yarl" [];
	"yarl._url" -> "re" [];
	"yarl._url" -> "sys" [];
	"yarl._url" -> "warnings" [];
	"yarl._url" -> "enum" [];
	"yarl._url" -> "functools" [];
	"yarl._url" -> "ipaddress" [];
	"yarl._url" -> "typing" [];
	"yarl._url" -> "idna" [];
	"yarl._url" -> "multidict" [];
	"yarl._quoters" -> "typing" [];
	"yarl._quoting" -> "os" [];
	"yarl._quoting" -> "sys" [];
	"yarl._quoting" -> "typing" [];
	"yarl._quoting_py" -> "codecs" [];
	"yarl._quoting_py" -> "re" [];
	"yarl._quoting_py" -> "string" [];
	"yarl._quoting_py" -> "typing" [];
	"yarl._path" -> "contextlib" [];
	"yarl._parse" -> "re" [];
	"yarl._parse" -> "unicodedata" [];
	"yarl._parse" -> "functools" [];
	"yarl._parse" -> "typing" [];
	"propcache" -> "typing" [];
	"propcache._helpers" -> "os" [];
	"propcache._helpers" -> "sys" [];
	"propcache._helpers" -> "typing" [];
	"propcache._helpers_py" -> "sys" [];
	"propcache._helpers_py" -> "functools" [];
	"propcache._helpers_py" -> "typing" [];
	"multidict" -> "typing" [];
	"multidict._multidict_py" -> "enum" [];
	"multidict._multidict_py" -> "reprlib" [];
	"multidict._multidict_py" -> "sys" [];
	"multidict._multidict_py" -> "abc" [];
	"multidict._multidict_py" -> "array" [];
	"multidict._multidict_py" -> "typing" [];
	"multidict._multidict_py" -> "typing_extensions" [];
	"multidict._compat" -> "os" [];
	"multidict._compat" -> "platform" [];
	"multidict._abc" -> "abc" [];
	"multidict._abc" -> "typing" [];
	"yarl._query" -> "math" [];
	"yarl._query" -> "typing" [];
	"yarl._query" -> "multidict" [];
	"aiohttp" -> "typing" [];
	"aiohttp.worker" -> "asyncio" [];
	"aiohttp.worker" -> "inspect" [];
	"aiohttp.worker" -> "os" [];
	"aiohttp.worker" -> "re" [];
	"aiohttp.worker" -> "signal" [];
	"aiohttp.worker" -> "sys" [];
	"aiohttp.worker" -> "types" [];
	"aiohttp.worker" -> "typing" [];
	"aiohttp.worker" -> "gunicorn" [];
	"aiohttp.worker" -> "'gunicorn.workers'" [];
	"aiohttp.worker" -> "ssl" [];
	"aiohttp.worker" -> "uvloop" [];
	"aiohttp.web_log" -> "datetime" [];
	"aiohttp.web_log" -> "functools" [];
	"aiohttp.web_log" -> "logging" [];
	"aiohttp.web_log" -> "os" [];
	"aiohttp.web_log" -> "re" [];
	"aiohttp.web_log" -> "time" [];
	"aiohttp.web_log" -> "collections" [];
	"aiohttp.web_log" -> "typing" [];
	"aiohttp.web_response" -> "asyncio" [];
	"aiohttp.web_response" -> "datetime" [];
	"aiohttp.web_response" -> "enum" [];
	"aiohttp.web_response" -> "json" [];
	"aiohttp.web_response" -> "math" [];
	"aiohttp.web_response" -> "time" [];
	"aiohttp.web_response" -> "warnings" [];
	"aiohttp.web_response" -> "zlib" [];
	"aiohttp.web_response" -> "http" [];
	"aiohttp.web_response" -> "typing" [];
	"aiohttp.web_response" -> "multidict" [];
	"aiohttp.typedefs" -> "json" [];
	"aiohttp.typedefs" -> "os" [];
	"aiohttp.typedefs" -> "typing" [];
	"aiohttp.typedefs" -> "multidict" [];
	"aiohttp.typedefs" -> "yarl" [];
	"aiohttp.compression_utils" -> "asyncio" [];
	"aiohttp.compression_utils" -> "zlib" [];
	"aiohttp.compression_utils" -> "typing" [];
	"aiohttp.compression_utils" -> "brotlicffi" [];
	"aiohttp.compression_utils" -> "brotli" [];
	"aiohttp.web_request" -> "asyncio" [];
	"aiohttp.web_request" -> "datetime" [];
	"aiohttp.web_request" -> "io" [];
	"aiohttp.web_request" -> "re" [];
	"aiohttp.web_request" -> "socket" [];
	"aiohttp.web_request" -> "string" [];
	"aiohttp.web_request" -> "tempfile" [];
	"aiohttp.web_request" -> "types" [];
	"aiohttp.web_request" -> "warnings" [];
	"aiohttp.web_request" -> "typing" [];
	"aiohttp.web_request" -> "attr" [];
	"aiohttp.web_request" -> "multidict" [];
	"aiohttp.web_request" -> "yarl" [];
	"aiohttp.web_urldispatcher" -> "abc" [];
	"aiohttp.web_urldispatcher" -> "asyncio" [];
	"aiohttp.web_urldispatcher" -> "base64" [];
	"aiohttp.web_urldispatcher" -> "functools" [];
	"aiohttp.web_urldispatcher" -> "hashlib" [];
	"aiohttp.web_urldispatcher" -> "html" [];
	"aiohttp.web_urldispatcher" -> "inspect" [];
	"aiohttp.web_urldispatcher" -> "keyword" [];
	"aiohttp.web_urldispatcher" -> "os" [];
	"aiohttp.web_urldispatcher" -> "re" [];
	"aiohttp.web_urldispatcher" -> "sys" [];
	"aiohttp.web_urldispatcher" -> "warnings" [];
	"aiohttp.web_urldispatcher" -> "pathlib" [];
	"aiohttp.web_urldispatcher" -> "types" [];
	"aiohttp.web_urldispatcher" -> "typing" [];
	"aiohttp.web_urldispatcher" -> "yarl" [];
	"aiohttp.web_routedef" -> "abc" [];
	"aiohttp.web_routedef" -> "os" [];
	"aiohttp.web_routedef" -> "typing" [];
	"aiohttp.web_routedef" -> "attr" [];
	"aiohttp.web_fileresponse" -> "asyncio" [];
	"aiohttp.web_fileresponse" -> "io" [];
	"aiohttp.web_fileresponse" -> "os" [];
	"aiohttp.web_fileresponse" -> "pathlib" [];
	"aiohttp.web_fileresponse" -> "sys" [];
	"aiohttp.web_fileresponse" -> "contextlib" [];
	"aiohttp.web_fileresponse" -> "enum" [];
	"aiohttp.web_fileresponse" -> "mimetypes" [];
	"aiohttp.web_fileresponse" -> "stat" [];
	"aiohttp.web_fileresponse" -> "types" [];
	"aiohttp.web_fileresponse" -> "typing" [];
	"aiohttp.web_protocol" -> "asyncio" [];
	"aiohttp.web_protocol" -> "sys" [];
	"aiohttp.web_protocol" -> "traceback" [];
	"aiohttp.web_protocol" -> "warnings" [];
	"aiohttp.web_protocol" -> "collections" [];
	"aiohttp.web_protocol" -> "contextlib" [];
	"aiohttp.web_protocol" -> "html" [];
	"aiohttp.web_protocol" -> "http" [];
	"aiohttp.web_protocol" -> "logging" [];
	"aiohttp.web_protocol" -> "typing" [];
	"aiohttp.web_protocol" -> "attr" [];
	"aiohttp.web_protocol" -> "yarl" [];
	"aiohttp.web_protocol" -> "propcache" [];
	"aiohttp.web_protocol" -> "ssl" [];
	"aiohttp.web_server" -> "asyncio" [];
	"aiohttp.web_server" -> "typing" [];
	"aiohttp.tcp_helpers" -> "asyncio" [];
	"aiohttp.tcp_helpers" -> "socket" [];
	"aiohttp.tcp_helpers" -> "contextlib" [];
	"aiohttp.tcp_helpers" -> "typing" [];
	"aiohttp.log" -> "logging" [];
	"aiohttp.http_exceptions" -> "textwrap" [];
	"aiohttp.http_exceptions" -> "typing" [];
	"aiohttp.base_protocol" -> "asyncio" [];
	"aiohttp.base_protocol" -> "typing" [];
	"aiohttp.client_exceptions" -> "asyncio" [];
	"aiohttp.client_exceptions" -> "warnings" [];
	"aiohttp.client_exceptions" -> "typing" [];
	"aiohttp.client_exceptions" -> "multidict" [];
	"aiohttp.client_exceptions" -> "ssl" [];
	"aiohttp.client_reqrep" -> "asyncio" [];
	"aiohttp.client_reqrep" -> "codecs" [];
	"aiohttp.client_reqrep" -> "contextlib" [];
	"aiohttp.client_reqrep" -> "functools" [];
	"aiohttp.client_reqrep" -> "io" [];
	"aiohttp.client_reqrep" -> "re" [];
	"aiohttp.client_reqrep" -> "sys" [];
	"aiohttp.client_reqrep" -> "traceback" [];
	"aiohttp.client_reqrep" -> "warnings" [];
	"aiohttp.client_reqrep" -> "hashlib" [];
	"aiohttp.client_reqrep" -> "types" [];
	"aiohttp.client_reqrep" -> "typing" [];
	"aiohttp.client_reqrep" -> "attr" [];
	"aiohttp.client_reqrep" -> "multidict" [];
	"aiohttp.client_reqrep" -> "yarl" [];
	"aiohttp.client_reqrep" -> "ssl" [];
	"aiohttp.connector" -> "asyncio" [];
	"aiohttp.connector" -> "functools" [];
	"aiohttp.connector" -> "random" [];
	"aiohttp.connector" -> "socket" [];
	"aiohttp.connector" -> "sys" [];
	"aiohttp.connector" -> "traceback" [];
	"aiohttp.connector" -> "warnings" [];
	"aiohttp.connector" -> "collections" [];
	"aiohttp.connector" -> "contextlib" [];
	"aiohttp.connector" -> "http" [];
	"aiohttp.connector" -> "itertools" [];
	"aiohttp.connector" -> "time" [];
	"aiohttp.connector" -> "types" [];
	"aiohttp.connector" -> "typing" [];
	"aiohttp.connector" -> "aiohappyeyeballs" [];
	"aiohttp.connector" -> "ssl" [];
	"aiohttp.client_proto" -> "asyncio" [];
	"aiohttp.client_proto" -> "contextlib" [];
	"aiohttp.client_proto" -> "typing" [];
	"aiohappyeyeballs.utils" -> "ipaddress" [];
	"aiohappyeyeballs.utils" -> "socket" [];
	"aiohappyeyeballs.utils" -> "typing" [];
	"aiohappyeyeballs.types" -> "socket" [];
	"aiohappyeyeballs.types" -> "typing" [];
	"aiohappyeyeballs.impl" -> "asyncio" [];
	"aiohappyeyeballs.impl" -> "collections" [];
	"aiohappyeyeballs.impl" -> "contextlib" [];
	"aiohappyeyeballs.impl" -> "functools" [];
	"aiohappyeyeballs.impl" -> "itertools" [];
	"aiohappyeyeballs.impl" -> "socket" [];
	"aiohappyeyeballs.impl" -> "typing" [];
	"aiohappyeyeballs._staggered" -> "asyncio" [];
	"aiohappyeyeballs._staggered" -> "contextlib" [];
	"aiohappyeyeballs._staggered" -> "typing" [];
	"aiohttp.web_exceptions" -> "warnings" [];
	"aiohttp.web_exceptions" -> "typing" [];
	"aiohttp.web_exceptions" -> "yarl" [];
	"aiohttp.http_writer" -> "asyncio" [];
	"aiohttp.http_writer" -> "sys" [];
	"aiohttp.http_writer" -> "zlib" [];
	"aiohttp.http_writer" -> "typing" [];
	"aiohttp.http_writer" -> "multidict" [];
	"aiohttp.http_parser" -> "abc" [];
	"aiohttp.http_parser" -> "asyncio" [];
	"aiohttp.http_parser" -> "re" [];
	"aiohttp.http_parser" -> "string" [];
	"aiohttp.http_parser" -> "contextlib" [];
	"aiohttp.http_parser" -> "enum" [];
	"aiohttp.http_parser" -> "typing" [];
	"aiohttp.http_parser" -> "multidict" [];
	"aiohttp.http_parser" -> "yarl" [];
	"attr" -> "functools" [];
	"attr" -> "typing" [];
	"attr._version_info" -> "functools" [];
	"attr._next_gen" -> "functools" [];
	"attr._make" -> "__future__" [];
	"attr._make" -> "abc" [];
	"attr._make" -> "contextlib" [];
	"attr._make" -> "copy" [];
	"attr._make" -> "enum" [];
	"attr._make" -> "inspect" [];
	"attr._make" -> "itertools" [];
	"attr._make" -> "linecache" [];
	"attr._make" -> "sys" [];
	"attr._make" -> "types" [];
	"attr._make" -> "unicodedata" [];
	"attr._make" -> "functools" [];
	"attr._make" -> "typing" [];
	"attr._make" -> "warnings" [];
	"attr._compat" -> "inspect" [];
	"attr._compat" -> "platform" [];
	"attr._compat" -> "sys" [];
	"attr._compat" -> "threading" [];
	"attr._compat" -> "typing" [];
	"attr._compat" -> "annotationlib" [];
	"attr._funcs" -> "copy" [];
	"attr._funcs" -> "typing" [];
	"attr._cmp" -> "functools" [];
	"attr._cmp" -> "types" [];
	"attr.validators" -> "operator" [];
	"attr.validators" -> "re" [];
	"attr.validators" -> "contextlib" [];
	"attr.exceptions" -> "__future__" [];
	"attr.exceptions" -> "typing" [];
	"attr.converters" -> "typing" [];
	"aiohttp.abc" -> "asyncio" [];
	"aiohttp.abc" -> "logging" [];
	"aiohttp.abc" -> "socket" [];
	"aiohttp.abc" -> "zlib" [];
	"aiohttp.abc" -> "abc" [];
	"aiohttp.abc" -> "typing" [];
	"aiohttp.abc" -> "multidict" [];
	"aiohttp.abc" -> "yarl" [];
	"aiohttp.web_app" -> "asyncio" [];
	"aiohttp.web_app" -> "logging" [];
	"aiohttp.web_app" -> "warnings" [];
	"aiohttp.web_app" -> "functools" [];
	"aiohttp.web_app" -> "typing" [];
	"aiohttp.web_app" -> "aiosignal" [];
	"aiohttp.web_app" -> "frozenlist" [];
	"aiohttp.web_middlewares" -> "re" [];
	"aiohttp.web_middlewares" -> "typing" [];
	"frozenlist" -> "os" [];
	"frozenlist" -> "types" [];
	"frozenlist" -> "functools" [];
	"aiosignal" -> "frozenlist" [];
	"aiohttp.web" -> "asyncio" [];
	"aiohttp.web" -> "logging" [];
	"aiohttp.web" -> "os" [];
	"aiohttp.web" -> "socket" [];
	"aiohttp.web" -> "sys" [];
	"aiohttp.web" -> "warnings" [];
	"aiohttp.web" -> "argparse" [];
	"aiohttp.web" -> "contextlib" [];
	"aiohttp.web" -> "importlib" [];
	"aiohttp.web" -> "typing" [];
	"aiohttp.web" -> "ssl" [];
	"aiohttp.web_ws" -> "asyncio" [];
	"aiohttp.web_ws" -> "base64" [];
	"aiohttp.web_ws" -> "binascii" [];
	"aiohttp.web_ws" -> "hashlib" [];
	"aiohttp.web_ws" -> "json" [];
	"aiohttp.web_ws" -> "sys" [];
	"aiohttp.web_ws" -> "typing" [];
	"aiohttp.web_ws" -> "attr" [];
	"aiohttp.web_ws" -> "multidict" [];
	"aiohttp.web_ws" -> "async_timeout" [];
	"async_timeout" -> "asyncio" [];
	"async_timeout" -> "enum" [];
	"async_timeout" -> "sys" [];
	"async_timeout" -> "warnings" [];
	"async_timeout" -> "types" [];
	"async_timeout" -> "typing" [];
	"async_timeout" -> "typing_extensions" [];
	"aiohttp._websocket.models" -> "json" [];
	"aiohttp._websocket.models" -> "enum" [];
	"aiohttp._websocket.models" -> "typing" [];
	"aiohttp._websocket.helpers" -> "functools" [];
	"aiohttp._websocket.helpers" -> "re" [];
	"aiohttp._websocket.helpers" -> "struct" [];
	"aiohttp._websocket.helpers" -> "typing" [];
	"aiohttp._websocket.writer" -> "asyncio" [];
	"aiohttp._websocket.writer" -> "random" [];
	"aiohttp._websocket.writer" -> "zlib" [];
	"aiohttp._websocket.writer" -> "functools" [];
	"aiohttp._websocket.writer" -> "typing" [];
	"aiohttp._websocket.reader" -> "typing" [];
	"aiohttp._websocket.reader_c" -> "asyncio" [];
	"aiohttp._websocket.reader_c" -> "builtins" [];
	"aiohttp._websocket.reader_c" -> "collections" [];
	"aiohttp._websocket.reader_c" -> "typing" [];
	"aiohttp._websocket.reader_py" -> "asyncio" [];
	"aiohttp._websocket.reader_py" -> "builtins" [];
	"aiohttp._websocket.reader_py" -> "collections" [];
	"aiohttp._websocket.reader_py" -> "typing" [];
	"aiohttp.web_runner" -> "asyncio" [];
	"aiohttp.web_runner" -> "signal" [];
	"aiohttp.web_runner" -> "socket" [];
	"aiohttp.web_runner" -> "warnings" [];
	"aiohttp.web_runner" -> "abc" [];
	"aiohttp.web_runner" -> "typing" [];
	"aiohttp.web_runner" -> "yarl" [];
	"aiohttp.web_runner" -> "ssl" [];
	"aiohttp.tracing" -> "types" [];
	"aiohttp.tracing" -> "typing" [];
	"aiohttp.tracing" -> "attr" [];
	"aiohttp.tracing" -> "aiosignal" [];
	"aiohttp.tracing" -> "multidict" [];
	"aiohttp.tracing" -> "yarl" [];
	"aiohttp.streams" -> "asyncio" [];
	"aiohttp.streams" -> "collections" [];
	"aiohttp.streams" -> "warnings" [];
	"aiohttp.streams" -> "typing" [];
	"aiohttp.resolver" -> "asyncio" [];
	"aiohttp.resolver" -> "socket" [];
	"aiohttp.resolver" -> "typing" [];
	"aiohttp.resolver" -> "aiodns" [];
	"aiohttp.payload_streamer" -> "types" [];
	"aiohttp.payload_streamer" -> "warnings" [];
	"aiohttp.payload_streamer" -> "typing" [];
	"aiohttp.payload" -> "asyncio" [];
	"aiohttp.payload" -> "enum" [];
	"aiohttp.payload" -> "io" [];
	"aiohttp.payload" -> "json" [];
	"aiohttp.payload" -> "mimetypes" [];
	"aiohttp.payload" -> "os" [];
	"aiohttp.payload" -> "sys" [];
	"aiohttp.payload" -> "warnings" [];
	"aiohttp.payload" -> "abc" [];
	"aiohttp.payload" -> "itertools" [];
	"aiohttp.payload" -> "typing" [];
	"aiohttp.payload" -> "multidict" [];
	"aiohttp.helpers" -> "asyncio" [];
	"aiohttp.helpers" -> "base64" [];
	"aiohttp.helpers" -> "binascii" [];
	"aiohttp.helpers" -> "contextlib" [];
	"aiohttp.helpers" -> "datetime" [];
	"aiohttp.helpers" -> "enum" [];
	"aiohttp.helpers" -> "functools" [];
	"aiohttp.helpers" -> "inspect" [];
	"aiohttp.helpers" -> "netrc" [];
	"aiohttp.helpers" -> "os" [];
	"aiohttp.helpers" -> "platform" [];
	"aiohttp.helpers" -> "re" [];
	"aiohttp.helpers" -> "sys" [];
	"aiohttp.helpers" -> "time" [];
	"aiohttp.helpers" -> "weakref" [];
	"aiohttp.helpers" -> "collections" [];
	"aiohttp.helpers" -> "math" [];
	"aiohttp.helpers" -> "pathlib" [];
	"aiohttp.helpers" -> "types" [];
	"aiohttp.helpers" -> "typing" [];
	"aiohttp.helpers" -> "attr" [];
	"aiohttp.helpers" -> "multidict" [];
	"aiohttp.helpers" -> "yarl" [];
	"aiohttp.helpers" -> "async_timeout" [];
	"aiohttp.formdata" -> "io" [];
	"aiohttp.formdata" -> "warnings" [];
	"aiohttp.formdata" -> "typing" [];
	"aiohttp.formdata" -> "multidict" [];
	"aiohttp.cookiejar" -> "asyncio" [];
	"aiohttp.cookiejar" -> "calendar" [];
	"aiohttp.cookiejar" -> "contextlib" [];
	"aiohttp.cookiejar" -> "datetime" [];
	"aiohttp.cookiejar" -> "heapq" [];
	"aiohttp.cookiejar" -> "itertools" [];
	"aiohttp.cookiejar" -> "os" [];
	"aiohttp.cookiejar" -> "pathlib" [];
	"aiohttp.cookiejar" -> "pickle" [];
	"aiohttp.cookiejar" -> "re" [];
	"aiohttp.cookiejar" -> "time" [];
	"aiohttp.cookiejar" -> "warnings" [];
	"aiohttp.cookiejar" -> "collections" [];
	"aiohttp.cookiejar" -> "typing" [];
	"aiohttp.cookiejar" -> "yarl" [];
	"aiohttp.client" -> "asyncio" [];
	"aiohttp.client" -> "base64" [];
	"aiohttp.client" -> "hashlib" [];
	"aiohttp.client" -> "json" [];
	"aiohttp.client" -> "os" [];
	"aiohttp.client" -> "sys" [];
	"aiohttp.client" -> "traceback" [];
	"aiohttp.client" -> "warnings" [];
	"aiohttp.client" -> "contextlib" [];
	"aiohttp.client" -> "types" [];
	"aiohttp.client" -> "typing" [];
	"aiohttp.client" -> "attr" [];
	"aiohttp.client" -> "multidict" [];
	"aiohttp.client" -> "yarl" [];
	"aiohttp.client" -> "ssl" [];
	"aiohttp.client_ws" -> "asyncio" [];
	"aiohttp.client_ws" -> "sys" [];
	"aiohttp.client_ws" -> "types" [];
	"aiohttp.client_ws" -> "typing" [];
	"aiohttp.client_ws" -> "attr" [];
	"aiohttp.client_ws" -> "async_timeout" [];
	"aiohttp.multipart" -> "base64" [];
	"aiohttp.multipart" -> "binascii" [];
	"aiohttp.multipart" -> "json" [];
	"aiohttp.multipart" -> "re" [];
	"aiohttp.multipart" -> "sys" [];
	"aiohttp.multipart" -> "uuid" [];
	"aiohttp.multipart" -> "warnings" [];
	"aiohttp.multipart" -> "zlib" [];
	"aiohttp.multipart" -> "collections" [];
	"aiohttp.multipart" -> "types" [];
	"aiohttp.multipart" -> "typing" [];
	"aiohttp.multipart" -> "multidict" [];
	"aiohttp.http" -> "sys" [];
	"aiohttp.http" -> "http" [];
	"aiohttp.http" -> "typing" [];
	"aiohttp.hdrs" -> "itertools" [];
	"aiohttp.hdrs" -> "typing" [];
	"aiohttp.hdrs" -> "multidict" [];
	"fsspec.implementations.github" -> "requests" [];
	"fsspec.implementations.github" -> "fsspec" [];
	"fsspec.implementations.git" -> "os" [];
	"fsspec.implementations.git" -> "pygit2" [];
	"fsspec.implementations.ftp" -> "os" [];
	"fsspec.implementations.ftp" -> "sys" [];
	"fsspec.implementations.ftp" -> "uuid" [];
	"fsspec.implementations.ftp" -> "warnings" [];
	"fsspec.implementations.ftp" -> "ftplib" [];
	"fsspec.implementations.ftp" -> "typing" [];
	"fsspec.implementations.dirfs" -> "fsspec" [];
	"fsspec.implementations.dbfs" -> "base64" [];
	"fsspec.implementations.dbfs" -> "urllib" [];
	"fsspec.implementations.dbfs" -> "requests" [];
	"fsspec.implementations.dbfs" -> "fsspec" [];
	"fsspec.implementations.data" -> "base64" [];
	"fsspec.implementations.data" -> "io" [];
	"fsspec.implementations.data" -> "typing" [];
	"fsspec.implementations.data" -> "fsspec" [];
	"fsspec.implementations.dask" -> "dask" [];
	"fsspec.implementations.dask" -> "'distributed.client'" [];
	"fsspec.implementations.dask" -> "'distributed.worker'" [];
	"fsspec.implementations.dask" -> "fsspec" [];
	"fsspec.implementations.cached" -> "__future__" [];
	"fsspec.implementations.cached" -> "inspect" [];
	"fsspec.implementations.cached" -> "logging" [];
	"fsspec.implementations.cached" -> "os" [];
	"fsspec.implementations.cached" -> "tempfile" [];
	"fsspec.implementations.cached" -> "time" [];
	"fsspec.implementations.cached" -> "weakref" [];
	"fsspec.implementations.cached" -> "shutil" [];
	"fsspec.implementations.cached" -> "typing" [];
	"fsspec.implementations.cached" -> "fsspec" [];
	"fsspec.implementations.cache_metadata" -> "__future__" [];
	"fsspec.implementations.cache_metadata" -> "os" [];
	"fsspec.implementations.cache_metadata" -> "pickle" [];
	"fsspec.implementations.cache_metadata" -> "time" [];
	"fsspec.implementations.cache_metadata" -> "typing" [];
	"fsspec.implementations.cache_metadata" -> "ujson" [];
	"fsspec.implementations.cache_metadata" -> "json" [];
	"fsspec.implementations.cache_metadata" -> "typing_extensions" [];
	"fsspec.implementations.cache_mapper" -> "__future__" [];
	"fsspec.implementations.cache_mapper" -> "abc" [];
	"fsspec.implementations.cache_mapper" -> "hashlib" [];
	"fsspec.implementations.asyn_wrapper" -> "asyncio" [];
	"fsspec.implementations.asyn_wrapper" -> "functools" [];
	"fsspec.implementations.asyn_wrapper" -> "inspect" [];
	"fsspec.implementations.arrow" -> "errno" [];
	"fsspec.implementations.arrow" -> "io" [];
	"fsspec.implementations.arrow" -> "os" [];
	"fsspec.implementations.arrow" -> "secrets" [];
	"fsspec.implementations.arrow" -> "shutil" [];
	"fsspec.implementations.arrow" -> "contextlib" [];
	"fsspec.implementations.arrow" -> "functools" [];
	"fsspec.gui" -> "ast" [];
	"fsspec.gui" -> "contextlib" [];
	"fsspec.gui" -> "logging" [];
	"fsspec.gui" -> "os" [];
	"fsspec.gui" -> "re" [];
	"fsspec.gui" -> "typing" [];
	"fsspec.gui" -> "panel" [];
	"fsspec.generic" -> "__future__" [];
	"fsspec.generic" -> "inspect" [];
	"fsspec.generic" -> "logging" [];
	"fsspec.generic" -> "os" [];
	"fsspec.generic" -> "shutil" [];
	"fsspec.generic" -> "uuid" [];
	"fsspec.generic" -> "typing" [];
	"fsspec.generic" -> "tempfile" [];
	"fsspec.fuse" -> "argparse" [];
	"fsspec.fuse" -> "logging" [];
	"fsspec.fuse" -> "os" [];
	"fsspec.fuse" -> "stat" [];
	"fsspec.fuse" -> "threading" [];
	"fsspec.fuse" -> "time" [];
	"fsspec.fuse" -> "errno" [];
	"fsspec.fuse" -> "fuse" [];
	"fsspec.fuse" -> "sys" [];
	"fsspec.dircache" -> "time" [];
	"fsspec.dircache" -> "functools" [];
	"fsspec.conftest" -> "os" [];
	"fsspec.conftest" -> "shutil" [];
	"fsspec.conftest" -> "subprocess" [];
	"fsspec.conftest" -> "sys" [];
	"fsspec.conftest" -> "time" [];
	"fsspec.conftest" -> "pytest" [];
	"fsspec.config" -> "__future__" [];
	"fsspec.config" -> "configparser" [];
	"fsspec.config" -> "json" [];
	"fsspec.config" -> "os" [];
	"fsspec.config" -> "warnings" [];
	"fsspec.config" -> "typing" [];
	"fsspec.asyn" -> "asyncio" [];
	"fsspec.asyn" -> "functools" [];
	"fsspec.asyn" -> "inspect" [];
	"fsspec.asyn" -> "io" [];
	"fsspec.asyn" -> "numbers" [];
	"fsspec.asyn" -> "os" [];
	"fsspec.asyn" -> "re" [];
	"fsspec.asyn" -> "threading" [];
	"fsspec.asyn" -> "contextlib" [];
	"fsspec.asyn" -> "glob" [];
	"fsspec.asyn" -> "typing" [];
	"fsspec.asyn" -> "resource" [];
	"fsspec.asyn" -> "traceback" [];
	"fsspec.spec" -> "__future__" [];
	"fsspec.spec" -> "io" [];
	"fsspec.spec" -> "json" [];
	"fsspec.spec" -> "logging" [];
	"fsspec.spec" -> "os" [];
	"fsspec.spec" -> "threading" [];
	"fsspec.spec" -> "warnings" [];
	"fsspec.spec" -> "weakref" [];
	"fsspec.spec" -> "errno" [];
	"fsspec.spec" -> "glob" [];
	"fsspec.spec" -> "hashlib" [];
	"fsspec.spec" -> "typing" [];
	"fsspec.spec" -> "re" [];
	"fsspec.registry" -> "__future__" [];
	"fsspec.registry" -> "importlib" [];
	"fsspec.registry" -> "types" [];
	"fsspec.registry" -> "warnings" [];
	"fsspec.mapping" -> "array" [];
	"fsspec.mapping" -> "logging" [];
	"fsspec.mapping" -> "posixpath" [];
	"fsspec.mapping" -> "warnings" [];
	"fsspec.mapping" -> "functools" [];
	"fsspec.exceptions" -> "asyncio" [];
	"fsspec.core" -> "__future__" [];
	"fsspec.core" -> "io" [];
	"fsspec.core" -> "logging" [];
	"fsspec.core" -> "os" [];
	"fsspec.core" -> "re" [];
	"fsspec.core" -> "glob" [];
	"fsspec.core" -> "pathlib" [];
	"fsspec.compression" -> "zipfile" [];
	"fsspec.compression" -> "bz2" [];
	"fsspec.compression" -> "isal" [];
	"fsspec.compression" -> "gzip" [];
	"fsspec.compression" -> "lzma" [];
	"fsspec.compression" -> "lzmaffi" [];
	"fsspec.compression" -> "snappy" [];
	"fsspec.compression" -> "lz4" [];
	"fsspec.compression" -> "zstandard" [];
	"fsspec.callbacks" -> "functools" [];
	"fsspec.callbacks" -> "tqdm" [];
	"tqdm" -> "warnings" [];
	"tqdm.notebook" -> "re" [];
	"tqdm.notebook" -> "sys" [];
	"tqdm.notebook" -> "html" [];
	"tqdm.notebook" -> "weakref" [];
	"tqdm.notebook" -> "ipywidgets" [];
	"tqdm.notebook" -> "warnings" [];
	"tqdm.notebook" -> "'IPython.html'" [];
	"tqdm.notebook" -> "'IPython.display'" [];
	"tqdm.version" -> "setuptools_scm" [];
	"tqdm.std" -> "sys" [];
	"tqdm.std" -> "collections" [];
	"tqdm.std" -> "contextlib" [];
	"tqdm.std" -> "datetime" [];
	"tqdm.std" -> "numbers" [];
	"tqdm.std" -> "time" [];
	"tqdm.std" -> "warnings" [];
	"tqdm.std" -> "weakref" [];
	"tqdm.std" -> "threading" [];
	"tqdm.std" -> "multiprocessing" [];
	"tqdm.std" -> "pandas" [];
	"tqdm.utils" -> "os" [];
	"tqdm.utils" -> "re" [];
	"tqdm.utils" -> "sys" [];
	"tqdm.utils" -> "functools" [];
	"tqdm.utils" -> "inspect" [];
	"tqdm.utils" -> "unicodedata" [];
	"tqdm.utils" -> "warnings" [];
	"tqdm.utils" -> "weakref" [];
	"tqdm.utils" -> "colorama" [];
	"tqdm.utils" -> "struct" [];
	"tqdm.utils" -> "ctypes" [];
	"tqdm.utils" -> "shlex" [];
	"tqdm.utils" -> "subprocess" [];
	"tqdm.utils" -> "array" [];
	"tqdm.utils" -> "fcntl" [];
	"tqdm.utils" -> "termios" [];
	"tqdm.gui" -> "re" [];
	"tqdm.gui" -> "warnings" [];
	"tqdm.gui" -> "collections" [];
	"tqdm.gui" -> "matplotlib" [];
	"tqdm.gui" -> "'matplotlib.pyplot'" [];
	"tqdm.cli" -> "logging" [];
	"tqdm.cli" -> "re" [];
	"tqdm.cli" -> "sys" [];
	"tqdm.cli" -> "ast" [];
	"tqdm.cli" -> "textwrap" [];
	"tqdm.cli" -> "importlib_resources" [];
	"tqdm.cli" -> "importlib" [];
	"tqdm.cli" -> "pathlib" [];
	"tqdm._tqdm_pandas" -> "sys" [];
	"tqdm._monitor" -> "atexit" [];
	"tqdm._monitor" -> "threading" [];
	"tqdm._monitor" -> "time" [];
	"tqdm._monitor" -> "warnings" [];
	"fsspec._version" -> "typing" [];
	"fsspec.caching" -> "__future__" [];
	"fsspec.caching" -> "collections" [];
	"fsspec.caching" -> "functools" [];
	"fsspec.caching" -> "logging" [];
	"fsspec.caching" -> "math" [];
	"fsspec.caching" -> "os" [];
	"fsspec.caching" -> "threading" [];
	"fsspec.caching" -> "warnings" [];
	"fsspec.caching" -> "itertools" [];
	"fsspec.caching" -> "operator" [];
	"fsspec.caching" -> "typing" [];
	"fsspec.caching" -> "mmap" [];
	"fsspec.caching" -> "typing_extensions" [];
	"fsspec.caching" -> "tempfile" [];
	"pyarrow._generated_version" -> "typing" [];
	"pandas.core.arrays.arrow.array" -> "__future__" [];
	"pandas.core.arrays.arrow.array" -> "functools" [];
	"pandas.core.arrays.arrow.array" -> "operator" [];
	"pandas.core.arrays.arrow.array" -> "re" [];
	"pandas.core.arrays.arrow.array" -> "textwrap" [];
	"pandas.core.arrays.arrow.array" -> "typing" [];
	"pandas.core.arrays.arrow.array" -> "unicodedata" [];
	"pandas.core.arrays.arrow.array" -> "numpy" [];
	"pandas.core.arrays.arrow.array" -> "pyarrow" [];
	"pandas.core.arrays.arrow.array" -> "pandas" [];
	"pandas.core.tools.times" -> "__future__" [];
	"pandas.core.tools.times" -> "datetime" [];
	"pandas.core.tools.times" -> "typing" [];
	"pandas.core.tools.times" -> "warnings" [];
	"pandas.core.tools.times" -> "numpy" [];
	"pandas.core.tools.timedeltas" -> "__future__" [];
	"pandas.core.tools.timedeltas" -> "typing" [];
	"pandas.core.tools.timedeltas" -> "warnings" [];
	"pandas.core.tools.timedeltas" -> "numpy" [];
	"pandas.core.tools.timedeltas" -> "datetime" [];
	"pandas.core.tools.timedeltas" -> "pandas" [];
	"pandas.core.tools.datetimes" -> "__future__" [];
	"pandas.core.tools.datetimes" -> "collections" [];
	"pandas.core.tools.datetimes" -> "datetime" [];
	"pandas.core.tools.datetimes" -> "functools" [];
	"pandas.core.tools.datetimes" -> "itertools" [];
	"pandas.core.tools.datetimes" -> "typing" [];
	"pandas.core.tools.datetimes" -> "warnings" [];
	"pandas.core.tools.datetimes" -> "numpy" [];
	"pandas.core.tools.datetimes" -> "pandas" [];
	"pandas.core.arrays.floating" -> "__future__" [];
	"pandas.core.arrays.floating" -> "typing" [];
	"pandas.core.arrays.floating" -> "numpy" [];
	"pandas.core.arrays.integer" -> "__future__" [];
	"pandas.core.arrays.integer" -> "typing" [];
	"pandas.core.arrays.integer" -> "numpy" [];
	"pandas.io._util" -> "__future__" [];
	"pandas.io._util" -> "typing" [];
	"pandas.io._util" -> "pandas" [];
	"pandas.core.dtypes.inference" -> "__future__" [];
	"pandas.core.dtypes.inference" -> "collections" [];
	"pandas.core.dtypes.inference" -> "numbers" [];
	"pandas.core.dtypes.inference" -> "re" [];
	"pandas.core.dtypes.inference" -> "typing" [];
	"pandas.core.dtypes.inference" -> "numpy" [];
	"pandas.core.dtypes.inference" -> "dataclasses" [];
	"pandas.util._exceptions" -> "__future__" [];
	"pandas.util._exceptions" -> "contextlib" [];
	"pandas.util._exceptions" -> "inspect" [];
	"pandas.util._exceptions" -> "os" [];
	"pandas.util._exceptions" -> "re" [];
	"pandas.util._exceptions" -> "typing" [];
	"pandas.util._exceptions" -> "warnings" [];
	"pandas.util._exceptions" -> "types" [];
	"pandas.util._exceptions" -> "pandas" [];
	"pandas.core.ops.missing" -> "__future__" [];
	"pandas.core.ops.missing" -> "operator" [];
	"pandas.core.ops.missing" -> "numpy" [];
	"pandas.core.construction" -> "__future__" [];
	"pandas.core.construction" -> "typing" [];
	"pandas.core.construction" -> "warnings" [];
	"pandas.core.construction" -> "numpy" [];
	"pandas.core.construction" -> "pandas" [];
	"numpy._pytesttester" -> "sys" [];
	"numpy._pytesttester" -> "os" [];
	"numpy._pytesttester" -> "warnings" [];
	"numpy.testing" -> "unittest" [];
	"numpy.testing.overrides" -> "numpy" [];
	"numpy.lib.recfunctions" -> "itertools" [];
	"numpy.lib.recfunctions" -> "numpy" [];
	"numpy.lib._iotools" -> "numpy" [];
	"numpy.compat.py3k" -> "sys" [];
	"numpy.compat.py3k" -> "os" [];
	"numpy.compat.py3k" -> "pathlib" [];
	"numpy.compat.py3k" -> "io" [];
	"numpy.compat.py3k" -> "pickle5" [];
	"numpy.compat.py3k" -> "pickle" [];
	"numpy._utils._inspect" -> "types" [];
	"numpy.core.numeric" -> "functools" [];
	"numpy.core.numeric" -> "itertools" [];
	"numpy.core.numeric" -> "operator" [];
	"numpy.core.numeric" -> "sys" [];
	"numpy.core.numeric" -> "warnings" [];
	"numpy.core.numeric" -> "numbers" [];
	"numpy.core.numeric" -> "builtins" [];
	"numpy.core.numeric" -> "numpy" [];
	"numpy.core.arrayprint" -> "functools" [];
	"numpy.core.arrayprint" -> "numbers" [];
	"numpy.core.arrayprint" -> "sys" [];
	"numpy.core.arrayprint" -> "_thread" [];
	"numpy.core.arrayprint" -> "_dummy_thread" [];
	"numpy.core.arrayprint" -> "numpy" [];
	"numpy.core.arrayprint" -> "operator" [];
	"numpy.core.arrayprint" -> "warnings" [];
	"numpy.core.arrayprint" -> "contextlib" [];
	"numpy.core.fromnumeric" -> "functools" [];
	"numpy.core.fromnumeric" -> "types" [];
	"numpy.core.fromnumeric" -> "warnings" [];
	"numpy.core.fromnumeric" -> "numpy" [];
	"numpy.core._methods" -> "warnings" [];
	"numpy.core._methods" -> "contextlib" [];
	"numpy.lib.stride_tricks" -> "numpy" [];
	"numpy._globals" -> "enum" [];
	"numpy.core._ufunc_config" -> "contextlib" [];
	"numpy.core._ufunc_config" -> "contextvars" [];
	"numpy.core.numerictypes" -> "numbers" [];
	"numpy.core.numerictypes" -> "warnings" [];
	"numpy.core.numerictypes" -> "builtins" [];
	"numpy.core._dtype" -> "numpy" [];
	"numpy.core.shape_base" -> "functools" [];
	"numpy.core.shape_base" -> "itertools" [];
	"numpy.core.shape_base" -> "operator" [];
	"numpy.core.shape_base" -> "warnings" [];
	"numpy.core.multiarray" -> "functools" [];
	"numpy.core" -> "os" [];
	"numpy.core" -> "warnings" [];
	"numpy.core" -> "sys" [];
	"numpy.core" -> "copyreg" [];
	"numpy.core._internal" -> "ast" [];
	"numpy.core._internal" -> "re" [];
	"numpy.core._internal" -> "sys" [];
	"numpy.core._internal" -> "warnings" [];
	"numpy.core._internal" -> "ctypes" [];
	"numpy.core._internal" -> "numpy" [];
	"numpy.core._dtype_ctypes" -> "numpy" [];
	"numpy.core._dtype_ctypes" -> "ctypes" [];
	"numpy.core._dtype_ctypes" -> "_ctypes" [];
	"numpy.core._add_newdocs_scalars" -> "sys" [];
	"numpy.core._add_newdocs_scalars" -> "os" [];
	"numpy.core.einsumfunc" -> "itertools" [];
	"numpy.core.einsumfunc" -> "operator" [];
	"numpy.core._machar" -> "math" [];
	"numpy.core.function_base" -> "functools" [];
	"numpy.core.function_base" -> "warnings" [];
	"numpy.core.function_base" -> "operator" [];
	"numpy.core.function_base" -> "types" [];
	"numpy.core.function_base" -> "numpy" [];
	"numpy.core.memmap" -> "contextlib" [];
	"numpy.core.memmap" -> "numpy" [];
	"numpy.core.memmap" -> "mmap" [];
	"numpy.core.memmap" -> "os.path" [];
	"numpy.core.records" -> "warnings" [];
	"numpy.core.records" -> "collections" [];
	"numpy.core.records" -> "contextlib" [];
	"numpy.core.defchararray" -> "functools" [];
	"numpy.core.defchararray" -> "numpy" [];
	"numpy.core.getlimits" -> "warnings" [];
	"numpy.ma.mrecords" -> "warnings" [];
	"numpy.ma.mrecords" -> "numpy" [];
	"numpy.lib" -> "math" [];
	"numpy.lib" -> "warnings" [];
	"numpy.lib._version" -> "re" [];
	"numpy.lib.arraypad" -> "numpy" [];
	"numpy.lib.arrayterator" -> "operator" [];
	"numpy.lib.arrayterator" -> "functools" [];
	"numpy.lib.npyio" -> "os" [];
	"numpy.lib.npyio" -> "re" [];
	"numpy.lib.npyio" -> "functools" [];
	"numpy.lib.npyio" -> "itertools" [];
	"numpy.lib.npyio" -> "warnings" [];
	"numpy.lib.npyio" -> "weakref" [];
	"numpy.lib.npyio" -> "contextlib" [];
	"numpy.lib.npyio" -> "operator" [];
	"numpy.lib.npyio" -> "numpy" [];
	"numpy.lib.npyio" -> "zipfile" [];
	"numpy.lib._datasource" -> "os" [];
	"numpy.lib._datasource" -> "io" [];
	"numpy.lib._datasource" -> "bz2" [];
	"numpy.lib._datasource" -> "gzip" [];
	"numpy.lib._datasource" -> "lzma" [];
	"numpy.lib._datasource" -> "tempfile" [];
	"numpy.lib._datasource" -> "shutil" [];
	"numpy.lib.format" -> "numpy" [];
	"numpy.lib.format" -> "warnings" [];
	"numpy.lib.format" -> "struct" [];
	"numpy.lib.format" -> "tokenize" [];
	"numpy.lib.format" -> "io" [];
	"numpy.lib.arraysetops" -> "functools" [];
	"numpy.lib.arraysetops" -> "numpy" [];
	"numpy.lib.utils" -> "os" [];
	"numpy.lib.utils" -> "sys" [];
	"numpy.lib.utils" -> "textwrap" [];
	"numpy.lib.utils" -> "types" [];
	"numpy.lib.utils" -> "re" [];
	"numpy.lib.utils" -> "warnings" [];
	"numpy.lib.utils" -> "functools" [];
	"numpy.lib.utils" -> "platform" [];
	"numpy.lib.utils" -> "numpy" [];
	"numpy.lib.utils" -> "pprint" [];
	"numpy.lib.utils" -> "threadpoolctl" [];
	"numpy.lib.utils" -> "pydoc" [];
	"numpy.lib.utils" -> "inspect" [];
	"numpy.lib.utils" -> "io" [];
	"numpy.lib.utils" -> "ast" [];
	"numpy.lib.polynomial" -> "functools" [];
	"numpy.lib.polynomial" -> "re" [];
	"numpy.lib.polynomial" -> "warnings" [];
	"numpy.linalg.linalg" -> "functools" [];
	"numpy.linalg.linalg" -> "operator" [];
	"numpy.linalg.linalg" -> "warnings" [];
	"numpy.linalg.linalg" -> "typing" [];
	"numpy.linalg.linalg" -> "numpy" [];
	"numpy._typing" -> "__future__" [];
	"numpy._typing" -> "typing" [];
	"numpy._typing._array_like" -> "__future__" [];
	"numpy._typing._array_like" -> "sys" [];
	"numpy._typing._array_like" -> "typing" [];
	"numpy._typing._array_like" -> "numpy" [];
	"numpy._typing._dtype_like" -> "typing" [];
	"numpy._typing._dtype_like" -> "numpy" [];
	"numpy._typing._shape" -> "typing" [];
	"numpy._typing._scalars" -> "typing" [];
	"numpy._typing._scalars" -> "numpy" [];
	"numpy._typing._char_codes" -> "typing" [];
	"numpy._typing._nbit" -> "typing" [];
	"numpy._typing._nested_sequence" -> "__future__" [];
	"numpy._typing._nested_sequence" -> "typing" [];
	"numpy.lib.histograms" -> "contextlib" [];
	"numpy.lib.histograms" -> "functools" [];
	"numpy.lib.histograms" -> "operator" [];
	"numpy.lib.histograms" -> "warnings" [];
	"numpy.lib.histograms" -> "numpy" [];
	"numpy.lib.ufunclike" -> "warnings" [];
	"numpy.lib.ufunclike" -> "functools" [];
	"numpy.lib.twodim_base" -> "functools" [];
	"numpy.lib.twodim_base" -> "operator" [];
	"numpy.lib.twodim_base" -> "numpy" [];
	"numpy.lib.shape_base" -> "functools" [];
	"numpy.matrixlib.defmatrix" -> "sys" [];
	"numpy.matrixlib.defmatrix" -> "warnings" [];
	"numpy.matrixlib.defmatrix" -> "ast" [];
	"numpy.lib.nanfunctions" -> "functools" [];
	"numpy.lib.nanfunctions" -> "warnings" [];
	"numpy.lib.nanfunctions" -> "numpy" [];
	"numpy.lib.function_base" -> "functools" [];
	"numpy.lib.function_base" -> "re" [];
	"numpy.lib.function_base" -> "sys" [];
	"numpy.lib.function_base" -> "warnings" [];
	"numpy.lib.function_base" -> "numpy" [];
	"numpy.lib.function_base" -> "builtins" [];
	"numpy.lib.index_tricks" -> "functools" [];
	"numpy.lib.index_tricks" -> "sys" [];
	"numpy.lib.index_tricks" -> "math" [];
	"numpy.lib.index_tricks" -> "warnings" [];
	"numpy.lib.index_tricks" -> "numpy" [];
	"numpy.lib.type_check" -> "functools" [];
	"numpy.core.overrides" -> "collections" [];
	"numpy.core.overrides" -> "functools" [];
	"numpy.core.overrides" -> "os" [];
	"numpy.testing._private.extbuild" -> "os" [];
	"numpy.testing._private.extbuild" -> "pathlib" [];
	"numpy.testing._private.extbuild" -> "subprocess" [];
	"numpy.testing._private.extbuild" -> "sys" [];
	"numpy.testing._private.extbuild" -> "sysconfig" [];
	"numpy.testing._private.extbuild" -> "textwrap" [];
	"numpy.testing._private.utils" -> "os" [];
	"numpy.testing._private.utils" -> "sys" [];
	"numpy.testing._private.utils" -> "platform" [];
	"numpy.testing._private.utils" -> "re" [];
	"numpy.testing._private.utils" -> "gc" [];
	"numpy.testing._private.utils" -> "operator" [];
	"numpy.testing._private.utils" -> "warnings" [];
	"numpy.testing._private.utils" -> "functools" [];
	"numpy.testing._private.utils" -> "shutil" [];
	"numpy.testing._private.utils" -> "contextlib" [];
	"numpy.testing._private.utils" -> "tempfile" [];
	"numpy.testing._private.utils" -> "pprint" [];
	"numpy.testing._private.utils" -> "sysconfig" [];
	"numpy.testing._private.utils" -> "numpy" [];
	"numpy.testing._private.utils" -> "io" [];
	"numpy.testing._private.utils" -> "win32pdh" [];
	"numpy.testing._private.utils" -> "time" [];
	"numpy.testing._private.utils" -> "traceback" [];
	"numpy.testing._private.utils" -> "difflib" [];
	"numpy.testing._private.utils" -> "doctest" [];
	"numpy.testing._private.utils" -> "subprocess" [];
	"numpy.testing._private.utils" -> "unittest" [];
	"numpy.testing._private.utils" -> "inspect" [];
	"numpy.testing._private.utils" -> "psutil" [];
	"numpy.array_api" -> "warnings" [];
	"numpy.array_api._utility_functions" -> "__future__" [];
	"numpy.array_api._utility_functions" -> "typing" [];
	"numpy.array_api._utility_functions" -> "numpy" [];
	"numpy.array_api._array_object" -> "__future__" [];
	"numpy.array_api._array_object" -> "operator" [];
	"numpy.array_api._array_object" -> "enum" [];
	"numpy.array_api._array_object" -> "typing" [];
	"numpy.array_api._array_object" -> "types" [];
	"numpy.array_api._array_object" -> "numpy" [];
	"numpy.array_api._typing" -> "__future__" [];
	"numpy.array_api._typing" -> "sys" [];
	"numpy.array_api._typing" -> "typing" [];
	"numpy.array_api._typing" -> "numpy" [];
	"numpy.array_api._statistical_functions" -> "__future__" [];
	"numpy.array_api._statistical_functions" -> "typing" [];
	"numpy.array_api._statistical_functions" -> "numpy" [];
	"numpy.array_api._sorting_functions" -> "__future__" [];
	"numpy.array_api._sorting_functions" -> "numpy" [];
	"numpy.array_api._set_functions" -> "__future__" [];
	"numpy.array_api._set_functions" -> "typing" [];
	"numpy.array_api._set_functions" -> "numpy" [];
	"numpy.array_api._searching_functions" -> "__future__" [];
	"numpy.array_api._searching_functions" -> "typing" [];
	"numpy.array_api._searching_functions" -> "numpy" [];
	"numpy.array_api._manipulation_functions" -> "__future__" [];
	"numpy.array_api._manipulation_functions" -> "typing" [];
	"numpy.array_api._manipulation_functions" -> "numpy" [];
	"numpy.array_api.linalg" -> "__future__" [];
	"numpy.array_api.linalg" -> "typing" [];
	"numpy.array_api.linalg" -> "numpy" [];
	"numpy.array_api._indexing_functions" -> "__future__" [];
	"numpy.array_api._indexing_functions" -> "numpy" [];
	"numpy.array_api._elementwise_functions" -> "__future__" [];
	"numpy.array_api._elementwise_functions" -> "numpy" [];
	"numpy.array_api._dtypes" -> "numpy" [];
	"numpy.array_api._data_type_functions" -> "__future__" [];
	"numpy.array_api._data_type_functions" -> "dataclasses" [];
	"numpy.array_api._data_type_functions" -> "typing" [];
	"numpy.array_api._data_type_functions" -> "numpy" [];
	"numpy.array_api._creation_functions" -> "__future__" [];
	"numpy.array_api._creation_functions" -> "typing" [];
	"numpy.array_api._creation_functions" -> "numpy" [];
	"numpy.array_api._constants" -> "numpy" [];
	"numpy.ma.extras" -> "itertools" [];
	"numpy.ma.extras" -> "warnings" [];
	"numpy.ma.extras" -> "numpy" [];
	"numpy.ma.core" -> "builtins" [];
	"numpy.ma.core" -> "inspect" [];
	"numpy.ma.core" -> "operator" [];
	"numpy.ma.core" -> "warnings" [];
	"numpy.ma.core" -> "textwrap" [];
	"numpy.ma.core" -> "re" [];
	"numpy.ma.core" -> "functools" [];
	"numpy.ma.core" -> "numpy" [];
	"numpy.ma.core" -> "copy" [];
	"pandas.core.algorithms" -> "__future__" [];
	"pandas.core.algorithms" -> "decimal" [];
	"pandas.core.algorithms" -> "operator" [];
	"pandas.core.algorithms" -> "textwrap" [];
	"pandas.core.algorithms" -> "typing" [];
	"pandas.core.algorithms" -> "warnings" [];
	"pandas.core.algorithms" -> "numpy" [];
	"pandas.core.algorithms" -> "pandas" [];
	"pandas.core.internals.construction" -> "__future__" [];
	"pandas.core.internals.construction" -> "collections" [];
	"pandas.core.internals.construction" -> "typing" [];
	"pandas.core.internals.construction" -> "numpy" [];
	"pandas.core.internals.construction" -> "dataclasses" [];
	"pandas.core.internals.managers" -> "__future__" [];
	"pandas.core.internals.managers" -> "itertools" [];
	"pandas.core.internals.managers" -> "typing" [];
	"pandas.core.internals.managers" -> "warnings" [];
	"pandas.core.internals.managers" -> "numpy" [];
	"pandas.core.internals.ops" -> "__future__" [];
	"pandas.core.internals.ops" -> "typing" [];
	"pandas.core.internals.base" -> "__future__" [];
	"pandas.core.internals.base" -> "typing" [];
	"pandas.core.internals.base" -> "numpy" [];
	"pandas.core.internals.array_manager" -> "__future__" [];
	"pandas.core.internals.array_manager" -> "itertools" [];
	"pandas.core.internals.array_manager" -> "typing" [];
	"pandas.core.internals.array_manager" -> "numpy" [];
	"pandas.core.reshape.tile" -> "__future__" [];
	"pandas.core.reshape.tile" -> "typing" [];
	"pandas.core.reshape.tile" -> "numpy" [];
	"pandas.core.reshape.tile" -> "pandas" [];
	"pandas.core.array_algos.take" -> "__future__" [];
	"pandas.core.array_algos.take" -> "functools" [];
	"pandas.core.array_algos.take" -> "typing" [];
	"pandas.core.array_algos.take" -> "numpy" [];
	"pandas.core.sample" -> "__future__" [];
	"pandas.core.sample" -> "typing" [];
	"pandas.core.sample" -> "numpy" [];
	"pandas.core.indexing" -> "__future__" [];
	"pandas.core.indexing" -> "contextlib" [];
	"pandas.core.indexing" -> "sys" [];
	"pandas.core.indexing" -> "typing" [];
	"pandas.core.indexing" -> "warnings" [];
	"pandas.core.indexing" -> "numpy" [];
	"pandas.core.indexing" -> "pandas" [];
	"pandas.core.nanops" -> "__future__" [];
	"pandas.core.nanops" -> "functools" [];
	"pandas.core.nanops" -> "itertools" [];
	"pandas.core.nanops" -> "typing" [];
	"pandas.core.nanops" -> "warnings" [];
	"pandas.core.nanops" -> "numpy" [];
	"pandas.core.nanops" -> "'scipy.stats'" [];
	"pandas.core.missing" -> "__future__" [];
	"pandas.core.missing" -> "functools" [];
	"pandas.core.missing" -> "typing" [];
	"pandas.core.missing" -> "numpy" [];
	"pandas.core.missing" -> "pandas" [];
	"pandas.core.missing" -> "scipy" [];
	"pandas.core.roperator" -> "__future__" [];
	"pandas.core.roperator" -> "operator" [];
	"pandas.util._decorators" -> "__future__" [];
	"pandas.util._decorators" -> "functools" [];
	"pandas.util._decorators" -> "inspect" [];
	"pandas.util._decorators" -> "textwrap" [];
	"pandas.util._decorators" -> "typing" [];
	"pandas.util._decorators" -> "warnings" [];
	"pandas.io.formats.string" -> "__future__" [];
	"pandas.io.formats.string" -> "shutil" [];
	"pandas.io.formats.string" -> "typing" [];
	"pandas.io.formats.string" -> "numpy" [];
	"pandas.io.formats.string" -> "pandas" [];
	"pandas.io.formats.html" -> "__future__" [];
	"pandas.io.formats.html" -> "textwrap" [];
	"pandas.io.formats.html" -> "typing" [];
	"pandas.io.formats.html" -> "pandas" [];
	"pandas.core.indexes.multi" -> "__future__" [];
	"pandas.core.indexes.multi" -> "functools" [];
	"pandas.core.indexes.multi" -> "sys" [];
	"pandas.core.indexes.multi" -> "typing" [];
	"pandas.core.indexes.multi" -> "warnings" [];
	"pandas.core.indexes.multi" -> "numpy" [];
	"pandas.core.indexes.multi" -> "pandas" [];
	"pandas.core.indexes.multi" -> "copy" [];
	"pandas.core.reshape.util" -> "__future__" [];
	"pandas.core.reshape.util" -> "typing" [];
	"pandas.core.reshape.util" -> "numpy" [];
	"pandas.core.indexes.frozen" -> "__future__" [];
	"pandas.core.indexes.frozen" -> "typing" [];
	"pandas.io.formats.console" -> "__future__" [];
	"pandas.io.formats.console" -> "shutil" [];
	"pandas.io.formats.console" -> "pandas" [];
	"pandas.io.formats.printing" -> "__future__" [];
	"pandas.io.formats.printing" -> "sys" [];
	"pandas.io.formats.printing" -> "typing" [];
	"pandas.io.formats.printing" -> "unicodedata" [];
	"pandas.io.formats.printing" -> "IPython" [];
	"pandas.io.formats.printing" -> "'IPython.core'" [];
	"pandas.io.formats.printing" -> "traitlets" [];
	"pandas.io.formats" -> "typing" [];
	"pandas.io.formats.style" -> "__future__" [];
	"pandas.io.formats.style" -> "contextlib" [];
	"pandas.io.formats.style" -> "copy" [];
	"pandas.io.formats.style" -> "functools" [];
	"pandas.io.formats.style" -> "operator" [];
	"pandas.io.formats.style" -> "typing" [];
	"pandas.io.formats.style" -> "warnings" [];
	"pandas.io.formats.style" -> "numpy" [];
	"pandas.io.formats.style" -> "pandas" [];
	"pandas.io.formats.style" -> "'matplotlib.colors'" [];
	"pandas.io.formats.style" -> "matplotlib" [];
	"pandas.io.formats.style" -> "'matplotlib.pyplot'" [];
	"pandas.io.formats.style" -> "jinja2" [];
	"pandas.io.formats.excel" -> "__future__" [];
	"pandas.io.formats.excel" -> "functools" [];
	"pandas.io.formats.excel" -> "itertools" [];
	"pandas.io.formats.excel" -> "re" [];
	"pandas.io.formats.excel" -> "typing" [];
	"pandas.io.formats.excel" -> "warnings" [];
	"pandas.io.formats.excel" -> "numpy" [];
	"pandas.io.formats.excel" -> "pandas" [];
	"pandas.io.excel._xlsxwriter" -> "__future__" [];
	"pandas.io.excel._xlsxwriter" -> "json" [];
	"pandas.io.excel._xlsxwriter" -> "typing" [];
	"pandas.io.excel._xlsxwriter" -> "xlsxwriter" [];
	"pandas.io.excel._util" -> "__future__" [];
	"pandas.io.excel._util" -> "typing" [];
	"pandas.io.excel._openpyxl" -> "__future__" [];
	"pandas.io.excel._openpyxl" -> "mmap" [];
	"pandas.io.excel._openpyxl" -> "typing" [];
	"pandas.io.excel._openpyxl" -> "numpy" [];
	"pandas.io.excel._openpyxl" -> "openpyxl" [];
	"pandas.io.excel._openpyxl" -> "'openpyxl.descriptors'" [];
	"pandas.io.excel._openpyxl" -> "'openpyxl.workbook'" [];
	"pandas.io.excel._openpyxl" -> "'openpyxl.styles'" [];
	"pandas.io.excel._openpyxl" -> "'openpyxl.cell'" [];
	"pandas.io.excel._odswriter" -> "__future__" [];
	"pandas.io.excel._odswriter" -> "collections" [];
	"pandas.io.excel._odswriter" -> "datetime" [];
	"pandas.io.excel._odswriter" -> "json" [];
	"pandas.io.excel._odswriter" -> "typing" [];
	"pandas.io.excel._odswriter" -> "'odf.opendocument'" [];
	"pandas.io.excel._odswriter" -> "'odf.table'" [];
	"pandas.io.excel._odswriter" -> "'odf.text'" [];
	"pandas.io.excel._odswriter" -> "'odf.style'" [];
	"pandas.io.excel._odswriter" -> "'odf.config'" [];
	"pandas.io.excel._base" -> "__future__" [];
	"pandas.io.excel._base" -> "datetime" [];
	"pandas.io.excel._base" -> "functools" [];
	"pandas.io.excel._base" -> "io" [];
	"pandas.io.excel._base" -> "os" [];
	"pandas.io.excel._base" -> "textwrap" [];
	"pandas.io.excel._base" -> "typing" [];
	"pandas.io.excel._base" -> "warnings" [];
	"pandas.io.excel._base" -> "zipfile" [];
	"pandas.io.excel._base" -> "types" [];
	"pandas.io.excel._base" -> "xlrd" [];
	"pandas.io.excel._xlrd" -> "__future__" [];
	"pandas.io.excel._xlrd" -> "datetime" [];
	"pandas.io.excel._xlrd" -> "math" [];
	"pandas.io.excel._xlrd" -> "typing" [];
	"pandas.io.excel._xlrd" -> "numpy" [];
	"pandas.io.excel._xlrd" -> "xlrd" [];
	"pandas.io.excel._pyxlsb" -> "__future__" [];
	"pandas.io.excel._pyxlsb" -> "typing" [];
	"pandas.io.excel._pyxlsb" -> "pyxlsb" [];
	"pandas.io.excel._odfreader" -> "__future__" [];
	"pandas.io.excel._odfreader" -> "typing" [];
	"pandas.io.excel._odfreader" -> "numpy" [];
	"pandas.io.excel._odfreader" -> "pandas" [];
	"pandas.io.excel._odfreader" -> "odf" [];
	"pandas.io.excel._odfreader" -> "'odf.opendocument'" [];
	"pandas.io.excel._odfreader" -> "'odf.table'" [];
	"pandas.io.excel._odfreader" -> "'odf.namespaces'" [];
	"pandas.io.excel._odfreader" -> "'odf.element'" [];
	"pandas.io.excel._odfreader" -> "'odf.office'" [];
	"pandas.io.excel._odfreader" -> "'odf.text'" [];
	"pandas.io.excel._calamine" -> "__future__" [];
	"pandas.io.excel._calamine" -> "datetime" [];
	"pandas.io.excel._calamine" -> "typing" [];
	"pandas.io.excel._calamine" -> "pandas" [];
	"pandas.io.excel._calamine" -> "python_calamine" [];
	"pandas.io.parsers.readers" -> "__future__" [];
	"pandas.io.parsers.readers" -> "collections" [];
	"pandas.io.parsers.readers" -> "csv" [];
	"pandas.io.parsers.readers" -> "sys" [];
	"pandas.io.parsers.readers" -> "textwrap" [];
	"pandas.io.parsers.readers" -> "typing" [];
	"pandas.io.parsers.readers" -> "warnings" [];
	"pandas.io.parsers.readers" -> "numpy" [];
	"pandas.io.parsers.readers" -> "pandas" [];
	"pandas.io.parsers.readers" -> "types" [];
	"pandas.io.parsers.python_parser" -> "__future__" [];
	"pandas.io.parsers.python_parser" -> "collections" [];
	"pandas.io.parsers.python_parser" -> "csv" [];
	"pandas.io.parsers.python_parser" -> "io" [];
	"pandas.io.parsers.python_parser" -> "re" [];
	"pandas.io.parsers.python_parser" -> "typing" [];
	"pandas.io.parsers.python_parser" -> "warnings" [];
	"pandas.io.parsers.python_parser" -> "numpy" [];
	"pandas.io.parsers.python_parser" -> "pandas" [];
	"pandas.io.parsers.c_parser_wrapper" -> "__future__" [];
	"pandas.io.parsers.c_parser_wrapper" -> "collections" [];
	"pandas.io.parsers.c_parser_wrapper" -> "typing" [];
	"pandas.io.parsers.c_parser_wrapper" -> "warnings" [];
	"pandas.io.parsers.c_parser_wrapper" -> "numpy" [];
	"pandas.io.parsers.c_parser_wrapper" -> "pandas" [];
	"pandas.io.parsers.base_parser" -> "__future__" [];
	"pandas.io.parsers.base_parser" -> "collections" [];
	"pandas.io.parsers.base_parser" -> "copy" [];
	"pandas.io.parsers.base_parser" -> "csv" [];
	"pandas.io.parsers.base_parser" -> "datetime" [];
	"pandas.io.parsers.base_parser" -> "enum" [];
	"pandas.io.parsers.base_parser" -> "itertools" [];
	"pandas.io.parsers.base_parser" -> "typing" [];
	"pandas.io.parsers.base_parser" -> "warnings" [];
	"pandas.io.parsers.base_parser" -> "numpy" [];
	"pandas.io.parsers.base_parser" -> "pandas" [];
	"pandas.io.parsers.base_parser" -> "pyarrow" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "__future__" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "typing" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "warnings" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "pandas" [];
	"pandas.io.formats.css" -> "__future__" [];
	"pandas.io.formats.css" -> "re" [];
	"pandas.io.formats.css" -> "typing" [];
	"pandas.io.formats.css" -> "warnings" [];
	"pandas.io.formats._color_data" -> "__future__" [];
	"pandas.io.formats.style_render" -> "__future__" [];
	"pandas.io.formats.style_render" -> "collections" [];
	"pandas.io.formats.style_render" -> "functools" [];
	"pandas.io.formats.style_render" -> "re" [];
	"pandas.io.formats.style_render" -> "typing" [];
	"pandas.io.formats.style_render" -> "uuid" [];
	"pandas.io.formats.style_render" -> "numpy" [];
	"pandas.io.formats.style_render" -> "pandas" [];
	"pandas.io.formats.style_render" -> "markupsafe" [];
	"pandas.io.common" -> "__future__" [];
	"pandas.io.common" -> "abc" [];
	"pandas.io.common" -> "codecs" [];
	"pandas.io.common" -> "collections" [];
	"pandas.io.common" -> "dataclasses" [];
	"pandas.io.common" -> "functools" [];
	"pandas.io.common" -> "gzip" [];
	"pandas.io.common" -> "io" [];
	"pandas.io.common" -> "mmap" [];
	"pandas.io.common" -> "os" [];
	"pandas.io.common" -> "pathlib" [];
	"pandas.io.common" -> "re" [];
	"pandas.io.common" -> "tarfile" [];
	"pandas.io.common" -> "typing" [];
	"pandas.io.common" -> "warnings" [];
	"pandas.io.common" -> "zipfile" [];
	"pandas.io.common" -> "types" [];
	"pandas.io.common" -> "pandas" [];
	"pandas.io.common" -> "botocore" [];
	"pandas.core.reshape.concat" -> "__future__" [];
	"pandas.core.reshape.concat" -> "collections" [];
	"pandas.core.reshape.concat" -> "typing" [];
	"pandas.core.reshape.concat" -> "warnings" [];
	"pandas.core.reshape.concat" -> "numpy" [];
	"pandas.core.reshape.concat" -> "pandas" [];
	"pandas.core.indexes.timedeltas" -> "__future__" [];
	"pandas.core.indexes.timedeltas" -> "typing" [];
	"pandas.core.indexes.timedeltas" -> "warnings" [];
	"pandas.core.indexes.extension" -> "__future__" [];
	"pandas.core.indexes.extension" -> "typing" [];
	"pandas.core.indexes.extension" -> "numpy" [];
	"pandas.core.indexes.datetimelike" -> "__future__" [];
	"pandas.core.indexes.datetimelike" -> "abc" [];
	"pandas.core.indexes.datetimelike" -> "typing" [];
	"pandas.core.indexes.datetimelike" -> "warnings" [];
	"pandas.core.indexes.datetimelike" -> "numpy" [];
	"pandas.core.indexes.datetimelike" -> "datetime" [];
	"pandas.core.indexes.datetimelike" -> "pandas" [];
	"pandas.core.indexes.range" -> "__future__" [];
	"pandas.core.indexes.range" -> "datetime" [];
	"pandas.core.indexes.range" -> "operator" [];
	"pandas.core.indexes.range" -> "sys" [];
	"pandas.core.indexes.range" -> "typing" [];
	"pandas.core.indexes.range" -> "numpy" [];
	"pandas.core.indexes.datetimes" -> "__future__" [];
	"pandas.core.indexes.datetimes" -> "datetime" [];
	"pandas.core.indexes.datetimes" -> "operator" [];
	"pandas.core.indexes.datetimes" -> "typing" [];
	"pandas.core.indexes.datetimes" -> "warnings" [];
	"pandas.core.indexes.datetimes" -> "numpy" [];
	"pandas.core.indexes.datetimes" -> "pytz" [];
	"pytz" -> "sys" [];
	"pytz" -> "datetime" [];
	"pytz" -> "os.path" [];
	"pytz" -> "pkg_resources" [];
	"pytz" -> "doctest" [];
	"pytz.tzfile" -> "datetime" [];
	"pytz.tzfile" -> "struct" [];
	"pytz.tzfile" -> "os.path" [];
	"pytz.tzfile" -> "pprint" [];
	"pytz.tzinfo" -> "datetime" [];
	"pytz.tzinfo" -> "bisect" [];
	"pytz.tzinfo" -> "sets" [];
	"pytz.lazy" -> "threading" [];
	"pytz.lazy" -> "UserDict" [];
	"pytz.lazy" -> "collections" [];
	"pandas.core.indexes.api" -> "__future__" [];
	"pandas.core.indexes.api" -> "textwrap" [];
	"pandas.core.indexes.api" -> "typing" [];
	"pandas.core.indexes.api" -> "numpy" [];
	"pandas.core.indexes.period" -> "__future__" [];
	"pandas.core.indexes.period" -> "datetime" [];
	"pandas.core.indexes.period" -> "typing" [];
	"pandas.core.indexes.period" -> "warnings" [];
	"pandas.core.indexes.period" -> "numpy" [];
	"pandas.core.indexes.interval" -> "__future__" [];
	"pandas.core.indexes.interval" -> "operator" [];
	"pandas.core.indexes.interval" -> "textwrap" [];
	"pandas.core.indexes.interval" -> "typing" [];
	"pandas.core.indexes.interval" -> "numpy" [];
	"pandas.core.indexes.category" -> "__future__" [];
	"pandas.core.indexes.category" -> "typing" [];
	"pandas.core.indexes.category" -> "numpy" [];
	"pandas.core.common" -> "__future__" [];
	"pandas.core.common" -> "builtins" [];
	"pandas.core.common" -> "collections" [];
	"pandas.core.common" -> "contextlib" [];
	"pandas.core.common" -> "functools" [];
	"pandas.core.common" -> "inspect" [];
	"pandas.core.common" -> "typing" [];
	"pandas.core.common" -> "warnings" [];
	"pandas.core.common" -> "numpy" [];
	"pandas.core.common" -> "pandas" [];
	"pandas.core.base" -> "__future__" [];
	"pandas.core.base" -> "textwrap" [];
	"pandas.core.base" -> "typing" [];
	"pandas.core.base" -> "warnings" [];
	"pandas.core.base" -> "numpy" [];
	"pandas.core.base" -> "pandas" [];
	"pandas.core.arrays.string_" -> "__future__" [];
	"pandas.core.arrays.string_" -> "typing" [];
	"pandas.core.arrays.string_" -> "numpy" [];
	"pandas.core.arrays.string_" -> "pyarrow" [];
	"pandas.core.arrays.string_" -> "pandas" [];
	"pandas.core.arrays.numpy_" -> "__future__" [];
	"pandas.core.arrays.numpy_" -> "typing" [];
	"pandas.core.arrays.numpy_" -> "numpy" [];
	"pandas.core.arrays.numpy_" -> "pandas" [];
	"pandas.core.arrays.sparse.array" -> "__future__" [];
	"pandas.core.arrays.sparse.array" -> "collections" [];
	"pandas.core.arrays.sparse.array" -> "numbers" [];
	"pandas.core.arrays.sparse.array" -> "operator" [];
	"pandas.core.arrays.sparse.array" -> "typing" [];
	"pandas.core.arrays.sparse.array" -> "warnings" [];
	"pandas.core.arrays.sparse.array" -> "numpy" [];
	"pandas.core.arrays.sparse.array" -> "enum" [];
	"pandas.core.arrays.sparse.array" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.array" -> "pandas" [];
	"pandas.core.arrays.sparse.accessor" -> "__future__" [];
	"pandas.core.arrays.sparse.accessor" -> "typing" [];
	"pandas.core.arrays.sparse.accessor" -> "numpy" [];
	"pandas.core.arrays.sparse.accessor" -> "pandas" [];
	"pandas.core.arrays.sparse.accessor" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "__future__" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "typing" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "numpy" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "pandas" [];
	"pandas.core.dtypes.missing" -> "__future__" [];
	"pandas.core.dtypes.missing" -> "decimal" [];
	"pandas.core.dtypes.missing" -> "functools" [];
	"pandas.core.dtypes.missing" -> "typing" [];
	"pandas.core.dtypes.missing" -> "warnings" [];
	"pandas.core.dtypes.missing" -> "numpy" [];
	"pandas.core.dtypes.missing" -> "re" [];
	"pandas.core.dtypes.missing" -> "pandas" [];
	"pandas.core.dtypes.common" -> "__future__" [];
	"pandas.core.dtypes.common" -> "typing" [];
	"pandas.core.dtypes.common" -> "warnings" [];
	"pandas.core.dtypes.common" -> "numpy" [];
	"pandas.core.dtypes.common" -> "scipy" [];
	"pandas._config.config" -> "__future__" [];
	"pandas._config.config" -> "contextlib" [];
	"pandas._config.config" -> "re" [];
	"pandas._config.config" -> "typing" [];
	"pandas._config.config" -> "warnings" [];
	"pandas._config.config" -> "keyword" [];
	"pandas._config.config" -> "tokenize" [];
	"pandas._config.config" -> "itertools" [];
	"pandas._config.config" -> "textwrap" [];
	"pandas.core.window.rolling" -> "__future__" [];
	"pandas.core.window.rolling" -> "copy" [];
	"pandas.core.window.rolling" -> "datetime" [];
	"pandas.core.window.rolling" -> "functools" [];
	"pandas.core.window.rolling" -> "inspect" [];
	"pandas.core.window.rolling" -> "textwrap" [];
	"pandas.core.window.rolling" -> "typing" [];
	"pandas.core.window.rolling" -> "numpy" [];
	"pandas.core.window.rolling" -> "pandas" [];
	"pandas.core.series" -> "__future__" [];
	"pandas.core.series" -> "operator" [];
	"pandas.core.series" -> "sys" [];
	"pandas.core.series" -> "textwrap" [];
	"pandas.core.series" -> "typing" [];
	"pandas.core.series" -> "warnings" [];
	"pandas.core.series" -> "weakref" [];
	"pandas.core.series" -> "numpy" [];
	"pandas.core.reshape.reshape" -> "__future__" [];
	"pandas.core.reshape.reshape" -> "itertools" [];
	"pandas.core.reshape.reshape" -> "typing" [];
	"pandas.core.reshape.reshape" -> "warnings" [];
	"pandas.core.reshape.reshape" -> "numpy" [];
	"pandas.io.formats.info" -> "__future__" [];
	"pandas.io.formats.info" -> "abc" [];
	"pandas.io.formats.info" -> "sys" [];
	"pandas.io.formats.info" -> "textwrap" [];
	"pandas.io.formats.info" -> "typing" [];
	"pandas.io.formats.info" -> "pandas" [];
	"pandas.core.strings.accessor" -> "__future__" [];
	"pandas.core.strings.accessor" -> "codecs" [];
	"pandas.core.strings.accessor" -> "functools" [];
	"pandas.core.strings.accessor" -> "re" [];
	"pandas.core.strings.accessor" -> "typing" [];
	"pandas.core.strings.accessor" -> "warnings" [];
	"pandas.core.strings.accessor" -> "numpy" [];
	"pandas.core.strings.accessor" -> "pandas" [];
	"pandas.core.strings.accessor" -> "pyarrow" [];
	"pandas.core.methods.selectn" -> "__future__" [];
	"pandas.core.methods.selectn" -> "typing" [];
	"pandas.core.methods.selectn" -> "numpy" [];
	"pandas.core.methods.selectn" -> "pandas" [];
	"pandas.core.indexes.accessors" -> "__future__" [];
	"pandas.core.indexes.accessors" -> "typing" [];
	"pandas.core.indexes.accessors" -> "warnings" [];
	"pandas.core.indexes.accessors" -> "numpy" [];
	"pandas.core.indexes.accessors" -> "pandas" [];
	"pandas.compat._constants" -> "__future__" [];
	"pandas.compat._constants" -> "platform" [];
	"pandas.compat._constants" -> "sys" [];
	"pandas.compat._constants" -> "sysconfig" [];
	"pandas.core.resample" -> "__future__" [];
	"pandas.core.resample" -> "copy" [];
	"pandas.core.resample" -> "textwrap" [];
	"pandas.core.resample" -> "typing" [];
	"pandas.core.resample" -> "warnings" [];
	"pandas.core.resample" -> "numpy" [];
	"pandas.core.resample" -> "pandas" [];
	"pandas.core.internals" -> "warnings" [];
	"pandas.core.internals.concat" -> "__future__" [];
	"pandas.core.internals.concat" -> "typing" [];
	"pandas.core.internals.concat" -> "warnings" [];
	"pandas.core.internals.concat" -> "numpy" [];
	"pandas.core.internals.concat" -> "pandas" [];
	"pandas.core.internals.api" -> "__future__" [];
	"pandas.core.internals.api" -> "typing" [];
	"pandas.core.internals.api" -> "numpy" [];
	"pandas.core.internals.api" -> "warnings" [];
	"pandas.core.indexes.base" -> "__future__" [];
	"pandas.core.indexes.base" -> "collections" [];
	"pandas.core.indexes.base" -> "datetime" [];
	"pandas.core.indexes.base" -> "functools" [];
	"pandas.core.indexes.base" -> "itertools" [];
	"pandas.core.indexes.base" -> "operator" [];
	"pandas.core.indexes.base" -> "typing" [];
	"pandas.core.indexes.base" -> "warnings" [];
	"pandas.core.indexes.base" -> "numpy" [];
	"pandas.core.indexes.base" -> "pandas" [];
	"pandas.core.indexes.base" -> "pyarrow" [];
	"pandas.core.indexes.base" -> "copy" [];
	"pandas.core.reshape.merge" -> "__future__" [];
	"pandas.core.reshape.merge" -> "datetime" [];
	"pandas.core.reshape.merge" -> "functools" [];
	"pandas.core.reshape.merge" -> "typing" [];
	"pandas.core.reshape.merge" -> "uuid" [];
	"pandas.core.reshape.merge" -> "warnings" [];
	"pandas.core.reshape.merge" -> "numpy" [];
	"pandas.core.reshape.merge" -> "pandas" [];
	"pandas.core.reshape.merge" -> "pyarrow" [];
	"pandas.core.groupby.generic" -> "__future__" [];
	"pandas.core.groupby.generic" -> "collections" [];
	"pandas.core.groupby.generic" -> "functools" [];
	"pandas.core.groupby.generic" -> "textwrap" [];
	"pandas.core.groupby.generic" -> "typing" [];
	"pandas.core.groupby.generic" -> "warnings" [];
	"pandas.core.groupby.generic" -> "numpy" [];
	"pandas.core.groupby.generic" -> "pandas" [];
	"pandas.core.generic" -> "__future__" [];
	"pandas.core.generic" -> "collections" [];
	"pandas.core.generic" -> "copy" [];
	"pandas.core.generic" -> "datetime" [];
	"pandas.core.generic" -> "functools" [];
	"pandas.core.generic" -> "gc" [];
	"pandas.core.generic" -> "json" [];
	"pandas.core.generic" -> "operator" [];
	"pandas.core.generic" -> "pickle" [];
	"pandas.core.generic" -> "re" [];
	"pandas.core.generic" -> "sys" [];
	"pandas.core.generic" -> "typing" [];
	"pandas.core.generic" -> "warnings" [];
	"pandas.core.generic" -> "weakref" [];
	"pandas.core.generic" -> "numpy" [];
	"pandas.core.generic" -> "pandas" [];
	"pandas.io.clipboards" -> "__future__" [];
	"pandas.io.clipboards" -> "io" [];
	"pandas.io.clipboards" -> "typing" [];
	"pandas.io.clipboards" -> "warnings" [];
	"pandas.io.clipboards" -> "pandas" [];
	"pandas.io.clipboard" -> "contextlib" [];
	"pandas.io.clipboard" -> "ctypes" [];
	"pandas.io.clipboard" -> "os" [];
	"pandas.io.clipboard" -> "platform" [];
	"pandas.io.clipboard" -> "shutil" [];
	"pandas.io.clipboard" -> "subprocess" [];
	"pandas.io.clipboard" -> "time" [];
	"pandas.io.clipboard" -> "warnings" [];
	"pandas.io.clipboard" -> "qtpy" [];
	"pandas.io.clipboard" -> "PyQt4" [];
	"pandas.io.clipboard" -> "AppKit" [];
	"pandas.io.clipboard" -> "Foundation" [];
	"pandas.io.pickle" -> "__future__" [];
	"pandas.io.pickle" -> "pickle" [];
	"pandas.io.pickle" -> "typing" [];
	"pandas.io.pickle" -> "warnings" [];
	"pandas.io.pickle" -> "pandas" [];
	"pandas.compat.pickle_compat" -> "__future__" [];
	"pandas.compat.pickle_compat" -> "contextlib" [];
	"pandas.compat.pickle_compat" -> "copy" [];
	"pandas.compat.pickle_compat" -> "io" [];
	"pandas.compat.pickle_compat" -> "pickle" [];
	"pandas.compat.pickle_compat" -> "typing" [];
	"pandas.compat.pickle_compat" -> "numpy" [];
	"pandas.compat.pickle_compat" -> "pandas" [];
	"pandas.io.sql" -> "__future__" [];
	"pandas.io.sql" -> "abc" [];
	"pandas.io.sql" -> "contextlib" [];
	"pandas.io.sql" -> "datetime" [];
	"pandas.io.sql" -> "functools" [];
	"pandas.io.sql" -> "re" [];
	"pandas.io.sql" -> "typing" [];
	"pandas.io.sql" -> "warnings" [];
	"pandas.io.sql" -> "numpy" [];
	"pandas.io.sql" -> "pandas" [];
	"pandas.io.sql" -> "sqlalchemy" [];
	"pandas.io.sql" -> "sqlite3" [];
	"pandas.io.sql" -> "pyarrow" [];
	"sqlalchemy.sql.ddl" -> "__future__" [];
	"sqlalchemy.sql.ddl" -> "contextlib" [];
	"sqlalchemy.sql.ddl" -> "typing" [];
	"sqlalchemy.sql.ddl" -> "sqlalchemy" [];
	"sqlalchemy.sql.selectable" -> "__future__" [];
	"sqlalchemy.sql.selectable" -> "collections" [];
	"sqlalchemy.sql.selectable" -> "enum" [];
	"sqlalchemy.sql.selectable" -> "itertools" [];
	"sqlalchemy.sql.selectable" -> "typing" [];
	"sqlalchemy.sql.selectable" -> "sqlalchemy" [];
	"sqlalchemy.sql.functions" -> "__future__" [];
	"sqlalchemy.sql.functions" -> "datetime" [];
	"sqlalchemy.sql.functions" -> "decimal" [];
	"sqlalchemy.sql.functions" -> "typing" [];
	"sqlalchemy.sql.functions" -> "sqlalchemy" [];
	"sqlalchemy.sql.util" -> "__future__" [];
	"sqlalchemy.sql.util" -> "collections" [];
	"sqlalchemy.sql.util" -> "copy" [];
	"sqlalchemy.sql.util" -> "itertools" [];
	"sqlalchemy.sql.util" -> "typing" [];
	"sqlalchemy.sql.util" -> "sqlalchemy" [];
	"sqlalchemy.sql.dml" -> "__future__" [];
	"sqlalchemy.sql.dml" -> "operator" [];
	"sqlalchemy.sql.dml" -> "typing" [];
	"sqlalchemy.sql.dml" -> "sqlalchemy" [];
	"sqlalchemy.sql.sqltypes" -> "__future__" [];
	"sqlalchemy.sql.sqltypes" -> "datetime" [];
	"sqlalchemy.sql.sqltypes" -> "decimal" [];
	"sqlalchemy.sql.sqltypes" -> "enum" [];
	"sqlalchemy.sql.sqltypes" -> "json" [];
	"sqlalchemy.sql.sqltypes" -> "pickle" [];
	"sqlalchemy.sql.sqltypes" -> "typing" [];
	"sqlalchemy.sql.sqltypes" -> "uuid" [];
	"sqlalchemy.sql.sqltypes" -> "sqlalchemy" [];
	"sqlalchemy.util.langhelpers" -> "__future__" [];
	"sqlalchemy.util.langhelpers" -> "collections" [];
	"sqlalchemy.util.langhelpers" -> "enum" [];
	"sqlalchemy.util.langhelpers" -> "functools" [];
	"sqlalchemy.util.langhelpers" -> "inspect" [];
	"sqlalchemy.util.langhelpers" -> "itertools" [];
	"sqlalchemy.util.langhelpers" -> "operator" [];
	"sqlalchemy.util.langhelpers" -> "re" [];
	"sqlalchemy.util.langhelpers" -> "sys" [];
	"sqlalchemy.util.langhelpers" -> "textwrap" [];
	"sqlalchemy.util.langhelpers" -> "threading" [];
	"sqlalchemy.util.langhelpers" -> "types" [];
	"sqlalchemy.util.langhelpers" -> "typing" [];
	"sqlalchemy.util.langhelpers" -> "warnings" [];
	"sqlalchemy.util.langhelpers" -> "sqlalchemy" [];
	"sqlalchemy.util._has_cy" -> "os" [];
	"sqlalchemy.util._has_cy" -> "typing" [];
	"sqlalchemy.util.compat" -> "__future__" [];
	"sqlalchemy.util.compat" -> "base64" [];
	"sqlalchemy.util.compat" -> "dataclasses" [];
	"sqlalchemy.util.compat" -> "hashlib" [];
	"sqlalchemy.util.compat" -> "inspect" [];
	"sqlalchemy.util.compat" -> "operator" [];
	"sqlalchemy.util.compat" -> "platform" [];
	"sqlalchemy.util.compat" -> "sys" [];
	"sqlalchemy.util.compat" -> "typing" [];
	"sqlalchemy.util.compat" -> "importlib" [];
	"sqlalchemy.util.compat" -> "importlib_metadata" [];
	"importlib_metadata" -> "__future__" [];
	"importlib_metadata" -> "abc" [];
	"importlib_metadata" -> "collections" [];
	"importlib_metadata" -> "email" [];
	"importlib_metadata" -> "functools" [];
	"importlib_metadata" -> "itertools" [];
	"importlib_metadata" -> "operator" [];
	"importlib_metadata" -> "os" [];
	"importlib_metadata" -> "pathlib" [];
	"importlib_metadata" -> "posixpath" [];
	"importlib_metadata" -> "re" [];
	"importlib_metadata" -> "sys" [];
	"importlib_metadata" -> "textwrap" [];
	"importlib_metadata" -> "types" [];
	"importlib_metadata" -> "contextlib" [];
	"importlib_metadata" -> "importlib" [];
	"importlib_metadata" -> "typing" [];
	"importlib_metadata" -> "csv" [];
	"importlib_metadata" -> "json" [];
	"importlib_metadata" -> "inspect" [];
	"zipp.compat.overlay" -> "importlib" [];
	"zipp.compat.overlay" -> "sys" [];
	"zipp.compat.overlay" -> "types" [];
	"zipp.compat.overlay" -> "zipp" [];
	"zipp" -> "functools" [];
	"zipp" -> "io" [];
	"zipp" -> "itertools" [];
	"zipp" -> "pathlib" [];
	"zipp" -> "posixpath" [];
	"zipp" -> "re" [];
	"zipp" -> "stat" [];
	"zipp" -> "sys" [];
	"zipp" -> "zipfile" [];
	"zipp._functools" -> "collections" [];
	"zipp._functools" -> "functools" [];
	"zipp.glob" -> "os" [];
	"zipp.glob" -> "re" [];
	"zipp.compat.py310" -> "io" [];
	"zipp.compat.py310" -> "sys" [];
	"importlib_metadata._adapters" -> "re" [];
	"importlib_metadata._adapters" -> "textwrap" [];
	"importlib_metadata._text" -> "re" [];
	"importlib_metadata.compat.py311" -> "os" [];
	"importlib_metadata.compat.py311" -> "pathlib" [];
	"importlib_metadata.compat.py311" -> "sys" [];
	"importlib_metadata.compat.py311" -> "types" [];
	"importlib_metadata.compat.py39" -> "__future__" [];
	"importlib_metadata.compat.py39" -> "typing" [];
	"importlib_metadata.compat.py39" -> "importlib_metadata" [];
	"importlib_metadata._typing" -> "functools" [];
	"importlib_metadata._typing" -> "typing" [];
	"importlib_metadata._itertools" -> "collections" [];
	"importlib_metadata._itertools" -> "itertools" [];
	"importlib_metadata._functools" -> "functools" [];
	"importlib_metadata._functools" -> "types" [];
	"importlib_metadata._compat" -> "platform" [];
	"importlib_metadata._compat" -> "sys" [];
	"importlib_metadata._collections" -> "collections" [];
	"importlib_metadata._collections" -> "typing" [];
	"importlib_metadata._meta" -> "__future__" [];
	"importlib_metadata._meta" -> "os" [];
	"importlib_metadata._meta" -> "typing" [];
	"sqlalchemy.util._collections" -> "__future__" [];
	"sqlalchemy.util._collections" -> "operator" [];
	"sqlalchemy.util._collections" -> "threading" [];
	"sqlalchemy.util._collections" -> "types" [];
	"sqlalchemy.util._collections" -> "typing" [];
	"sqlalchemy.util._collections" -> "weakref" [];
	"sqlalchemy.util._py_collections" -> "__future__" [];
	"sqlalchemy.util._py_collections" -> "itertools" [];
	"sqlalchemy.util._py_collections" -> "typing" [];
	"sqlalchemy.inspection" -> "__future__" [];
	"sqlalchemy.inspection" -> "typing" [];
	"sqlalchemy.event" -> "__future__" [];
	"sqlalchemy.event.registry" -> "__future__" [];
	"sqlalchemy.event.registry" -> "collections" [];
	"sqlalchemy.event.registry" -> "types" [];
	"sqlalchemy.event.registry" -> "typing" [];
	"sqlalchemy.event.registry" -> "weakref" [];
	"sqlalchemy.event.registry" -> "sqlalchemy" [];
	"sqlalchemy.event.base" -> "__future__" [];
	"sqlalchemy.event.base" -> "typing" [];
	"sqlalchemy.event.base" -> "weakref" [];
	"sqlalchemy.event.base" -> "sqlalchemy" [];
	"sqlalchemy.event.attr" -> "__future__" [];
	"sqlalchemy.event.attr" -> "collections" [];
	"sqlalchemy.event.attr" -> "itertools" [];
	"sqlalchemy.event.attr" -> "threading" [];
	"sqlalchemy.event.attr" -> "types" [];
	"sqlalchemy.event.attr" -> "typing" [];
	"sqlalchemy.event.attr" -> "weakref" [];
	"sqlalchemy.event.attr" -> "sqlalchemy" [];
	"sqlalchemy.util.concurrency" -> "__future__" [];
	"sqlalchemy.util.concurrency" -> "asyncio" [];
	"sqlalchemy.util.concurrency" -> "typing" [];
	"sqlalchemy.util.concurrency" -> "greenlet" [];
	"sqlalchemy.util._concurrency_py3k" -> "__future__" [];
	"sqlalchemy.util._concurrency_py3k" -> "asyncio" [];
	"sqlalchemy.util._concurrency_py3k" -> "contextvars" [];
	"sqlalchemy.util._concurrency_py3k" -> "sys" [];
	"sqlalchemy.util._concurrency_py3k" -> "typing" [];
	"sqlalchemy.util._concurrency_py3k" -> "sqlalchemy" [];
	"sqlalchemy.util._concurrency_py3k" -> "greenlet" [];
	"sqlalchemy.event.api" -> "__future__" [];
	"sqlalchemy.event.api" -> "typing" [];
	"sqlalchemy.event.api" -> "sqlalchemy" [];
	"sqlalchemy.event.legacy" -> "__future__" [];
	"sqlalchemy.event.legacy" -> "typing" [];
	"sqlalchemy.event.legacy" -> "sqlalchemy" [];
	"sqlalchemy.sql.annotation" -> "__future__" [];
	"sqlalchemy.sql.annotation" -> "typing" [];
	"sqlalchemy.sql.annotation" -> "sqlalchemy" [];
	"sqlalchemy.sql._typing" -> "__future__" [];
	"sqlalchemy.sql._typing" -> "operator" [];
	"sqlalchemy.sql._typing" -> "typing" [];
	"sqlalchemy.sql._typing" -> "sqlalchemy" [];
	"sqlalchemy.sql._typing" -> "datetime" [];
	"sqlalchemy.sql._typing" -> "decimal" [];
	"sqlalchemy.sql._typing" -> "uuid" [];
	"sqlalchemy.sql.lambdas" -> "__future__" [];
	"sqlalchemy.sql.lambdas" -> "inspect" [];
	"sqlalchemy.sql.lambdas" -> "itertools" [];
	"sqlalchemy.sql.lambdas" -> "operator" [];
	"sqlalchemy.sql.lambdas" -> "threading" [];
	"sqlalchemy.sql.lambdas" -> "types" [];
	"sqlalchemy.sql.lambdas" -> "typing" [];
	"sqlalchemy.sql.lambdas" -> "weakref" [];
	"sqlalchemy.sql.lambdas" -> "sqlalchemy" [];
	"sqlalchemy.sql.visitors" -> "__future__" [];
	"sqlalchemy.sql.visitors" -> "collections" [];
	"sqlalchemy.sql.visitors" -> "enum" [];
	"sqlalchemy.sql.visitors" -> "itertools" [];
	"sqlalchemy.sql.visitors" -> "operator" [];
	"sqlalchemy.sql.visitors" -> "typing" [];
	"sqlalchemy.sql.visitors" -> "sqlalchemy" [];
	"sqlalchemy.sql._py_util" -> "__future__" [];
	"sqlalchemy.sql._py_util" -> "typing" [];
	"sqlalchemy.sql.type_api" -> "__future__" [];
	"sqlalchemy.sql.type_api" -> "enum" [];
	"sqlalchemy.sql.type_api" -> "types" [];
	"sqlalchemy.sql.type_api" -> "typing" [];
	"sqlalchemy.sql.type_api" -> "sqlalchemy" [];
	"sqlalchemy.sql.traversals" -> "__future__" [];
	"sqlalchemy.sql.traversals" -> "collections" [];
	"sqlalchemy.sql.traversals" -> "itertools" [];
	"sqlalchemy.sql.traversals" -> "operator" [];
	"sqlalchemy.sql.traversals" -> "typing" [];
	"sqlalchemy.sql.traversals" -> "sqlalchemy" [];
	"sqlalchemy.sql.operators" -> "__future__" [];
	"sqlalchemy.sql.operators" -> "enum" [];
	"sqlalchemy.sql.operators" -> "operator" [];
	"sqlalchemy.sql.operators" -> "typing" [];
	"sqlalchemy.sql.operators" -> "sqlalchemy" [];
	"sqlalchemy.sql.coercions" -> "__future__" [];
	"sqlalchemy.sql.coercions" -> "numbers" [];
	"sqlalchemy.sql.coercions" -> "re" [];
	"sqlalchemy.sql.coercions" -> "typing" [];
	"sqlalchemy.sql.coercions" -> "sqlalchemy" [];
	"sqlalchemy.sql.cache_key" -> "__future__" [];
	"sqlalchemy.sql.cache_key" -> "enum" [];
	"sqlalchemy.sql.cache_key" -> "itertools" [];
	"sqlalchemy.sql.cache_key" -> "typing" [];
	"sqlalchemy.sql.cache_key" -> "sqlalchemy" [];
	"sqlalchemy.sql.schema" -> "__future__" [];
	"sqlalchemy.sql.schema" -> "abc" [];
	"sqlalchemy.sql.schema" -> "collections" [];
	"sqlalchemy.sql.schema" -> "enum" [];
	"sqlalchemy.sql.schema" -> "operator" [];
	"sqlalchemy.sql.schema" -> "typing" [];
	"sqlalchemy.sql.schema" -> "sqlalchemy" [];
	"sqlalchemy.sql.compiler" -> "__future__" [];
	"sqlalchemy.sql.compiler" -> "collections" [];
	"sqlalchemy.sql.compiler" -> "contextlib" [];
	"sqlalchemy.sql.compiler" -> "enum" [];
	"sqlalchemy.sql.compiler" -> "functools" [];
	"sqlalchemy.sql.compiler" -> "itertools" [];
	"sqlalchemy.sql.compiler" -> "operator" [];
	"sqlalchemy.sql.compiler" -> "re" [];
	"sqlalchemy.sql.compiler" -> "time" [];
	"sqlalchemy.sql.compiler" -> "typing" [];
	"sqlalchemy.sql.compiler" -> "sqlalchemy" [];
	"sqlalchemy.sql.crud" -> "__future__" [];
	"sqlalchemy.sql.crud" -> "functools" [];
	"sqlalchemy.sql.crud" -> "operator" [];
	"sqlalchemy.sql.crud" -> "typing" [];
	"sqlalchemy.sql.crud" -> "sqlalchemy" [];
	"sqlalchemy.util.typing" -> "__future__" [];
	"sqlalchemy.util.typing" -> "builtins" [];
	"sqlalchemy.util.typing" -> "collections" [];
	"sqlalchemy.util.typing" -> "re" [];
	"sqlalchemy.util.typing" -> "sys" [];
	"sqlalchemy.util.typing" -> "typing" [];
	"sqlalchemy.util.typing" -> "typing_extensions" [];
	"sqlalchemy.util.typing" -> "types" [];
	"sqlalchemy.util.topological" -> "__future__" [];
	"sqlalchemy.util.topological" -> "typing" [];
	"sqlalchemy.util.topological" -> "sqlalchemy" [];
	"sqlalchemy.util" -> "collections" [];
	"sqlalchemy.util" -> "functools" [];
	"sqlalchemy.util" -> "typing" [];
	"sqlalchemy.util.deprecations" -> "__future__" [];
	"sqlalchemy.util.deprecations" -> "re" [];
	"sqlalchemy.util.deprecations" -> "typing" [];
	"sqlalchemy.util.deprecations" -> "sqlalchemy" [];
	"sqlalchemy.util.queue" -> "__future__" [];
	"sqlalchemy.util.queue" -> "asyncio" [];
	"sqlalchemy.util.queue" -> "collections" [];
	"sqlalchemy.util.queue" -> "threading" [];
	"sqlalchemy.util.queue" -> "time" [];
	"sqlalchemy.util.queue" -> "typing" [];
	"sqlalchemy.util.preloaded" -> "__future__" [];
	"sqlalchemy.util.preloaded" -> "sys" [];
	"sqlalchemy.util.preloaded" -> "typing" [];
	"sqlalchemy.util.preloaded" -> "sqlalchemy" [];
	"sqlalchemy.sql.naming" -> "__future__" [];
	"sqlalchemy.sql.naming" -> "re" [];
	"sqlalchemy.sql.naming" -> "sqlalchemy" [];
	"sqlalchemy.sql.events" -> "__future__" [];
	"sqlalchemy.sql.events" -> "typing" [];
	"sqlalchemy.sql.events" -> "sqlalchemy" [];
	"sqlalchemy.sql.default_comparator" -> "__future__" [];
	"sqlalchemy.sql.default_comparator" -> "typing" [];
	"sqlalchemy.sql.default_comparator" -> "sqlalchemy" [];
	"sqlalchemy.orm.util" -> "__future__" [];
	"sqlalchemy.orm.util" -> "enum" [];
	"sqlalchemy.orm.util" -> "functools" [];
	"sqlalchemy.orm.util" -> "re" [];
	"sqlalchemy.orm.util" -> "types" [];
	"sqlalchemy.orm.util" -> "typing" [];
	"sqlalchemy.orm.util" -> "weakref" [];
	"sqlalchemy.orm.util" -> "sqlalchemy" [];
	"sqlalchemy.orm.query" -> "__future__" [];
	"sqlalchemy.orm.query" -> "operator" [];
	"sqlalchemy.orm.query" -> "typing" [];
	"sqlalchemy.orm.query" -> "sqlalchemy" [];
	"sqlalchemy.log" -> "__future__" [];
	"sqlalchemy.log" -> "logging" [];
	"sqlalchemy.log" -> "sys" [];
	"sqlalchemy.log" -> "typing" [];
	"sqlalchemy.orm.loading" -> "__future__" [];
	"sqlalchemy.orm.loading" -> "typing" [];
	"sqlalchemy.orm.loading" -> "sqlalchemy" [];
	"sqlalchemy.orm.mapper" -> "__future__" [];
	"sqlalchemy.orm.mapper" -> "collections" [];
	"sqlalchemy.orm.mapper" -> "functools" [];
	"sqlalchemy.orm.mapper" -> "itertools" [];
	"sqlalchemy.orm.mapper" -> "sys" [];
	"sqlalchemy.orm.mapper" -> "threading" [];
	"sqlalchemy.orm.mapper" -> "typing" [];
	"sqlalchemy.orm.mapper" -> "weakref" [];
	"sqlalchemy.orm.mapper" -> "sqlalchemy" [];
	"sqlalchemy.orm.events" -> "__future__" [];
	"sqlalchemy.orm.events" -> "typing" [];
	"sqlalchemy.orm.events" -> "weakref" [];
	"sqlalchemy.orm.events" -> "sqlalchemy" [];
	"sqlalchemy.orm.collections" -> "__future__" [];
	"sqlalchemy.orm.collections" -> "operator" [];
	"sqlalchemy.orm.collections" -> "threading" [];
	"sqlalchemy.orm.collections" -> "typing" [];
	"sqlalchemy.orm.collections" -> "weakref" [];
	"sqlalchemy.orm.collections" -> "sqlalchemy" [];
	"sqlalchemy.orm.mapped_collection" -> "__future__" [];
	"sqlalchemy.orm.mapped_collection" -> "operator" [];
	"sqlalchemy.orm.mapped_collection" -> "typing" [];
	"sqlalchemy.orm.mapped_collection" -> "sqlalchemy" [];
	"sqlalchemy.orm.unitofwork" -> "__future__" [];
	"sqlalchemy.orm.unitofwork" -> "typing" [];
	"sqlalchemy.orm.unitofwork" -> "sqlalchemy" [];
	"sqlalchemy.orm.scoping" -> "__future__" [];
	"sqlalchemy.orm.scoping" -> "typing" [];
	"sqlalchemy.orm.scoping" -> "sqlalchemy" [];
	"sqlalchemy.orm.identity" -> "__future__" [];
	"sqlalchemy.orm.identity" -> "typing" [];
	"sqlalchemy.orm.identity" -> "weakref" [];
	"sqlalchemy.orm.identity" -> "sqlalchemy" [];
	"sqlalchemy.orm.instrumentation" -> "__future__" [];
	"sqlalchemy.orm.instrumentation" -> "typing" [];
	"sqlalchemy.orm.instrumentation" -> "weakref" [];
	"sqlalchemy.orm.instrumentation" -> "sqlalchemy" [];
	"sqlalchemy.orm.context" -> "__future__" [];
	"sqlalchemy.orm.context" -> "itertools" [];
	"sqlalchemy.orm.context" -> "typing" [];
	"sqlalchemy.orm.context" -> "sqlalchemy" [];
	"sqlalchemy.sql._selectable_constructors" -> "__future__" [];
	"sqlalchemy.sql._selectable_constructors" -> "typing" [];
	"sqlalchemy.orm.path_registry" -> "__future__" [];
	"sqlalchemy.orm.path_registry" -> "functools" [];
	"sqlalchemy.orm.path_registry" -> "itertools" [];
	"sqlalchemy.orm.path_registry" -> "logging" [];
	"sqlalchemy.orm.path_registry" -> "operator" [];
	"sqlalchemy.orm.path_registry" -> "typing" [];
	"sqlalchemy.orm.path_registry" -> "sqlalchemy" [];
	"sqlalchemy.orm.interfaces" -> "__future__" [];
	"sqlalchemy.orm.interfaces" -> "collections" [];
	"sqlalchemy.orm.interfaces" -> "dataclasses" [];
	"sqlalchemy.orm.interfaces" -> "typing" [];
	"sqlalchemy.orm.interfaces" -> "sqlalchemy" [];
	"sqlalchemy.orm._typing" -> "__future__" [];
	"sqlalchemy.orm._typing" -> "operator" [];
	"sqlalchemy.orm._typing" -> "typing" [];
	"sqlalchemy.sql._orm_types" -> "__future__" [];
	"sqlalchemy.orm.exc" -> "__future__" [];
	"sqlalchemy.orm.exc" -> "typing" [];
	"sqlalchemy.orm.exc" -> "sqlalchemy" [];
	"sqlalchemy.orm.strategy_options" -> "__future__" [];
	"sqlalchemy.orm.strategy_options" -> "typing" [];
	"sqlalchemy.orm.strategy_options" -> "sqlalchemy" [];
	"sqlalchemy.orm.strategies" -> "__future__" [];
	"sqlalchemy.orm.strategies" -> "collections" [];
	"sqlalchemy.orm.strategies" -> "itertools" [];
	"sqlalchemy.orm.strategies" -> "typing" [];
	"sqlalchemy.orm.strategies" -> "sqlalchemy" [];
	"sqlalchemy.orm.state" -> "__future__" [];
	"sqlalchemy.orm.state" -> "typing" [];
	"sqlalchemy.orm.state" -> "weakref" [];
	"sqlalchemy.orm.state" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.session" -> "__future__" [];
	"sqlalchemy.ext.asyncio.session" -> "asyncio" [];
	"sqlalchemy.ext.asyncio.session" -> "typing" [];
	"sqlalchemy.ext.asyncio.session" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.result" -> "__future__" [];
	"sqlalchemy.ext.asyncio.result" -> "operator" [];
	"sqlalchemy.ext.asyncio.result" -> "typing" [];
	"sqlalchemy.ext.asyncio.result" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.exc" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.base" -> "__future__" [];
	"sqlalchemy.ext.asyncio.base" -> "abc" [];
	"sqlalchemy.ext.asyncio.base" -> "functools" [];
	"sqlalchemy.ext.asyncio.base" -> "typing" [];
	"sqlalchemy.ext.asyncio.base" -> "weakref" [];
	"sqlalchemy.ext.asyncio.base" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.engine" -> "__future__" [];
	"sqlalchemy.ext.asyncio.engine" -> "asyncio" [];
	"sqlalchemy.ext.asyncio.engine" -> "contextlib" [];
	"sqlalchemy.ext.asyncio.engine" -> "typing" [];
	"sqlalchemy.ext.asyncio.engine" -> "sqlalchemy" [];
	"sqlalchemy.pool.impl" -> "__future__" [];
	"sqlalchemy.pool.impl" -> "threading" [];
	"sqlalchemy.pool.impl" -> "traceback" [];
	"sqlalchemy.pool.impl" -> "typing" [];
	"sqlalchemy.pool.impl" -> "weakref" [];
	"sqlalchemy.pool.impl" -> "sqlalchemy" [];
	"sqlalchemy.pool.base" -> "__future__" [];
	"sqlalchemy.pool.base" -> "collections" [];
	"sqlalchemy.pool.base" -> "dataclasses" [];
	"sqlalchemy.pool.base" -> "enum" [];
	"sqlalchemy.pool.base" -> "threading" [];
	"sqlalchemy.pool.base" -> "time" [];
	"sqlalchemy.pool.base" -> "typing" [];
	"sqlalchemy.pool.base" -> "weakref" [];
	"sqlalchemy.pool.base" -> "sqlalchemy" [];
	"sqlalchemy.pool.events" -> "__future__" [];
	"sqlalchemy.pool.events" -> "typing" [];
	"sqlalchemy.pool.events" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.scoping" -> "__future__" [];
	"sqlalchemy.ext.asyncio.scoping" -> "typing" [];
	"sqlalchemy.ext.asyncio.scoping" -> "sqlalchemy" [];
	"sqlalchemy.orm.session" -> "__future__" [];
	"sqlalchemy.orm.session" -> "contextlib" [];
	"sqlalchemy.orm.session" -> "enum" [];
	"sqlalchemy.orm.session" -> "itertools" [];
	"sqlalchemy.orm.session" -> "sys" [];
	"sqlalchemy.orm.session" -> "typing" [];
	"sqlalchemy.orm.session" -> "weakref" [];
	"sqlalchemy.orm.session" -> "sqlalchemy" [];
	"sqlalchemy.orm.state_changes" -> "__future__" [];
	"sqlalchemy.orm.state_changes" -> "contextlib" [];
	"sqlalchemy.orm.state_changes" -> "enum" [];
	"sqlalchemy.orm.state_changes" -> "typing" [];
	"sqlalchemy.orm.state_changes" -> "sqlalchemy" [];
	"sqlalchemy.orm.bulk_persistence" -> "__future__" [];
	"sqlalchemy.orm.bulk_persistence" -> "typing" [];
	"sqlalchemy.orm.bulk_persistence" -> "sqlalchemy" [];
	"sqlalchemy.orm.persistence" -> "__future__" [];
	"sqlalchemy.orm.persistence" -> "itertools" [];
	"sqlalchemy.orm.persistence" -> "operator" [];
	"sqlalchemy.orm.persistence" -> "sqlalchemy" [];
	"sqlalchemy.orm.sync" -> "__future__" [];
	"sqlalchemy.orm.evaluator" -> "__future__" [];
	"sqlalchemy.orm.evaluator" -> "typing" [];
	"sqlalchemy.orm.evaluator" -> "sqlalchemy" [];
	"sqlalchemy.orm.relationships" -> "__future__" [];
	"sqlalchemy.orm.relationships" -> "collections" [];
	"sqlalchemy.orm.relationships" -> "dataclasses" [];
	"sqlalchemy.orm.relationships" -> "inspect" [];
	"sqlalchemy.orm.relationships" -> "itertools" [];
	"sqlalchemy.orm.relationships" -> "re" [];
	"sqlalchemy.orm.relationships" -> "typing" [];
	"sqlalchemy.orm.relationships" -> "weakref" [];
	"sqlalchemy.orm.relationships" -> "sqlalchemy" [];
	"sqlalchemy.orm.properties" -> "__future__" [];
	"sqlalchemy.orm.properties" -> "typing" [];
	"sqlalchemy.orm.properties" -> "sqlalchemy" [];
	"sqlalchemy.orm.descriptor_props" -> "__future__" [];
	"sqlalchemy.orm.descriptor_props" -> "dataclasses" [];
	"sqlalchemy.orm.descriptor_props" -> "inspect" [];
	"sqlalchemy.orm.descriptor_props" -> "itertools" [];
	"sqlalchemy.orm.descriptor_props" -> "operator" [];
	"sqlalchemy.orm.descriptor_props" -> "typing" [];
	"sqlalchemy.orm.descriptor_props" -> "weakref" [];
	"sqlalchemy.orm.descriptor_props" -> "sqlalchemy" [];
	"sqlalchemy.orm.dependency" -> "__future__" [];
	"sqlalchemy.orm.dependency" -> "sqlalchemy" [];
	"sqlalchemy.orm.decl_base" -> "__future__" [];
	"sqlalchemy.orm.decl_base" -> "collections" [];
	"sqlalchemy.orm.decl_base" -> "dataclasses" [];
	"sqlalchemy.orm.decl_base" -> "re" [];
	"sqlalchemy.orm.decl_base" -> "typing" [];
	"sqlalchemy.orm.decl_base" -> "weakref" [];
	"sqlalchemy.orm.decl_base" -> "sqlalchemy" [];
	"sqlalchemy.orm.decl_api" -> "__future__" [];
	"sqlalchemy.orm.decl_api" -> "itertools" [];
	"sqlalchemy.orm.decl_api" -> "re" [];
	"sqlalchemy.orm.decl_api" -> "typing" [];
	"sqlalchemy.orm.decl_api" -> "weakref" [];
	"sqlalchemy.orm.decl_api" -> "sqlalchemy" [];
	"sqlalchemy.orm._orm_constructors" -> "__future__" [];
	"sqlalchemy.orm._orm_constructors" -> "typing" [];
	"sqlalchemy.orm._orm_constructors" -> "sqlalchemy" [];
	"sqlalchemy.orm.clsregistry" -> "__future__" [];
	"sqlalchemy.orm.clsregistry" -> "re" [];
	"sqlalchemy.orm.clsregistry" -> "typing" [];
	"sqlalchemy.orm.clsregistry" -> "weakref" [];
	"sqlalchemy.orm.clsregistry" -> "sqlalchemy" [];
	"sqlalchemy.orm.base" -> "__future__" [];
	"sqlalchemy.orm.base" -> "enum" [];
	"sqlalchemy.orm.base" -> "operator" [];
	"sqlalchemy.orm.base" -> "typing" [];
	"sqlalchemy.orm.base" -> "sqlalchemy" [];
	"sqlalchemy.orm.writeonly" -> "__future__" [];
	"sqlalchemy.orm.writeonly" -> "typing" [];
	"sqlalchemy.orm.writeonly" -> "sqlalchemy" [];
	"sqlalchemy.orm.dynamic" -> "__future__" [];
	"sqlalchemy.orm.dynamic" -> "typing" [];
	"sqlalchemy.orm.dynamic" -> "sqlalchemy" [];
	"sqlalchemy.orm.attributes" -> "__future__" [];
	"sqlalchemy.orm.attributes" -> "dataclasses" [];
	"sqlalchemy.orm.attributes" -> "operator" [];
	"sqlalchemy.orm.attributes" -> "typing" [];
	"sqlalchemy.orm.attributes" -> "sqlalchemy" [];
	"sqlalchemy.engine.default" -> "__future__" [];
	"sqlalchemy.engine.default" -> "functools" [];
	"sqlalchemy.engine.default" -> "operator" [];
	"sqlalchemy.engine.default" -> "random" [];
	"sqlalchemy.engine.default" -> "re" [];
	"sqlalchemy.engine.default" -> "time" [];
	"sqlalchemy.engine.default" -> "typing" [];
	"sqlalchemy.engine.default" -> "weakref" [];
	"sqlalchemy.engine.default" -> "sqlalchemy" [];
	"sqlalchemy.engine.default" -> "types" [];
	"sqlalchemy.orm" -> "__future__" [];
	"sqlalchemy.orm" -> "typing" [];
	"sqlalchemy.dialects" -> "__future__" [];
	"sqlalchemy.dialects" -> "typing" [];
	"sqlalchemy.sql.elements" -> "__future__" [];
	"sqlalchemy.sql.elements" -> "decimal" [];
	"sqlalchemy.sql.elements" -> "enum" [];
	"sqlalchemy.sql.elements" -> "itertools" [];
	"sqlalchemy.sql.elements" -> "operator" [];
	"sqlalchemy.sql.elements" -> "re" [];
	"sqlalchemy.sql.elements" -> "typing" [];
	"sqlalchemy.sql.elements" -> "sqlalchemy" [];
	"sqlalchemy.sql.base" -> "__future__" [];
	"sqlalchemy.sql.base" -> "collections" [];
	"sqlalchemy.sql.base" -> "enum" [];
	"sqlalchemy.sql.base" -> "itertools" [];
	"sqlalchemy.sql.base" -> "operator" [];
	"sqlalchemy.sql.base" -> "re" [];
	"sqlalchemy.sql.base" -> "typing" [];
	"sqlalchemy.sql.base" -> "sqlalchemy" [];
	"sqlalchemy.sql.roles" -> "__future__" [];
	"sqlalchemy.sql.roles" -> "typing" [];
	"sqlalchemy.sql.roles" -> "sqlalchemy" [];
	"sqlalchemy.sql" -> "typing" [];
	"sqlalchemy.engine.url" -> "__future__" [];
	"sqlalchemy.engine.url" -> "re" [];
	"sqlalchemy.engine.url" -> "typing" [];
	"sqlalchemy.engine.url" -> "sqlalchemy" [];
	"sqlalchemy.engine.row" -> "__future__" [];
	"sqlalchemy.engine.row" -> "abc" [];
	"sqlalchemy.engine.row" -> "operator" [];
	"sqlalchemy.engine.row" -> "typing" [];
	"sqlalchemy.engine._py_row" -> "__future__" [];
	"sqlalchemy.engine._py_row" -> "operator" [];
	"sqlalchemy.engine._py_row" -> "typing" [];
	"sqlalchemy.engine.result" -> "__future__" [];
	"sqlalchemy.engine.result" -> "enum" [];
	"sqlalchemy.engine.result" -> "functools" [];
	"sqlalchemy.engine.result" -> "itertools" [];
	"sqlalchemy.engine.result" -> "operator" [];
	"sqlalchemy.engine.result" -> "typing" [];
	"sqlalchemy.engine.result" -> "sqlalchemy" [];
	"sqlalchemy.engine.reflection" -> "__future__" [];
	"sqlalchemy.engine.reflection" -> "contextlib" [];
	"sqlalchemy.engine.reflection" -> "dataclasses" [];
	"sqlalchemy.engine.reflection" -> "enum" [];
	"sqlalchemy.engine.reflection" -> "typing" [];
	"sqlalchemy.engine.reflection" -> "sqlalchemy" [];
	"sqlalchemy.engine.mock" -> "__future__" [];
	"sqlalchemy.engine.mock" -> "operator" [];
	"sqlalchemy.engine.mock" -> "typing" [];
	"sqlalchemy.engine.mock" -> "sqlalchemy" [];
	"sqlalchemy.engine.interfaces" -> "__future__" [];
	"sqlalchemy.engine.interfaces" -> "enum" [];
	"sqlalchemy.engine.interfaces" -> "types" [];
	"sqlalchemy.engine.interfaces" -> "typing" [];
	"sqlalchemy.engine.interfaces" -> "sqlalchemy" [];
	"sqlalchemy.engine.create" -> "__future__" [];
	"sqlalchemy.engine.create" -> "inspect" [];
	"sqlalchemy.engine.create" -> "typing" [];
	"sqlalchemy.engine.create" -> "sqlalchemy" [];
	"sqlalchemy.engine.base" -> "__future__" [];
	"sqlalchemy.engine.base" -> "contextlib" [];
	"sqlalchemy.engine.base" -> "sys" [];
	"sqlalchemy.engine.base" -> "typing" [];
	"sqlalchemy.engine.base" -> "sqlalchemy" [];
	"sqlalchemy.engine.util" -> "__future__" [];
	"sqlalchemy.engine.util" -> "typing" [];
	"sqlalchemy.engine.util" -> "sqlalchemy" [];
	"sqlalchemy.engine._py_util" -> "__future__" [];
	"sqlalchemy.engine._py_util" -> "typing" [];
	"sqlalchemy.engine._py_util" -> "sqlalchemy" [];
	"sqlalchemy.engine.events" -> "__future__" [];
	"sqlalchemy.engine.events" -> "typing" [];
	"sqlalchemy.engine.events" -> "sqlalchemy" [];
	"sqlalchemy.engine.cursor" -> "__future__" [];
	"sqlalchemy.engine.cursor" -> "collections" [];
	"sqlalchemy.engine.cursor" -> "functools" [];
	"sqlalchemy.engine.cursor" -> "operator" [];
	"sqlalchemy.engine.cursor" -> "typing" [];
	"sqlalchemy.engine.cursor" -> "sqlalchemy" [];
	"sqlalchemy.engine.characteristics" -> "__future__" [];
	"sqlalchemy.engine.characteristics" -> "abc" [];
	"sqlalchemy.engine.characteristics" -> "typing" [];
	"sqlalchemy.engine.processors" -> "__future__" [];
	"sqlalchemy.engine.processors" -> "typing" [];
	"sqlalchemy.engine._py_processors" -> "__future__" [];
	"sqlalchemy.engine._py_processors" -> "datetime" [];
	"sqlalchemy.engine._py_processors" -> "decimal" [];
	"sqlalchemy.engine._py_processors" -> "typing" [];
	"sqlalchemy.exc" -> "__future__" [];
	"sqlalchemy.exc" -> "typing" [];
	"sqlalchemy.types" -> "__future__" [];
	"sqlalchemy.schema" -> "__future__" [];
	"sqlite3.dbapi2" -> "datetime" [];
	"sqlite3.dbapi2" -> "time" [];
	"sqlite3.dbapi2" -> "_sqlite3" [];
	"sqlalchemy.sql.expression" -> "__future__" [];
	"sqlalchemy.sql._elements_constructors" -> "__future__" [];
	"sqlalchemy.sql._elements_constructors" -> "typing" [];
	"sqlalchemy.sql._dml_constructors" -> "__future__" [];
	"sqlalchemy.sql._dml_constructors" -> "typing" [];
	"sqlalchemy" -> "__future__" [];
	"sqlalchemy" -> "typing" [];
	"sqlalchemy" -> "psycopg2" [];
	"sqlalchemy.dialects.sqlite.dml" -> "__future__" [];
	"sqlalchemy.dialects.sqlite.dml" -> "typing" [];
	"sqlalchemy.dialects.sqlite.dml" -> "sqlalchemy" [];
	"sqlalchemy.dialects._typing" -> "__future__" [];
	"sqlalchemy.dialects._typing" -> "typing" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "math" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "os" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "re" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "sqlalchemy" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "sqlite3" [];
	"sqlalchemy.dialects.sqlite.pysqlcipher" -> "sqlalchemy" [];
	"sqlalchemy.dialects.sqlite.pysqlcipher" -> "sqlcipher3" [];
	"sqlalchemy.dialects.sqlite.pysqlcipher" -> "pysqlcipher3" [];
	"sqlalchemy.dialects.sqlite.base" -> "__future__" [];
	"sqlalchemy.dialects.sqlite.base" -> "datetime" [];
	"sqlalchemy.dialects.sqlite.base" -> "numbers" [];
	"sqlalchemy.dialects.sqlite.base" -> "re" [];
	"sqlalchemy.dialects.sqlite.base" -> "typing" [];
	"sqlalchemy.dialects.sqlite.base" -> "sqlalchemy" [];
	"sqlalchemy.dialects.sqlite.json" -> "sqlalchemy" [];
	"sqlalchemy.dialects.sqlite.aiosqlite" -> "asyncio" [];
	"sqlalchemy.dialects.sqlite.aiosqlite" -> "collections" [];
	"sqlalchemy.dialects.sqlite.aiosqlite" -> "functools" [];
	"sqlalchemy.dialects.sqlite.aiosqlite" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql" -> "types" [];
	"sqlalchemy.dialects.postgresql.types" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.types" -> "datetime" [];
	"sqlalchemy.dialects.postgresql.types" -> "typing" [];
	"sqlalchemy.dialects.postgresql.types" -> "uuid" [];
	"sqlalchemy.dialects.postgresql.named_types" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.named_types" -> "typing" [];
	"sqlalchemy.dialects.postgresql.named_types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.hstore" -> "re" [];
	"sqlalchemy.dialects.postgresql.hstore" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.ext" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.ext" -> "typing" [];
	"sqlalchemy.dialects.postgresql.dml" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.dml" -> "typing" [];
	"sqlalchemy.dialects.postgresql.dml" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg2cffi" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "logging" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "re" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "typing" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "psycopg2" [];
	"sqlalchemy.dialects.postgresql._psycopg_common" -> "__future__" [];
	"sqlalchemy.dialects.postgresql._psycopg_common" -> "decimal" [];
	"sqlalchemy.dialects.postgresql._psycopg_common" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "collections" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "logging" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "re" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "typing" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "psycopg" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "'psycopg.adapt'" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "'psycopg.types'" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "'psycopg.pq'" [];
	"sqlalchemy.dialects.postgresql.pg8000" -> "decimal" [];
	"sqlalchemy.dialects.postgresql.pg8000" -> "re" [];
	"sqlalchemy.dialects.postgresql.pg8000" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.base" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.base" -> "collections" [];
	"sqlalchemy.dialects.postgresql.base" -> "functools" [];
	"sqlalchemy.dialects.postgresql.base" -> "re" [];
	"sqlalchemy.dialects.postgresql.base" -> "typing" [];
	"sqlalchemy.dialects.postgresql.base" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "collections" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "decimal" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "json" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "re" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "time" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "asyncpg" [];
	"sqlalchemy.dialects.postgresql.pg_catalog" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "dataclasses" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "datetime" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "decimal" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "typing" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.json" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.json" -> "typing" [];
	"sqlalchemy.dialects.postgresql.json" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.array" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.array" -> "re" [];
	"sqlalchemy.dialects.postgresql.array" -> "typing" [];
	"sqlalchemy.dialects.postgresql.array" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle" -> "types" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "__future__" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "collections" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "re" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "typing" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "oracledb" [];
	"sqlalchemy.connectors.asyncio" -> "__future__" [];
	"sqlalchemy.connectors.asyncio" -> "collections" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "__future__" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "decimal" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "random" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "re" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "cx_Oracle" [];
	"sqlalchemy.dialects.oracle.types" -> "__future__" [];
	"sqlalchemy.dialects.oracle.types" -> "datetime" [];
	"sqlalchemy.dialects.oracle.types" -> "typing" [];
	"sqlalchemy.dialects.oracle.types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle.base" -> "__future__" [];
	"sqlalchemy.dialects.oracle.base" -> "collections" [];
	"sqlalchemy.dialects.oracle.base" -> "functools" [];
	"sqlalchemy.dialects.oracle.base" -> "re" [];
	"sqlalchemy.dialects.oracle.base" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle.dictionary" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.expression" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.dml" -> "__future__" [];
	"sqlalchemy.dialects.mysql.dml" -> "typing" [];
	"sqlalchemy.dialects.mysql.dml" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.pyodbc" -> "re" [];
	"sqlalchemy.dialects.mysql.pyodbc" -> "sqlalchemy" [];
	"sqlalchemy.connectors.pyodbc" -> "__future__" [];
	"sqlalchemy.connectors.pyodbc" -> "re" [];
	"sqlalchemy.connectors.pyodbc" -> "types" [];
	"sqlalchemy.connectors.pyodbc" -> "typing" [];
	"sqlalchemy.connectors.pyodbc" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.types" -> "datetime" [];
	"sqlalchemy.dialects.mysql.types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.mysqldb" -> "re" [];
	"sqlalchemy.dialects.mysql.mysqldb" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.mysqlconnector" -> "re" [];
	"sqlalchemy.dialects.mysql.mysqlconnector" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.mysqlconnector" -> "mysql" [];
	"sqlalchemy.dialects.mysql.mysqlconnector" -> "'mysql.connector'" [];
	"sqlalchemy.dialects.mysql.mariadbconnector" -> "re" [];
	"sqlalchemy.dialects.mysql.mariadbconnector" -> "uuid" [];
	"sqlalchemy.dialects.mysql.mariadbconnector" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.cymysql" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.base" -> "__future__" [];
	"sqlalchemy.dialects.mysql.base" -> "array" [];
	"sqlalchemy.dialects.mysql.base" -> "collections" [];
	"sqlalchemy.dialects.mysql.base" -> "itertools" [];
	"sqlalchemy.dialects.mysql.base" -> "re" [];
	"sqlalchemy.dialects.mysql.base" -> "typing" [];
	"sqlalchemy.dialects.mysql.base" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.json" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.enumerated" -> "re" [];
	"sqlalchemy.dialects.mysql.enumerated" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.asyncmy" -> "collections" [];
	"sqlalchemy.dialects.mysql.asyncmy" -> "contextlib" [];
	"sqlalchemy.dialects.mysql.asyncmy" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.asyncmy" -> "asyncmy" [];
	"sqlalchemy.dialects.mysql.aiomysql" -> "collections" [];
	"sqlalchemy.dialects.mysql.aiomysql" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.aiomysql" -> "'pymysql.constants'" [];
	"sqlalchemy.dialects.mysql.reflection" -> "re" [];
	"sqlalchemy.dialects.mysql.reflection" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "datetime" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "decimal" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "re" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "struct" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.json" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.pymssql" -> "re" [];
	"sqlalchemy.dialects.mssql.pymssql" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.aioodbc" -> "__future__" [];
	"sqlalchemy.connectors.aioodbc" -> "__future__" [];
	"sqlalchemy.connectors.aioodbc" -> "typing" [];
	"sqlalchemy.connectors.aioodbc" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.information_schema" -> "sqlalchemy" [];
	"sqlalchemy.ext.compiler" -> "__future__" [];
	"sqlalchemy.ext.compiler" -> "typing" [];
	"sqlalchemy.ext.compiler" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.base" -> "__future__" [];
	"sqlalchemy.dialects.mssql.base" -> "codecs" [];
	"sqlalchemy.dialects.mssql.base" -> "datetime" [];
	"sqlalchemy.dialects.mssql.base" -> "operator" [];
	"sqlalchemy.dialects.mssql.base" -> "re" [];
	"sqlalchemy.dialects.mssql.base" -> "typing" [];
	"sqlalchemy.dialects.mssql.base" -> "uuid" [];
	"sqlalchemy.dialects.mssql.base" -> "sqlalchemy" [];
	"sqlalchemy.ext.baked" -> "logging" [];
	"sqlalchemy.ext.baked" -> "sqlalchemy" [];
	"pandas.io.pytables" -> "__future__" [];
	"pandas.io.pytables" -> "contextlib" [];
	"pandas.io.pytables" -> "copy" [];
	"pandas.io.pytables" -> "datetime" [];
	"pandas.io.pytables" -> "itertools" [];
	"pandas.io.pytables" -> "os" [];
	"pandas.io.pytables" -> "re" [];
	"pandas.io.pytables" -> "textwrap" [];
	"pandas.io.pytables" -> "typing" [];
	"pandas.io.pytables" -> "warnings" [];
	"pandas.io.pytables" -> "numpy" [];
	"pandas.io.pytables" -> "pandas" [];
	"pandas.io.pytables" -> "types" [];
	"pandas.io.pytables" -> "tables" [];
	"pandas.core.computation.pytables" -> "__future__" [];
	"pandas.core.computation.pytables" -> "ast" [];
	"pandas.core.computation.pytables" -> "decimal" [];
	"pandas.core.computation.pytables" -> "functools" [];
	"pandas.core.computation.pytables" -> "typing" [];
	"pandas.core.computation.pytables" -> "numpy" [];
	"pandas.io.json._table_schema" -> "__future__" [];
	"pandas.io.json._table_schema" -> "typing" [];
	"pandas.io.json._table_schema" -> "warnings" [];
	"pandas.io.json._table_schema" -> "pandas" [];
	"pandas.io.json._json" -> "__future__" [];
	"pandas.io.json._json" -> "abc" [];
	"pandas.io.json._json" -> "collections" [];
	"pandas.io.json._json" -> "io" [];
	"pandas.io.json._json" -> "itertools" [];
	"pandas.io.json._json" -> "typing" [];
	"pandas.io.json._json" -> "warnings" [];
	"pandas.io.json._json" -> "numpy" [];
	"pandas.io.json._json" -> "pandas" [];
	"pandas.io.json._json" -> "types" [];
	"pandas.core.methods.describe" -> "__future__" [];
	"pandas.core.methods.describe" -> "abc" [];
	"pandas.core.methods.describe" -> "typing" [];
	"pandas.core.methods.describe" -> "numpy" [];
	"pandas.core.methods.describe" -> "pandas" [];
	"pandas.core.methods.describe" -> "pyarrow" [];
	"pandas.core.flags" -> "__future__" [];
	"pandas.core.flags" -> "typing" [];
	"pandas.core.flags" -> "weakref" [];
	"pandas.core.frame" -> "__future__" [];
	"pandas.core.frame" -> "collections" [];
	"pandas.core.frame" -> "functools" [];
	"pandas.core.frame" -> "inspect" [];
	"pandas.core.frame" -> "io" [];
	"pandas.core.frame" -> "itertools" [];
	"pandas.core.frame" -> "operator" [];
	"pandas.core.frame" -> "sys" [];
	"pandas.core.frame" -> "textwrap" [];
	"pandas.core.frame" -> "typing" [];
	"pandas.core.frame" -> "warnings" [];
	"pandas.core.frame" -> "numpy" [];
	"pandas.core.frame" -> "datetime" [];
	"pandas.core.frame" -> "pandas" [];
	"pandas.core.reshape.pivot" -> "__future__" [];
	"pandas.core.reshape.pivot" -> "typing" [];
	"pandas.core.reshape.pivot" -> "warnings" [];
	"pandas.core.reshape.pivot" -> "numpy" [];
	"pandas.core.reshape.pivot" -> "pandas" [];
	"pandas.io.formats.xml" -> "__future__" [];
	"pandas.io.formats.xml" -> "codecs" [];
	"pandas.io.formats.xml" -> "io" [];
	"pandas.io.formats.xml" -> "typing" [];
	"pandas.io.formats.xml" -> "warnings" [];
	"pandas.io.formats.xml" -> "pandas" [];
	"lxml.etree" -> "gzip" [];
	"lxml.etree" -> "contextlib" [];
	"lxml._elementpath" -> "re" [];
	"lxml" -> "os" [];
	"lxml.isoschematron" -> "sys" [];
	"lxml.isoschematron" -> "os.path" [];
	"lxml.html.usedoctest" -> "lxml" [];
	"lxml.html.soupparser" -> "re" [];
	"lxml.html.soupparser" -> "lxml" [];
	"lxml.html.soupparser" -> "bs4" [];
	"lxml.html.soupparser" -> "BeautifulSoup" [];
	"lxml.html.soupparser" -> "htmlentitydefs" [];
	"lxml.html.html5parser" -> "sys" [];
	"lxml.html.html5parser" -> "string" [];
	"lxml.html.html5parser" -> "html5lib" [];
	"lxml.html.html5parser" -> "'html5lib.treebuilders'" [];
	"lxml.html.html5parser" -> "lxml" [];
	"lxml.html.html5parser" -> "urlparse" [];
	"lxml.html.formfill" -> "copy" [];
	"lxml.html.diff" -> "difflib" [];
	"lxml.html.diff" -> "lxml" [];
	"lxml.html.diff" -> "re" [];
	"lxml.html.diff" -> "html" [];
	"lxml.html.diff" -> "cgi" [];
	"lxml.html.clean" -> "lxml_html_clean" [];
	"lxml.html._html5builder" -> "html5lib" [];
	"lxml.html._html5builder" -> "lxml" [];
	"lxml.html._diffcommand" -> "optparse" [];
	"lxml.html._diffcommand" -> "sys" [];
	"lxml.html._diffcommand" -> "re" [];
	"lxml.html._diffcommand" -> "os" [];
	"lxml.html" -> "copy" [];
	"lxml.html" -> "re" [];
	"lxml.html" -> "functools" [];
	"lxml.html" -> "urllib" [];
	"lxml.html" -> "os" [];
	"lxml.html" -> "webbrowser" [];
	"lxml.html" -> "tempfile" [];
	"lxml.doctestcompare" -> "sys" [];
	"lxml.doctestcompare" -> "re" [];
	"lxml.doctestcompare" -> "doctest" [];
	"lxml.doctestcompare" -> "html" [];
	"lxml.doctestcompare" -> "cgi" [];
	"lxml.cssselect" -> "cssselect" [];
	"lxml.builder" -> "functools" [];
	"lxml.ElementInclude" -> "urlparse" [];
	"xml.dom.minidom" -> "io" [];
	"xml.dom.pulldom" -> "warnings" [];
	"xml.dom.pulldom" -> "io" [];
	"xml.dom.xmlbuilder" -> "copy" [];
	"xml.dom.xmlbuilder" -> "posixpath" [];
	"xml.dom.domreg" -> "sys" [];
	"xml.dom.domreg" -> "os" [];
	"xml.etree.ElementTree" -> "sys" [];
	"xml.etree.ElementTree" -> "re" [];
	"xml.etree.ElementTree" -> "warnings" [];
	"xml.etree.ElementTree" -> "io" [];
	"xml.etree.ElementTree" -> "collections" [];
	"xml.etree.ElementTree" -> "contextlib" [];
	"xml.etree.ElementTree" -> "locale" [];
	"xml.etree.ElementTree" -> "pyexpat" [];
	"xml.etree.ElementTree" -> "_elementtree" [];
	"xml.etree.ElementPath" -> "re" [];
	"pandas.io.xml" -> "__future__" [];
	"pandas.io.xml" -> "io" [];
	"pandas.io.xml" -> "os" [];
	"pandas.io.xml" -> "typing" [];
	"pandas.io.xml" -> "warnings" [];
	"pandas.io.xml" -> "lxml" [];
	"pandas.io.xml" -> "pandas" [];
	"pandas.io.orc" -> "__future__" [];
	"pandas.io.orc" -> "io" [];
	"pandas.io.orc" -> "types" [];
	"pandas.io.orc" -> "typing" [];
	"pandas.io.orc" -> "pandas" [];
	"pandas.io.orc" -> "fsspec" [];
	"pandas.io.parquet" -> "__future__" [];
	"pandas.io.parquet" -> "io" [];
	"pandas.io.parquet" -> "json" [];
	"pandas.io.parquet" -> "os" [];
	"pandas.io.parquet" -> "typing" [];
	"pandas.io.parquet" -> "warnings" [];
	"pandas.io.parquet" -> "pandas" [];
	"pandas.io.feather_format" -> "__future__" [];
	"pandas.io.feather_format" -> "typing" [];
	"pandas.io.feather_format" -> "pandas" [];
	"pandas.io.feather_format" -> "pyarrow" [];
	"pandas.io.stata" -> "__future__" [];
	"pandas.io.stata" -> "collections" [];
	"pandas.io.stata" -> "datetime" [];
	"pandas.io.stata" -> "io" [];
	"pandas.io.stata" -> "os" [];
	"pandas.io.stata" -> "struct" [];
	"pandas.io.stata" -> "sys" [];
	"pandas.io.stata" -> "typing" [];
	"pandas.io.stata" -> "warnings" [];
	"pandas.io.stata" -> "numpy" [];
	"pandas.io.stata" -> "pandas" [];
	"pandas.io.stata" -> "types" [];
	"pandas.io.gbq" -> "__future__" [];
	"pandas.io.gbq" -> "typing" [];
	"pandas.io.gbq" -> "warnings" [];
	"pandas.io.gbq" -> "pandas" [];
	"google.auth.credentials" -> "abc" [];
	"google.auth.credentials" -> "enum" [];
	"google.auth.credentials" -> "os" [];
	"google.auth._refresh_worker" -> "copy" [];
	"google.auth._refresh_worker" -> "logging" [];
	"google.auth._refresh_worker" -> "threading" [];
	"google.auth._credentials_base" -> "abc" [];
	"google.auth.metrics" -> "platform" [];
	"google.auth._helpers" -> "base64" [];
	"google.auth._helpers" -> "calendar" [];
	"google.auth._helpers" -> "datetime" [];
	"google.auth._helpers" -> "sys" [];
	"google.auth._helpers" -> "urllib" [];
	"google.auth" -> "logging" [];
	"google.auth" -> "sys" [];
	"google.auth" -> "warnings" [];
	"google.auth._default" -> "io" [];
	"google.auth._default" -> "json" [];
	"google.auth._default" -> "logging" [];
	"google.auth._default" -> "os" [];
	"google.auth._default" -> "warnings" [];
	"google.oauth2.gdch_credentials" -> "datetime" [];
	"google.oauth2._client" -> "datetime" [];
	"google.oauth2._client" -> "json" [];
	"google.oauth2._client" -> "urllib" [];
	"google.auth.transport" -> "abc" [];
	"google.auth.transport._mtls_helper" -> "json" [];
	"google.auth.transport._mtls_helper" -> "logging" [];
	"google.auth.transport._mtls_helper" -> "os" [];
	"google.auth.transport._mtls_helper" -> "re" [];
	"google.auth.transport._mtls_helper" -> "subprocess" [];
	"google.auth.transport._mtls_helper" -> "OpenSSL" [];
	"google.auth.transport._custom_tls_signer" -> "ctypes" [];
	"google.auth.transport._custom_tls_signer" -> "json" [];
	"google.auth.transport._custom_tls_signer" -> "logging" [];
	"google.auth.transport._custom_tls_signer" -> "os" [];
	"google.auth.transport._custom_tls_signer" -> "sys" [];
	"google.auth.transport._custom_tls_signer" -> "cffi" [];
	"google.auth._exponential_backoff" -> "asyncio" [];
	"google.auth._exponential_backoff" -> "random" [];
	"google.auth._exponential_backoff" -> "time" [];
	"google.oauth2.service_account" -> "copy" [];
	"google.oauth2.service_account" -> "datetime" [];
	"google.oauth2.credentials" -> "datetime" [];
	"google.oauth2.credentials" -> "io" [];
	"google.oauth2.credentials" -> "json" [];
	"google.oauth2.credentials" -> "logging" [];
	"google.oauth2.credentials" -> "warnings" [];
	"google.oauth2.reauth" -> "sys" [];
	"google.oauth2.challenges" -> "abc" [];
	"google.oauth2.challenges" -> "base64" [];
	"google.oauth2.challenges" -> "getpass" [];
	"google.oauth2.challenges" -> "sys" [];
	"google.oauth2.challenges" -> "pyu2f" [];
	"google.oauth2.challenges" -> "'pyu2f.errors'" [];
	"google.oauth2.challenges" -> "'pyu2f.model'" [];
	"google.oauth2.webauthn_types" -> "dataclasses" [];
	"google.oauth2.webauthn_types" -> "json" [];
	"google.oauth2.webauthn_types" -> "typing" [];
	"google.oauth2.webauthn_handler_factory" -> "typing" [];
	"google.oauth2.webauthn_handler" -> "abc" [];
	"google.oauth2.webauthn_handler" -> "os" [];
	"google.oauth2.webauthn_handler" -> "struct" [];
	"google.oauth2.webauthn_handler" -> "subprocess" [];
	"google.oauth2" -> "sys" [];
	"google.oauth2" -> "warnings" [];
	"google.oauth2.sts" -> "json" [];
	"google.oauth2.sts" -> "urllib" [];
	"google.oauth2.utils" -> "abc" [];
	"google.oauth2.utils" -> "base64" [];
	"google.oauth2.utils" -> "enum" [];
	"google.oauth2.utils" -> "json" [];
	"google.auth.transport.requests" -> "__future__" [];
	"google.auth.transport.requests" -> "functools" [];
	"google.auth.transport.requests" -> "logging" [];
	"google.auth.transport.requests" -> "numbers" [];
	"google.auth.transport.requests" -> "os" [];
	"google.auth.transport.requests" -> "time" [];
	"google.auth.transport.requests" -> "requests" [];
	"google.auth.transport.requests" -> "'requests.packages.urllib3'" [];
	"google.auth.transport.requests" -> "certifi" [];
	"google.auth.transport.requests" -> "OpenSSL" [];
	"google.auth.compute_engine._metadata" -> "datetime" [];
	"google.auth.compute_engine._metadata" -> "json" [];
	"google.auth.compute_engine._metadata" -> "logging" [];
	"google.auth.compute_engine._metadata" -> "os" [];
	"google.auth.app_engine" -> "datetime" [];
	"google.auth.app_engine" -> "'google.appengine'" [];
	"google.auth.transport._http_client" -> "logging" [];
	"google.auth.transport._http_client" -> "socket" [];
	"google.auth.transport._http_client" -> "urllib" [];
	"google.auth.identity_pool" -> "collections" [];
	"google.auth.identity_pool" -> "abc" [];
	"google.auth.identity_pool" -> "base64" [];
	"google.auth.identity_pool" -> "json" [];
	"google.auth.identity_pool" -> "os" [];
	"google.auth.identity_pool" -> "typing" [];
	"google.auth.identity_pool" -> "OpenSSL" [];
	"google.auth.pluggable" -> "collections" [];
	"google.auth.pluggable" -> "json" [];
	"google.auth.pluggable" -> "os" [];
	"google.auth.pluggable" -> "subprocess" [];
	"google.auth.pluggable" -> "sys" [];
	"google.auth.pluggable" -> "time" [];
	"google.auth.aws" -> "abc" [];
	"google.auth.aws" -> "dataclasses" [];
	"google.auth.aws" -> "hashlib" [];
	"google.auth.aws" -> "hmac" [];
	"google.auth.aws" -> "json" [];
	"google.auth.aws" -> "os" [];
	"google.auth.aws" -> "posixpath" [];
	"google.auth.aws" -> "re" [];
	"google.auth.aws" -> "typing" [];
	"google.auth.aws" -> "urllib" [];
	"google.auth.external_account" -> "abc" [];
	"google.auth.external_account" -> "copy" [];
	"google.auth.external_account" -> "dataclasses" [];
	"google.auth.external_account" -> "datetime" [];
	"google.auth.external_account" -> "functools" [];
	"google.auth.external_account" -> "io" [];
	"google.auth.external_account" -> "json" [];
	"google.auth.external_account" -> "re" [];
	"google.auth.impersonated_credentials" -> "base64" [];
	"google.auth.impersonated_credentials" -> "copy" [];
	"google.auth.impersonated_credentials" -> "datetime" [];
	"google.auth.impersonated_credentials" -> "json" [];
	"google.auth.external_account_authorized_user" -> "datetime" [];
	"google.auth.external_account_authorized_user" -> "io" [];
	"google.auth.external_account_authorized_user" -> "json" [];
	"google.auth.compute_engine.credentials" -> "datetime" [];
	"google.auth.jwt" -> "collections" [];
	"google.auth.jwt" -> "copy" [];
	"google.auth.jwt" -> "datetime" [];
	"google.auth.jwt" -> "json" [];
	"google.auth.jwt" -> "urllib" [];
	"google.auth.jwt" -> "cachetools" [];
	"google.auth.crypt.es256" -> "cryptography" [];
	"google.auth.crypt.base" -> "abc" [];
	"google.auth.crypt.base" -> "io" [];
	"google.auth.crypt.base" -> "json" [];
	"cachetools" -> "collections" [];
	"cachetools" -> "functools" [];
	"cachetools" -> "heapq" [];
	"cachetools" -> "random" [];
	"cachetools" -> "time" [];
	"cachetools" -> "warnings" [];
	"google.auth._service_account_info" -> "io" [];
	"google.auth._service_account_info" -> "json" [];
	"google.auth.iam" -> "base64" [];
	"google.auth.iam" -> "json" [];
	"google.auth.crypt._python_rsa" -> "__future__" [];
	"google.auth.crypt._python_rsa" -> "io" [];
	"google.auth.crypt._python_rsa" -> "pyasn1_modules" [];
	"google.auth.crypt._python_rsa" -> "rsa" [];
	"rsa" -> "doctest" [];
	"rsa.pkcs1" -> "hashlib" [];
	"rsa.pkcs1" -> "os" [];
	"rsa.pkcs1" -> "sys" [];
	"rsa.pkcs1" -> "typing" [];
	"rsa.pkcs1" -> "hmac" [];
	"rsa.pkcs1" -> "doctest" [];
	"rsa.common" -> "typing" [];
	"rsa.common" -> "doctest" [];
	"rsa.key" -> "threading" [];
	"rsa.key" -> "typing" [];
	"rsa.key" -> "warnings" [];
	"rsa.key" -> "doctest" [];
	"pyasn1.type.namedtype" -> "sys" [];
	"pyasn1.type.namedtype" -> "pyasn1" [];
	"pyasn1.type.tagmap" -> "pyasn1" [];
	"pyasn1.type.tag" -> "pyasn1" [];
	"pyasn1.debug" -> "logging" [];
	"pyasn1.debug" -> "sys" [];
	"pyasn1.type.univ" -> "math" [];
	"pyasn1.type.univ" -> "sys" [];
	"pyasn1.type.univ" -> "pyasn1" [];
	"pyasn1.type.namedval" -> "pyasn1" [];
	"pyasn1.type.constraint" -> "sys" [];
	"pyasn1.type.base" -> "sys" [];
	"pyasn1.type.base" -> "pyasn1" [];
	"pyasn1.codec.ber.encoder" -> "sys" [];
	"pyasn1.codec.ber.encoder" -> "warnings" [];
	"pyasn1.codec.ber.encoder" -> "pyasn1" [];
	"pyasn1.type.useful" -> "datetime" [];
	"pyasn1.type.useful" -> "pyasn1" [];
	"pyasn1.type.char" -> "sys" [];
	"pyasn1.type.char" -> "pyasn1" [];
	"pyasn1.codec.ber.decoder" -> "io" [];
	"pyasn1.codec.ber.decoder" -> "os" [];
	"pyasn1.codec.ber.decoder" -> "sys" [];
	"pyasn1.codec.ber.decoder" -> "warnings" [];
	"pyasn1.codec.ber.decoder" -> "pyasn1" [];
	"pyasn1.codec.streaming" -> "io" [];
	"pyasn1.codec.streaming" -> "os" [];
	"pyasn1.codec.streaming" -> "pyasn1" [];
	"pyasn1.codec.der.encoder" -> "warnings" [];
	"pyasn1.codec.der.encoder" -> "pyasn1" [];
	"pyasn1.codec.cer.encoder" -> "warnings" [];
	"pyasn1.codec.cer.encoder" -> "pyasn1" [];
	"pyasn1.codec.cer.decoder" -> "warnings" [];
	"pyasn1.codec.cer.decoder" -> "pyasn1" [];
	"rsa.randnum" -> "os" [];
	"rsa.randnum" -> "struct" [];
	"rsa.pem" -> "base64" [];
	"rsa.pem" -> "typing" [];
	"rsa.prime" -> "doctest" [];
	"rsa.parallel" -> "multiprocessing" [];
	"rsa.parallel" -> "doctest" [];
	"rsa.transform" -> "math" [];
	"rsa.transform" -> "doctest" [];
	"pyasn1_modules.pem" -> "base64" [];
	"pyasn1.codec.der.decoder" -> "warnings" [];
	"google.auth._cloud_sdk" -> "os" [];
	"google.auth._cloud_sdk" -> "subprocess" [];
	"google.resumable_media._upload" -> "json" [];
	"google.resumable_media._upload" -> "os" [];
	"google.resumable_media._upload" -> "random" [];
	"google.resumable_media._upload" -> "re" [];
	"google.resumable_media._upload" -> "sys" [];
	"google.resumable_media._upload" -> "google" [];
	"google.resumable_media._download" -> "re" [];
	"google.resumable_media._helpers" -> "__future__" [];
	"google.resumable_media._helpers" -> "base64" [];
	"google.resumable_media._helpers" -> "hashlib" [];
	"google.resumable_media._helpers" -> "logging" [];
	"google.resumable_media._helpers" -> "random" [];
	"google.resumable_media._helpers" -> "warnings" [];
	"google.resumable_media._helpers" -> "google_crc32c" [];
	"google.resumable_media._helpers" -> "crcmod" [];
	"google_crc32c" -> "warnings" [];
	"google_crc32c.python" -> "array" [];
	"google_crc32c.python" -> "struct" [];
	"google_crc32c._checksum" -> "struct" [];
	"google_crc32c.cext" -> "struct" [];
	"google_crc32c.__config__" -> "os" [];
	"pandas.core.methods.to_dict" -> "__future__" [];
	"pandas.core.methods.to_dict" -> "typing" [];
	"pandas.core.methods.to_dict" -> "warnings" [];
	"pandas.core.methods.to_dict" -> "numpy" [];
	"pandas.core.methods.to_dict" -> "pandas" [];
	"pandas.core.interchange.dataframe" -> "__future__" [];
	"pandas.core.interchange.dataframe" -> "collections" [];
	"pandas.core.interchange.dataframe" -> "typing" [];
	"pandas.core.interchange.dataframe" -> "pandas" [];
	"pandas.core.interchange.utils" -> "__future__" [];
	"pandas.core.interchange.utils" -> "typing" [];
	"pandas.core.interchange.utils" -> "numpy" [];
	"pandas.core.interchange.utils" -> "pandas" [];
	"pandas.core.interchange.utils" -> "pyarrow" [];
	"pandas.core.interchange.column" -> "__future__" [];
	"pandas.core.interchange.column" -> "typing" [];
	"pandas.core.interchange.column" -> "numpy" [];
	"pandas.core.interchange.column" -> "pandas" [];
	"pandas.core.interchange.buffer" -> "__future__" [];
	"pandas.core.interchange.buffer" -> "typing" [];
	"pandas.core.interchange.buffer" -> "numpy" [];
	"pandas.core.interchange.buffer" -> "pyarrow" [];
	"pandas.core.interchange.dataframe_protocol" -> "__future__" [];
	"pandas.core.interchange.dataframe_protocol" -> "abc" [];
	"pandas.core.interchange.dataframe_protocol" -> "enum" [];
	"pandas.core.interchange.dataframe_protocol" -> "typing" [];
	"pandas.core.reshape.melt" -> "__future__" [];
	"pandas.core.reshape.melt" -> "re" [];
	"pandas.core.reshape.melt" -> "typing" [];
	"pandas.core.reshape.melt" -> "numpy" [];
	"pandas.core.reshape.melt" -> "pandas" [];
	"pandas.core.arrays.base" -> "__future__" [];
	"pandas.core.arrays.base" -> "operator" [];
	"pandas.core.arrays.base" -> "typing" [];
	"pandas.core.arrays.base" -> "warnings" [];
	"pandas.core.arrays.base" -> "numpy" [];
	"pandas.core.arrays.base" -> "pandas" [];
	"numpy._typing._add_docstring" -> "re" [];
	"numpy._typing._add_docstring" -> "textwrap" [];
	"numpy" -> "sys" [];
	"numpy" -> "warnings" [];
	"numpy" -> "builtins" [];
	"numpy" -> "math" [];
	"numpy" -> "os" [];
	"numpy" -> "pathlib" [];
	"numpy.ctypeslib" -> "os" [];
	"numpy.ctypeslib" -> "ctypes" [];
	"numpy.ctypeslib" -> "sys" [];
	"numpy.ctypeslib" -> "sysconfig" [];
	"numpy.random.mtrand" -> "builtins" [];
	"numpy.random.mtrand" -> "typing" [];
	"numpy.random.mtrand" -> "numpy" [];
	"numpy.random._sfc64" -> "typing" [];
	"numpy.random._sfc64" -> "numpy" [];
	"numpy.random._philox" -> "typing" [];
	"numpy.random._philox" -> "numpy" [];
	"numpy.random._pcg64" -> "typing" [];
	"numpy.random._mt19937" -> "typing" [];
	"numpy.random._mt19937" -> "numpy" [];
	"numpy.random.bit_generator" -> "abc" [];
	"numpy.random.bit_generator" -> "threading" [];
	"numpy.random.bit_generator" -> "typing" [];
	"numpy.random.bit_generator" -> "numpy" [];
	"numpy.random._generator" -> "typing" [];
	"numpy.random._generator" -> "numpy" [];
	"numpy.polynomial._polybase" -> "os" [];
	"numpy.polynomial._polybase" -> "abc" [];
	"numpy.polynomial._polybase" -> "numbers" [];
	"numpy.polynomial._polybase" -> "numpy" [];
	"numpy.polynomial.laguerre" -> "numpy" [];
	"numpy.polynomial.hermite_e" -> "numpy" [];
	"numpy.polynomial.hermite" -> "numpy" [];
	"numpy.polynomial.legendre" -> "numpy" [];
	"numpy.polynomial.chebyshev" -> "numpy" [];
	"numpy.polynomial.polynomial" -> "numpy" [];
	"numpy.polynomial.polyutils" -> "operator" [];
	"numpy.polynomial.polyutils" -> "functools" [];
	"numpy.polynomial.polyutils" -> "warnings" [];
	"numpy.polynomial.polyutils" -> "numpy" [];
	"numpy.fft._pocketfft" -> "functools" [];
	"numpy.__config__" -> "enum" [];
	"numpy.__config__" -> "yaml" [];
	"numpy.__config__" -> "warnings" [];
	"numpy.__config__" -> "json" [];
	"yaml" -> "io" [];
	"yaml.resolver" -> "re" [];
	"yaml.representer" -> "datetime" [];
	"yaml.representer" -> "copyreg" [];
	"yaml.representer" -> "types" [];
	"yaml.representer" -> "base64" [];
	"yaml.representer" -> "collections" [];
	"yaml.constructor" -> "datetime" [];
	"yaml.constructor" -> "base64" [];
	"yaml.constructor" -> "binascii" [];
	"yaml.constructor" -> "re" [];
	"yaml.constructor" -> "sys" [];
	"yaml.constructor" -> "types" [];
	"yaml.reader" -> "codecs" [];
	"yaml.reader" -> "re" [];
	"pandas._libs.window.indexers" -> "numpy" [];
	"pandas._libs.window.aggregations" -> "typing" [];
	"pandas._libs.window.aggregations" -> "numpy" [];
	"pandas._libs.tslibs.vectorized" -> "datetime" [];
	"pandas._libs.tslibs.vectorized" -> "numpy" [];
	"pandas._libs.tslibs.tzconversion" -> "datetime" [];
	"pandas._libs.tslibs.tzconversion" -> "typing" [];
	"pandas._libs.tslibs.tzconversion" -> "numpy" [];
	"pandas._libs.tslibs.timezones" -> "datetime" [];
	"pandas._libs.tslibs.timezones" -> "typing" [];
	"pandas._libs.tslibs.timezones" -> "numpy" [];
	"pandas._libs.tslibs.timestamps" -> "datetime" [];
	"pandas._libs.tslibs.timestamps" -> "time" [];
	"pandas._libs.tslibs.timestamps" -> "typing" [];
	"pandas._libs.tslibs.timestamps" -> "numpy" [];
	"pandas._libs.tslibs.timedeltas" -> "datetime" [];
	"pandas._libs.tslibs.timedeltas" -> "typing" [];
	"pandas._libs.tslibs.timedeltas" -> "numpy" [];
	"pandas._libs.tslibs.strptime" -> "numpy" [];
	"pandas._libs.tslibs.period" -> "datetime" [];
	"pandas._libs.tslibs.period" -> "typing" [];
	"pandas._libs.tslibs.period" -> "numpy" [];
	"pandas._libs.tslibs.parsing" -> "datetime" [];
	"pandas._libs.tslibs.parsing" -> "numpy" [];
	"pandas._libs.tslibs.offsets" -> "datetime" [];
	"pandas._libs.tslibs.offsets" -> "typing" [];
	"pandas._libs.tslibs.offsets" -> "numpy" [];
	"pandas._libs.tslibs.np_datetime" -> "numpy" [];
	"pandas._libs.tslibs.nattype" -> "datetime" [];
	"pandas._libs.tslibs.nattype" -> "typing" [];
	"pandas._libs.tslibs.nattype" -> "numpy" [];
	"pandas._libs.tslibs.fields" -> "numpy" [];
	"pandas._libs.tslibs.dtypes" -> "enum" [];
	"pandas._libs.tslibs.conversion" -> "datetime" [];
	"pandas._libs.tslibs.conversion" -> "numpy" [];
	"pandas._libs.tslib" -> "datetime" [];
	"pandas._libs.tslib" -> "numpy" [];
	"pandas._libs.sparse" -> "typing" [];
	"pandas._libs.sparse" -> "numpy" [];
	"pandas.io.sas.sas7bdat" -> "__future__" [];
	"pandas.io.sas.sas7bdat" -> "collections" [];
	"pandas.io.sas.sas7bdat" -> "datetime" [];
	"pandas.io.sas.sas7bdat" -> "sys" [];
	"pandas.io.sas.sas7bdat" -> "typing" [];
	"pandas.io.sas.sas7bdat" -> "numpy" [];
	"pandas.io.sas.sas7bdat" -> "pandas" [];
	"pandas.io.sas.sasreader" -> "__future__" [];
	"pandas.io.sas.sasreader" -> "abc" [];
	"pandas.io.sas.sasreader" -> "typing" [];
	"pandas.io.sas.sasreader" -> "types" [];
	"pandas.io.sas.sasreader" -> "pandas" [];
	"pandas.io.sas.sas_xport" -> "__future__" [];
	"pandas.io.sas.sas_xport" -> "collections" [];
	"pandas.io.sas.sas_xport" -> "datetime" [];
	"pandas.io.sas.sas_xport" -> "struct" [];
	"pandas.io.sas.sas_xport" -> "typing" [];
	"pandas.io.sas.sas_xport" -> "warnings" [];
	"pandas.io.sas.sas_xport" -> "numpy" [];
	"pandas.io.sas.sas_xport" -> "pandas" [];
	"pandas.io.sas.sas_constants" -> "__future__" [];
	"pandas.io.sas.sas_constants" -> "typing" [];
	"pandas._libs.reshape" -> "numpy" [];
	"pandas._libs.properties" -> "typing" [];
	"pandas._libs.parsers" -> "typing" [];
	"pandas._libs.parsers" -> "numpy" [];
	"pandas._libs.ops_dispatch" -> "numpy" [];
	"pandas._libs.ops" -> "typing" [];
	"pandas._libs.ops" -> "numpy" [];
	"pandas._libs.missing" -> "numpy" [];
	"pandas._libs.lib" -> "decimal" [];
	"pandas._libs.lib" -> "typing" [];
	"pandas._libs.lib" -> "numpy" [];
	"pandas._libs.lib" -> "enum" [];
	"pandas._libs.json" -> "typing" [];
	"pandas._libs.join" -> "numpy" [];
	"pandas._libs.interval" -> "typing" [];
	"pandas._libs.interval" -> "numpy" [];
	"pandas._libs.internals" -> "typing" [];
	"pandas._libs.internals" -> "weakref" [];
	"pandas._libs.internals" -> "numpy" [];
	"pandas._libs.internals" -> "pandas" [];
	"pandas._libs.indexing" -> "typing" [];
	"pandas._libs.index" -> "numpy" [];
	"pandas._libs.index" -> "pandas" [];
	"pandas._libs.hashtable" -> "typing" [];
	"pandas._libs.hashtable" -> "numpy" [];
	"pandas._libs.hashing" -> "numpy" [];
	"pandas._libs.groupby" -> "typing" [];
	"pandas._libs.groupby" -> "numpy" [];
	"pandas._libs.arrays" -> "typing" [];
	"pandas._libs.arrays" -> "numpy" [];
	"pandas._libs.algos" -> "typing" [];
	"pandas._libs.algos" -> "numpy" [];
	"pandas._version" -> "errno" [];
	"pandas._version" -> "functools" [];
	"pandas._version" -> "os" [];
	"pandas._version" -> "re" [];
	"pandas._version" -> "subprocess" [];
	"pandas._version" -> "sys" [];
	"pandas._version" -> "typing" [];
	"pandas.util._tester" -> "__future__" [];
	"pandas.util._tester" -> "os" [];
	"pandas.util._tester" -> "sys" [];
	"pandas.io.json._normalize" -> "__future__" [];
	"pandas.io.json._normalize" -> "collections" [];
	"pandas.io.json._normalize" -> "copy" [];
	"pandas.io.json._normalize" -> "typing" [];
	"pandas.io.json._normalize" -> "numpy" [];
	"pandas.io.json._normalize" -> "pandas" [];
	"pandas.io.spss" -> "__future__" [];
	"pandas.io.spss" -> "typing" [];
	"pandas.io.spss" -> "pathlib" [];
	"pandas.io.spss" -> "pandas" [];
	"pandas.io.html" -> "__future__" [];
	"pandas.io.html" -> "collections" [];
	"pandas.io.html" -> "numbers" [];
	"pandas.io.html" -> "re" [];
	"pandas.io.html" -> "typing" [];
	"pandas.io.html" -> "warnings" [];
	"pandas.io.html" -> "pandas" [];
	"pandas.io.html" -> "bs4" [];
	"pandas.util._print_versions" -> "__future__" [];
	"pandas.util._print_versions" -> "codecs" [];
	"pandas.util._print_versions" -> "json" [];
	"pandas.util._print_versions" -> "locale" [];
	"pandas.util._print_versions" -> "os" [];
	"pandas.util._print_versions" -> "platform" [];
	"pandas.util._print_versions" -> "struct" [];
	"pandas.util._print_versions" -> "sys" [];
	"pandas.util._print_versions" -> "typing" [];
	"pandas._testing" -> "__future__" [];
	"pandas._testing" -> "decimal" [];
	"pandas._testing" -> "operator" [];
	"pandas._testing" -> "os" [];
	"pandas._testing" -> "sys" [];
	"pandas._testing" -> "typing" [];
	"pandas._testing" -> "warnings" [];
	"pandas._testing" -> "numpy" [];
	"pandas._testing" -> "pyarrow" [];
	"pandas._testing" -> "pytest" [];
	"pandas._testing.contexts" -> "__future__" [];
	"pandas._testing.contexts" -> "contextlib" [];
	"pandas._testing.contexts" -> "os" [];
	"pandas._testing.contexts" -> "pathlib" [];
	"pandas._testing.contexts" -> "tempfile" [];
	"pandas._testing.contexts" -> "typing" [];
	"pandas._testing.contexts" -> "uuid" [];
	"pandas._testing.contexts" -> "pandas" [];
	"pandas._testing.contexts" -> "time" [];
	"pandas._testing.contexts" -> "csv" [];
	"pandas._testing.compat" -> "__future__" [];
	"pandas._testing.compat" -> "typing" [];
	"pandas._testing.compat" -> "pandas" [];
	"pandas._testing.asserters" -> "__future__" [];
	"pandas._testing.asserters" -> "operator" [];
	"pandas._testing.asserters" -> "typing" [];
	"pandas._testing.asserters" -> "numpy" [];
	"pandas._testing.asserters" -> "pandas" [];
	"pandas._testing.asserters" -> "'matplotlib.artist'" [];
	"pandas._testing.asserters" -> "'matplotlib.axes'" [];
	"pandas._testing._warnings" -> "__future__" [];
	"pandas._testing._warnings" -> "contextlib" [];
	"pandas._testing._warnings" -> "inspect" [];
	"pandas._testing._warnings" -> "re" [];
	"pandas._testing._warnings" -> "sys" [];
	"pandas._testing._warnings" -> "typing" [];
	"pandas._testing._warnings" -> "warnings" [];
	"pandas._testing._io" -> "__future__" [];
	"pandas._testing._io" -> "gzip" [];
	"pandas._testing._io" -> "io" [];
	"pandas._testing._io" -> "pathlib" [];
	"pandas._testing._io" -> "tarfile" [];
	"pandas._testing._io" -> "typing" [];
	"pandas._testing._io" -> "uuid" [];
	"pandas._testing._io" -> "zipfile" [];
	"pandas._testing._io" -> "pandas" [];
	"pandas._testing._io" -> "pytest" [];
	"pandas._config.localization" -> "__future__" [];
	"pandas._config.localization" -> "contextlib" [];
	"pandas._config.localization" -> "locale" [];
	"pandas._config.localization" -> "platform" [];
	"pandas._config.localization" -> "re" [];
	"pandas._config.localization" -> "subprocess" [];
	"pandas._config.localization" -> "typing" [];
	"pandas.plotting._misc" -> "__future__" [];
	"pandas.plotting._misc" -> "contextlib" [];
	"pandas.plotting._misc" -> "typing" [];
	"pandas.plotting._misc" -> "'matplotlib.axes'" [];
	"pandas.plotting._misc" -> "'matplotlib.colors'" [];
	"pandas.plotting._misc" -> "'matplotlib.figure'" [];
	"pandas.plotting._misc" -> "'matplotlib.table'" [];
	"pandas.plotting._misc" -> "numpy" [];
	"pandas.plotting._misc" -> "pandas" [];
	"pandas.plotting._core" -> "__future__" [];
	"pandas.plotting._core" -> "importlib" [];
	"pandas.plotting._core" -> "typing" [];
	"pandas.plotting._core" -> "types" [];
	"pandas.plotting._core" -> "matplotlib" [];
	"pandas.plotting._core" -> "numpy" [];
	"pandas.plotting._core" -> "pandas" [];
	"pandas.io" -> "typing" [];
	"pandas.errors" -> "__future__" [];
	"pandas.errors" -> "ctypes" [];
	"pandas.arrays" -> "warnings" [];
	"pandas.core.interchange.from_dataframe" -> "__future__" [];
	"pandas.core.interchange.from_dataframe" -> "ctypes" [];
	"pandas.core.interchange.from_dataframe" -> "re" [];
	"pandas.core.interchange.from_dataframe" -> "typing" [];
	"pandas.core.interchange.from_dataframe" -> "numpy" [];
	"pandas.core.interchange.from_dataframe" -> "pandas" [];
	"pandas.core.reshape.encoding" -> "__future__" [];
	"pandas.core.reshape.encoding" -> "collections" [];
	"pandas.core.reshape.encoding" -> "itertools" [];
	"pandas.core.reshape.encoding" -> "typing" [];
	"pandas.core.reshape.encoding" -> "numpy" [];
	"pandas.core.reshape.encoding" -> "pyarrow" [];
	"pandas.tseries.offsets" -> "__future__" [];
	"pandas.tseries" -> "typing" [];
	"pandas.core.dtypes.dtypes" -> "__future__" [];
	"pandas.core.dtypes.dtypes" -> "datetime" [];
	"pandas.core.dtypes.dtypes" -> "decimal" [];
	"pandas.core.dtypes.dtypes" -> "re" [];
	"pandas.core.dtypes.dtypes" -> "typing" [];
	"pandas.core.dtypes.dtypes" -> "warnings" [];
	"pandas.core.dtypes.dtypes" -> "numpy" [];
	"pandas.core.dtypes.dtypes" -> "pytz" [];
	"pandas.core.dtypes.dtypes" -> "pyarrow" [];
	"pandas.core.dtypes.dtypes" -> "pandas" [];
	"pandas.core.config_init" -> "__future__" [];
	"pandas.core.config_init" -> "os" [];
	"pandas.core.config_init" -> "typing" [];
	"pandas._config.display" -> "__future__" [];
	"pandas._config.display" -> "locale" [];
	"pandas._config.display" -> "sys" [];
	"pandas._config.dates" -> "__future__" [];
	"pandas.compat" -> "__future__" [];
	"pandas.compat" -> "os" [];
	"pandas.compat" -> "platform" [];
	"pandas.compat" -> "sys" [];
	"pandas.compat" -> "typing" [];
	"pandas.compat.pyarrow" -> "__future__" [];
	"pandas.compat.pyarrow" -> "pyarrow" [];
	"pandas.compat.compressors" -> "__future__" [];
	"pandas.compat.compressors" -> "pickle" [];
	"pandas.compat.compressors" -> "bz2" [];
	"pandas.compat.compressors" -> "lzma" [];
	"graphdatascience.session.dedicated_sessions" -> "__future__" [];
	"graphdatascience.session.dedicated_sessions" -> "hashlib" [];
	"graphdatascience.session.dedicated_sessions" -> "math" [];
	"graphdatascience.session.dedicated_sessions" -> "warnings" [];
	"graphdatascience.session.dedicated_sessions" -> "datetime" [];
	"graphdatascience.session.dedicated_sessions" -> "typing" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "__future__" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "logging" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "re" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "time" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "warnings" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "typing" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "neo4j" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "pandas" [];
	"graphdatascience.query_runner.progress.query_progress_logger" -> "warnings" [];
	"graphdatascience.query_runner.progress.query_progress_logger" -> "typing" [];
	"graphdatascience.query_runner.progress.query_progress_logger" -> "pandas" [];
	"graphdatascience.query_runner.progress.static_progress_provider" -> "typing" [];
	"graphdatascience.query_runner.progress.query_progress_provider" -> "typing" [];
	"graphdatascience.query_runner.progress.query_progress_provider" -> "pandas" [];
	"graphdatascience.query_runner.progress.progress_provider" -> "abc" [];
	"graphdatascience.query_runner.progress.progress_provider" -> "dataclasses" [];
	"graphdatascience.query_runner.progress.progress_provider" -> "typing" [];
	"tqdm.auto" -> "warnings" [];
	"tqdm.asyncio" -> "asyncio" [];
	"tqdm.asyncio" -> "sys" [];
	"tqdm.autonotebook" -> "sys" [];
	"tqdm.autonotebook" -> "warnings" [];
	"graphdatascience.query_runner.graph_constructor" -> "abc" [];
	"graphdatascience.query_runner.graph_constructor" -> "pandas" [];
	"graphdatascience.query_runner.cypher_graph_constructor" -> "itertools" [];
	"graphdatascience.query_runner.cypher_graph_constructor" -> "os" [];
	"graphdatascience.query_runner.cypher_graph_constructor" -> "warnings" [];
	"graphdatascience.query_runner.cypher_graph_constructor" -> "dataclasses" [];
	"graphdatascience.query_runner.cypher_graph_constructor" -> "typing" [];
	"graphdatascience.query_runner.cypher_graph_constructor" -> "uuid" [];
	"graphdatascience.query_runner.cypher_graph_constructor" -> "pandas" [];
	"graphdatascience.semantic_version.semantic_version" -> "__future__" [];
	"graphdatascience.semantic_version.semantic_version" -> "re" [];
	"graphdatascience.error.endpoint_suggester" -> "textdistance" [];
	"textdistance.libraries" -> "__future__" [];
	"textdistance.libraries" -> "json" [];
	"textdistance.libraries" -> "collections" [];
	"textdistance.libraries" -> "copy" [];
	"textdistance.libraries" -> "importlib" [];
	"textdistance.libraries" -> "pathlib" [];
	"textdistance.libraries" -> "typing" [];
	"textdistance.benchmark" -> "__future__" [];
	"textdistance.benchmark" -> "json" [];
	"textdistance.benchmark" -> "math" [];
	"textdistance.benchmark" -> "collections" [];
	"textdistance.benchmark" -> "timeit" [];
	"textdistance.benchmark" -> "typing" [];
	"textdistance.benchmark" -> "tabulate" [];
	"timeit" -> "gc" [];
	"timeit" -> "sys" [];
	"timeit" -> "time" [];
	"timeit" -> "itertools" [];
	"timeit" -> "linecache" [];
	"timeit" -> "traceback" [];
	"timeit" -> "getopt" [];
	"timeit" -> "os" [];
	"timeit" -> "warnings" [];
	"textdistance.algorithms.vector_based" -> "functools" [];
	"textdistance.algorithms.vector_based" -> "typing" [];
	"textdistance.algorithms.vector_based" -> "numpy" [];
	"textdistance.algorithms.types" -> "typing" [];
	"textdistance.algorithms.token_based" -> "__future__" [];
	"textdistance.algorithms.token_based" -> "functools" [];
	"textdistance.algorithms.token_based" -> "itertools" [];
	"textdistance.algorithms.token_based" -> "math" [];
	"textdistance.algorithms.token_based" -> "typing" [];
	"textdistance.algorithms.simple" -> "__future__" [];
	"textdistance.algorithms.simple" -> "itertools" [];
	"textdistance.algorithms.simple" -> "typing" [];
	"textdistance.algorithms.sequence_based" -> "__future__" [];
	"textdistance.algorithms.sequence_based" -> "difflib" [];
	"textdistance.algorithms.sequence_based" -> "typing" [];
	"textdistance.algorithms.sequence_based" -> "numpy" [];
	"textdistance.algorithms.sequence_based" -> "array" [];
	"textdistance.algorithms.phonetic" -> "__future__" [];
	"textdistance.algorithms.phonetic" -> "collections" [];
	"textdistance.algorithms.phonetic" -> "itertools" [];
	"textdistance.algorithms.phonetic" -> "typing" [];
	"textdistance.algorithms.phonetic" -> "numpy" [];
	"textdistance.algorithms.edit_based" -> "__future__" [];
	"textdistance.algorithms.edit_based" -> "collections" [];
	"textdistance.algorithms.edit_based" -> "itertools" [];
	"textdistance.algorithms.edit_based" -> "typing" [];
	"textdistance.algorithms.edit_based" -> "numpy" [];
	"textdistance.algorithms.compression_based" -> "__future__" [];
	"textdistance.algorithms.compression_based" -> "codecs" [];
	"textdistance.algorithms.compression_based" -> "math" [];
	"textdistance.algorithms.compression_based" -> "collections" [];
	"textdistance.algorithms.compression_based" -> "fractions" [];
	"textdistance.algorithms.compression_based" -> "itertools" [];
	"textdistance.algorithms.compression_based" -> "typing" [];
	"textdistance.algorithms.compression_based" -> "lzma" [];
	"textdistance.algorithms.base" -> "__future__" [];
	"textdistance.algorithms.base" -> "collections" [];
	"textdistance.algorithms.base" -> "contextlib" [];
	"textdistance.algorithms.base" -> "typing" [];
	"textdistance.utils" -> "__future__" [];
	"textdistance.utils" -> "itertools" [];
	"textdistance.utils" -> "typing" [];
	"graphdatascience.call_parameters" -> "collections" [];
	"graphdatascience.call_parameters" -> "typing" [];
	"graphdatascience.call_parameters" -> "uuid" [];
	"neo4j" -> "typing" [];
	"neo4j" -> "logging" [];
	"neo4j.api" -> "__future__" [];
	"neo4j.api" -> "abc" [];
	"neo4j.api" -> "typing" [];
	"neo4j.api" -> "typing_extensions" [];
	"neo4j.exceptions" -> "__future__" [];
	"neo4j.exceptions" -> "typing" [];
	"neo4j.exceptions" -> "copy" [];
	"neo4j.exceptions" -> "enum" [];
	"neo4j.exceptions" -> "typing_extensions" [];
	"neo4j.addressing" -> "__future__" [];
	"neo4j.addressing" -> "typing" [];
	"neo4j.addressing" -> "contextlib" [];
	"neo4j.addressing" -> "socket" [];
	"neo4j.addressing" -> "typing_extensions" [];
	"neo4j._work.summary" -> "__future__" [];
	"neo4j._work.summary" -> "itertools" [];
	"neo4j._work.summary" -> "typing" [];
	"neo4j._work.summary" -> "copy" [];
	"neo4j._work.summary" -> "dataclasses" [];
	"neo4j._work.summary" -> "typing_extensions" [];
	"neo4j._exceptions" -> "os" [];
	"neo4j._work.query" -> "__future__" [];
	"neo4j._work.query" -> "typing" [];
	"neo4j._work.query" -> "typing_extensions" [];
	"neo4j._work.eager_result" -> "__future__" [];
	"neo4j._work.eager_result" -> "typing" [];
	"neo4j._sync.work.transaction" -> "__future__" [];
	"neo4j._sync.work.transaction" -> "asyncio" [];
	"neo4j._sync.work.transaction" -> "typing" [];
	"neo4j._sync.work.transaction" -> "typing_extensions" [];
	"neo4j._sync.io._pool" -> "__future__" [];
	"neo4j._sync.io._pool" -> "abc" [];
	"neo4j._sync.io._pool" -> "asyncio" [];
	"neo4j._sync.io._pool" -> "logging" [];
	"neo4j._sync.io._pool" -> "typing" [];
	"neo4j._sync.io._pool" -> "collections" [];
	"neo4j._sync.io._pool" -> "contextlib" [];
	"neo4j._sync.io._pool" -> "copy" [];
	"neo4j._sync.io._pool" -> "dataclasses" [];
	"neo4j._sync.io._pool" -> "random" [];
	"neo4j._sync.auth_management" -> "__future__" [];
	"neo4j._sync.auth_management" -> "abc" [];
	"neo4j._sync.auth_management" -> "typing" [];
	"neo4j._sync.auth_management" -> "logging" [];
	"neo4j._auth_management" -> "__future__" [];
	"neo4j._auth_management" -> "abc" [];
	"neo4j._auth_management" -> "time" [];
	"neo4j._auth_management" -> "typing" [];
	"neo4j._auth_management" -> "dataclasses" [];
	"neo4j._auth_management" -> "os" [];
	"neo4j._auth_management" -> "typing_extensions" [];
	"neo4j._async.auth_management" -> "__future__" [];
	"neo4j._async.auth_management" -> "abc" [];
	"neo4j._async.auth_management" -> "typing" [];
	"neo4j._async.auth_management" -> "logging" [];
	"neo4j._sync.home_db_cache" -> "__future__" [];
	"neo4j._sync.home_db_cache" -> "math" [];
	"neo4j._sync.home_db_cache" -> "typing" [];
	"neo4j._sync.home_db_cache" -> "time" [];
	"neo4j._sync.home_db_cache" -> "typing_extensions" [];
	"neo4j._routing" -> "contextlib" [];
	"neo4j._routing" -> "logging" [];
	"neo4j._routing" -> "time" [];
	"neo4j._deadline" -> "contextlib" [];
	"neo4j._deadline" -> "time" [];
	"neo4j._async_compat.network._util" -> "asyncio" [];
	"neo4j._async_compat.network._util" -> "logging" [];
	"neo4j._async_compat.network._util" -> "socket" [];
	"neo4j._async_compat.network._util" -> "neo4j" [];
	"neo4j._async_compat.network._bolt_socket" -> "__future__" [];
	"neo4j._async_compat.network._bolt_socket" -> "abc" [];
	"neo4j._async_compat.network._bolt_socket" -> "asyncio" [];
	"neo4j._async_compat.network._bolt_socket" -> "errno" [];
	"neo4j._async_compat.network._bolt_socket" -> "logging" [];
	"neo4j._async_compat.network._bolt_socket" -> "typing" [];
	"neo4j._async_compat.network._bolt_socket" -> "contextlib" [];
	"neo4j._async_compat.network._bolt_socket" -> "socket" [];
	"neo4j._async_compat.network._bolt_socket" -> "ssl" [];
	"neo4j._async_compat.network._bolt_socket" -> "typing_extensions" [];
	"neo4j._async.io._pool" -> "__future__" [];
	"neo4j._async.io._pool" -> "abc" [];
	"neo4j._async.io._pool" -> "asyncio" [];
	"neo4j._async.io._pool" -> "logging" [];
	"neo4j._async.io._pool" -> "typing" [];
	"neo4j._async.io._pool" -> "collections" [];
	"neo4j._async.io._pool" -> "contextlib" [];
	"neo4j._async.io._pool" -> "copy" [];
	"neo4j._async.io._pool" -> "dataclasses" [];
	"neo4j._async.io._pool" -> "random" [];
	"neo4j._async.home_db_cache" -> "__future__" [];
	"neo4j._async.home_db_cache" -> "math" [];
	"neo4j._async.home_db_cache" -> "typing" [];
	"neo4j._async.home_db_cache" -> "time" [];
	"neo4j._async.home_db_cache" -> "typing_extensions" [];
	"neo4j._async.config" -> "__future__" [];
	"neo4j._async.config" -> "typing" [];
	"neo4j._async.config" -> "ssl" [];
	"neo4j._async.io._common" -> "asyncio" [];
	"neo4j._async.io._common" -> "logging" [];
	"neo4j._async.io._common" -> "contextlib" [];
	"neo4j._async.io._common" -> "struct" [];
	"neo4j._async.io._bolt" -> "__future__" [];
	"neo4j._async.io._bolt" -> "abc" [];
	"neo4j._async.io._bolt" -> "asyncio" [];
	"neo4j._async.io._bolt" -> "typing" [];
	"neo4j._async.io._bolt" -> "collections" [];
	"neo4j._async.io._bolt" -> "logging" [];
	"neo4j._async.io._bolt" -> "time" [];
	"neo4j._async.io._bolt" -> "typing_extensions" [];
	"neo4j._async.io._bolt_socket" -> "__future__" [];
	"neo4j._async.io._bolt_socket" -> "asyncio" [];
	"neo4j._async.io._bolt_socket" -> "dataclasses" [];
	"neo4j._async.io._bolt_socket" -> "logging" [];
	"neo4j._async.io._bolt_socket" -> "struct" [];
	"neo4j._async.io._bolt_socket" -> "typing" [];
	"neo4j._async.io._bolt_socket" -> "contextlib" [];
	"neo4j._async.io._bolt_socket" -> "neo4j" [];
	"neo4j._async.io._bolt_socket" -> "ssl" [];
	"neo4j._async.io._bolt_socket" -> "typing_extensions" [];
	"neo4j._codec.packstream.v1" -> "codecs" [];
	"neo4j._codec.packstream.v1" -> "contextlib" [];
	"neo4j._codec.packstream.v1" -> "struct" [];
	"neo4j._codec.packstream.v1" -> "'neo4j._codec.packstream._rust.v1'" [];
	"neo4j._codec.packstream.v1.types" -> "typing" [];
	"neo4j._optional_deps" -> "typing" [];
	"neo4j._optional_deps" -> "contextlib" [];
	"neo4j._optional_deps" -> "numpy" [];
	"neo4j._optional_deps" -> "pandas" [];
	"neo4j._codec.hydration.v1.hydration_handler" -> "datetime" [];
	"neo4j._codec.hydration.v2.temporal" -> "datetime" [];
	"neo4j._codec.hydration.v2.temporal" -> "pytz" [];
	"neo4j._codec.hydration.v2.hydration_handler" -> "datetime" [];
	"neo4j._codec.hydration._interface" -> "abc" [];
	"neo4j._codec.hydration._common" -> "typing" [];
	"neo4j._codec.hydration._common" -> "copy" [];
	"neo4j._codec.hydration._common" -> "dataclasses" [];
	"neo4j.time" -> "__future__" [];
	"neo4j.time" -> "re" [];
	"neo4j.time" -> "typing" [];
	"neo4j.time" -> "datetime" [];
	"neo4j.time" -> "functools" [];
	"neo4j.time" -> "time" [];
	"neo4j.time" -> "typing_extensions" [];
	"neo4j.time" -> "pytz" [];
	"neo4j.time._clock_implementations" -> "time" [];
	"neo4j.time._clock_implementations" -> "ctypes" [];
	"neo4j.time._clock_implementations" -> "platform" [];
	"neo4j.time._arithmetic" -> "typing" [];
	"neo4j.spatial" -> "__future__" [];
	"neo4j.spatial" -> "typing" [];
	"neo4j.spatial" -> "functools" [];
	"neo4j.spatial" -> "typing_extensions" [];
	"neo4j._spatial" -> "__future__" [];
	"neo4j._spatial" -> "typing" [];
	"neo4j._spatial" -> "threading" [];
	"neo4j.graph" -> "__future__" [];
	"neo4j.graph" -> "typing" [];
	"neo4j._codec.hydration.v1.temporal" -> "datetime" [];
	"neo4j._codec.hydration.v1.temporal" -> "pytz" [];
	"neo4j._async.io._bolt5" -> "typing" [];
	"neo4j._async.io._bolt5" -> "enum" [];
	"neo4j._async.io._bolt5" -> "logging" [];
	"neo4j._async.io._bolt5" -> "ssl" [];
	"neo4j._async.io._bolt4" -> "logging" [];
	"neo4j._async.io._bolt4" -> "ssl" [];
	"neo4j._async.io._bolt3" -> "__future__" [];
	"neo4j._async.io._bolt3" -> "typing" [];
	"neo4j._async.io._bolt3" -> "enum" [];
	"neo4j._async.io._bolt3" -> "logging" [];
	"neo4j._async.io._bolt3" -> "ssl" [];
	"neo4j._async_compat.shims" -> "asyncio" [];
	"neo4j._async_compat.shims" -> "functools" [];
	"neo4j._async_compat.shims" -> "sys" [];
	"neo4j._async_compat" -> "asyncio" [];
	"neo4j._async_compat" -> "time" [];
	"neo4j._async_compat.concurrency" -> "__future__" [];
	"neo4j._async_compat.concurrency" -> "asyncio" [];
	"neo4j._async_compat.concurrency" -> "collections" [];
	"neo4j._async_compat.concurrency" -> "re" [];
	"neo4j._async_compat.concurrency" -> "threading" [];
	"neo4j._async_compat.concurrency" -> "typing" [];
	"neo4j._async_compat.concurrency" -> "typing_extensions" [];
	"neo4j._sync.io._common" -> "asyncio" [];
	"neo4j._sync.io._common" -> "logging" [];
	"neo4j._sync.io._common" -> "contextlib" [];
	"neo4j._sync.io._common" -> "struct" [];
	"neo4j._sync.io._bolt" -> "__future__" [];
	"neo4j._sync.io._bolt" -> "abc" [];
	"neo4j._sync.io._bolt" -> "asyncio" [];
	"neo4j._sync.io._bolt" -> "typing" [];
	"neo4j._sync.io._bolt" -> "collections" [];
	"neo4j._sync.io._bolt" -> "logging" [];
	"neo4j._sync.io._bolt" -> "time" [];
	"neo4j._sync.io._bolt" -> "typing_extensions" [];
	"neo4j._sync.io._bolt_socket" -> "__future__" [];
	"neo4j._sync.io._bolt_socket" -> "asyncio" [];
	"neo4j._sync.io._bolt_socket" -> "dataclasses" [];
	"neo4j._sync.io._bolt_socket" -> "logging" [];
	"neo4j._sync.io._bolt_socket" -> "struct" [];
	"neo4j._sync.io._bolt_socket" -> "typing" [];
	"neo4j._sync.io._bolt_socket" -> "contextlib" [];
	"neo4j._sync.io._bolt_socket" -> "neo4j" [];
	"neo4j._sync.io._bolt_socket" -> "ssl" [];
	"neo4j._sync.io._bolt_socket" -> "typing_extensions" [];
	"neo4j._sync.io._bolt5" -> "typing" [];
	"neo4j._sync.io._bolt5" -> "enum" [];
	"neo4j._sync.io._bolt5" -> "logging" [];
	"neo4j._sync.io._bolt5" -> "ssl" [];
	"neo4j._sync.io._bolt4" -> "logging" [];
	"neo4j._sync.io._bolt4" -> "ssl" [];
	"neo4j._sync.io._bolt3" -> "__future__" [];
	"neo4j._sync.io._bolt3" -> "typing" [];
	"neo4j._sync.io._bolt3" -> "enum" [];
	"neo4j._sync.io._bolt3" -> "logging" [];
	"neo4j._sync.io._bolt3" -> "ssl" [];
	"neo4j._sync._debug._concurrency_check" -> "__future__" [];
	"neo4j._sync._debug._concurrency_check" -> "inspect" [];
	"neo4j._sync._debug._concurrency_check" -> "traceback" [];
	"neo4j._sync._debug._concurrency_check" -> "typing" [];
	"neo4j._sync._debug._concurrency_check" -> "copy" [];
	"neo4j._sync._debug._concurrency_check" -> "functools" [];
	"neo4j._debug._notification_printer" -> "__future__" [];
	"neo4j._debug._notification_printer" -> "typing" [];
	"neo4j._debug._config" -> "os" [];
	"neo4j._debug._config" -> "sys" [];
	"neo4j._async_compat.util" -> "__future__" [];
	"neo4j._async_compat.util" -> "asyncio" [];
	"neo4j._async_compat.util" -> "inspect" [];
	"neo4j._async_compat.util" -> "traceback" [];
	"neo4j._async_compat.util" -> "typing" [];
	"neo4j._async_compat.util" -> "functools" [];
	"neo4j._async_compat.util" -> "typing_extensions" [];
	"neo4j._sync.work.session" -> "__future__" [];
	"neo4j._sync.work.session" -> "asyncio" [];
	"neo4j._sync.work.session" -> "typing" [];
	"neo4j._sync.work.session" -> "logging" [];
	"neo4j._sync.work.session" -> "random" [];
	"neo4j._sync.work.session" -> "time" [];
	"neo4j._sync.work.session" -> "typing_extensions" [];
	"neo4j._sync.work.workspace" -> "__future__" [];
	"neo4j._sync.work.workspace" -> "logging" [];
	"neo4j._sync.work.workspace" -> "typing" [];
	"neo4j._util._context_bool" -> "__future__" [];
	"neo4j._sync.work.result" -> "__future__" [];
	"neo4j._sync.work.result" -> "inspect" [];
	"neo4j._sync.work.result" -> "typing" [];
	"neo4j._sync.work.result" -> "collections" [];
	"neo4j._sync.work.result" -> "logging" [];
	"neo4j._sync.work.result" -> "pathlib" [];
	"neo4j._sync.work.result" -> "warnings" [];
	"neo4j._sync.work.result" -> "typing_extensions" [];
	"neo4j._sync.work.result" -> "pandas" [];
	"neo4j._sync.work.result" -> "pytz" [];
	"neo4j.warnings" -> "__future__" [];
	"neo4j.warnings" -> "typing" [];
	"neo4j._sync.driver" -> "__future__" [];
	"neo4j._sync.driver" -> "asyncio" [];
	"neo4j._sync.driver" -> "typing" [];
	"neo4j._sync.driver" -> "ssl" [];
	"neo4j._sync.driver" -> "typing_extensions" [];
	"neo4j._sync.driver" -> "enum" [];
	"neo4j._sync.bookmark_manager" -> "__future__" [];
	"neo4j._sync.bookmark_manager" -> "typing" [];
	"neo4j._sync.config" -> "__future__" [];
	"neo4j._sync.config" -> "typing" [];
	"neo4j._sync.config" -> "ssl" [];
	"neo4j._meta" -> "__future__" [];
	"neo4j._meta" -> "asyncio" [];
	"neo4j._meta" -> "platform" [];
	"neo4j._meta" -> "sys" [];
	"neo4j._meta" -> "typing" [];
	"neo4j._meta" -> "functools" [];
	"neo4j._meta" -> "inspect" [];
	"neo4j._meta" -> "warnings" [];
	"neo4j._data" -> "__future__" [];
	"neo4j._data" -> "typing" [];
	"neo4j._data" -> "abc" [];
	"neo4j._data" -> "functools" [];
	"neo4j._data" -> "operator" [];
	"neo4j._data" -> "typing_extensions" [];
	"neo4j._conf" -> "__future__" [];
	"neo4j._conf" -> "abc" [];
	"neo4j._async.work.transaction" -> "__future__" [];
	"neo4j._async.work.transaction" -> "asyncio" [];
	"neo4j._async.work.transaction" -> "typing" [];
	"neo4j._async.work.transaction" -> "typing_extensions" [];
	"neo4j._async._debug._concurrency_check" -> "__future__" [];
	"neo4j._async._debug._concurrency_check" -> "inspect" [];
	"neo4j._async._debug._concurrency_check" -> "traceback" [];
	"neo4j._async._debug._concurrency_check" -> "typing" [];
	"neo4j._async._debug._concurrency_check" -> "copy" [];
	"neo4j._async._debug._concurrency_check" -> "functools" [];
	"neo4j._async.work.session" -> "__future__" [];
	"neo4j._async.work.session" -> "asyncio" [];
	"neo4j._async.work.session" -> "typing" [];
	"neo4j._async.work.session" -> "logging" [];
	"neo4j._async.work.session" -> "random" [];
	"neo4j._async.work.session" -> "time" [];
	"neo4j._async.work.session" -> "typing_extensions" [];
	"neo4j._async.work.workspace" -> "__future__" [];
	"neo4j._async.work.workspace" -> "logging" [];
	"neo4j._async.work.workspace" -> "typing" [];
	"neo4j._async.work.result" -> "__future__" [];
	"neo4j._async.work.result" -> "inspect" [];
	"neo4j._async.work.result" -> "typing" [];
	"neo4j._async.work.result" -> "collections" [];
	"neo4j._async.work.result" -> "logging" [];
	"neo4j._async.work.result" -> "pathlib" [];
	"neo4j._async.work.result" -> "warnings" [];
	"neo4j._async.work.result" -> "typing_extensions" [];
	"neo4j._async.work.result" -> "pandas" [];
	"neo4j._async.work.result" -> "pytz" [];
	"neo4j._async.driver" -> "__future__" [];
	"neo4j._async.driver" -> "asyncio" [];
	"neo4j._async.driver" -> "typing" [];
	"neo4j._async.driver" -> "ssl" [];
	"neo4j._async.driver" -> "typing_extensions" [];
	"neo4j._async.driver" -> "enum" [];
	"neo4j._async.bookmark_manager" -> "__future__" [];
	"neo4j._async.bookmark_manager" -> "typing" [];
	"neo4j._api" -> "__future__" [];
	"neo4j._api" -> "typing" [];
	"neo4j._api" -> "enum" [];
	"neo4j._api" -> "typing_extensions" [];
	"graphdatascience.session.dbms_connection_info" -> "__future__" [];
	"graphdatascience.session.dbms_connection_info" -> "dataclasses" [];
	"graphdatascience.session.dbms_connection_info" -> "typing" [];
	"graphdatascience.session.cloud_location" -> "dataclasses" [];
	"graphdatascience.session.aura_graph_data_science" -> "__future__" [];
	"graphdatascience.session.aura_graph_data_science" -> "typing" [];
	"graphdatascience.session.aura_graph_data_science" -> "pandas" [];
	"graphdatascience.session.aura_graph_data_science" -> "graphdatascience" [];
	"graphdatascience.utils.util_remote_proc_runner" -> "typing" [];
	"graphdatascience.utils.util_node_property_func_runner" -> "typing" [];
	"graphdatascience.graph.graph_type_check" -> "functools" [];
	"graphdatascience.graph.graph_type_check" -> "typing" [];
	"graphdatascience.error.illegal_attr_checker" -> "abc" [];
	"graphdatascience.error.illegal_attr_checker" -> "typing" [];
	"graphdatascience.caller_base" -> "abc" [];
	"graphdatascience.caller_base" -> "typing" [];
	"graphdatascience.error.cypher_warning_handler" -> "warnings" [];
	"graphdatascience.error.cypher_warning_handler" -> "functools" [];
	"graphdatascience.error.cypher_warning_handler" -> "typing" [];
	"graphdatascience.query_runner.session_query_runner" -> "__future__" [];
	"graphdatascience.query_runner.session_query_runner" -> "time" [];
	"graphdatascience.query_runner.session_query_runner" -> "typing" [];
	"graphdatascience.query_runner.session_query_runner" -> "uuid" [];
	"graphdatascience.query_runner.session_query_runner" -> "pandas" [];
	"graphdatascience.query_runner.protocol.write_protocols" -> "logging" [];
	"graphdatascience.query_runner.protocol.write_protocols" -> "abc" [];
	"graphdatascience.query_runner.protocol.write_protocols" -> "typing" [];
	"graphdatascience.query_runner.protocol.write_protocols" -> "pandas" [];
	"graphdatascience.query_runner.protocol.write_protocols" -> "tenacity" [];
	"graphdatascience.query_runner.protocol.write_protocols" -> "graphdatascience" [];
	"graphdatascience.session.dbms.protocol_version" -> "enum" [];
	"graphdatascience.query_runner.protocol.status" -> "enum" [];
	"graphdatascience.query_runner.protocol.retry_utils" -> "logging" [];
	"graphdatascience.query_runner.protocol.retry_utils" -> "typing" [];
	"graphdatascience.query_runner.protocol.retry_utils" -> "tenacity" [];
	"tenacity.retry" -> "abc" [];
	"tenacity.retry" -> "re" [];
	"tenacity.retry" -> "typing" [];
	"tenacity" -> "dataclasses" [];
	"tenacity" -> "functools" [];
	"tenacity" -> "sys" [];
	"tenacity" -> "threading" [];
	"tenacity" -> "time" [];
	"tenacity" -> "typing" [];
	"tenacity" -> "warnings" [];
	"tenacity" -> "abc" [];
	"tenacity" -> "concurrent" [];
	"tenacity" -> "tornado" [];
	"tenacity" -> "types" [];
	"tenacity.tornadoweb" -> "sys" [];
	"tenacity.tornadoweb" -> "typing" [];
	"tenacity.tornadoweb" -> "tornado" [];
	"tenacity.tornadoweb" -> "'tornado.concurrent'" [];
	"tenacity.asyncio" -> "functools" [];
	"tenacity.asyncio" -> "sys" [];
	"tenacity.asyncio" -> "typing" [];
	"tenacity.asyncio" -> "trio" [];
	"tenacity.asyncio" -> "sniffio" [];
	"tenacity.asyncio" -> "asyncio" [];
	"sniffio._impl" -> "contextvars" [];
	"sniffio._impl" -> "typing" [];
	"sniffio._impl" -> "sys" [];
	"sniffio._impl" -> "threading" [];
	"sniffio._impl" -> "asyncio" [];
	"sniffio._impl" -> "curio" [];
	"tenacity.asyncio.retry" -> "abc" [];
	"tenacity.asyncio.retry" -> "typing" [];
	"tenacity.asyncio.retry" -> "tenacity" [];
	"tenacity.before_sleep" -> "typing" [];
	"tenacity.before_sleep" -> "logging" [];
	"tenacity.after" -> "typing" [];
	"tenacity.after" -> "logging" [];
	"tenacity.before" -> "typing" [];
	"tenacity.before" -> "logging" [];
	"tenacity.wait" -> "abc" [];
	"tenacity.wait" -> "random" [];
	"tenacity.wait" -> "typing" [];
	"tenacity.stop" -> "abc" [];
	"tenacity.stop" -> "typing" [];
	"tenacity.stop" -> "threading" [];
	"tenacity.nap" -> "time" [];
	"tenacity.nap" -> "typing" [];
	"tenacity.nap" -> "threading" [];
	"tenacity._utils" -> "functools" [];
	"tenacity._utils" -> "inspect" [];
	"tenacity._utils" -> "sys" [];
	"tenacity._utils" -> "typing" [];
	"tenacity._utils" -> "datetime" [];
	"graphdatascience.query_runner.protocol.project_protocols" -> "abc" [];
	"graphdatascience.query_runner.protocol.project_protocols" -> "logging" [];
	"graphdatascience.query_runner.protocol.project_protocols" -> "typing" [];
	"graphdatascience.query_runner.protocol.project_protocols" -> "pandas" [];
	"graphdatascience.query_runner.protocol.project_protocols" -> "tenacity" [];
	"graphdatascience.query_runner.protocol.project_protocols" -> "graphdatascience" [];
	"graphdatascience.session.dbms.protocol_resolver" -> "typing" [];
	"graphdatascience.session.dbms.protocol_resolver" -> "graphdatascience" [];
	"graphdatascience.query_runner.termination_flag" -> "__future__" [];
	"graphdatascience.query_runner.termination_flag" -> "logging" [];
	"graphdatascience.query_runner.termination_flag" -> "signal" [];
	"graphdatascience.query_runner.termination_flag" -> "threading" [];
	"graphdatascience.query_runner.termination_flag" -> "abc" [];
	"graphdatascience.query_runner.termination_flag" -> "types" [];
	"graphdatascience.query_runner.termination_flag" -> "typing" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "__future__" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "base64" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "json" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "re" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "time" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "warnings" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "dataclasses" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "types" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "typing" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "pandas" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "pyarrow" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "tenacity" [];
	"graphdatascience.query_runner.arrow_endpoint_version" -> "__future__" [];
	"graphdatascience.query_runner.arrow_endpoint_version" -> "enum" [];
	"graphdatascience.query_runner.arrow_query_runner" -> "__future__" [];
	"graphdatascience.query_runner.arrow_query_runner" -> "warnings" [];
	"graphdatascience.query_runner.arrow_query_runner" -> "typing" [];
	"graphdatascience.query_runner.arrow_query_runner" -> "pandas" [];
	"graphdatascience.query_runner.arrow_graph_constructor" -> "__future__" [];
	"graphdatascience.query_runner.arrow_graph_constructor" -> "concurrent" [];
	"graphdatascience.query_runner.arrow_graph_constructor" -> "math" [];
	"graphdatascience.query_runner.arrow_graph_constructor" -> "warnings" [];
	"graphdatascience.query_runner.arrow_graph_constructor" -> "typing" [];
	"graphdatascience.query_runner.arrow_graph_constructor" -> "numpy" [];
	"graphdatascience.query_runner.arrow_graph_constructor" -> "pandas" [];
	"graphdatascience.query_runner.arrow_info" -> "__future__" [];
	"graphdatascience.query_runner.arrow_info" -> "dataclasses" [];
	"graphdatascience.graph.graph_remote_project_runner" -> "__future__" [];
	"graphdatascience.graph.graph_remote_project_runner" -> "typing" [];
	"graphdatascience.server_version.compatible_with" -> "functools" [];
	"graphdatascience.server_version.compatible_with" -> "inspect" [];
	"graphdatascience.server_version.compatible_with" -> "typing" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "__future__" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "os" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "pathlib" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "warnings" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "typing" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "pandas" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "multimethod" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "neo4j" [];
	"graphdatascience.graph.nx_loader" -> "collections" [];
	"graphdatascience.graph.nx_loader" -> "typing" [];
	"graphdatascience.graph.nx_loader" -> "networkx" [];
	"graphdatascience.graph.nx_loader" -> "pandas" [];
	"graphdatascience.graph.ogb_loader" -> "logging" [];
	"graphdatascience.graph.ogb_loader" -> "abc" [];
	"graphdatascience.graph.ogb_loader" -> "typing" [];
	"graphdatascience.graph.ogb_loader" -> "warnings" [];
	"graphdatascience.graph.ogb_loader" -> "numpy" [];
	"graphdatascience.graph.ogb_loader" -> "pandas" [];
	"graphdatascience.graph.ogb_loader" -> "ogb" [];
	"graphdatascience.graph.ogb_loader" -> "'ogb.linkproppred'" [];
	"graphdatascience.graph.graph_sample_runner" -> "typing" [];
	"graphdatascience.graph.graph_sample_runner" -> "pandas" [];
	"graphdatascience.graph.graph_export_runner" -> "typing" [];
	"graphdatascience.graph.graph_export_runner" -> "pandas" [];
	"graphdatascience.graph.graph_entity_ops_runner" -> "functools" [];
	"graphdatascience.graph.graph_entity_ops_runner" -> "typing" [];
	"graphdatascience.graph.graph_entity_ops_runner" -> "warnings" [];
	"graphdatascience.graph.graph_entity_ops_runner" -> "pandas" [];
	"graphdatascience.utils.util_proc_runner" -> "typing" [];
	"graphdatascience.error.client_only_endpoint" -> "warnings" [];
	"graphdatascience.error.client_only_endpoint" -> "functools" [];
	"graphdatascience.error.client_only_endpoint" -> "typing" [];
	"multimethod" -> "abc" [];
	"multimethod" -> "collections" [];
	"multimethod" -> "contextlib" [];
	"multimethod" -> "functools" [];
	"multimethod" -> "inspect" [];
	"multimethod" -> "itertools" [];
	"multimethod" -> "types" [];
	"multimethod" -> "typing" [];
	"graphdatascience.error.uncallable_namespace" -> "abc" [];
	"graphdatascience.error.uncallable_namespace" -> "typing" [];
	"graphdatascience.utils.direct_util_endpoints" -> "typing" [];
	"graphdatascience.utils.direct_util_endpoints" -> "pandas" [];
	"graphdatascience.topological_lp.topological_lp_alpha_runner" -> "typing" [];
	"graphdatascience.system.system_endpoints" -> "re" [];
	"graphdatascience.system.system_endpoints" -> "typing" [];
	"graphdatascience.system.system_endpoints" -> "pandas" [];
	"graphdatascience.system.config_endpoints" -> "typing" [];
	"graphdatascience.system.config_endpoints" -> "pandas" [];
	"graphdatascience.pipeline.pipeline_proc_runner" -> "typing" [];
	"graphdatascience.pipeline.pipeline_proc_runner" -> "pandas" [];
	"graphdatascience.pipeline.training_pipeline" -> "abc" [];
	"graphdatascience.pipeline.training_pipeline" -> "typing" [];
	"graphdatascience.pipeline.training_pipeline" -> "pandas" [];
	"graphdatascience.pipeline.pipeline_beta_proc_runner" -> "typing" [];
	"graphdatascience.pipeline.pipeline_beta_proc_runner" -> "pandas" [];
	"graphdatascience.pipeline.nc_pipeline_create_runner" -> "__future__" [];
	"graphdatascience.pipeline.nc_pipeline_create_runner" -> "typing" [];
	"graphdatascience.pipeline.nc_pipeline_create_runner" -> "pandas" [];
	"graphdatascience.pipeline.lp_pipeline_create_runner" -> "typing" [];
	"graphdatascience.pipeline.lp_pipeline_create_runner" -> "pandas" [];
	"graphdatascience.pipeline.nr_pipeline_create_runner" -> "typing" [];
	"graphdatascience.pipeline.nr_pipeline_create_runner" -> "pandas" [];
	"graphdatascience.model.model_proc_runner" -> "__future__" [];
	"graphdatascience.model.model_proc_runner" -> "typing" [];
	"graphdatascience.model.model_proc_runner" -> "pandas" [];
	"graphdatascience.model.model" -> "__future__" [];
	"graphdatascience.model.model" -> "abc" [];
	"graphdatascience.model.model" -> "typing" [];
	"graphdatascience.model.model" -> "pandas" [];
	"graphdatascience.model.model_beta_proc_runner" -> "typing" [];
	"graphdatascience.model.model_beta_proc_runner" -> "pandas" [];
	"graphdatascience.model.model_alpha_proc_runner" -> "__future__" [];
	"graphdatascience.model.model_alpha_proc_runner" -> "typing" [];
	"graphdatascience.model.model_alpha_proc_runner" -> "pandas" [];
	"graphdatascience.graph.graph_beta_proc_runner" -> "typing" [];
	"graphdatascience.graph.graph_project_runner" -> "__future__" [];
	"graphdatascience.graph.graph_project_runner" -> "typing" [];
	"graphdatascience.graph.graph_project_runner" -> "pandas" [];
	"graphdatascience.graph.graph_alpha_proc_runner" -> "os" [];
	"graphdatascience.graph.graph_alpha_proc_runner" -> "typing" [];
	"graphdatascience.graph.graph_alpha_proc_runner" -> "pandas" [];
	"graphdatascience.algo.algo_proc_runner" -> "abc" [];
	"graphdatascience.algo.algo_proc_runner" -> "typing" [];
	"graphdatascience.algo.algo_proc_runner" -> "pandas" [];
	"graphdatascience.session.aura_api" -> "__future__" [];
	"graphdatascience.session.aura_api" -> "logging" [];
	"graphdatascience.session.aura_api" -> "math" [];
	"graphdatascience.session.aura_api" -> "time" [];
	"graphdatascience.session.aura_api" -> "warnings" [];
	"graphdatascience.session.aura_api" -> "collections" [];
	"graphdatascience.session.aura_api" -> "datetime" [];
	"graphdatascience.session.aura_api" -> "http" [];
	"graphdatascience.session.aura_api" -> "typing" [];
	"graphdatascience.session.aura_api" -> "requests" [];
	"graphdatascience.session.algorithm_category" -> "enum" [];
	"typing" -> "abc" [];
	"typing" -> "collections" [];
	"typing" -> "contextlib" [];
	"typing" -> "functools" [];
	"typing" -> "operator" [];
	"typing" -> "re" [];
	"typing" -> "sys" [];
	"typing" -> "types" [];
	"dataclasses" -> "re" [];
	"dataclasses" -> "sys" [];
	"dataclasses" -> "copy" [];
	"dataclasses" -> "types" [];
	"dataclasses" -> "inspect" [];
	"dataclasses" -> "keyword" [];
	"dataclasses" -> "builtins" [];
	"dataclasses" -> "functools" [];
	"dataclasses" -> "_thread" [];
	"graphdatascience.server_version.server_version" -> "__future__" [];
	"graphdatascience.server_version.server_version" -> "re" [];
	"graphdatascience.query_runner.query_runner" -> "abc" [];
	"graphdatascience.query_runner.query_runner" -> "typing" [];
	"graphdatascience.query_runner.query_runner" -> "pandas" [];
	"graphdatascience.pipeline.nr_training_pipeline" -> "typing" [];
	"graphdatascience.pipeline.nr_training_pipeline" -> "pandas" [];
	"graphdatascience.pipeline.nc_training_pipeline" -> "abc" [];
	"graphdatascience.pipeline.nc_training_pipeline" -> "typing" [];
	"graphdatascience.pipeline.nc_training_pipeline" -> "pandas" [];
	"graphdatascience.pipeline.classification_training_pipeline" -> "abc" [];
	"graphdatascience.pipeline.classification_training_pipeline" -> "typing" [];
	"graphdatascience.pipeline.classification_training_pipeline" -> "pandas" [];
	"graphdatascience.pipeline.lp_training_pipeline" -> "typing" [];
	"graphdatascience.pipeline.lp_training_pipeline" -> "pandas" [];
	"graphdatascience.model.simple_rel_embedding_model" -> "typing" [];
	"graphdatascience.model.simple_rel_embedding_model" -> "pandas" [];
	"graphdatascience.model.pipeline_model" -> "__future__" [];
	"graphdatascience.model.pipeline_model" -> "abc" [];
	"graphdatascience.model.pipeline_model" -> "dataclasses" [];
	"graphdatascience.model.pipeline_model" -> "typing" [];
	"graphdatascience.model.node_regression_model" -> "typing" [];
	"graphdatascience.model.node_classification_model" -> "typing" [];
	"graphdatascience.model.node_classification_model" -> "pandas" [];
	"graphdatascience.model.link_prediction_model" -> "dataclasses" [];
	"graphdatascience.model.link_prediction_model" -> "typing" [];
	"graphdatascience.model.graphsage_model" -> "typing" [];
	"graphdatascience.model.graphsage_model" -> "pandas" [];
	"graphdatascience.graph_data_science" -> "__future__" [];
	"graphdatascience.graph_data_science" -> "warnings" [];
	"graphdatascience.graph_data_science" -> "types" [];
	"graphdatascience.graph_data_science" -> "typing" [];
	"graphdatascience.graph_data_science" -> "neo4j" [];
	"graphdatascience.graph_data_science" -> "pandas" [];
	"graphdatascience.graph.graph_cypher_runner" -> "__future__" [];
	"graphdatascience.graph.graph_cypher_runner" -> "re" [];
	"graphdatascience.graph.graph_cypher_runner" -> "itertools" [];
	"graphdatascience.graph.graph_cypher_runner" -> "typing" [];
	"graphdatascience.graph.graph_cypher_runner" -> "pandas" [];
	"graphdatascience.graph.graph_object" -> "__future__" [];
	"graphdatascience.graph.graph_object" -> "types" [];
	"graphdatascience.graph.graph_object" -> "typing" [];
	"graphdatascience.graph.graph_object" -> "pandas" [];
	"graphdatascience.graph.graph_create_result" -> "__future__" [];
	"graphdatascience.graph.graph_create_result" -> "types" [];
	"graphdatascience.graph.graph_create_result" -> "typing" [];
	"graphdatascience.graph.graph_create_result" -> "pandas" [];
	"_elementtree" -> "pyexpat" [];
	"xml.etree.ElementInclude" -> "copy" [];
	"zipimport" -> "_frozen_importlib_external" [];
	"zipimport" -> "_frozen_importlib" [];
	"zipimport" -> "_imp" [];
	"zipimport" -> "_io" [];
	"zipimport" -> "marshal" [];
	"zipimport" -> "sys" [];
	"zipimport" -> "time" [];
	"zipimport" -> "os" [];
	"zipimport" -> "zlib" [];
	"zipimport" -> "io" [];
	"zipimport" -> "pathlib" [];
	"_ssl" -> "socket" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "os" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "json" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "wx" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "threading" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "shutil" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "requests" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "sys" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "traceback" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "time" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "subprocess" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "platform" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "signal" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "zipfile" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "tarfile" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "atexit" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "re" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "select" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "importlib" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "uuid" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "fcntl" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "pathlib" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "hashlib" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "typing" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "neo4j" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "pypdf" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "docx" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "collections" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "openai" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "anthropic" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "langchain_openai" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "langchain_anthropic" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "langchain_google_genai" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "linecache" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "locale" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "codecs" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "sre_parse" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "operator" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "keyword" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "_collections_abc" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "sre_compile" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "reprlib" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "stat" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "weakref" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "encodings" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "types" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "io" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "enum" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "heapq" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "posixpath" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "warnings" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "copyreg" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "_weakrefset" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "_bootlocale" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "abc" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "sre_constants" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "genericpath" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "functools" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "ntpath" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "langchain" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "langchain_core" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "langchain_community" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "tiktoken" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "numpy" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "pandas" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "graphdatascience" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime_hook.py" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime-java.py" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_cryptography_openssl.py" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" -> "sys" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" -> "multiprocessing" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" -> "subprocess" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "os" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "pathlib" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "sys" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "pkg_resources" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "pyimod02_importers" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" -> "os" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" -> "setuptools" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" -> "_distutils_hack" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py" -> "pkgutil" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py" -> "pyimod02_importers" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_cryptography_openssl.py" -> "os" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_cryptography_openssl.py" -> "sys" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" -> "inspect" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" -> "os" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" -> "sys" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/.venv/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" -> "zipfile" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime-java.py" -> "os" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime-java.py" -> "sys" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime-java.py" -> "platform" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime-java.py" -> "subprocess" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime-java.py" -> "shutil" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime_hook.py" -> "os" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime_hook.py" -> "sys" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime_hook.py" -> "platform" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/hooks/runtime_hook.py" -> "tempfile" [];
	"tiktoken.registry" -> "__future__" [];
	"tiktoken.registry" -> "functools" [];
	"tiktoken.registry" -> "importlib" [];
	"tiktoken.registry" -> "pkgutil" [];
	"tiktoken.registry" -> "threading" [];
	"tiktoken.registry" -> "typing" [];
	"tiktoken.registry" -> "tiktoken_ext" [];
	"tiktoken.model" -> "__future__" [];
	"tiktoken.core" -> "__future__" [];
	"tiktoken.core" -> "functools" [];
	"tiktoken.core" -> "typing" [];
	"tiktoken.core" -> "regex" [];
	"tiktoken.core" -> "numpy" [];
	"regex" -> "warnings" [];
	"regex.regex" -> "threading" [];
	"regex.regex" -> "locale" [];
	"regex.regex" -> "copyreg" [];
	"regex._regex_core" -> "enum" [];
	"regex._regex_core" -> "string" [];
	"regex._regex_core" -> "unicodedata" [];
	"regex._regex_core" -> "collections" [];
	"regex._regex_core" -> "random" [];
	"langchain_community" -> "importlib" [];
	"langchain_core._api" -> "typing" [];
	"langchain_core._api.path" -> "os" [];
	"langchain_core._api.path" -> "pathlib" [];
	"langchain_core._api.path" -> "typing" [];
	"langchain_core._api.deprecation" -> "contextlib" [];
	"langchain_core._api.deprecation" -> "functools" [];
	"langchain_core._api.deprecation" -> "inspect" [];
	"langchain_core._api.deprecation" -> "warnings" [];
	"langchain_core._api.deprecation" -> "typing" [];
	"langchain_core._api.deprecation" -> "typing_extensions" [];
	"langchain_core.utils.pydantic" -> "__future__" [];
	"langchain_core.utils.pydantic" -> "inspect" [];
	"langchain_core.utils.pydantic" -> "textwrap" [];
	"langchain_core.utils.pydantic" -> "warnings" [];
	"langchain_core.utils.pydantic" -> "contextlib" [];
	"langchain_core.utils.pydantic" -> "functools" [];
	"langchain_core.utils.pydantic" -> "types" [];
	"langchain_core.utils.pydantic" -> "typing" [];
	"langchain_core.utils.pydantic" -> "pydantic" [];
	"langchain_core.utils.pydantic" -> "packaging" [];
	"langchain_core.utils.pydantic" -> "typing_extensions" [];
	"langchain_core.utils.pydantic" -> "pydantic_core" [];
	"langchain_core.utils" -> "typing" [];
	"langchain_core.utils.mustache" -> "__future__" [];
	"langchain_core.utils.mustache" -> "logging" [];
	"langchain_core.utils.mustache" -> "types" [];
	"langchain_core.utils.mustache" -> "typing" [];
	"langchain_core.utils.mustache" -> "typing_extensions" [];
	"langchain_core.utils.utils" -> "contextlib" [];
	"langchain_core.utils.utils" -> "datetime" [];
	"langchain_core.utils.utils" -> "functools" [];
	"langchain_core.utils.utils" -> "importlib" [];
	"langchain_core.utils.utils" -> "os" [];
	"langchain_core.utils.utils" -> "warnings" [];
	"langchain_core.utils.utils" -> "typing" [];
	"langchain_core.utils.utils" -> "pydantic" [];
	"langchain_core.utils.utils" -> "requests" [];
	"langchain_core.utils.utils" -> "typing_extensions" [];
	"langchain_core.utils.strings" -> "typing" [];
	"langchain_core.utils.loading" -> "warnings" [];
	"langchain_core.utils.loading" -> "typing" [];
	"langchain_core.utils.iter" -> "collections" [];
	"langchain_core.utils.iter" -> "contextlib" [];
	"langchain_core.utils.iter" -> "itertools" [];
	"langchain_core.utils.iter" -> "types" [];
	"langchain_core.utils.iter" -> "typing" [];
	"langchain_core.utils.iter" -> "typing_extensions" [];
	"langchain_core.utils.input" -> "typing" [];
	"langchain_core.utils.formatting" -> "string" [];
	"langchain_core.utils.formatting" -> "typing" [];
	"langchain_core.utils.env" -> "__future__" [];
	"langchain_core.utils.env" -> "os" [];
	"langchain_core.utils.env" -> "typing" [];
	"langchain_core.utils.aiter" -> "collections" [];
	"langchain_core.utils.aiter" -> "contextlib" [];
	"langchain_core.utils.aiter" -> "types" [];
	"langchain_core.utils.aiter" -> "typing" [];
	"langchain_core.utils.aiter" -> "typing_extensions" [];
	"langchain_core.utils.image" -> "typing" [];
	"pydantic.v1.version" -> "cython" [];
	"pydantic.v1.version" -> "platform" [];
	"pydantic.v1.version" -> "sys" [];
	"pydantic.v1.version" -> "importlib" [];
	"pydantic.v1.version" -> "pathlib" [];
	"pydantic.v1.types" -> "abc" [];
	"pydantic.v1.types" -> "math" [];
	"pydantic.v1.types" -> "re" [];
	"pydantic.v1.types" -> "warnings" [];
	"pydantic.v1.types" -> "datetime" [];
	"pydantic.v1.types" -> "decimal" [];
	"pydantic.v1.types" -> "enum" [];
	"pydantic.v1.types" -> "pathlib" [];
	"pydantic.v1.types" -> "types" [];
	"pydantic.v1.types" -> "typing" [];
	"pydantic.v1.types" -> "uuid" [];
	"pydantic.v1.types" -> "weakref" [];
	"pydantic.v1.types" -> "typing_extensions" [];
	"pydantic.v1.typing" -> "sys" [];
	"pydantic.v1.typing" -> "typing" [];
	"pydantic.v1.typing" -> "os" [];
	"pydantic.v1.typing" -> "typing_extensions" [];
	"pydantic.v1.typing" -> "types" [];
	"pydantic.v1.validators" -> "math" [];
	"pydantic.v1.validators" -> "re" [];
	"pydantic.v1.validators" -> "collections" [];
	"pydantic.v1.validators" -> "datetime" [];
	"pydantic.v1.validators" -> "decimal" [];
	"pydantic.v1.validators" -> "enum" [];
	"pydantic.v1.validators" -> "ipaddress" [];
	"pydantic.v1.validators" -> "pathlib" [];
	"pydantic.v1.validators" -> "typing" [];
	"pydantic.v1.validators" -> "uuid" [];
	"pydantic.v1.validators" -> "warnings" [];
	"pydantic.v1.validators" -> "typing_extensions" [];
	"pydantic.v1.utils" -> "keyword" [];
	"pydantic.v1.utils" -> "warnings" [];
	"pydantic.v1.utils" -> "weakref" [];
	"pydantic.v1.utils" -> "collections" [];
	"pydantic.v1.utils" -> "copy" [];
	"pydantic.v1.utils" -> "itertools" [];
	"pydantic.v1.utils" -> "types" [];
	"pydantic.v1.utils" -> "typing" [];
	"pydantic.v1.utils" -> "typing_extensions" [];
	"pydantic.v1.utils" -> "inspect" [];
	"pydantic.v1.utils" -> "pathlib" [];
	"pydantic.v1.utils" -> "importlib" [];
	"pydantic.v1.datetime_parse" -> "re" [];
	"pydantic.v1.datetime_parse" -> "datetime" [];
	"pydantic.v1.datetime_parse" -> "typing" [];
	"pydantic.v1.tools" -> "json" [];
	"pydantic.v1.tools" -> "functools" [];
	"pydantic.v1.tools" -> "pathlib" [];
	"pydantic.v1.tools" -> "typing" [];
	"pydantic.v1.parse" -> "json" [];
	"pydantic.v1.parse" -> "pickle" [];
	"pydantic.v1.parse" -> "enum" [];
	"pydantic.v1.parse" -> "pathlib" [];
	"pydantic.v1.parse" -> "typing" [];
	"pydantic.v1.networks" -> "re" [];
	"pydantic.v1.networks" -> "ipaddress" [];
	"pydantic.v1.networks" -> "typing" [];
	"pydantic.v1.networks" -> "email_validator" [];
	"pydantic.v1.networks" -> "typing_extensions" [];
	"pydantic.v1.main" -> "warnings" [];
	"pydantic.v1.main" -> "abc" [];
	"pydantic.v1.main" -> "copy" [];
	"pydantic.v1.main" -> "enum" [];
	"pydantic.v1.main" -> "functools" [];
	"pydantic.v1.main" -> "pathlib" [];
	"pydantic.v1.main" -> "types" [];
	"pydantic.v1.main" -> "typing" [];
	"pydantic.v1.main" -> "typing_extensions" [];
	"pydantic.v1.main" -> "inspect" [];
	"pydantic.v1.schema" -> "re" [];
	"pydantic.v1.schema" -> "warnings" [];
	"pydantic.v1.schema" -> "collections" [];
	"pydantic.v1.schema" -> "dataclasses" [];
	"pydantic.v1.schema" -> "datetime" [];
	"pydantic.v1.schema" -> "decimal" [];
	"pydantic.v1.schema" -> "enum" [];
	"pydantic.v1.schema" -> "ipaddress" [];
	"pydantic.v1.schema" -> "pathlib" [];
	"pydantic.v1.schema" -> "typing" [];
	"pydantic.v1.schema" -> "uuid" [];
	"pydantic.v1.schema" -> "typing_extensions" [];
	"pydantic.v1.schema" -> "inspect" [];
	"pydantic.v1.json" -> "datetime" [];
	"pydantic.v1.json" -> "collections" [];
	"pydantic.v1.json" -> "decimal" [];
	"pydantic.v1.json" -> "enum" [];
	"pydantic.v1.json" -> "ipaddress" [];
	"pydantic.v1.json" -> "pathlib" [];
	"pydantic.v1.json" -> "re" [];
	"pydantic.v1.json" -> "types" [];
	"pydantic.v1.json" -> "typing" [];
	"pydantic.v1.json" -> "uuid" [];
	"pydantic.v1.json" -> "dataclasses" [];
	"pydantic.v1.color" -> "math" [];
	"pydantic.v1.color" -> "re" [];
	"pydantic.v1.color" -> "colorsys" [];
	"pydantic.v1.color" -> "typing" [];
	"pydantic.v1.error_wrappers" -> "json" [];
	"pydantic.v1.error_wrappers" -> "typing" [];
	"pydantic.v1.error_wrappers" -> "typing_extensions" [];
	"pydantic.v1.env_settings" -> "os" [];
	"pydantic.v1.env_settings" -> "warnings" [];
	"pydantic.v1.env_settings" -> "pathlib" [];
	"pydantic.v1.env_settings" -> "typing" [];
	"pydantic.v1.env_settings" -> "dotenv" [];
	"dotenv" -> "typing" [];
	"dotenv.ipython" -> "IPython" [];
	"dotenv.ipython" -> "'IPython.core'" [];
	"dotenv.main" -> "io" [];
	"dotenv.main" -> "logging" [];
	"dotenv.main" -> "os" [];
	"dotenv.main" -> "pathlib" [];
	"dotenv.main" -> "shutil" [];
	"dotenv.main" -> "sys" [];
	"dotenv.main" -> "tempfile" [];
	"dotenv.main" -> "collections" [];
	"dotenv.main" -> "contextlib" [];
	"dotenv.main" -> "typing" [];
	"dotenv.variables" -> "re" [];
	"dotenv.variables" -> "abc" [];
	"dotenv.variables" -> "typing" [];
	"dotenv.parser" -> "codecs" [];
	"dotenv.parser" -> "re" [];
	"dotenv.parser" -> "typing" [];
	"pydantic.v1.decorator" -> "functools" [];
	"pydantic.v1.decorator" -> "typing" [];
	"pydantic.v1.decorator" -> "inspect" [];
	"pydantic.v1.config" -> "json" [];
	"pydantic.v1.config" -> "enum" [];
	"pydantic.v1.config" -> "typing" [];
	"pydantic.v1.config" -> "typing_extensions" [];
	"pydantic.v1.class_validators" -> "warnings" [];
	"pydantic.v1.class_validators" -> "collections" [];
	"pydantic.v1.class_validators" -> "functools" [];
	"pydantic.v1.class_validators" -> "itertools" [];
	"pydantic.v1.class_validators" -> "types" [];
	"pydantic.v1.class_validators" -> "typing" [];
	"pydantic.v1.class_validators" -> "inspect" [];
	"pydantic.v1.annotated_types" -> "sys" [];
	"pydantic.v1.annotated_types" -> "typing" [];
	"pydantic.v1.annotated_types" -> "typing_extensions" [];
	"pydantic.v1.dataclasses" -> "copy" [];
	"pydantic.v1.dataclasses" -> "dataclasses" [];
	"pydantic.v1.dataclasses" -> "sys" [];
	"pydantic.v1.dataclasses" -> "contextlib" [];
	"pydantic.v1.dataclasses" -> "functools" [];
	"pydantic.v1.dataclasses" -> "typing" [];
	"pydantic.v1.dataclasses" -> "typing_extensions" [];
	"pydantic.v1.errors" -> "decimal" [];
	"pydantic.v1.errors" -> "pathlib" [];
	"pydantic.v1.errors" -> "typing" [];
	"pydantic.v1.fields" -> "copy" [];
	"pydantic.v1.fields" -> "re" [];
	"pydantic.v1.fields" -> "collections" [];
	"pydantic.v1.fields" -> "typing" [];
	"pydantic.v1.fields" -> "typing_extensions" [];
	"pydantic_core.core_schema" -> "__future__" [];
	"pydantic_core.core_schema" -> "sys" [];
	"pydantic_core.core_schema" -> "warnings" [];
	"pydantic_core.core_schema" -> "datetime" [];
	"pydantic_core.core_schema" -> "decimal" [];
	"pydantic_core.core_schema" -> "re" [];
	"pydantic_core.core_schema" -> "typing" [];
	"pydantic_core.core_schema" -> "typing_extensions" [];
	"pydantic_core" -> "__future__" [];
	"pydantic_core" -> "sys" [];
	"pydantic_core" -> "typing" [];
	"pydantic_core" -> "typing_extensions" [];
	"pydantic_core._pydantic_core" -> "datetime" [];
	"pydantic_core._pydantic_core" -> "typing" [];
	"pydantic_core._pydantic_core" -> "_typeshed" [];
	"pydantic_core._pydantic_core" -> "typing_extensions" [];
	"pydantic.json_schema" -> "__future__" [];
	"pydantic.json_schema" -> "dataclasses" [];
	"pydantic.json_schema" -> "inspect" [];
	"pydantic.json_schema" -> "math" [];
	"pydantic.json_schema" -> "os" [];
	"pydantic.json_schema" -> "re" [];
	"pydantic.json_schema" -> "warnings" [];
	"pydantic.json_schema" -> "collections" [];
	"pydantic.json_schema" -> "copy" [];
	"pydantic.json_schema" -> "enum" [];
	"pydantic.json_schema" -> "typing" [];
	"pydantic.json_schema" -> "pydantic_core" [];
	"pydantic.json_schema" -> "typing_extensions" [];
	"pydantic.type_adapter" -> "__future__" [];
	"pydantic.type_adapter" -> "sys" [];
	"pydantic.type_adapter" -> "dataclasses" [];
	"pydantic.type_adapter" -> "types" [];
	"pydantic.type_adapter" -> "typing" [];
	"pydantic.type_adapter" -> "pydantic_core" [];
	"pydantic.type_adapter" -> "typing_extensions" [];
	"pydantic.plugin._schema_validator" -> "__future__" [];
	"pydantic.plugin._schema_validator" -> "functools" [];
	"pydantic.plugin._schema_validator" -> "typing" [];
	"pydantic.plugin._schema_validator" -> "pydantic_core" [];
	"pydantic.plugin._schema_validator" -> "typing_extensions" [];
	"pydantic.plugin._loader" -> "__future__" [];
	"pydantic.plugin._loader" -> "os" [];
	"pydantic.plugin._loader" -> "warnings" [];
	"pydantic.plugin._loader" -> "typing" [];
	"pydantic.plugin" -> "__future__" [];
	"pydantic.plugin" -> "typing" [];
	"pydantic.plugin" -> "pydantic_core" [];
	"pydantic.plugin" -> "typing_extensions" [];
	"pydantic._internal._utils" -> "__future__" [];
	"pydantic._internal._utils" -> "dataclasses" [];
	"pydantic._internal._utils" -> "keyword" [];
	"pydantic._internal._utils" -> "sys" [];
	"pydantic._internal._utils" -> "typing" [];
	"pydantic._internal._utils" -> "warnings" [];
	"pydantic._internal._utils" -> "weakref" [];
	"pydantic._internal._utils" -> "collections" [];
	"pydantic._internal._utils" -> "copy" [];
	"pydantic._internal._utils" -> "functools" [];
	"pydantic._internal._utils" -> "inspect" [];
	"pydantic._internal._utils" -> "itertools" [];
	"pydantic._internal._utils" -> "types" [];
	"pydantic._internal._utils" -> "typing_extensions" [];
	"pydantic._internal._utils" -> "pydantic" [];
	"pydantic._internal._import_utils" -> "functools" [];
	"pydantic._internal._import_utils" -> "typing" [];
	"pydantic._internal._import_utils" -> "pydantic" [];
	"pydantic._internal._typing_extra" -> "__future__" [];
	"pydantic._internal._typing_extra" -> "re" [];
	"pydantic._internal._typing_extra" -> "sys" [];
	"pydantic._internal._typing_extra" -> "types" [];
	"pydantic._internal._typing_extra" -> "typing" [];
	"pydantic._internal._typing_extra" -> "functools" [];
	"pydantic._internal._typing_extra" -> "typing_extensions" [];
	"pydantic._internal._typing_extra" -> "typing_inspection" [];
	"pydantic._internal._typing_extra" -> "pydantic" [];
	"pydantic._internal._typing_extra" -> "eval_type_backport" [];
	"pydantic.version" -> "__future__" [];
	"pydantic.version" -> "pydantic_core" [];
	"pydantic.version" -> "os" [];
	"pydantic.version" -> "platform" [];
	"pydantic.version" -> "sys" [];
	"pydantic.version" -> "pathlib" [];
	"pydantic._internal._git" -> "__future__" [];
	"pydantic._internal._git" -> "os" [];
	"pydantic._internal._git" -> "subprocess" [];
	"typing_inspection.typing_objects" -> "contextlib" [];
	"typing_inspection.typing_objects" -> "re" [];
	"typing_inspection.typing_objects" -> "sys" [];
	"typing_inspection.typing_objects" -> "typing" [];
	"typing_inspection.typing_objects" -> "warnings" [];
	"typing_inspection.typing_objects" -> "textwrap" [];
	"typing_inspection.typing_objects" -> "types" [];
	"typing_inspection.typing_objects" -> "typing_extensions" [];
	"pydantic._internal._repr" -> "__future__" [];
	"pydantic._internal._repr" -> "types" [];
	"pydantic._internal._repr" -> "typing" [];
	"pydantic._internal._repr" -> "typing_extensions" [];
	"pydantic._internal._repr" -> "typing_inspection" [];
	"pydantic._internal._namespace_utils" -> "__future__" [];
	"pydantic._internal._namespace_utils" -> "sys" [];
	"pydantic._internal._namespace_utils" -> "contextlib" [];
	"pydantic._internal._namespace_utils" -> "functools" [];
	"pydantic._internal._namespace_utils" -> "typing" [];
	"pydantic._internal._namespace_utils" -> "typing_extensions" [];
	"pydantic._internal._generate_schema" -> "__future__" [];
	"pydantic._internal._generate_schema" -> "dataclasses" [];
	"pydantic._internal._generate_schema" -> "datetime" [];
	"pydantic._internal._generate_schema" -> "inspect" [];
	"pydantic._internal._generate_schema" -> "os" [];
	"pydantic._internal._generate_schema" -> "pathlib" [];
	"pydantic._internal._generate_schema" -> "re" [];
	"pydantic._internal._generate_schema" -> "sys" [];
	"pydantic._internal._generate_schema" -> "typing" [];
	"pydantic._internal._generate_schema" -> "warnings" [];
	"pydantic._internal._generate_schema" -> "contextlib" [];
	"pydantic._internal._generate_schema" -> "copy" [];
	"pydantic._internal._generate_schema" -> "decimal" [];
	"pydantic._internal._generate_schema" -> "enum" [];
	"pydantic._internal._generate_schema" -> "fractions" [];
	"pydantic._internal._generate_schema" -> "functools" [];
	"pydantic._internal._generate_schema" -> "ipaddress" [];
	"pydantic._internal._generate_schema" -> "itertools" [];
	"pydantic._internal._generate_schema" -> "operator" [];
	"pydantic._internal._generate_schema" -> "types" [];
	"pydantic._internal._generate_schema" -> "uuid" [];
	"pydantic._internal._generate_schema" -> "zoneinfo" [];
	"pydantic._internal._generate_schema" -> "typing_extensions" [];
	"pydantic._internal._generate_schema" -> "pydantic_core" [];
	"pydantic._internal._generate_schema" -> "typing_inspection" [];
	"pydantic.dataclasses" -> "__future__" [];
	"pydantic.dataclasses" -> "dataclasses" [];
	"pydantic.dataclasses" -> "sys" [];
	"pydantic.dataclasses" -> "types" [];
	"pydantic.dataclasses" -> "typing" [];
	"pydantic.dataclasses" -> "warnings" [];
	"pydantic.dataclasses" -> "typing_extensions" [];
	"pydantic._migration" -> "sys" [];
	"pydantic._migration" -> "typing" [];
	"pydantic._migration" -> "warnings" [];
	"pydantic._internal._serializers" -> "__future__" [];
	"pydantic._internal._serializers" -> "collections" [];
	"pydantic._internal._serializers" -> "typing" [];
	"pydantic._internal._serializers" -> "pydantic_core" [];
	"pydantic._internal._validators" -> "__future__" [];
	"pydantic._internal._validators" -> "math" [];
	"pydantic._internal._validators" -> "re" [];
	"pydantic._internal._validators" -> "typing" [];
	"pydantic._internal._validators" -> "decimal" [];
	"pydantic._internal._validators" -> "fractions" [];
	"pydantic._internal._validators" -> "ipaddress" [];
	"pydantic._internal._validators" -> "zoneinfo" [];
	"pydantic._internal._validators" -> "typing_extensions" [];
	"pydantic._internal._validators" -> "pydantic_core" [];
	"pydantic._internal._validators" -> "typing_inspection" [];
	"pydantic._internal._validators" -> "importlib" [];
	"pydantic.types" -> "__future__" [];
	"pydantic.types" -> "base64" [];
	"pydantic.types" -> "dataclasses" [];
	"pydantic.types" -> "re" [];
	"pydantic.types" -> "datetime" [];
	"pydantic.types" -> "decimal" [];
	"pydantic.types" -> "enum" [];
	"pydantic.types" -> "pathlib" [];
	"pydantic.types" -> "types" [];
	"pydantic.types" -> "typing" [];
	"pydantic.types" -> "uuid" [];
	"pydantic.types" -> "annotated_types" [];
	"pydantic.types" -> "pydantic_core" [];
	"pydantic.types" -> "typing_extensions" [];
	"annotated_types" -> "math" [];
	"annotated_types" -> "sys" [];
	"annotated_types" -> "types" [];
	"annotated_types" -> "dataclasses" [];
	"annotated_types" -> "datetime" [];
	"annotated_types" -> "typing" [];
	"annotated_types" -> "typing_extensions" [];
	"pydantic._internal._schema_gather" -> "__future__" [];
	"pydantic._internal._schema_gather" -> "dataclasses" [];
	"pydantic._internal._schema_gather" -> "typing" [];
	"pydantic._internal._schema_gather" -> "typing_extensions" [];
	"pydantic._internal._generics" -> "__future__" [];
	"pydantic._internal._generics" -> "sys" [];
	"pydantic._internal._generics" -> "types" [];
	"pydantic._internal._generics" -> "typing" [];
	"pydantic._internal._generics" -> "collections" [];
	"pydantic._internal._generics" -> "contextlib" [];
	"pydantic._internal._generics" -> "contextvars" [];
	"pydantic._internal._generics" -> "itertools" [];
	"pydantic._internal._generics" -> "weakref" [];
	"pydantic._internal._generics" -> "typing_extensions" [];
	"pydantic._internal._generics" -> "typing_inspection" [];
	"pydantic._internal._forward_ref" -> "__future__" [];
	"pydantic._internal._forward_ref" -> "dataclasses" [];
	"pydantic._internal._forward_ref" -> "typing" [];
	"pydantic._internal._fields" -> "__future__" [];
	"pydantic._internal._fields" -> "dataclasses" [];
	"pydantic._internal._fields" -> "warnings" [];
	"pydantic._internal._fields" -> "copy" [];
	"pydantic._internal._fields" -> "functools" [];
	"pydantic._internal._fields" -> "inspect" [];
	"pydantic._internal._fields" -> "re" [];
	"pydantic._internal._fields" -> "typing" [];
	"pydantic._internal._fields" -> "pydantic_core" [];
	"pydantic._internal._fields" -> "typing_extensions" [];
	"pydantic._internal._fields" -> "typing_inspection" [];
	"pydantic._internal._fields" -> "pydantic" [];
	"pydantic._internal._fields" -> "annotated_types" [];
	"pydantic._internal._docs_extraction" -> "__future__" [];
	"pydantic._internal._docs_extraction" -> "ast" [];
	"pydantic._internal._docs_extraction" -> "inspect" [];
	"pydantic._internal._docs_extraction" -> "textwrap" [];
	"pydantic._internal._docs_extraction" -> "typing" [];
	"pydantic._internal._known_annotated_metadata" -> "__future__" [];
	"pydantic._internal._known_annotated_metadata" -> "collections" [];
	"pydantic._internal._known_annotated_metadata" -> "copy" [];
	"pydantic._internal._known_annotated_metadata" -> "decimal" [];
	"pydantic._internal._known_annotated_metadata" -> "functools" [];
	"pydantic._internal._known_annotated_metadata" -> "typing" [];
	"pydantic._internal._known_annotated_metadata" -> "pydantic_core" [];
	"pydantic._internal._known_annotated_metadata" -> "annotated_types" [];
	"pydantic._internal._discriminated_union" -> "__future__" [];
	"pydantic._internal._discriminated_union" -> "typing" [];
	"pydantic._internal._discriminated_union" -> "pydantic_core" [];
	"pydantic.functional_validators" -> "__future__" [];
	"pydantic.functional_validators" -> "dataclasses" [];
	"pydantic.functional_validators" -> "sys" [];
	"pydantic.functional_validators" -> "functools" [];
	"pydantic.functional_validators" -> "types" [];
	"pydantic.functional_validators" -> "typing" [];
	"pydantic.functional_validators" -> "pydantic_core" [];
	"pydantic.functional_validators" -> "typing_extensions" [];
	"pydantic.aliases" -> "__future__" [];
	"pydantic.aliases" -> "dataclasses" [];
	"pydantic.aliases" -> "typing" [];
	"pydantic.aliases" -> "pydantic_core" [];
	"zoneinfo" -> "_zoneinfo" [];
	"zoneinfo._zoneinfo" -> "bisect" [];
	"zoneinfo._zoneinfo" -> "calendar" [];
	"zoneinfo._zoneinfo" -> "collections" [];
	"zoneinfo._zoneinfo" -> "functools" [];
	"zoneinfo._zoneinfo" -> "re" [];
	"zoneinfo._zoneinfo" -> "weakref" [];
	"zoneinfo._zoneinfo" -> "datetime" [];
	"zoneinfo._zoneinfo" -> "pickle" [];
	"zoneinfo._common" -> "struct" [];
	"zoneinfo._tzpath" -> "os" [];
	"zoneinfo._tzpath" -> "sysconfig" [];
	"zoneinfo._tzpath" -> "warnings" [];
	"zoneinfo._tzpath" -> "importlib" [];
	"pydantic.root_model" -> "__future__" [];
	"pydantic.root_model" -> "typing" [];
	"pydantic.root_model" -> "copy" [];
	"pydantic.root_model" -> "pydantic_core" [];
	"pydantic.root_model" -> "typing_extensions" [];
	"pydantic._internal._model_construction" -> "__future__" [];
	"pydantic._internal._model_construction" -> "builtins" [];
	"pydantic._internal._model_construction" -> "operator" [];
	"pydantic._internal._model_construction" -> "sys" [];
	"pydantic._internal._model_construction" -> "typing" [];
	"pydantic._internal._model_construction" -> "warnings" [];
	"pydantic._internal._model_construction" -> "weakref" [];
	"pydantic._internal._model_construction" -> "abc" [];
	"pydantic._internal._model_construction" -> "functools" [];
	"pydantic._internal._model_construction" -> "types" [];
	"pydantic._internal._model_construction" -> "pydantic_core" [];
	"pydantic._internal._model_construction" -> "typing_extensions" [];
	"pydantic._internal._model_construction" -> "typing_inspection" [];
	"pydantic._internal._signature" -> "__future__" [];
	"pydantic._internal._signature" -> "dataclasses" [];
	"pydantic._internal._signature" -> "inspect" [];
	"pydantic._internal._signature" -> "typing" [];
	"pydantic._internal._signature" -> "pydantic_core" [];
	"pydantic._internal._signature" -> "itertools" [];
	"pydantic.main" -> "__future__" [];
	"pydantic.main" -> "operator" [];
	"pydantic.main" -> "sys" [];
	"pydantic.main" -> "types" [];
	"pydantic.main" -> "typing" [];
	"pydantic.main" -> "warnings" [];
	"pydantic.main" -> "copy" [];
	"pydantic.main" -> "functools" [];
	"pydantic.main" -> "pydantic_core" [];
	"pydantic.main" -> "typing_extensions" [];
	"pydantic.main" -> "inspect" [];
	"pydantic.main" -> "pathlib" [];
	"pydantic.main" -> "json" [];
	"pydantic.deprecated.json" -> "datetime" [];
	"pydantic.deprecated.json" -> "warnings" [];
	"pydantic.deprecated.json" -> "collections" [];
	"pydantic.deprecated.json" -> "decimal" [];
	"pydantic.deprecated.json" -> "enum" [];
	"pydantic.deprecated.json" -> "ipaddress" [];
	"pydantic.deprecated.json" -> "pathlib" [];
	"pydantic.deprecated.json" -> "re" [];
	"pydantic.deprecated.json" -> "types" [];
	"pydantic.deprecated.json" -> "typing" [];
	"pydantic.deprecated.json" -> "uuid" [];
	"pydantic.deprecated.json" -> "typing_extensions" [];
	"pydantic.deprecated.json" -> "dataclasses" [];
	"pydantic.networks" -> "__future__" [];
	"pydantic.networks" -> "dataclasses" [];
	"pydantic.networks" -> "re" [];
	"pydantic.networks" -> "functools" [];
	"pydantic.networks" -> "ipaddress" [];
	"pydantic.networks" -> "typing" [];
	"pydantic.networks" -> "pydantic_core" [];
	"pydantic.networks" -> "typing_extensions" [];
	"pydantic.networks" -> "email_validator" [];
	"pydantic.color" -> "math" [];
	"pydantic.color" -> "re" [];
	"pydantic.color" -> "colorsys" [];
	"pydantic.color" -> "typing" [];
	"pydantic.color" -> "pydantic_core" [];
	"pydantic.color" -> "typing_extensions" [];
	"pydantic.deprecated.copy_internals" -> "__future__" [];
	"pydantic.deprecated.copy_internals" -> "typing" [];
	"pydantic.deprecated.copy_internals" -> "copy" [];
	"pydantic.deprecated.copy_internals" -> "enum" [];
	"pydantic.deprecated.copy_internals" -> "typing_extensions" [];
	"pydantic.deprecated.copy_internals" -> "pydantic" [];
	"pydantic.deprecated.parse" -> "__future__" [];
	"pydantic.deprecated.parse" -> "json" [];
	"pydantic.deprecated.parse" -> "pickle" [];
	"pydantic.deprecated.parse" -> "warnings" [];
	"pydantic.deprecated.parse" -> "enum" [];
	"pydantic.deprecated.parse" -> "pathlib" [];
	"pydantic.deprecated.parse" -> "typing" [];
	"pydantic.deprecated.parse" -> "typing_extensions" [];
	"pydantic._internal._dataclasses" -> "__future__" [];
	"pydantic._internal._dataclasses" -> "dataclasses" [];
	"pydantic._internal._dataclasses" -> "typing" [];
	"pydantic._internal._dataclasses" -> "warnings" [];
	"pydantic._internal._dataclasses" -> "functools" [];
	"pydantic._internal._dataclasses" -> "pydantic_core" [];
	"pydantic._internal._dataclasses" -> "typing_extensions" [];
	"pydantic._internal._dataclasses" -> "_typeshed" [];
	"pydantic.errors" -> "__future__" [];
	"pydantic.errors" -> "re" [];
	"pydantic.errors" -> "typing" [];
	"pydantic.errors" -> "typing_extensions" [];
	"pydantic.config" -> "__future__" [];
	"pydantic.config" -> "warnings" [];
	"pydantic.config" -> "re" [];
	"pydantic.config" -> "typing" [];
	"pydantic.config" -> "typing_extensions" [];
	"pydantic.annotated_handlers" -> "__future__" [];
	"pydantic.annotated_handlers" -> "typing" [];
	"pydantic.annotated_handlers" -> "pydantic_core" [];
	"pydantic._internal._schema_generation_shared" -> "__future__" [];
	"pydantic._internal._schema_generation_shared" -> "typing" [];
	"pydantic._internal._schema_generation_shared" -> "pydantic_core" [];
	"pydantic._internal._mock_val_ser" -> "__future__" [];
	"pydantic._internal._mock_val_ser" -> "typing" [];
	"pydantic._internal._mock_val_ser" -> "pydantic_core" [];
	"pydantic._internal._internal_dataclass" -> "sys" [];
	"pydantic._internal._decorators" -> "__future__" [];
	"pydantic._internal._decorators" -> "types" [];
	"pydantic._internal._decorators" -> "collections" [];
	"pydantic._internal._decorators" -> "dataclasses" [];
	"pydantic._internal._decorators" -> "functools" [];
	"pydantic._internal._decorators" -> "inspect" [];
	"pydantic._internal._decorators" -> "itertools" [];
	"pydantic._internal._decorators" -> "typing" [];
	"pydantic._internal._decorators" -> "pydantic_core" [];
	"pydantic._internal._decorators" -> "typing_extensions" [];
	"pydantic._internal._core_utils" -> "__future__" [];
	"pydantic._internal._core_utils" -> "inspect" [];
	"pydantic._internal._core_utils" -> "os" [];
	"pydantic._internal._core_utils" -> "typing" [];
	"pydantic._internal._core_utils" -> "pydantic_core" [];
	"pydantic._internal._core_utils" -> "typing_extensions" [];
	"pydantic._internal._core_utils" -> "typing_inspection" [];
	"pydantic._internal._core_utils" -> "rich" [];
	"pydantic._internal._core_utils" -> "'rich.pretty'" [];
	"pydantic._internal._core_utils" -> "pydantic" [];
	"pydantic._internal._core_metadata" -> "__future__" [];
	"pydantic._internal._core_metadata" -> "typing" [];
	"pydantic._internal._core_metadata" -> "warnings" [];
	"pydantic._internal._config" -> "__future__" [];
	"pydantic._internal._config" -> "warnings" [];
	"pydantic._internal._config" -> "contextlib" [];
	"pydantic._internal._config" -> "re" [];
	"pydantic._internal._config" -> "typing" [];
	"pydantic._internal._config" -> "pydantic_core" [];
	"pydantic._internal._config" -> "typing_extensions" [];
	"pydantic._internal._decorators_v1" -> "__future__" [];
	"pydantic._internal._decorators_v1" -> "inspect" [];
	"pydantic._internal._decorators_v1" -> "typing" [];
	"pydantic._internal._decorators_v1" -> "pydantic_core" [];
	"pydantic._internal._decorators_v1" -> "typing_extensions" [];
	"pydantic._internal._validate_call" -> "__future__" [];
	"pydantic._internal._validate_call" -> "functools" [];
	"pydantic._internal._validate_call" -> "inspect" [];
	"pydantic._internal._validate_call" -> "typing" [];
	"pydantic._internal._validate_call" -> "pydantic_core" [];
	"pydantic.warnings" -> "__future__" [];
	"typing_inspection.introspection" -> "__future__" [];
	"typing_inspection.introspection" -> "sys" [];
	"typing_inspection.introspection" -> "types" [];
	"typing_inspection.introspection" -> "dataclasses" [];
	"typing_inspection.introspection" -> "enum" [];
	"typing_inspection.introspection" -> "typing" [];
	"typing_inspection.introspection" -> "typing_extensions" [];
	"pydantic.fields" -> "__future__" [];
	"pydantic.fields" -> "dataclasses" [];
	"pydantic.fields" -> "inspect" [];
	"pydantic.fields" -> "sys" [];
	"pydantic.fields" -> "typing" [];
	"pydantic.fields" -> "copy" [];
	"pydantic.fields" -> "functools" [];
	"pydantic.fields" -> "warnings" [];
	"pydantic.fields" -> "annotated_types" [];
	"pydantic.fields" -> "typing_extensions" [];
	"pydantic.fields" -> "pydantic_core" [];
	"pydantic.fields" -> "typing_inspection" [];
	"pydantic" -> "typing" [];
	"pydantic" -> "importlib" [];
	"pydantic" -> "warnings" [];
	"pydantic" -> "pydantic_core" [];
	"pydantic.v1.mypy" -> "sys" [];
	"pydantic.v1.mypy" -> "configparser" [];
	"pydantic.v1.mypy" -> "typing" [];
	"pydantic.v1.mypy" -> "'mypy.errorcodes'" [];
	"pydantic.v1.mypy" -> "'mypy.nodes'" [];
	"pydantic.v1.mypy" -> "'mypy.options'" [];
	"pydantic.v1.mypy" -> "'mypy.plugin'" [];
	"pydantic.v1.mypy" -> "'mypy.plugins'" [];
	"pydantic.v1.mypy" -> "'mypy.semanal'" [];
	"pydantic.v1.mypy" -> "'mypy.server'" [];
	"pydantic.v1.mypy" -> "'mypy.types'" [];
	"pydantic.v1.mypy" -> "'mypy.typevars'" [];
	"pydantic.v1.mypy" -> "'mypy.util'" [];
	"pydantic.v1.mypy" -> "'mypy.version'" [];
	"pydantic.v1.mypy" -> "tomllib" [];
	"pydantic.v1.mypy" -> "tomli" [];
	"pydantic.v1.mypy" -> "toml" [];
	"pydantic.v1.mypy" -> "warnings" [];
	"pydantic.v1.generics" -> "sys" [];
	"pydantic.v1.generics" -> "types" [];
	"pydantic.v1.generics" -> "typing" [];
	"pydantic.v1.generics" -> "weakref" [];
	"pydantic.v1.generics" -> "typing_extensions" [];
	"pydantic.v1._hypothesis_plugin" -> "contextlib" [];
	"pydantic.v1._hypothesis_plugin" -> "datetime" [];
	"pydantic.v1._hypothesis_plugin" -> "ipaddress" [];
	"pydantic.v1._hypothesis_plugin" -> "json" [];
	"pydantic.v1._hypothesis_plugin" -> "math" [];
	"pydantic.v1._hypothesis_plugin" -> "fractions" [];
	"pydantic.v1._hypothesis_plugin" -> "typing" [];
	"pydantic.v1._hypothesis_plugin" -> "hypothesis" [];
	"pydantic.v1._hypothesis_plugin" -> "pydantic" [];
	"pydantic.v1._hypothesis_plugin" -> "email_validator" [];
	"pydantic.mypy" -> "__future__" [];
	"pydantic.mypy" -> "sys" [];
	"pydantic.mypy" -> "configparser" [];
	"pydantic.mypy" -> "typing" [];
	"pydantic.mypy" -> "mypy" [];
	"pydantic.mypy" -> "'mypy.expandtype'" [];
	"pydantic.mypy" -> "'mypy.nodes'" [];
	"pydantic.mypy" -> "'mypy.options'" [];
	"pydantic.mypy" -> "'mypy.plugin'" [];
	"pydantic.mypy" -> "'mypy.plugins'" [];
	"pydantic.mypy" -> "'mypy.semanal'" [];
	"pydantic.mypy" -> "'mypy.server'" [];
	"pydantic.mypy" -> "'mypy.state'" [];
	"pydantic.mypy" -> "'mypy.type_visitor'" [];
	"pydantic.mypy" -> "'mypy.typeops'" [];
	"pydantic.mypy" -> "'mypy.types'" [];
	"pydantic.mypy" -> "'mypy.typevars'" [];
	"pydantic.mypy" -> "'mypy.util'" [];
	"pydantic.mypy" -> "'mypy.version'" [];
	"pydantic.mypy" -> "tomllib" [];
	"pydantic.mypy" -> "tomli" [];
	"pydantic.mypy" -> "warnings" [];
	"pydantic.experimental.pipeline" -> "__future__" [];
	"pydantic.experimental.pipeline" -> "datetime" [];
	"pydantic.experimental.pipeline" -> "operator" [];
	"pydantic.experimental.pipeline" -> "re" [];
	"pydantic.experimental.pipeline" -> "sys" [];
	"pydantic.experimental.pipeline" -> "collections" [];
	"pydantic.experimental.pipeline" -> "dataclasses" [];
	"pydantic.experimental.pipeline" -> "decimal" [];
	"pydantic.experimental.pipeline" -> "functools" [];
	"pydantic.experimental.pipeline" -> "typing" [];
	"pydantic.experimental.pipeline" -> "annotated_types" [];
	"pydantic.experimental.pipeline" -> "pydantic_core" [];
	"pydantic.experimental.pipeline" -> "pydantic" [];
	"pydantic.experimental.pipeline" -> "types" [];
	"pydantic.experimental.pipeline" -> "inspect" [];
	"pydantic.experimental.arguments_schema" -> "__future__" [];
	"pydantic.experimental.arguments_schema" -> "typing" [];
	"pydantic.experimental.arguments_schema" -> "pydantic_core" [];
	"pydantic.experimental.arguments_schema" -> "pydantic" [];
	"pydantic.experimental" -> "warnings" [];
	"pydantic.deprecated.decorator" -> "warnings" [];
	"pydantic.deprecated.decorator" -> "functools" [];
	"pydantic.deprecated.decorator" -> "typing" [];
	"pydantic.deprecated.decorator" -> "typing_extensions" [];
	"pydantic.deprecated.decorator" -> "inspect" [];
	"pydantic.alias_generators" -> "re" [];
	"pydantic.deprecated.tools" -> "__future__" [];
	"pydantic.deprecated.tools" -> "json" [];
	"pydantic.deprecated.tools" -> "warnings" [];
	"pydantic.deprecated.tools" -> "typing" [];
	"pydantic.deprecated.tools" -> "typing_extensions" [];
	"pydantic.deprecated.config" -> "__future__" [];
	"pydantic.deprecated.config" -> "warnings" [];
	"pydantic.deprecated.config" -> "typing" [];
	"pydantic.deprecated.config" -> "typing_extensions" [];
	"pydantic.deprecated.class_validators" -> "__future__" [];
	"pydantic.deprecated.class_validators" -> "functools" [];
	"pydantic.deprecated.class_validators" -> "types" [];
	"pydantic.deprecated.class_validators" -> "typing" [];
	"pydantic.deprecated.class_validators" -> "warnings" [];
	"pydantic.deprecated.class_validators" -> "typing_extensions" [];
	"pydantic.validate_call_decorator" -> "__future__" [];
	"pydantic.validate_call_decorator" -> "inspect" [];
	"pydantic.validate_call_decorator" -> "functools" [];
	"pydantic.validate_call_decorator" -> "types" [];
	"pydantic.validate_call_decorator" -> "typing" [];
	"pydantic.functional_serializers" -> "__future__" [];
	"pydantic.functional_serializers" -> "dataclasses" [];
	"pydantic.functional_serializers" -> "functools" [];
	"pydantic.functional_serializers" -> "typing" [];
	"pydantic.functional_serializers" -> "pydantic_core" [];
	"pydantic.functional_serializers" -> "typing_extensions" [];
	"langchain_core._api.internal" -> "inspect" [];
	"langchain_core._api.beta_decorator" -> "contextlib" [];
	"langchain_core._api.beta_decorator" -> "functools" [];
	"langchain_core._api.beta_decorator" -> "inspect" [];
	"langchain_core._api.beta_decorator" -> "warnings" [];
	"langchain_core._api.beta_decorator" -> "typing" [];
	"langchain_core._import_utils" -> "importlib" [];
	"langchain_core._import_utils" -> "typing" [];
	"langchain" -> "warnings" [];
	"langchain" -> "importlib" [];
	"langchain" -> "typing" [];
	"langchain.globals" -> "warnings" [];
	"langchain.globals" -> "typing" [];
	"langchain_core.caches" -> "__future__" [];
	"langchain_core.caches" -> "abc" [];
	"langchain_core.caches" -> "typing" [];
	"langchain_core.caches" -> "typing_extensions" [];
	"langchain_core.runnables" -> "typing" [];
	"langchain_core.runnables.utils" -> "__future__" [];
	"langchain_core.runnables.utils" -> "ast" [];
	"langchain_core.runnables.utils" -> "asyncio" [];
	"langchain_core.runnables.utils" -> "inspect" [];
	"langchain_core.runnables.utils" -> "textwrap" [];
	"langchain_core.runnables.utils" -> "contextvars" [];
	"langchain_core.runnables.utils" -> "functools" [];
	"langchain_core.runnables.utils" -> "itertools" [];
	"langchain_core.runnables.utils" -> "typing" [];
	"langchain_core.runnables.utils" -> "typing_extensions" [];
	"langchain_core.runnables.schema" -> "__future__" [];
	"langchain_core.runnables.schema" -> "typing" [];
	"langchain_core.runnables.schema" -> "typing_extensions" [];
	"langchain_core.runnables.router" -> "__future__" [];
	"langchain_core.runnables.router" -> "itertools" [];
	"langchain_core.runnables.router" -> "typing" [];
	"langchain_core.runnables.router" -> "pydantic" [];
	"langchain_core.runnables.router" -> "typing_extensions" [];
	"langchain_core.runnables.passthrough" -> "__future__" [];
	"langchain_core.runnables.passthrough" -> "asyncio" [];
	"langchain_core.runnables.passthrough" -> "inspect" [];
	"langchain_core.runnables.passthrough" -> "threading" [];
	"langchain_core.runnables.passthrough" -> "typing" [];
	"langchain_core.runnables.passthrough" -> "pydantic" [];
	"langchain_core.runnables.passthrough" -> "typing_extensions" [];
	"langchain_core.runnables.graph" -> "__future__" [];
	"langchain_core.runnables.graph" -> "inspect" [];
	"langchain_core.runnables.graph" -> "collections" [];
	"langchain_core.runnables.graph" -> "dataclasses" [];
	"langchain_core.runnables.graph" -> "enum" [];
	"langchain_core.runnables.graph" -> "typing" [];
	"langchain_core.runnables.graph" -> "uuid" [];
	"langchain_core.runnables.graph" -> "pydantic" [];
	"langchain_core.runnables.graph_mermaid" -> "asyncio" [];
	"langchain_core.runnables.graph_mermaid" -> "base64" [];
	"langchain_core.runnables.graph_mermaid" -> "random" [];
	"langchain_core.runnables.graph_mermaid" -> "re" [];
	"langchain_core.runnables.graph_mermaid" -> "time" [];
	"langchain_core.runnables.graph_mermaid" -> "dataclasses" [];
	"langchain_core.runnables.graph_mermaid" -> "pathlib" [];
	"langchain_core.runnables.graph_mermaid" -> "typing" [];
	"langchain_core.runnables.graph_mermaid" -> "yaml" [];
	"langchain_core.runnables.graph_mermaid" -> "pyppeteer" [];
	"langchain_core.runnables.graph_mermaid" -> "requests" [];
	"langchain_core.runnables.graph_png" -> "typing" [];
	"langchain_core.runnables.graph_png" -> "pygraphviz" [];
	"langchain_core.runnables.graph_ascii" -> "math" [];
	"langchain_core.runnables.graph_ascii" -> "os" [];
	"langchain_core.runnables.graph_ascii" -> "typing" [];
	"langchain_core.runnables.graph_ascii" -> "grandalf" [];
	"langchain_core.runnables.graph_ascii" -> "'grandalf.layouts'" [];
	"langchain_core.runnables.graph_ascii" -> "'grandalf.routing'" [];
	"langchain_core.load.serializable" -> "contextlib" [];
	"langchain_core.load.serializable" -> "logging" [];
	"langchain_core.load.serializable" -> "abc" [];
	"langchain_core.load.serializable" -> "typing" [];
	"langchain_core.load.serializable" -> "pydantic" [];
	"langchain_core.load.serializable" -> "typing_extensions" [];
	"langchain_core.load" -> "typing" [];
	"langchain_core.load.dump" -> "json" [];
	"langchain_core.load.dump" -> "typing" [];
	"langchain_core.load.dump" -> "pydantic" [];
	"langchain_core.messages" -> "typing" [];
	"langchain_core.messages.utils" -> "__future__" [];
	"langchain_core.messages.utils" -> "base64" [];
	"langchain_core.messages.utils" -> "inspect" [];
	"langchain_core.messages.utils" -> "json" [];
	"langchain_core.messages.utils" -> "logging" [];
	"langchain_core.messages.utils" -> "math" [];
	"langchain_core.messages.utils" -> "functools" [];
	"langchain_core.messages.utils" -> "typing" [];
	"langchain_core.messages.utils" -> "pydantic" [];
	"langchain_core.messages.utils" -> "langchain_text_splitters" [];
	"langchain_core.prompt_values" -> "__future__" [];
	"langchain_core.prompt_values" -> "abc" [];
	"langchain_core.prompt_values" -> "typing" [];
	"langchain_core.prompt_values" -> "typing_extensions" [];
	"langchain_core.language_models" -> "typing" [];
	"langchain_core.language_models.llms" -> "__future__" [];
	"langchain_core.language_models.llms" -> "asyncio" [];
	"langchain_core.language_models.llms" -> "functools" [];
	"langchain_core.language_models.llms" -> "inspect" [];
	"langchain_core.language_models.llms" -> "json" [];
	"langchain_core.language_models.llms" -> "logging" [];
	"langchain_core.language_models.llms" -> "warnings" [];
	"langchain_core.language_models.llms" -> "abc" [];
	"langchain_core.language_models.llms" -> "pathlib" [];
	"langchain_core.language_models.llms" -> "typing" [];
	"langchain_core.language_models.llms" -> "yaml" [];
	"langchain_core.language_models.llms" -> "pydantic" [];
	"langchain_core.language_models.llms" -> "tenacity" [];
	"langchain_core.language_models.llms" -> "typing_extensions" [];
	"langchain_core.language_models.llms" -> "uuid" [];
	"langchain_core.globals" -> "warnings" [];
	"langchain_core.globals" -> "typing" [];
	"langchain_core.globals" -> "langchain" [];
	"langchain_core.callbacks" -> "typing" [];
	"langchain_core.callbacks.usage" -> "threading" [];
	"langchain_core.callbacks.usage" -> "contextlib" [];
	"langchain_core.callbacks.usage" -> "contextvars" [];
	"langchain_core.callbacks.usage" -> "typing" [];
	"langchain_core.callbacks.usage" -> "typing_extensions" [];
	"langchain_core.tracers.context" -> "__future__" [];
	"langchain_core.tracers.context" -> "contextlib" [];
	"langchain_core.tracers.context" -> "contextvars" [];
	"langchain_core.tracers.context" -> "typing" [];
	"langchain_core.tracers.context" -> "uuid" [];
	"langchain_core.tracers.context" -> "langsmith" [];
	"langchain_core.tracers" -> "typing" [];
	"langchain_core.tracers.stdout" -> "json" [];
	"langchain_core.tracers.stdout" -> "typing" [];
	"langchain_core.tracers.log_stream" -> "__future__" [];
	"langchain_core.tracers.log_stream" -> "asyncio" [];
	"langchain_core.tracers.log_stream" -> "contextlib" [];
	"langchain_core.tracers.log_stream" -> "copy" [];
	"langchain_core.tracers.log_stream" -> "threading" [];
	"langchain_core.tracers.log_stream" -> "collections" [];
	"langchain_core.tracers.log_stream" -> "typing" [];
	"langchain_core.tracers.log_stream" -> "jsonpatch" [];
	"langchain_core.tracers.log_stream" -> "typing_extensions" [];
	"langchain_core.tracers.log_stream" -> "uuid" [];
	"langchain_core.tracers.log_stream" -> "pprint" [];
	"langchain_core.tracers.memory_stream" -> "asyncio" [];
	"langchain_core.tracers.memory_stream" -> "typing" [];
	"langchain_core.tracers._streaming" -> "abc" [];
	"langchain_core.tracers._streaming" -> "typing" [];
	"langchain_core.tracers._streaming" -> "uuid" [];
	"jsonpatch" -> "__future__" [];
	"jsonpatch" -> "collections" [];
	"jsonpatch" -> "copy" [];
	"jsonpatch" -> "functools" [];
	"jsonpatch" -> "json" [];
	"jsonpatch" -> "sys" [];
	"jsonpatch" -> "types" [];
	"jsonpatch" -> "jsonpointer" [];
	"jsonpointer" -> "copy" [];
	"jsonpointer" -> "re" [];
	"jsonpointer" -> "itertools" [];
	"langchain_core.tracers.evaluation" -> "__future__" [];
	"langchain_core.tracers.evaluation" -> "logging" [];
	"langchain_core.tracers.evaluation" -> "threading" [];
	"langchain_core.tracers.evaluation" -> "weakref" [];
	"langchain_core.tracers.evaluation" -> "typing" [];
	"langchain_core.tracers.evaluation" -> "uuid" [];
	"langchain_core.tracers.evaluation" -> "langsmith" [];
	"langsmith.evaluation.evaluator" -> "__future__" [];
	"langsmith.evaluation.evaluator" -> "asyncio" [];
	"langsmith.evaluation.evaluator" -> "inspect" [];
	"langsmith.evaluation.evaluator" -> "uuid" [];
	"langsmith.evaluation.evaluator" -> "abc" [];
	"langsmith.evaluation.evaluator" -> "typing" [];
	"langsmith.evaluation.evaluator" -> "typing_extensions" [];
	"langsmith.evaluation.evaluator" -> "langsmith" [];
	"langsmith.evaluation.evaluator" -> "pydantic" [];
	"langsmith.evaluation.evaluator" -> "logging" [];
	"langsmith.evaluation.evaluator" -> "functools" [];
	"langsmith.evaluation" -> "typing" [];
	"langsmith.evaluation.string_evaluator" -> "typing" [];
	"langsmith.evaluation.string_evaluator" -> "pydantic" [];
	"langsmith.evaluation.integrations._langchain" -> "__future__" [];
	"langsmith.evaluation.integrations._langchain" -> "typing" [];
	"langchain.evaluation.string_distance.base" -> "enum" [];
	"langchain.evaluation.string_distance.base" -> "typing" [];
	"langchain.evaluation.string_distance.base" -> "pydantic" [];
	"langchain.evaluation.string_distance.base" -> "rapidfuzz" [];
	"langchain.chains.base" -> "builtins" [];
	"langchain.chains.base" -> "inspect" [];
	"langchain.chains.base" -> "json" [];
	"langchain.chains.base" -> "logging" [];
	"langchain.chains.base" -> "warnings" [];
	"langchain.chains.base" -> "abc" [];
	"langchain.chains.base" -> "pathlib" [];
	"langchain.chains.base" -> "typing" [];
	"langchain.chains.base" -> "yaml" [];
	"langchain.chains.base" -> "pydantic" [];
	"langchain_core.memory" -> "__future__" [];
	"langchain_core.memory" -> "abc" [];
	"langchain_core.memory" -> "typing" [];
	"langchain_core.memory" -> "pydantic" [];
	"langchain.evaluation.scoring.eval_chain" -> "__future__" [];
	"langchain.evaluation.scoring.eval_chain" -> "logging" [];
	"langchain.evaluation.scoring.eval_chain" -> "re" [];
	"langchain.evaluation.scoring.eval_chain" -> "typing" [];
	"langchain.evaluation.scoring.eval_chain" -> "pydantic" [];
	"langchain_core.prompts.chat" -> "__future__" [];
	"langchain_core.prompts.chat" -> "abc" [];
	"langchain_core.prompts.chat" -> "pathlib" [];
	"langchain_core.prompts.chat" -> "typing" [];
	"langchain_core.prompts.chat" -> "pydantic" [];
	"langchain_core.prompts.chat" -> "typing_extensions" [];
	"langchain_core.utils.interactive_env" -> "sys" [];
	"langchain_core.prompts.string" -> "__future__" [];
	"langchain_core.prompts.string" -> "warnings" [];
	"langchain_core.prompts.string" -> "abc" [];
	"langchain_core.prompts.string" -> "string" [];
	"langchain_core.prompts.string" -> "typing" [];
	"langchain_core.prompts.string" -> "pydantic" [];
	"langchain_core.prompts.string" -> "'jinja2.sandbox'" [];
	"langchain_core.prompts.string" -> "jinja2" [];
	"langchain_core.prompts.message" -> "__future__" [];
	"langchain_core.prompts.message" -> "abc" [];
	"langchain_core.prompts.message" -> "typing" [];
	"langchain_core.prompts.image" -> "typing" [];
	"langchain_core.prompts.image" -> "pydantic" [];
	"langchain_core.prompts.dict" -> "warnings" [];
	"langchain_core.prompts.dict" -> "functools" [];
	"langchain_core.prompts.dict" -> "typing" [];
	"langchain_core.prompts.base" -> "__future__" [];
	"langchain_core.prompts.base" -> "contextlib" [];
	"langchain_core.prompts.base" -> "json" [];
	"langchain_core.prompts.base" -> "typing" [];
	"langchain_core.prompts.base" -> "abc" [];
	"langchain_core.prompts.base" -> "functools" [];
	"langchain_core.prompts.base" -> "pathlib" [];
	"langchain_core.prompts.base" -> "yaml" [];
	"langchain_core.prompts.base" -> "pydantic" [];
	"langchain_core.prompts.base" -> "typing_extensions" [];
	"langchain_core.output_parsers.base" -> "__future__" [];
	"langchain_core.output_parsers.base" -> "contextlib" [];
	"langchain_core.output_parsers.base" -> "abc" [];
	"langchain_core.output_parsers.base" -> "typing" [];
	"langchain_core.output_parsers.base" -> "typing_extensions" [];
	"langchain.evaluation.criteria.eval_chain" -> "__future__" [];
	"langchain.evaluation.criteria.eval_chain" -> "re" [];
	"langchain.evaluation.criteria.eval_chain" -> "enum" [];
	"langchain.evaluation.criteria.eval_chain" -> "typing" [];
	"langchain.evaluation.criteria.eval_chain" -> "pydantic" [];
	"langchain.chains.llm" -> "__future__" [];
	"langchain.chains.llm" -> "warnings" [];
	"langchain.chains.llm" -> "typing" [];
	"langchain.chains.llm" -> "pydantic" [];
	"langchain_core.runnables.configurable" -> "__future__" [];
	"langchain_core.runnables.configurable" -> "enum" [];
	"langchain_core.runnables.configurable" -> "threading" [];
	"langchain_core.runnables.configurable" -> "abc" [];
	"langchain_core.runnables.configurable" -> "functools" [];
	"langchain_core.runnables.configurable" -> "typing" [];
	"langchain_core.runnables.configurable" -> "weakref" [];
	"langchain_core.runnables.configurable" -> "pydantic" [];
	"langchain_core.runnables.configurable" -> "typing_extensions" [];
	"langchain.chains.constitutional_ai.models" -> "pydantic" [];
	"langchain_core.prompts.prompt" -> "__future__" [];
	"langchain_core.prompts.prompt" -> "warnings" [];
	"langchain_core.prompts.prompt" -> "pathlib" [];
	"langchain_core.prompts.prompt" -> "typing" [];
	"langchain_core.prompts.prompt" -> "pydantic" [];
	"langchain_core.prompts.prompt" -> "typing_extensions" [];
	"langchain.evaluation.regex_match.base" -> "re" [];
	"langchain.evaluation.regex_match.base" -> "typing" [];
	"langchain.evaluation.qa.generate_chain" -> "__future__" [];
	"langchain.evaluation.qa.generate_chain" -> "typing" [];
	"langchain.evaluation.qa.generate_chain" -> "pydantic" [];
	"langchain.output_parsers.regex" -> "__future__" [];
	"langchain.output_parsers.regex" -> "re" [];
	"langchain.output_parsers.regex" -> "typing" [];
	"langchain.output_parsers" -> "typing" [];
	"langchain_community.output_parsers.rail_parser" -> "__future__" [];
	"langchain_community.output_parsers.rail_parser" -> "typing" [];
	"langchain_community.output_parsers.rail_parser" -> "guardrails" [];
	"langchain.output_parsers.yaml" -> "json" [];
	"langchain.output_parsers.yaml" -> "re" [];
	"langchain.output_parsers.yaml" -> "typing" [];
	"langchain.output_parsers.yaml" -> "yaml" [];
	"langchain.output_parsers.yaml" -> "pydantic" [];
	"langchain.output_parsers.structured" -> "__future__" [];
	"langchain.output_parsers.structured" -> "typing" [];
	"langchain.output_parsers.structured" -> "pydantic" [];
	"langchain_core.output_parsers.json" -> "__future__" [];
	"langchain_core.output_parsers.json" -> "json" [];
	"langchain_core.output_parsers.json" -> "typing" [];
	"langchain_core.output_parsers.json" -> "jsonpatch" [];
	"langchain_core.output_parsers.json" -> "pydantic" [];
	"langchain_core.utils.json" -> "__future__" [];
	"langchain_core.utils.json" -> "json" [];
	"langchain_core.utils.json" -> "re" [];
	"langchain_core.utils.json" -> "typing" [];
	"langchain_core.output_parsers.transform" -> "__future__" [];
	"langchain_core.output_parsers.transform" -> "typing" [];
	"langchain_core.output_parsers.transform" -> "typing_extensions" [];
	"langchain.output_parsers.retry" -> "__future__" [];
	"langchain.output_parsers.retry" -> "typing" [];
	"langchain.output_parsers.retry" -> "pydantic" [];
	"langchain.output_parsers.retry" -> "typing_extensions" [];
	"langchain.output_parsers.regex_dict" -> "__future__" [];
	"langchain.output_parsers.regex_dict" -> "re" [];
	"langchain.output_parsers.regex_dict" -> "typing" [];
	"langchain.output_parsers.pandas_dataframe" -> "re" [];
	"langchain.output_parsers.pandas_dataframe" -> "typing" [];
	"langchain.output_parsers.pandas_dataframe" -> "pydantic" [];
	"langchain.output_parsers.pandas_dataframe" -> "pandas" [];
	"langchain.output_parsers.fix" -> "__future__" [];
	"langchain.output_parsers.fix" -> "typing" [];
	"langchain.output_parsers.fix" -> "pydantic" [];
	"langchain.output_parsers.fix" -> "typing_extensions" [];
	"langchain.output_parsers.enum" -> "enum" [];
	"langchain.output_parsers.datetime" -> "random" [];
	"langchain.output_parsers.datetime" -> "datetime" [];
	"langchain.output_parsers.combining" -> "__future__" [];
	"langchain.output_parsers.combining" -> "typing" [];
	"langchain.output_parsers.boolean" -> "re" [];
	"langchain._api.module_import" -> "importlib" [];
	"langchain._api.module_import" -> "typing" [];
	"langchain_core.output_parsers.openai_tools" -> "copy" [];
	"langchain_core.output_parsers.openai_tools" -> "json" [];
	"langchain_core.output_parsers.openai_tools" -> "logging" [];
	"langchain_core.output_parsers.openai_tools" -> "typing" [];
	"langchain_core.output_parsers.openai_tools" -> "pydantic" [];
	"langchain.evaluation.qa.eval_chain" -> "__future__" [];
	"langchain.evaluation.qa.eval_chain" -> "re" [];
	"langchain.evaluation.qa.eval_chain" -> "string" [];
	"langchain.evaluation.qa.eval_chain" -> "typing" [];
	"langchain.evaluation.qa.eval_chain" -> "pydantic" [];
	"langchain.evaluation.parsing.json_schema" -> "typing" [];
	"langchain.evaluation.parsing.json_schema" -> "jsonschema" [];
	"langchain.evaluation.parsing.json_distance" -> "json" [];
	"langchain.evaluation.parsing.json_distance" -> "typing" [];
	"langchain.evaluation.parsing.json_distance" -> "rapidfuzz" [];
	"langchain.evaluation.parsing.base" -> "json" [];
	"langchain.evaluation.parsing.base" -> "operator" [];
	"langchain.evaluation.parsing.base" -> "typing" [];
	"langchain.evaluation.loading" -> "typing" [];
	"langchain.evaluation.loading" -> "datasets" [];
	"langchain.evaluation.loading" -> "langchain_openai" [];
	"langchain_community.chat_models.openai" -> "__future__" [];
	"langchain_community.chat_models.openai" -> "logging" [];
	"langchain_community.chat_models.openai" -> "os" [];
	"langchain_community.chat_models.openai" -> "sys" [];
	"langchain_community.chat_models.openai" -> "warnings" [];
	"langchain_community.chat_models.openai" -> "typing" [];
	"langchain_community.chat_models.openai" -> "pydantic" [];
	"langchain_community.chat_models.openai" -> "tiktoken" [];
	"langchain_community.chat_models.openai" -> "openai" [];
	"langchain.chains.openai_functions.base" -> "typing" [];
	"langchain.chains.openai_functions.base" -> "pydantic" [];
	"langchain.chains.openai_functions.tagging" -> "typing" [];
	"langchain.chains.openai_functions.utils" -> "typing" [];
	"langchain.chains.openai_functions.qa_with_structure" -> "typing" [];
	"langchain.chains.openai_functions.qa_with_structure" -> "pydantic" [];
	"langchain.chains.openai_functions.extraction" -> "typing" [];
	"langchain.chains.openai_functions.extraction" -> "pydantic" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "pydantic" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "regex" [];
	"langchain.chains.structured_output.base" -> "json" [];
	"langchain.chains.structured_output.base" -> "typing" [];
	"langchain.chains.structured_output.base" -> "pydantic" [];
	"langchain_core.utils.function_calling" -> "__future__" [];
	"langchain_core.utils.function_calling" -> "collections" [];
	"langchain_core.utils.function_calling" -> "inspect" [];
	"langchain_core.utils.function_calling" -> "logging" [];
	"langchain_core.utils.function_calling" -> "types" [];
	"langchain_core.utils.function_calling" -> "typing" [];
	"langchain_core.utils.function_calling" -> "uuid" [];
	"langchain_core.utils.function_calling" -> "pydantic" [];
	"langchain_core.utils.function_calling" -> "typing_extensions" [];
	"langchain_core.tools.simple" -> "__future__" [];
	"langchain_core.tools.simple" -> "inspect" [];
	"langchain_core.tools.simple" -> "typing" [];
	"langchain_core.tools.simple" -> "typing_extensions" [];
	"langchain_core.tools.base" -> "__future__" [];
	"langchain_core.tools.base" -> "functools" [];
	"langchain_core.tools.base" -> "inspect" [];
	"langchain_core.tools.base" -> "json" [];
	"langchain_core.tools.base" -> "warnings" [];
	"langchain_core.tools.base" -> "abc" [];
	"langchain_core.tools.base" -> "typing" [];
	"langchain_core.tools.base" -> "pydantic" [];
	"langchain_core.tools.base" -> "typing_extensions" [];
	"langchain_core.tools.base" -> "uuid" [];
	"langchain_core.utils.json_schema" -> "__future__" [];
	"langchain_core.utils.json_schema" -> "copy" [];
	"langchain_core.utils.json_schema" -> "typing" [];
	"langchain_core.output_parsers.openai_functions" -> "copy" [];
	"langchain_core.output_parsers.openai_functions" -> "json" [];
	"langchain_core.output_parsers.openai_functions" -> "types" [];
	"langchain_core.output_parsers.openai_functions" -> "typing" [];
	"langchain_core.output_parsers.openai_functions" -> "jsonpatch" [];
	"langchain_core.output_parsers.openai_functions" -> "pydantic" [];
	"langchain_core.output_parsers.openai_functions" -> "typing_extensions" [];
	"langchain_community.utils.openai" -> "__future__" [];
	"langchain_community.utils.openai" -> "functools" [];
	"langchain_community.adapters.openai" -> "__future__" [];
	"langchain_community.adapters.openai" -> "importlib" [];
	"langchain_community.adapters.openai" -> "typing" [];
	"langchain_community.adapters.openai" -> "pydantic" [];
	"langchain_community.adapters.openai" -> "typing_extensions" [];
	"langchain_core.chat_sessions" -> "typing" [];
	"langchain_core.tools" -> "__future__" [];
	"langchain_core.tools" -> "typing" [];
	"langchain_core.tools.structured" -> "__future__" [];
	"langchain_core.tools.structured" -> "textwrap" [];
	"langchain_core.tools.structured" -> "inspect" [];
	"langchain_core.tools.structured" -> "typing" [];
	"langchain_core.tools.structured" -> "pydantic" [];
	"langchain_core.tools.structured" -> "typing_extensions" [];
	"langchain_core.tools.retriever" -> "__future__" [];
	"langchain_core.tools.retriever" -> "functools" [];
	"langchain_core.tools.retriever" -> "typing" [];
	"langchain_core.tools.retriever" -> "pydantic" [];
	"langchain_core.retrievers" -> "__future__" [];
	"langchain_core.retrievers" -> "warnings" [];
	"langchain_core.retrievers" -> "abc" [];
	"langchain_core.retrievers" -> "inspect" [];
	"langchain_core.retrievers" -> "typing" [];
	"langchain_core.retrievers" -> "pydantic" [];
	"langchain_core.retrievers" -> "typing_extensions" [];
	"langchain_core.tools.render" -> "__future__" [];
	"langchain_core.tools.render" -> "inspect" [];
	"langchain_core.tools.render" -> "typing" [];
	"langchain_core.tools.convert" -> "inspect" [];
	"langchain_core.tools.convert" -> "typing" [];
	"langchain_core.tools.convert" -> "pydantic" [];
	"langchain.evaluation.embedding_distance.base" -> "functools" [];
	"langchain.evaluation.embedding_distance.base" -> "logging" [];
	"langchain.evaluation.embedding_distance.base" -> "enum" [];
	"langchain.evaluation.embedding_distance.base" -> "importlib" [];
	"langchain.evaluation.embedding_distance.base" -> "typing" [];
	"langchain.evaluation.embedding_distance.base" -> "pydantic" [];
	"langchain.evaluation.embedding_distance.base" -> "numpy" [];
	"langchain.evaluation.embedding_distance.base" -> "langchain_openai" [];
	"langchain.evaluation.embedding_distance.base" -> "tiktoken" [];
	"langchain_community.utils.math" -> "logging" [];
	"langchain_community.utils.math" -> "typing" [];
	"langchain_community.utils.math" -> "numpy" [];
	"langchain_community.utils.math" -> "simsimd" [];
	"langchain_community.embeddings.openai" -> "__future__" [];
	"langchain_community.embeddings.openai" -> "logging" [];
	"langchain_community.embeddings.openai" -> "os" [];
	"langchain_community.embeddings.openai" -> "warnings" [];
	"langchain_community.embeddings.openai" -> "typing" [];
	"langchain_community.embeddings.openai" -> "numpy" [];
	"langchain_community.embeddings.openai" -> "pydantic" [];
	"langchain_community.embeddings.openai" -> "tenacity" [];
	"langchain_community.embeddings.openai" -> "openai" [];
	"langchain_community.embeddings.openai" -> "transformers" [];
	"langchain_community.embeddings.openai" -> "tiktoken" [];
	"langchain_core.embeddings" -> "typing" [];
	"langchain_core.embeddings.fake" -> "hashlib" [];
	"langchain_core.embeddings.fake" -> "pydantic" [];
	"langchain_core.embeddings.fake" -> "typing_extensions" [];
	"langchain_core.embeddings.fake" -> "numpy" [];
	"langchain_core.embeddings.embeddings" -> "abc" [];
	"langchain.evaluation.comparison.eval_chain" -> "__future__" [];
	"langchain.evaluation.comparison.eval_chain" -> "logging" [];
	"langchain.evaluation.comparison.eval_chain" -> "re" [];
	"langchain.evaluation.comparison.eval_chain" -> "typing" [];
	"langchain.evaluation.comparison.eval_chain" -> "pydantic" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "re" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "typing" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "pydantic" [];
	"langchain_core.agents" -> "__future__" [];
	"langchain_core.agents" -> "json" [];
	"langchain_core.agents" -> "typing" [];
	"langchain.evaluation.exact_match.base" -> "string" [];
	"langchain.evaluation.exact_match.base" -> "typing" [];
	"langchain.evaluation.schema" -> "__future__" [];
	"langchain.evaluation.schema" -> "logging" [];
	"langchain.evaluation.schema" -> "abc" [];
	"langchain.evaluation.schema" -> "enum" [];
	"langchain.evaluation.schema" -> "typing" [];
	"langchain.evaluation.schema" -> "warnings" [];
	"langsmith.evaluation._runner" -> "__future__" [];
	"langsmith.evaluation._runner" -> "ast" [];
	"langsmith.evaluation._runner" -> "collections" [];
	"langsmith.evaluation._runner" -> "datetime" [];
	"langsmith.evaluation._runner" -> "functools" [];
	"langsmith.evaluation._runner" -> "inspect" [];
	"langsmith.evaluation._runner" -> "itertools" [];
	"langsmith.evaluation._runner" -> "logging" [];
	"langsmith.evaluation._runner" -> "pathlib" [];
	"langsmith.evaluation._runner" -> "queue" [];
	"langsmith.evaluation._runner" -> "random" [];
	"langsmith.evaluation._runner" -> "textwrap" [];
	"langsmith.evaluation._runner" -> "threading" [];
	"langsmith.evaluation._runner" -> "uuid" [];
	"langsmith.evaluation._runner" -> "contextvars" [];
	"langsmith.evaluation._runner" -> "typing" [];
	"langsmith.evaluation._runner" -> "typing_extensions" [];
	"langsmith.evaluation._runner" -> "langsmith" [];
	"langsmith.evaluation._runner" -> "pandas" [];
	"langsmith.evaluation._name_generation" -> "random" [];
	"langsmith._internal._beta_decorator" -> "functools" [];
	"langsmith._internal._beta_decorator" -> "warnings" [];
	"langsmith._internal._beta_decorator" -> "typing" [];
	"langsmith._internal._orjson" -> "orjson" [];
	"langsmith._internal._orjson" -> "dataclasses" [];
	"langsmith._internal._orjson" -> "json" [];
	"langsmith._internal._orjson" -> "uuid" [];
	"langsmith._internal._orjson" -> "typing" [];
	"orjson" -> "uuid" [];
	"orjson" -> "zoneinfo" [];
	"orjson" -> "enum" [];
	"orjson" -> "json" [];
	"orjson" -> "dataclasses" [];
	"langsmith._internal._patch" -> "functools" [];
	"langsmith._internal._patch" -> "packaging" [];
	"langsmith._internal._aiter" -> "asyncio" [];
	"langsmith._internal._aiter" -> "contextvars" [];
	"langsmith._internal._aiter" -> "functools" [];
	"langsmith._internal._aiter" -> "inspect" [];
	"langsmith._internal._aiter" -> "collections" [];
	"langsmith._internal._aiter" -> "typing" [];
	"langsmith.run_trees" -> "__future__" [];
	"langsmith.run_trees" -> "json" [];
	"langsmith.run_trees" -> "logging" [];
	"langsmith.run_trees" -> "sys" [];
	"langsmith.run_trees" -> "datetime" [];
	"langsmith.run_trees" -> "typing" [];
	"langsmith.run_trees" -> "uuid" [];
	"langsmith.run_trees" -> "pydantic" [];
	"langsmith.run_trees" -> "threading" [];
	"langsmith.client" -> "__future__" [];
	"langsmith.client" -> "atexit" [];
	"langsmith.client" -> "collections" [];
	"langsmith.client" -> "contextlib" [];
	"langsmith.client" -> "datetime" [];
	"langsmith.client" -> "functools" [];
	"langsmith.client" -> "importlib" [];
	"langsmith.client" -> "io" [];
	"langsmith.client" -> "itertools" [];
	"langsmith.client" -> "json" [];
	"langsmith.client" -> "logging" [];
	"langsmith.client" -> "os" [];
	"langsmith.client" -> "random" [];
	"langsmith.client" -> "threading" [];
	"langsmith.client" -> "time" [];
	"langsmith.client" -> "traceback" [];
	"langsmith.client" -> "typing" [];
	"langsmith.client" -> "uuid" [];
	"langsmith.client" -> "warnings" [];
	"langsmith.client" -> "weakref" [];
	"langsmith.client" -> "inspect" [];
	"langsmith.client" -> "queue" [];
	"langsmith.client" -> "urllib" [];
	"langsmith.client" -> "requests" [];
	"langsmith.client" -> "requests_toolbelt" [];
	"langsmith.client" -> "typing_extensions" [];
	"langsmith.client" -> "zoneinfo" [];
	"langsmith.client" -> "pandas" [];
	"langsmith.client" -> "langsmith_pyo3" [];
	"langsmith.client" -> "langchain_openai" [];
	"langsmith.client" -> "langchain_anthropic" [];
	"langchain_core.prompts.structured" -> "typing" [];
	"langchain_core.prompts.structured" -> "pydantic" [];
	"langchain_core.prompts.structured" -> "typing_extensions" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "__future__" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "abc" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "typing" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "langsmith" [];
	"langchain.smith.evaluation.runner_utils" -> "__future__" [];
	"langchain.smith.evaluation.runner_utils" -> "dataclasses" [];
	"langchain.smith.evaluation.runner_utils" -> "functools" [];
	"langchain.smith.evaluation.runner_utils" -> "inspect" [];
	"langchain.smith.evaluation.runner_utils" -> "logging" [];
	"langchain.smith.evaluation.runner_utils" -> "uuid" [];
	"langchain.smith.evaluation.runner_utils" -> "datetime" [];
	"langchain.smith.evaluation.runner_utils" -> "typing" [];
	"langchain.smith.evaluation.runner_utils" -> "requests" [];
	"langchain.smith.evaluation.runner_utils" -> "typing_extensions" [];
	"langchain.smith.evaluation.runner_utils" -> "pandas" [];
	"langchain.smith.evaluation.runner_utils" -> "IPython" [];
	"langchain.smith.evaluation.runner_utils" -> "'IPython.display'" [];
	"langchain.smith.evaluation.progress" -> "threading" [];
	"langchain.smith.evaluation.progress" -> "typing" [];
	"langchain.smith.evaluation.progress" -> "uuid" [];
	"langchain.smith.evaluation.name_generation" -> "random" [];
	"langchain.smith.evaluation.config" -> "typing" [];
	"langchain.smith.evaluation.config" -> "langsmith" [];
	"langchain.smith.evaluation.config" -> "pydantic" [];
	"langsmith._internal._serde" -> "__future__" [];
	"langsmith._internal._serde" -> "base64" [];
	"langsmith._internal._serde" -> "collections" [];
	"langsmith._internal._serde" -> "datetime" [];
	"langsmith._internal._serde" -> "decimal" [];
	"langsmith._internal._serde" -> "ipaddress" [];
	"langsmith._internal._serde" -> "json" [];
	"langsmith._internal._serde" -> "logging" [];
	"langsmith._internal._serde" -> "pathlib" [];
	"langsmith._internal._serde" -> "re" [];
	"langsmith._internal._serde" -> "uuid" [];
	"langsmith._internal._serde" -> "typing" [];
	"langsmith._internal._serde" -> "zoneinfo" [];
	"langsmith._internal._operations" -> "__future__" [];
	"langsmith._internal._operations" -> "itertools" [];
	"langsmith._internal._operations" -> "logging" [];
	"langsmith._internal._operations" -> "uuid" [];
	"langsmith._internal._operations" -> "typing" [];
	"langsmith._internal._operations" -> "langsmith" [];
	"langsmith._internal._multipart" -> "__future__" [];
	"langsmith._internal._multipart" -> "typing" [];
	"langsmith._internal._background_thread" -> "__future__" [];
	"langsmith._internal._background_thread" -> "functools" [];
	"langsmith._internal._background_thread" -> "logging" [];
	"langsmith._internal._background_thread" -> "sys" [];
	"langsmith._internal._background_thread" -> "threading" [];
	"langsmith._internal._background_thread" -> "weakref" [];
	"langsmith._internal._background_thread" -> "queue" [];
	"langsmith._internal._background_thread" -> "typing" [];
	"langsmith._internal._background_thread" -> "langsmith" [];
	"requests_toolbelt.multipart.decoder" -> "sys" [];
	"requests_toolbelt.multipart.encoder" -> "contextlib" [];
	"requests_toolbelt.multipart.encoder" -> "io" [];
	"requests_toolbelt.multipart.encoder" -> "os" [];
	"requests_toolbelt.multipart.encoder" -> "uuid" [];
	"requests_toolbelt.multipart.encoder" -> "requests" [];
	"requests_toolbelt._compat" -> "sys" [];
	"requests_toolbelt._compat" -> "requests" [];
	"requests_toolbelt._compat" -> "'requests.packages.urllib3'" [];
	"requests_toolbelt._compat" -> "queue" [];
	"requests_toolbelt._compat" -> "collections" [];
	"requests_toolbelt._compat" -> "Queue" [];
	"requests_toolbelt._compat" -> "urllib" [];
	"requests_toolbelt._compat" -> "urlparse" [];
	"requests_toolbelt.utils.user_agent" -> "collections" [];
	"requests_toolbelt.utils.user_agent" -> "platform" [];
	"requests_toolbelt.utils.user_agent" -> "sys" [];
	"requests_toolbelt.auth.guess" -> "requests" [];
	"requests_toolbelt.auth.http_proxy_digest" -> "re" [];
	"requests_toolbelt.auth.http_proxy_digest" -> "requests" [];
	"requests_toolbelt.auth._digest_auth_compat" -> "requests" [];
	"requests_toolbelt.adapters.ssl" -> "requests" [];
	"langsmith.env._runtime_env" -> "functools" [];
	"langsmith.env._runtime_env" -> "logging" [];
	"langsmith.env._runtime_env" -> "os" [];
	"langsmith.env._runtime_env" -> "platform" [];
	"langsmith.env._runtime_env" -> "subprocess" [];
	"langsmith.env._runtime_env" -> "typing" [];
	"langsmith.env._runtime_env" -> "psutil" [];
	"langsmith.env._runtime_env" -> "langsmith" [];
	"langsmith.env._runtime_env" -> "langchain" [];
	"langsmith.env._runtime_env" -> "langchain_core" [];
	"langsmith.env._git" -> "functools" [];
	"langsmith.env._git" -> "logging" [];
	"langsmith.env._git" -> "subprocess" [];
	"langsmith.env._git" -> "typing" [];
	"langsmith.env._git" -> "typing_extensions" [];
	"langsmith.evaluation._arunner" -> "__future__" [];
	"langsmith.evaluation._arunner" -> "asyncio" [];
	"langsmith.evaluation._arunner" -> "datetime" [];
	"langsmith.evaluation._arunner" -> "logging" [];
	"langsmith.evaluation._arunner" -> "pathlib" [];
	"langsmith.evaluation._arunner" -> "uuid" [];
	"langsmith.evaluation._arunner" -> "typing" [];
	"langsmith.evaluation._arunner" -> "langsmith" [];
	"langsmith.evaluation._arunner" -> "pandas" [];
	"langsmith.schemas" -> "__future__" [];
	"langsmith.schemas" -> "datetime" [];
	"langsmith.schemas" -> "decimal" [];
	"langsmith.schemas" -> "enum" [];
	"langsmith.schemas" -> "typing" [];
	"langsmith.schemas" -> "uuid" [];
	"langsmith.schemas" -> "typing_extensions" [];
	"langsmith.schemas" -> "pydantic" [];
	"langchain_core.tracers.base" -> "__future__" [];
	"langchain_core.tracers.base" -> "asyncio" [];
	"langchain_core.tracers.base" -> "logging" [];
	"langchain_core.tracers.base" -> "abc" [];
	"langchain_core.tracers.base" -> "typing" [];
	"langchain_core.tracers.base" -> "typing_extensions" [];
	"langchain_core.tracers.base" -> "uuid" [];
	"langchain_core.tracers.base" -> "tenacity" [];
	"langchain_core.tracers.core" -> "__future__" [];
	"langchain_core.tracers.core" -> "logging" [];
	"langchain_core.tracers.core" -> "sys" [];
	"langchain_core.tracers.core" -> "traceback" [];
	"langchain_core.tracers.core" -> "abc" [];
	"langchain_core.tracers.core" -> "datetime" [];
	"langchain_core.tracers.core" -> "typing" [];
	"langchain_core.tracers.core" -> "uuid" [];
	"langchain_core.tracers.core" -> "tenacity" [];
	"langchain_core.tracers.schemas" -> "__future__" [];
	"langchain_core.tracers.schemas" -> "datetime" [];
	"langchain_core.tracers.schemas" -> "warnings" [];
	"langchain_core.tracers.schemas" -> "typing" [];
	"langchain_core.tracers.schemas" -> "uuid" [];
	"langchain_core.tracers.schemas" -> "langsmith" [];
	"langchain_core.tracers.schemas" -> "pydantic" [];
	"langchain_core.tracers.run_collector" -> "typing" [];
	"langchain_core.tracers.run_collector" -> "uuid" [];
	"langchain_core.tracers.langchain" -> "__future__" [];
	"langchain_core.tracers.langchain" -> "logging" [];
	"langchain_core.tracers.langchain" -> "warnings" [];
	"langchain_core.tracers.langchain" -> "datetime" [];
	"langchain_core.tracers.langchain" -> "typing" [];
	"langchain_core.tracers.langchain" -> "uuid" [];
	"langchain_core.tracers.langchain" -> "langsmith" [];
	"langchain_core.tracers.langchain" -> "pydantic" [];
	"langchain_core.tracers.langchain" -> "tenacity" [];
	"langchain_core.tracers.langchain" -> "typing_extensions" [];
	"langchain_core.env" -> "platform" [];
	"langchain_core.env" -> "functools" [];
	"langsmith.utils" -> "__future__" [];
	"langsmith.utils" -> "contextlib" [];
	"langsmith.utils" -> "contextvars" [];
	"langsmith.utils" -> "copy" [];
	"langsmith.utils" -> "enum" [];
	"langsmith.utils" -> "functools" [];
	"langsmith.utils" -> "logging" [];
	"langsmith.utils" -> "os" [];
	"langsmith.utils" -> "pathlib" [];
	"langsmith.utils" -> "socket" [];
	"langsmith.utils" -> "subprocess" [];
	"langsmith.utils" -> "sys" [];
	"langsmith.utils" -> "threading" [];
	"langsmith.utils" -> "traceback" [];
	"langsmith.utils" -> "typing" [];
	"langsmith.utils" -> "urllib" [];
	"langsmith.utils" -> "requests" [];
	"langsmith.utils" -> "typing_extensions" [];
	"langsmith.utils" -> "vcr" [];
	"langsmith.utils" -> "packaging" [];
	"httpx" -> "sys" [];
	"httpx._main" -> "__future__" [];
	"httpx._main" -> "functools" [];
	"httpx._main" -> "json" [];
	"httpx._main" -> "sys" [];
	"httpx._main" -> "typing" [];
	"httpx._main" -> "click" [];
	"httpx._main" -> "pygments" [];
	"httpx._main" -> "'pygments.util'" [];
	"httpx._main" -> "'rich.console'" [];
	"httpx._main" -> "'rich.markup'" [];
	"httpx._main" -> "'rich.progress'" [];
	"httpx._main" -> "'rich.syntax'" [];
	"httpx._main" -> "'rich.table'" [];
	"httpx._main" -> "httpcore" [];
	"httpcore._backends.trio" -> "__future__" [];
	"httpcore._backends.trio" -> "ssl" [];
	"httpcore._backends.trio" -> "typing" [];
	"httpcore._backends.trio" -> "trio" [];
	"httpcore._backends.anyio" -> "__future__" [];
	"httpcore._backends.anyio" -> "ssl" [];
	"httpcore._backends.anyio" -> "typing" [];
	"httpcore._backends.anyio" -> "anyio" [];
	"httpcore._utils" -> "__future__" [];
	"httpcore._utils" -> "select" [];
	"httpcore._utils" -> "socket" [];
	"httpcore._utils" -> "sys" [];
	"anyio" -> "__future__" [];
	"anyio._backends._trio" -> "__future__" [];
	"anyio._backends._trio" -> "array" [];
	"anyio._backends._trio" -> "math" [];
	"anyio._backends._trio" -> "os" [];
	"anyio._backends._trio" -> "socket" [];
	"anyio._backends._trio" -> "sys" [];
	"anyio._backends._trio" -> "types" [];
	"anyio._backends._trio" -> "weakref" [];
	"anyio._backends._trio" -> "contextlib" [];
	"anyio._backends._trio" -> "dataclasses" [];
	"anyio._backends._trio" -> "functools" [];
	"anyio._backends._trio" -> "io" [];
	"anyio._backends._trio" -> "signal" [];
	"anyio._backends._trio" -> "typing" [];
	"anyio._backends._trio" -> "'trio.from_thread'" [];
	"anyio._backends._trio" -> "'trio.lowlevel'" [];
	"anyio._backends._trio" -> "outcome" [];
	"anyio._backends._trio" -> "'trio.socket'" [];
	"anyio._backends._trio" -> "'trio.to_thread'" [];
	"anyio._backends._trio" -> "anyio" [];
	"anyio._backends._trio" -> "_typeshed" [];
	"anyio._backends._trio" -> "typing_extensions" [];
	"anyio._backends._trio" -> "exceptiongroup" [];
	"anyio._backends._trio" -> "queue" [];
	"anyio._backends._trio" -> "'trio.testing'" [];
	"exceptiongroup" -> "os" [];
	"exceptiongroup" -> "sys" [];
	"exceptiongroup" -> "traceback" [];
	"exceptiongroup" -> "contextlib" [];
	"exceptiongroup._suppress" -> "__future__" [];
	"exceptiongroup._suppress" -> "sys" [];
	"exceptiongroup._suppress" -> "contextlib" [];
	"exceptiongroup._suppress" -> "types" [];
	"exceptiongroup._suppress" -> "typing" [];
	"exceptiongroup._formatting" -> "__future__" [];
	"exceptiongroup._formatting" -> "sys" [];
	"exceptiongroup._formatting" -> "textwrap" [];
	"exceptiongroup._formatting" -> "traceback" [];
	"exceptiongroup._formatting" -> "functools" [];
	"exceptiongroup._formatting" -> "types" [];
	"exceptiongroup._formatting" -> "typing" [];
	"exceptiongroup._formatting" -> "apport_python_hook" [];
	"exceptiongroup._exceptions" -> "__future__" [];
	"exceptiongroup._exceptions" -> "functools" [];
	"exceptiongroup._exceptions" -> "inspect" [];
	"exceptiongroup._exceptions" -> "typing" [];
	"exceptiongroup._version" -> "typing" [];
	"exceptiongroup._catch" -> "__future__" [];
	"exceptiongroup._catch" -> "inspect" [];
	"exceptiongroup._catch" -> "sys" [];
	"exceptiongroup._catch" -> "contextlib" [];
	"exceptiongroup._catch" -> "types" [];
	"exceptiongroup._catch" -> "typing" [];
	"anyio.streams.memory" -> "__future__" [];
	"anyio.streams.memory" -> "warnings" [];
	"anyio.streams.memory" -> "collections" [];
	"anyio.streams.memory" -> "dataclasses" [];
	"anyio.streams.memory" -> "types" [];
	"anyio.streams.memory" -> "typing" [];
	"anyio.streams.memory" -> "anyio" [];
	"anyio.lowlevel" -> "__future__" [];
	"anyio.lowlevel" -> "enum" [];
	"anyio.lowlevel" -> "dataclasses" [];
	"anyio.lowlevel" -> "typing" [];
	"anyio.lowlevel" -> "weakref" [];
	"anyio.abc._eventloop" -> "__future__" [];
	"anyio.abc._eventloop" -> "math" [];
	"anyio.abc._eventloop" -> "sys" [];
	"anyio.abc._eventloop" -> "abc" [];
	"anyio.abc._eventloop" -> "contextlib" [];
	"anyio.abc._eventloop" -> "os" [];
	"anyio.abc._eventloop" -> "signal" [];
	"anyio.abc._eventloop" -> "socket" [];
	"anyio.abc._eventloop" -> "typing" [];
	"anyio.abc._eventloop" -> "typing_extensions" [];
	"anyio.abc._eventloop" -> "_typeshed" [];
	"anyio.abc._testing" -> "__future__" [];
	"anyio.abc._testing" -> "types" [];
	"anyio.abc._testing" -> "abc" [];
	"anyio.abc._testing" -> "typing" [];
	"anyio.abc._tasks" -> "__future__" [];
	"anyio.abc._tasks" -> "sys" [];
	"anyio.abc._tasks" -> "abc" [];
	"anyio.abc._tasks" -> "types" [];
	"anyio.abc._tasks" -> "typing" [];
	"anyio.abc._tasks" -> "typing_extensions" [];
	"anyio.abc._subprocesses" -> "__future__" [];
	"anyio.abc._subprocesses" -> "abc" [];
	"anyio.abc._subprocesses" -> "signal" [];
	"anyio.abc._streams" -> "__future__" [];
	"anyio.abc._streams" -> "abc" [];
	"anyio.abc._streams" -> "typing" [];
	"anyio.abc._resources" -> "__future__" [];
	"anyio.abc._resources" -> "abc" [];
	"anyio.abc._resources" -> "types" [];
	"anyio.abc._resources" -> "typing" [];
	"anyio.abc._sockets" -> "__future__" [];
	"anyio.abc._sockets" -> "socket" [];
	"anyio.abc._sockets" -> "abc" [];
	"anyio.abc._sockets" -> "contextlib" [];
	"anyio.abc._sockets" -> "io" [];
	"anyio.abc._sockets" -> "ipaddress" [];
	"anyio.abc._sockets" -> "types" [];
	"anyio.abc._sockets" -> "typing" [];
	"anyio.abc._sockets" -> "anyio" [];
	"anyio.from_thread" -> "__future__" [];
	"anyio.from_thread" -> "sys" [];
	"anyio.from_thread" -> "contextlib" [];
	"anyio.from_thread" -> "dataclasses" [];
	"anyio.from_thread" -> "inspect" [];
	"anyio.from_thread" -> "threading" [];
	"anyio.from_thread" -> "types" [];
	"anyio.from_thread" -> "typing" [];
	"anyio.from_thread" -> "typing_extensions" [];
	"anyio.abc" -> "__future__" [];
	"anyio._backends._asyncio" -> "__future__" [];
	"anyio._backends._asyncio" -> "array" [];
	"anyio._backends._asyncio" -> "asyncio" [];
	"anyio._backends._asyncio" -> "contextvars" [];
	"anyio._backends._asyncio" -> "math" [];
	"anyio._backends._asyncio" -> "os" [];
	"anyio._backends._asyncio" -> "socket" [];
	"anyio._backends._asyncio" -> "sys" [];
	"anyio._backends._asyncio" -> "threading" [];
	"anyio._backends._asyncio" -> "weakref" [];
	"anyio._backends._asyncio" -> "collections" [];
	"anyio._backends._asyncio" -> "contextlib" [];
	"anyio._backends._asyncio" -> "dataclasses" [];
	"anyio._backends._asyncio" -> "functools" [];
	"anyio._backends._asyncio" -> "inspect" [];
	"anyio._backends._asyncio" -> "io" [];
	"anyio._backends._asyncio" -> "queue" [];
	"anyio._backends._asyncio" -> "signal" [];
	"anyio._backends._asyncio" -> "types" [];
	"anyio._backends._asyncio" -> "typing" [];
	"anyio._backends._asyncio" -> "sniffio" [];
	"anyio._backends._asyncio" -> "anyio" [];
	"anyio._backends._asyncio" -> "_typeshed" [];
	"anyio._backends._asyncio" -> "typing_extensions" [];
	"anyio._backends._asyncio" -> "enum" [];
	"anyio._backends._asyncio" -> "exceptiongroup" [];
	"anyio._backends._asyncio" -> "uvloop" [];
	"anyio._backends._asyncio" -> "_pytest" [];
	"anyio._core._asyncio_selector_thread" -> "__future__" [];
	"anyio._core._asyncio_selector_thread" -> "asyncio" [];
	"anyio._core._asyncio_selector_thread" -> "socket" [];
	"anyio._core._asyncio_selector_thread" -> "threading" [];
	"anyio._core._asyncio_selector_thread" -> "selectors" [];
	"anyio._core._asyncio_selector_thread" -> "typing" [];
	"anyio._core._asyncio_selector_thread" -> "_typeshed" [];
	"anyio._core._typedattr" -> "__future__" [];
	"anyio._core._typedattr" -> "typing" [];
	"anyio._core._testing" -> "__future__" [];
	"anyio._core._testing" -> "typing" [];
	"anyio._core._tempfile" -> "__future__" [];
	"anyio._core._tempfile" -> "os" [];
	"anyio._core._tempfile" -> "sys" [];
	"anyio._core._tempfile" -> "tempfile" [];
	"anyio._core._tempfile" -> "io" [];
	"anyio._core._tempfile" -> "types" [];
	"anyio._core._tempfile" -> "typing" [];
	"anyio._core._tempfile" -> "anyio" [];
	"anyio._core._tempfile" -> "_typeshed" [];
	"anyio._core._tasks" -> "__future__" [];
	"anyio._core._tasks" -> "math" [];
	"anyio._core._tasks" -> "contextlib" [];
	"anyio._core._tasks" -> "types" [];
	"anyio._core._synchronization" -> "__future__" [];
	"anyio._core._synchronization" -> "math" [];
	"anyio._core._synchronization" -> "collections" [];
	"anyio._core._synchronization" -> "dataclasses" [];
	"anyio._core._synchronization" -> "types" [];
	"anyio._core._synchronization" -> "sniffio" [];
	"anyio._core._subprocesses" -> "__future__" [];
	"anyio._core._subprocesses" -> "sys" [];
	"anyio._core._subprocesses" -> "io" [];
	"anyio._core._subprocesses" -> "os" [];
	"anyio._core._subprocesses" -> "subprocess" [];
	"anyio._core._subprocesses" -> "typing" [];
	"anyio._core._subprocesses" -> "typing_extensions" [];
	"anyio._core._streams" -> "__future__" [];
	"anyio._core._streams" -> "math" [];
	"anyio._core._streams" -> "typing" [];
	"anyio._core._streams" -> "warnings" [];
	"anyio._core._sockets" -> "__future__" [];
	"anyio._core._sockets" -> "errno" [];
	"anyio._core._sockets" -> "os" [];
	"anyio._core._sockets" -> "socket" [];
	"anyio._core._sockets" -> "ssl" [];
	"anyio._core._sockets" -> "stat" [];
	"anyio._core._sockets" -> "sys" [];
	"anyio._core._sockets" -> "ipaddress" [];
	"anyio._core._sockets" -> "typing" [];
	"anyio._core._sockets" -> "anyio" [];
	"anyio._core._sockets" -> "_typeshed" [];
	"anyio._core._sockets" -> "exceptiongroup" [];
	"anyio._core._sockets" -> "typing_extensions" [];
	"anyio._core._sockets" -> "warnings" [];
	"anyio._core._sockets" -> "idna" [];
	"anyio.streams.tls" -> "__future__" [];
	"anyio.streams.tls" -> "logging" [];
	"anyio.streams.tls" -> "re" [];
	"anyio.streams.tls" -> "ssl" [];
	"anyio.streams.tls" -> "sys" [];
	"anyio.streams.tls" -> "dataclasses" [];
	"anyio.streams.tls" -> "functools" [];
	"anyio.streams.tls" -> "typing" [];
	"anyio.streams.tls" -> "anyio" [];
	"anyio.streams.tls" -> "typing_extensions" [];
	"anyio.streams.stapled" -> "__future__" [];
	"anyio.streams.stapled" -> "dataclasses" [];
	"anyio.streams.stapled" -> "typing" [];
	"anyio.streams.stapled" -> "anyio" [];
	"anyio._core._signals" -> "__future__" [];
	"anyio._core._signals" -> "contextlib" [];
	"anyio._core._signals" -> "signal" [];
	"anyio._core._resources" -> "__future__" [];
	"anyio._core._fileio" -> "__future__" [];
	"anyio._core._fileio" -> "os" [];
	"anyio._core._fileio" -> "pathlib" [];
	"anyio._core._fileio" -> "sys" [];
	"anyio._core._fileio" -> "dataclasses" [];
	"anyio._core._fileio" -> "functools" [];
	"anyio._core._fileio" -> "typing" [];
	"anyio._core._fileio" -> "anyio" [];
	"anyio._core._fileio" -> "types" [];
	"anyio._core._fileio" -> "_typeshed" [];
	"anyio._core._exceptions" -> "__future__" [];
	"anyio._core._exceptions" -> "sys" [];
	"anyio._core._exceptions" -> "textwrap" [];
	"anyio._core._exceptions" -> "typing" [];
	"anyio._core._exceptions" -> "exceptiongroup" [];
	"anyio._core._eventloop" -> "__future__" [];
	"anyio._core._eventloop" -> "math" [];
	"anyio._core._eventloop" -> "sys" [];
	"anyio._core._eventloop" -> "threading" [];
	"anyio._core._eventloop" -> "contextlib" [];
	"anyio._core._eventloop" -> "importlib" [];
	"anyio._core._eventloop" -> "typing" [];
	"anyio._core._eventloop" -> "sniffio" [];
	"anyio._core._eventloop" -> "typing_extensions" [];
	"anyio.to_thread" -> "__future__" [];
	"anyio.to_thread" -> "sys" [];
	"anyio.to_thread" -> "typing" [];
	"anyio.to_thread" -> "warnings" [];
	"anyio.to_thread" -> "typing_extensions" [];
	"httpcore._sync.socks_proxy" -> "__future__" [];
	"httpcore._sync.socks_proxy" -> "logging" [];
	"httpcore._sync.socks_proxy" -> "ssl" [];
	"httpcore._sync.socks_proxy" -> "socksio" [];
	"httpcore._trace" -> "__future__" [];
	"httpcore._trace" -> "inspect" [];
	"httpcore._trace" -> "logging" [];
	"httpcore._trace" -> "types" [];
	"httpcore._trace" -> "typing" [];
	"httpcore._synchronization" -> "__future__" [];
	"httpcore._synchronization" -> "threading" [];
	"httpcore._synchronization" -> "types" [];
	"httpcore._synchronization" -> "trio" [];
	"httpcore._synchronization" -> "anyio" [];
	"httpcore._synchronization" -> "sniffio" [];
	"httpcore._sync.http2" -> "__future__" [];
	"httpcore._sync.http2" -> "enum" [];
	"httpcore._sync.http2" -> "logging" [];
	"httpcore._sync.http2" -> "time" [];
	"httpcore._sync.http2" -> "types" [];
	"httpcore._sync.http2" -> "typing" [];
	"httpcore._sync.http2" -> "'h2.config'" [];
	"httpcore._sync.http2" -> "'h2.connection'" [];
	"httpcore._sync.http2" -> "'h2.events'" [];
	"httpcore._sync.http2" -> "'h2.exceptions'" [];
	"httpcore._sync.http2" -> "'h2.settings'" [];
	"httpcore._sync.interfaces" -> "__future__" [];
	"httpcore._sync.interfaces" -> "contextlib" [];
	"httpcore._sync.interfaces" -> "typing" [];
	"httpcore._sync.http_proxy" -> "__future__" [];
	"httpcore._sync.http_proxy" -> "base64" [];
	"httpcore._sync.http_proxy" -> "logging" [];
	"httpcore._sync.http_proxy" -> "ssl" [];
	"httpcore._sync.http_proxy" -> "typing" [];
	"httpcore._sync.http11" -> "__future__" [];
	"httpcore._sync.http11" -> "enum" [];
	"httpcore._sync.http11" -> "logging" [];
	"httpcore._sync.http11" -> "ssl" [];
	"httpcore._sync.http11" -> "time" [];
	"httpcore._sync.http11" -> "types" [];
	"httpcore._sync.http11" -> "typing" [];
	"httpcore._sync.http11" -> "h11" [];
	"h11._util" -> "typing" [];
	"h11._state" -> "typing" [];
	"h11._events" -> "re" [];
	"h11._events" -> "abc" [];
	"h11._events" -> "dataclasses" [];
	"h11._events" -> "typing" [];
	"h11._headers" -> "re" [];
	"h11._headers" -> "typing" [];
	"h11._headers" -> "typing_extensions" [];
	"h11._connection" -> "typing" [];
	"h11._writers" -> "typing" [];
	"h11._receivebuffer" -> "re" [];
	"h11._receivebuffer" -> "sys" [];
	"h11._receivebuffer" -> "typing" [];
	"h11._readers" -> "re" [];
	"h11._readers" -> "typing" [];
	"httpcore._sync.connection_pool" -> "__future__" [];
	"httpcore._sync.connection_pool" -> "ssl" [];
	"httpcore._sync.connection_pool" -> "sys" [];
	"httpcore._sync.connection_pool" -> "types" [];
	"httpcore._sync.connection_pool" -> "typing" [];
	"httpcore._sync.connection" -> "__future__" [];
	"httpcore._sync.connection" -> "itertools" [];
	"httpcore._sync.connection" -> "logging" [];
	"httpcore._sync.connection" -> "ssl" [];
	"httpcore._sync.connection" -> "types" [];
	"httpcore._sync.connection" -> "typing" [];
	"httpcore._ssl" -> "ssl" [];
	"httpcore._ssl" -> "certifi" [];
	"httpcore._models" -> "__future__" [];
	"httpcore._models" -> "base64" [];
	"httpcore._models" -> "ssl" [];
	"httpcore._models" -> "typing" [];
	"httpcore._exceptions" -> "contextlib" [];
	"httpcore._exceptions" -> "typing" [];
	"httpcore._backends.sync" -> "__future__" [];
	"httpcore._backends.sync" -> "functools" [];
	"httpcore._backends.sync" -> "socket" [];
	"httpcore._backends.sync" -> "ssl" [];
	"httpcore._backends.sync" -> "sys" [];
	"httpcore._backends.sync" -> "typing" [];
	"httpcore._backends.mock" -> "__future__" [];
	"httpcore._backends.mock" -> "ssl" [];
	"httpcore._backends.mock" -> "typing" [];
	"httpcore._backends.base" -> "__future__" [];
	"httpcore._backends.base" -> "ssl" [];
	"httpcore._backends.base" -> "time" [];
	"httpcore._backends.base" -> "typing" [];
	"httpcore._async.socks_proxy" -> "__future__" [];
	"httpcore._async.socks_proxy" -> "logging" [];
	"httpcore._async.socks_proxy" -> "ssl" [];
	"httpcore._async.socks_proxy" -> "socksio" [];
	"httpcore._backends.auto" -> "__future__" [];
	"httpcore._backends.auto" -> "typing" [];
	"httpcore._async.http2" -> "__future__" [];
	"httpcore._async.http2" -> "enum" [];
	"httpcore._async.http2" -> "logging" [];
	"httpcore._async.http2" -> "time" [];
	"httpcore._async.http2" -> "types" [];
	"httpcore._async.http2" -> "typing" [];
	"httpcore._async.http2" -> "'h2.config'" [];
	"httpcore._async.http2" -> "'h2.connection'" [];
	"httpcore._async.http2" -> "'h2.events'" [];
	"httpcore._async.http2" -> "'h2.exceptions'" [];
	"httpcore._async.http2" -> "'h2.settings'" [];
	"httpcore._async.interfaces" -> "__future__" [];
	"httpcore._async.interfaces" -> "contextlib" [];
	"httpcore._async.interfaces" -> "typing" [];
	"httpcore._async.http_proxy" -> "__future__" [];
	"httpcore._async.http_proxy" -> "base64" [];
	"httpcore._async.http_proxy" -> "logging" [];
	"httpcore._async.http_proxy" -> "ssl" [];
	"httpcore._async.http_proxy" -> "typing" [];
	"httpcore._async.http11" -> "__future__" [];
	"httpcore._async.http11" -> "enum" [];
	"httpcore._async.http11" -> "logging" [];
	"httpcore._async.http11" -> "ssl" [];
	"httpcore._async.http11" -> "time" [];
	"httpcore._async.http11" -> "types" [];
	"httpcore._async.http11" -> "typing" [];
	"httpcore._async.http11" -> "h11" [];
	"httpcore._async.connection_pool" -> "__future__" [];
	"httpcore._async.connection_pool" -> "ssl" [];
	"httpcore._async.connection_pool" -> "sys" [];
	"httpcore._async.connection_pool" -> "types" [];
	"httpcore._async.connection_pool" -> "typing" [];
	"httpcore._async.connection" -> "__future__" [];
	"httpcore._async.connection" -> "itertools" [];
	"httpcore._async.connection" -> "logging" [];
	"httpcore._async.connection" -> "ssl" [];
	"httpcore._async.connection" -> "types" [];
	"httpcore._async.connection" -> "typing" [];
	"httpcore._api" -> "__future__" [];
	"httpcore._api" -> "contextlib" [];
	"httpcore._api" -> "typing" [];
	"httpx._urls" -> "__future__" [];
	"httpx._urls" -> "typing" [];
	"httpx._urls" -> "idna" [];
	"httpx._urls" -> "collections" [];
	"httpx._urls" -> "warnings" [];
	"httpx._utils" -> "__future__" [];
	"httpx._utils" -> "ipaddress" [];
	"httpx._utils" -> "os" [];
	"httpx._utils" -> "re" [];
	"httpx._utils" -> "typing" [];
	"httpx._urlparse" -> "__future__" [];
	"httpx._urlparse" -> "ipaddress" [];
	"httpx._urlparse" -> "re" [];
	"httpx._urlparse" -> "typing" [];
	"httpx._urlparse" -> "idna" [];
	"httpx._types" -> "typing" [];
	"httpx._transports.wsgi" -> "__future__" [];
	"httpx._transports.wsgi" -> "io" [];
	"httpx._transports.wsgi" -> "itertools" [];
	"httpx._transports.wsgi" -> "sys" [];
	"httpx._transports.wsgi" -> "typing" [];
	"httpx._transports.wsgi" -> "_typeshed" [];
	"httpx._transports.wsgi" -> "'_typeshed.wsgi'" [];
	"httpx._transports.mock" -> "__future__" [];
	"httpx._transports.mock" -> "typing" [];
	"httpx._transports.default" -> "__future__" [];
	"httpx._transports.default" -> "contextlib" [];
	"httpx._transports.default" -> "typing" [];
	"httpx._transports.default" -> "types" [];
	"httpx._transports.default" -> "ssl" [];
	"httpx._transports.default" -> "httpcore" [];
	"httpx._transports.default" -> "socksio" [];
	"httpx._transports.base" -> "__future__" [];
	"httpx._transports.base" -> "typing" [];
	"httpx._transports.base" -> "types" [];
	"httpx._transports.asgi" -> "__future__" [];
	"httpx._transports.asgi" -> "typing" [];
	"httpx._transports.asgi" -> "asyncio" [];
	"httpx._transports.asgi" -> "trio" [];
	"httpx._transports.asgi" -> "sniffio" [];
	"httpx._status_codes" -> "__future__" [];
	"httpx._status_codes" -> "enum" [];
	"httpx._models" -> "__future__" [];
	"httpx._models" -> "codecs" [];
	"httpx._models" -> "datetime" [];
	"httpx._models" -> "json" [];
	"httpx._models" -> "re" [];
	"httpx._models" -> "typing" [];
	"httpx._multipart" -> "__future__" [];
	"httpx._multipart" -> "io" [];
	"httpx._multipart" -> "mimetypes" [];
	"httpx._multipart" -> "os" [];
	"httpx._multipart" -> "re" [];
	"httpx._multipart" -> "typing" [];
	"httpx._multipart" -> "pathlib" [];
	"httpx._decoders" -> "__future__" [];
	"httpx._decoders" -> "codecs" [];
	"httpx._decoders" -> "io" [];
	"httpx._decoders" -> "typing" [];
	"httpx._decoders" -> "zlib" [];
	"httpx._decoders" -> "brotli" [];
	"httpx._decoders" -> "brotlicffi" [];
	"httpx._decoders" -> "zstandard" [];
	"httpx._exceptions" -> "__future__" [];
	"httpx._exceptions" -> "contextlib" [];
	"httpx._exceptions" -> "typing" [];
	"httpx._content" -> "__future__" [];
	"httpx._content" -> "inspect" [];
	"httpx._content" -> "warnings" [];
	"httpx._content" -> "json" [];
	"httpx._content" -> "typing" [];
	"httpx._config" -> "__future__" [];
	"httpx._config" -> "os" [];
	"httpx._config" -> "typing" [];
	"httpx._config" -> "ssl" [];
	"httpx._config" -> "warnings" [];
	"httpx._config" -> "certifi" [];
	"httpx._client" -> "__future__" [];
	"httpx._client" -> "datetime" [];
	"httpx._client" -> "enum" [];
	"httpx._client" -> "logging" [];
	"httpx._client" -> "time" [];
	"httpx._client" -> "typing" [];
	"httpx._client" -> "warnings" [];
	"httpx._client" -> "contextlib" [];
	"httpx._client" -> "types" [];
	"httpx._client" -> "ssl" [];
	"httpx._client" -> "h2" [];
	"httpx._auth" -> "__future__" [];
	"httpx._auth" -> "hashlib" [];
	"httpx._auth" -> "os" [];
	"httpx._auth" -> "re" [];
	"httpx._auth" -> "time" [];
	"httpx._auth" -> "typing" [];
	"httpx._auth" -> "base64" [];
	"httpx._auth" -> "netrc" [];
	"httpx._api" -> "__future__" [];
	"httpx._api" -> "typing" [];
	"httpx._api" -> "contextlib" [];
	"httpx._api" -> "ssl" [];
	"langsmith.run_helpers" -> "__future__" [];
	"langsmith.run_helpers" -> "asyncio" [];
	"langsmith.run_helpers" -> "contextlib" [];
	"langsmith.run_helpers" -> "contextvars" [];
	"langsmith.run_helpers" -> "datetime" [];
	"langsmith.run_helpers" -> "functools" [];
	"langsmith.run_helpers" -> "inspect" [];
	"langsmith.run_helpers" -> "logging" [];
	"langsmith.run_helpers" -> "uuid" [];
	"langsmith.run_helpers" -> "warnings" [];
	"langsmith.run_helpers" -> "typing" [];
	"langsmith.run_helpers" -> "typing_extensions" [];
	"langsmith.run_helpers" -> "types" [];
	"langsmith" -> "importlib" [];
	"langsmith" -> "typing" [];
	"langsmith.async_client" -> "__future__" [];
	"langsmith.async_client" -> "asyncio" [];
	"langsmith.async_client" -> "datetime" [];
	"langsmith.async_client" -> "uuid" [];
	"langsmith.async_client" -> "typing" [];
	"langsmith._testing" -> "__future__" [];
	"langsmith._testing" -> "atexit" [];
	"langsmith._testing" -> "datetime" [];
	"langsmith._testing" -> "functools" [];
	"langsmith._testing" -> "inspect" [];
	"langsmith._testing" -> "logging" [];
	"langsmith._testing" -> "threading" [];
	"langsmith._testing" -> "uuid" [];
	"langsmith._testing" -> "warnings" [];
	"langsmith._testing" -> "collections" [];
	"langsmith._testing" -> "pathlib" [];
	"langsmith._testing" -> "typing" [];
	"langsmith._testing" -> "typing_extensions" [];
	"langsmith._testing" -> "pytest" [];
	"langsmith._expect" -> "__future__" [];
	"langsmith._expect" -> "atexit" [];
	"langsmith._expect" -> "inspect" [];
	"langsmith._expect" -> "typing" [];
	"langsmith._internal._embedding_distance" -> "__future__" [];
	"langsmith._internal._embedding_distance" -> "logging" [];
	"langsmith._internal._embedding_distance" -> "typing" [];
	"langsmith._internal._embedding_distance" -> "typing_extensions" [];
	"langsmith._internal._embedding_distance" -> "numpy" [];
	"langsmith._internal._embedding_distance" -> "simsimd" [];
	"langsmith._internal._embedding_distance" -> "openai" [];
	"langsmith._internal._edit_distance" -> "typing" [];
	"langsmith._internal._edit_distance" -> "typing_extensions" [];
	"langsmith._internal._edit_distance" -> "rapidfuzz" [];
	"langchain_core.callbacks.streaming_stdout" -> "__future__" [];
	"langchain_core.callbacks.streaming_stdout" -> "sys" [];
	"langchain_core.callbacks.streaming_stdout" -> "typing" [];
	"langchain_core.callbacks.streaming_stdout" -> "typing_extensions" [];
	"langchain_core.callbacks.stdout" -> "__future__" [];
	"langchain_core.callbacks.stdout" -> "typing" [];
	"langchain_core.callbacks.stdout" -> "typing_extensions" [];
	"langchain_core.callbacks.file" -> "__future__" [];
	"langchain_core.callbacks.file" -> "pathlib" [];
	"langchain_core.callbacks.file" -> "typing" [];
	"langchain_core.callbacks.file" -> "typing_extensions" [];
	"langchain_core.callbacks.base" -> "__future__" [];
	"langchain_core.callbacks.base" -> "logging" [];
	"langchain_core.callbacks.base" -> "typing" [];
	"langchain_core.callbacks.base" -> "typing_extensions" [];
	"langchain_core.callbacks.base" -> "uuid" [];
	"langchain_core.callbacks.base" -> "tenacity" [];
	"langchain_core.language_models.fake_chat_models" -> "asyncio" [];
	"langchain_core.language_models.fake_chat_models" -> "re" [];
	"langchain_core.language_models.fake_chat_models" -> "time" [];
	"langchain_core.language_models.fake_chat_models" -> "typing" [];
	"langchain_core.language_models.fake_chat_models" -> "typing_extensions" [];
	"langchain_core.language_models.fake" -> "asyncio" [];
	"langchain_core.language_models.fake" -> "time" [];
	"langchain_core.language_models.fake" -> "typing" [];
	"langchain_core.language_models.fake" -> "typing_extensions" [];
	"langchain_core.language_models.chat_models" -> "__future__" [];
	"langchain_core.language_models.chat_models" -> "asyncio" [];
	"langchain_core.language_models.chat_models" -> "inspect" [];
	"langchain_core.language_models.chat_models" -> "json" [];
	"langchain_core.language_models.chat_models" -> "typing" [];
	"langchain_core.language_models.chat_models" -> "warnings" [];
	"langchain_core.language_models.chat_models" -> "abc" [];
	"langchain_core.language_models.chat_models" -> "functools" [];
	"langchain_core.language_models.chat_models" -> "operator" [];
	"langchain_core.language_models.chat_models" -> "pydantic" [];
	"langchain_core.language_models.chat_models" -> "typing_extensions" [];
	"langchain_core.language_models.chat_models" -> "uuid" [];
	"langchain_core.rate_limiters" -> "__future__" [];
	"langchain_core.rate_limiters" -> "abc" [];
	"langchain_core.rate_limiters" -> "asyncio" [];
	"langchain_core.rate_limiters" -> "threading" [];
	"langchain_core.rate_limiters" -> "time" [];
	"langchain_core.rate_limiters" -> "typing" [];
	"langchain_core.language_models._utils" -> "re" [];
	"langchain_core.language_models._utils" -> "typing" [];
	"langchain_core.language_models.base" -> "__future__" [];
	"langchain_core.language_models.base" -> "warnings" [];
	"langchain_core.language_models.base" -> "abc" [];
	"langchain_core.language_models.base" -> "functools" [];
	"langchain_core.language_models.base" -> "typing" [];
	"langchain_core.language_models.base" -> "pydantic" [];
	"langchain_core.language_models.base" -> "typing_extensions" [];
	"langchain_core.language_models.base" -> "transformers" [];
	"langchain_text_splitters.spacy" -> "__future__" [];
	"langchain_text_splitters.spacy" -> "typing" [];
	"langchain_text_splitters.spacy" -> "spacy" [];
	"langchain_text_splitters.spacy" -> "'spacy.lang'" [];
	"langchain_text_splitters.sentence_transformers" -> "__future__" [];
	"langchain_text_splitters.sentence_transformers" -> "typing" [];
	"langchain_text_splitters.sentence_transformers" -> "sentence_transformers" [];
	"langchain_text_splitters.python" -> "__future__" [];
	"langchain_text_splitters.python" -> "typing" [];
	"langchain_text_splitters.nltk" -> "__future__" [];
	"langchain_text_splitters.nltk" -> "typing" [];
	"langchain_text_splitters.nltk" -> "'nltk.tokenize'" [];
	"langchain_text_splitters.markdown" -> "__future__" [];
	"langchain_text_splitters.markdown" -> "re" [];
	"langchain_text_splitters.markdown" -> "typing" [];
	"langchain_text_splitters.latex" -> "__future__" [];
	"langchain_text_splitters.latex" -> "typing" [];
	"langchain_text_splitters.konlpy" -> "__future__" [];
	"langchain_text_splitters.konlpy" -> "typing" [];
	"langchain_text_splitters.konlpy" -> "konlpy" [];
	"langchain_text_splitters.jsx" -> "re" [];
	"langchain_text_splitters.jsx" -> "typing" [];
	"langchain_text_splitters.json" -> "__future__" [];
	"langchain_text_splitters.json" -> "copy" [];
	"langchain_text_splitters.json" -> "json" [];
	"langchain_text_splitters.json" -> "typing" [];
	"langchain_text_splitters.html" -> "__future__" [];
	"langchain_text_splitters.html" -> "copy" [];
	"langchain_text_splitters.html" -> "pathlib" [];
	"langchain_text_splitters.html" -> "re" [];
	"langchain_text_splitters.html" -> "io" [];
	"langchain_text_splitters.html" -> "typing" [];
	"langchain_text_splitters.html" -> "requests" [];
	"langchain_text_splitters.html" -> "bs4" [];
	"langchain_text_splitters.html" -> "'bs4.element'" [];
	"langchain_text_splitters.html" -> "lxml" [];
	"langchain_text_splitters.html" -> "nltk" [];
	"langchain_text_splitters.html" -> "'nltk.corpus'" [];
	"langchain_text_splitters.character" -> "__future__" [];
	"langchain_text_splitters.character" -> "re" [];
	"langchain_text_splitters.character" -> "typing" [];
	"langchain_text_splitters.base" -> "__future__" [];
	"langchain_text_splitters.base" -> "copy" [];
	"langchain_text_splitters.base" -> "logging" [];
	"langchain_text_splitters.base" -> "abc" [];
	"langchain_text_splitters.base" -> "dataclasses" [];
	"langchain_text_splitters.base" -> "enum" [];
	"langchain_text_splitters.base" -> "typing" [];
	"langchain_text_splitters.base" -> "transformers" [];
	"langchain_text_splitters.base" -> "tiktoken" [];
	"langchain_core.exceptions" -> "enum" [];
	"langchain_core.exceptions" -> "typing" [];
	"langchain_core.messages.tool" -> "json" [];
	"langchain_core.messages.tool" -> "typing" [];
	"langchain_core.messages.tool" -> "uuid" [];
	"langchain_core.messages.tool" -> "pydantic" [];
	"langchain_core.messages.tool" -> "typing_extensions" [];
	"langchain_core.utils._merge" -> "__future__" [];
	"langchain_core.utils._merge" -> "typing" [];
	"langchain_core.messages.system" -> "typing" [];
	"langchain_core.messages.modifier" -> "typing" [];
	"langchain_core.messages.human" -> "typing" [];
	"langchain_core.messages.function" -> "typing" [];
	"langchain_core.messages.function" -> "typing_extensions" [];
	"langchain_core.messages.content_blocks" -> "warnings" [];
	"langchain_core.messages.content_blocks" -> "typing" [];
	"langchain_core.messages.content_blocks" -> "pydantic" [];
	"langchain_core.messages.content_blocks" -> "typing_extensions" [];
	"langchain_core.messages.chat" -> "typing" [];
	"langchain_core.messages.chat" -> "typing_extensions" [];
	"langchain_core.messages.base" -> "__future__" [];
	"langchain_core.messages.base" -> "typing" [];
	"langchain_core.messages.base" -> "pydantic" [];
	"langchain_core.messages.ai" -> "json" [];
	"langchain_core.messages.ai" -> "logging" [];
	"langchain_core.messages.ai" -> "operator" [];
	"langchain_core.messages.ai" -> "typing" [];
	"langchain_core.messages.ai" -> "pydantic" [];
	"langchain_core.messages.ai" -> "typing_extensions" [];
	"langchain_core.utils.usage" -> "typing" [];
	"langchain_core.load.load" -> "importlib" [];
	"langchain_core.load.load" -> "json" [];
	"langchain_core.load.load" -> "os" [];
	"langchain_core.load.load" -> "typing" [];
	"langchain_core.callbacks.manager" -> "__future__" [];
	"langchain_core.callbacks.manager" -> "asyncio" [];
	"langchain_core.callbacks.manager" -> "atexit" [];
	"langchain_core.callbacks.manager" -> "functools" [];
	"langchain_core.callbacks.manager" -> "logging" [];
	"langchain_core.callbacks.manager" -> "uuid" [];
	"langchain_core.callbacks.manager" -> "abc" [];
	"langchain_core.callbacks.manager" -> "contextlib" [];
	"langchain_core.callbacks.manager" -> "contextvars" [];
	"langchain_core.callbacks.manager" -> "typing" [];
	"langchain_core.callbacks.manager" -> "typing_extensions" [];
	"langchain_core.callbacks.manager" -> "tenacity" [];
	"langchain_core.runnables.history" -> "__future__" [];
	"langchain_core.runnables.history" -> "inspect" [];
	"langchain_core.runnables.history" -> "types" [];
	"langchain_core.runnables.history" -> "typing" [];
	"langchain_core.runnables.history" -> "pydantic" [];
	"langchain_core.runnables.history" -> "typing_extensions" [];
	"langchain_core.chat_history" -> "__future__" [];
	"langchain_core.chat_history" -> "abc" [];
	"langchain_core.chat_history" -> "typing" [];
	"langchain_core.chat_history" -> "pydantic" [];
	"langchain_core.runnables.fallbacks" -> "asyncio" [];
	"langchain_core.runnables.fallbacks" -> "inspect" [];
	"langchain_core.runnables.fallbacks" -> "typing" [];
	"langchain_core.runnables.fallbacks" -> "functools" [];
	"langchain_core.runnables.fallbacks" -> "pydantic" [];
	"langchain_core.runnables.fallbacks" -> "typing_extensions" [];
	"langchain_core.runnables.config" -> "__future__" [];
	"langchain_core.runnables.config" -> "asyncio" [];
	"langchain_core.runnables.config" -> "uuid" [];
	"langchain_core.runnables.config" -> "warnings" [];
	"langchain_core.runnables.config" -> "contextlib" [];
	"langchain_core.runnables.config" -> "contextvars" [];
	"langchain_core.runnables.config" -> "functools" [];
	"langchain_core.runnables.config" -> "typing" [];
	"langchain_core.runnables.config" -> "typing_extensions" [];
	"langchain_core.runnables.branch" -> "typing" [];
	"langchain_core.runnables.branch" -> "pydantic" [];
	"langchain_core.runnables.branch" -> "typing_extensions" [];
	"langchain_core.beta.runnables.context" -> "asyncio" [];
	"langchain_core.beta.runnables.context" -> "threading" [];
	"langchain_core.beta.runnables.context" -> "collections" [];
	"langchain_core.beta.runnables.context" -> "functools" [];
	"langchain_core.beta.runnables.context" -> "itertools" [];
	"langchain_core.beta.runnables.context" -> "typing" [];
	"langchain_core.beta.runnables.context" -> "pydantic" [];
	"langchain_core.beta.runnables.context" -> "typing_extensions" [];
	"langchain_core.runnables.base" -> "__future__" [];
	"langchain_core.runnables.base" -> "asyncio" [];
	"langchain_core.runnables.base" -> "collections" [];
	"langchain_core.runnables.base" -> "contextlib" [];
	"langchain_core.runnables.base" -> "functools" [];
	"langchain_core.runnables.base" -> "inspect" [];
	"langchain_core.runnables.base" -> "threading" [];
	"langchain_core.runnables.base" -> "abc" [];
	"langchain_core.runnables.base" -> "itertools" [];
	"langchain_core.runnables.base" -> "operator" [];
	"langchain_core.runnables.base" -> "types" [];
	"langchain_core.runnables.base" -> "typing" [];
	"langchain_core.runnables.base" -> "pydantic" [];
	"langchain_core.runnables.base" -> "typing_extensions" [];
	"langchain_core.tracers.event_stream" -> "__future__" [];
	"langchain_core.tracers.event_stream" -> "asyncio" [];
	"langchain_core.tracers.event_stream" -> "contextlib" [];
	"langchain_core.tracers.event_stream" -> "logging" [];
	"langchain_core.tracers.event_stream" -> "typing" [];
	"langchain_core.tracers.event_stream" -> "uuid" [];
	"langchain_core.tracers.event_stream" -> "typing_extensions" [];
	"langchain_core.tracers.root_listeners" -> "typing" [];
	"langchain_core.tracers.root_listeners" -> "uuid" [];
	"langchain_core.runnables.retry" -> "typing" [];
	"langchain_core.runnables.retry" -> "tenacity" [];
	"langchain_core.runnables.retry" -> "typing_extensions" [];
	"langchain_core.outputs" -> "typing" [];
	"langchain_core.outputs.run_info" -> "__future__" [];
	"langchain_core.outputs.run_info" -> "uuid" [];
	"langchain_core.outputs.run_info" -> "pydantic" [];
	"langchain_core.outputs.llm_result" -> "__future__" [];
	"langchain_core.outputs.llm_result" -> "copy" [];
	"langchain_core.outputs.llm_result" -> "typing" [];
	"langchain_core.outputs.llm_result" -> "pydantic" [];
	"langchain_core.outputs.generation" -> "__future__" [];
	"langchain_core.outputs.generation" -> "typing" [];
	"langchain_core.outputs.chat_result" -> "typing" [];
	"langchain_core.outputs.chat_result" -> "pydantic" [];
	"langchain_core.outputs.chat_generation" -> "__future__" [];
	"langchain_core.outputs.chat_generation" -> "typing" [];
	"langchain_core.outputs.chat_generation" -> "pydantic" [];
	"langchain_core.outputs.chat_generation" -> "typing_extensions" [];
	"langchain_community.vectorstores" -> "importlib" [];
	"langchain_community.vectorstores" -> "typing" [];
	"langchain_community.vectorstores.zilliz" -> "__future__" [];
	"langchain_community.vectorstores.zilliz" -> "logging" [];
	"langchain_community.vectorstores.zilliz" -> "typing" [];
	"langchain_community.vectorstores.zilliz" -> "pymilvus" [];
	"langchain_community.vectorstores.zep_cloud" -> "__future__" [];
	"langchain_community.vectorstores.zep_cloud" -> "logging" [];
	"langchain_community.vectorstores.zep_cloud" -> "warnings" [];
	"langchain_community.vectorstores.zep_cloud" -> "typing" [];
	"langchain_community.vectorstores.zep_cloud" -> "zep_cloud" [];
	"langchain_community.vectorstores.zep_cloud" -> "'zep_cloud.client'" [];
	"langchain_community.vectorstores.zep" -> "__future__" [];
	"langchain_community.vectorstores.zep" -> "logging" [];
	"langchain_community.vectorstores.zep" -> "warnings" [];
	"langchain_community.vectorstores.zep" -> "dataclasses" [];
	"langchain_community.vectorstores.zep" -> "typing" [];
	"langchain_community.vectorstores.zep" -> "'zep_python.document'" [];
	"langchain_community.vectorstores.zep" -> "zep_python" [];
	"langchain_community.vectorstores.yellowbrick" -> "__future__" [];
	"langchain_community.vectorstores.yellowbrick" -> "atexit" [];
	"langchain_community.vectorstores.yellowbrick" -> "csv" [];
	"langchain_community.vectorstores.yellowbrick" -> "enum" [];
	"langchain_community.vectorstores.yellowbrick" -> "json" [];
	"langchain_community.vectorstores.yellowbrick" -> "logging" [];
	"langchain_community.vectorstores.yellowbrick" -> "uuid" [];
	"langchain_community.vectorstores.yellowbrick" -> "contextlib" [];
	"langchain_community.vectorstores.yellowbrick" -> "io" [];
	"langchain_community.vectorstores.yellowbrick" -> "typing" [];
	"langchain_community.vectorstores.yellowbrick" -> "'psycopg2.extensions'" [];
	"langchain_community.vectorstores.yellowbrick" -> "psycopg2" [];
	"langchain_community.vectorstores.yellowbrick" -> "hashlib" [];
	"langchain_community.vectorstores.yellowbrick" -> "'psycopg2.extras'" [];
	"langchain_community.vectorstores.weaviate" -> "__future__" [];
	"langchain_community.vectorstores.weaviate" -> "datetime" [];
	"langchain_community.vectorstores.weaviate" -> "os" [];
	"langchain_community.vectorstores.weaviate" -> "typing" [];
	"langchain_community.vectorstores.weaviate" -> "uuid" [];
	"langchain_community.vectorstores.weaviate" -> "numpy" [];
	"langchain_community.vectorstores.weaviate" -> "weaviate" [];
	"langchain_community.vectorstores.weaviate" -> "'weaviate.util'" [];
	"langchain_community.vectorstores.utils" -> "enum" [];
	"langchain_community.vectorstores.utils" -> "typing" [];
	"langchain_community.vectorstores.utils" -> "numpy" [];
	"langchain_community.vectorstores.vlite" -> "__future__" [];
	"langchain_community.vectorstores.vlite" -> "typing" [];
	"langchain_community.vectorstores.vlite" -> "uuid" [];
	"langchain_community.vectorstores.vlite" -> "vlite" [];
	"langchain_community.vectorstores.vlite" -> "'vlite.utils'" [];
	"langchain_community.vectorstores.vespa" -> "__future__" [];
	"langchain_community.vectorstores.vespa" -> "typing" [];
	"langchain_community.vectorstores.vespa" -> "'vespa.application'" [];
	"langchain_community.vectorstores.vespa" -> "json" [];
	"langchain_community.vectorstores.vectara" -> "__future__" [];
	"langchain_community.vectorstores.vectara" -> "json" [];
	"langchain_community.vectorstores.vectara" -> "logging" [];
	"langchain_community.vectorstores.vectara" -> "os" [];
	"langchain_community.vectorstores.vectara" -> "warnings" [];
	"langchain_community.vectorstores.vectara" -> "dataclasses" [];
	"langchain_community.vectorstores.vectara" -> "hashlib" [];
	"langchain_community.vectorstores.vectara" -> "typing" [];
	"langchain_community.vectorstores.vectara" -> "requests" [];
	"langchain_community.vectorstores.vectara" -> "pydantic" [];
	"langchain_community.vectorstores.vearch" -> "__future__" [];
	"langchain_community.vectorstores.vearch" -> "os" [];
	"langchain_community.vectorstores.vearch" -> "time" [];
	"langchain_community.vectorstores.vearch" -> "uuid" [];
	"langchain_community.vectorstores.vearch" -> "typing" [];
	"langchain_community.vectorstores.vearch" -> "numpy" [];
	"langchain_community.vectorstores.vearch" -> "vearch" [];
	"langchain_community.vectorstores.vearch" -> "vearch_cluster" [];
	"langchain_community.vectorstores.vdms" -> "__future__" [];
	"langchain_community.vectorstores.vdms" -> "base64" [];
	"langchain_community.vectorstores.vdms" -> "logging" [];
	"langchain_community.vectorstores.vdms" -> "os" [];
	"langchain_community.vectorstores.vdms" -> "uuid" [];
	"langchain_community.vectorstores.vdms" -> "copy" [];
	"langchain_community.vectorstores.vdms" -> "typing" [];
	"langchain_community.vectorstores.vdms" -> "numpy" [];
	"langchain_community.vectorstores.vdms" -> "vdms" [];
	"langchain_community.vectorstores.vald" -> "__future__" [];
	"langchain_community.vectorstores.vald" -> "typing" [];
	"langchain_community.vectorstores.vald" -> "numpy" [];
	"langchain_community.vectorstores.vald" -> "grpc" [];
	"langchain_community.vectorstores.vald" -> "vald" [];
	"langchain_community.vectorstores.vald" -> "'vald.v1'" [];
	"grpc" -> "abc" [];
	"grpc" -> "contextlib" [];
	"grpc" -> "enum" [];
	"grpc" -> "logging" [];
	"grpc" -> "sys" [];
	"grpc" -> "grpc_tools" [];
	"grpc" -> "grpc_health" [];
	"grpc" -> "grpc_reflection" [];
	"grpc.aio" -> "typing" [];
	"grpc.aio._typing" -> "typing" [];
	"grpc.aio._server" -> "typing" [];
	"grpc.aio._server" -> "grpc" [];
	"grpc.aio._metadata" -> "collections" [];
	"grpc.aio._metadata" -> "typing" [];
	"grpc.aio._interceptor" -> "abc" [];
	"grpc.aio._interceptor" -> "asyncio" [];
	"grpc.aio._interceptor" -> "collections" [];
	"grpc.aio._interceptor" -> "functools" [];
	"grpc.aio._interceptor" -> "typing" [];
	"grpc.aio._interceptor" -> "grpc" [];
	"grpc.aio._utils" -> "time" [];
	"grpc.aio._utils" -> "typing" [];
	"grpc.aio._channel" -> "asyncio" [];
	"grpc.aio._channel" -> "sys" [];
	"grpc.aio._channel" -> "typing" [];
	"grpc.aio._channel" -> "grpc" [];
	"grpc.aio._call" -> "asyncio" [];
	"grpc.aio._call" -> "enum" [];
	"grpc.aio._call" -> "functools" [];
	"grpc.aio._call" -> "inspect" [];
	"grpc.aio._call" -> "logging" [];
	"grpc.aio._call" -> "traceback" [];
	"grpc.aio._call" -> "typing" [];
	"grpc.aio._call" -> "grpc" [];
	"grpc.aio._base_server" -> "abc" [];
	"grpc.aio._base_server" -> "typing" [];
	"grpc.aio._base_server" -> "grpc" [];
	"grpc.aio._base_channel" -> "abc" [];
	"grpc.aio._base_channel" -> "typing" [];
	"grpc.aio._base_channel" -> "grpc" [];
	"grpc.aio._base_call" -> "abc" [];
	"grpc.aio._base_call" -> "typing" [];
	"grpc.aio._base_call" -> "grpc" [];
	"grpc._server" -> "__future__" [];
	"grpc._server" -> "abc" [];
	"grpc._server" -> "collections" [];
	"grpc._server" -> "concurrent" [];
	"grpc._server" -> "contextvars" [];
	"grpc._server" -> "enum" [];
	"grpc._server" -> "logging" [];
	"grpc._server" -> "threading" [];
	"grpc._server" -> "time" [];
	"grpc._server" -> "traceback" [];
	"grpc._server" -> "typing" [];
	"grpc._typing" -> "typing" [];
	"grpc.experimental" -> "copy" [];
	"grpc.experimental" -> "functools" [];
	"grpc.experimental" -> "sys" [];
	"grpc.experimental" -> "warnings" [];
	"grpc._simple_stubs" -> "collections" [];
	"grpc._simple_stubs" -> "datetime" [];
	"grpc._simple_stubs" -> "logging" [];
	"grpc._simple_stubs" -> "os" [];
	"grpc._simple_stubs" -> "threading" [];
	"grpc._simple_stubs" -> "typing" [];
	"grpc._channel" -> "copy" [];
	"grpc._channel" -> "functools" [];
	"grpc._channel" -> "logging" [];
	"grpc._channel" -> "os" [];
	"grpc._channel" -> "sys" [];
	"grpc._channel" -> "threading" [];
	"grpc._channel" -> "time" [];
	"grpc._channel" -> "types" [];
	"grpc._channel" -> "typing" [];
	"grpc._auth" -> "inspect" [];
	"grpc._auth" -> "typing" [];
	"grpc._plugin_wrapping" -> "collections" [];
	"grpc._plugin_wrapping" -> "logging" [];
	"grpc._plugin_wrapping" -> "threading" [];
	"grpc._plugin_wrapping" -> "typing" [];
	"grpc._plugin_wrapping" -> "contextvars" [];
	"grpc._utilities" -> "collections" [];
	"grpc._utilities" -> "logging" [];
	"grpc._utilities" -> "threading" [];
	"grpc._utilities" -> "time" [];
	"grpc._utilities" -> "typing" [];
	"grpc._runtime_protos" -> "sys" [];
	"grpc._runtime_protos" -> "types" [];
	"grpc._runtime_protos" -> "typing" [];
	"grpc._runtime_protos" -> "grpc_tools" [];
	"grpc._runtime_protos" -> "'grpc_tools.protoc'" [];
	"grpc._observability" -> "__future__" [];
	"grpc._observability" -> "abc" [];
	"grpc._observability" -> "contextlib" [];
	"grpc._observability" -> "logging" [];
	"grpc._observability" -> "threading" [];
	"grpc._observability" -> "typing" [];
	"grpc._interceptor" -> "collections" [];
	"grpc._interceptor" -> "sys" [];
	"grpc._interceptor" -> "types" [];
	"grpc._interceptor" -> "typing" [];
	"grpc._compression" -> "__future__" [];
	"grpc._compression" -> "typing" [];
	"grpc._common" -> "logging" [];
	"grpc._common" -> "time" [];
	"grpc._common" -> "typing" [];
	"langchain_community.vectorstores.usearch" -> "__future__" [];
	"langchain_community.vectorstores.usearch" -> "typing" [];
	"langchain_community.vectorstores.usearch" -> "numpy" [];
	"langchain_community.docstore.in_memory" -> "typing" [];
	"langchain_community.docstore.base" -> "abc" [];
	"langchain_community.docstore.base" -> "typing" [];
	"langchain_community.vectorstores.upstash" -> "__future__" [];
	"langchain_community.vectorstores.upstash" -> "logging" [];
	"langchain_community.vectorstores.upstash" -> "uuid" [];
	"langchain_community.vectorstores.upstash" -> "typing" [];
	"langchain_community.vectorstores.upstash" -> "numpy" [];
	"langchain_community.vectorstores.upstash" -> "upstash_vector" [];
	"langchain_community.vectorstores.upstash" -> "'upstash_vector.types'" [];
	"langchain_community.vectorstores.typesense" -> "__future__" [];
	"langchain_community.vectorstores.typesense" -> "uuid" [];
	"langchain_community.vectorstores.typesense" -> "typing" [];
	"langchain_community.vectorstores.typesense" -> "typesense" [];
	"langchain_community.vectorstores.typesense" -> "'typesense.collection'" [];
	"langchain_community.vectorstores.typesense" -> "'typesense.exceptions'" [];
	"langchain_community.vectorstores.timescalevector" -> "__future__" [];
	"langchain_community.vectorstores.timescalevector" -> "enum" [];
	"langchain_community.vectorstores.timescalevector" -> "logging" [];
	"langchain_community.vectorstores.timescalevector" -> "uuid" [];
	"langchain_community.vectorstores.timescalevector" -> "datetime" [];
	"langchain_community.vectorstores.timescalevector" -> "typing" [];
	"langchain_community.vectorstores.timescalevector" -> "timescale_vector" [];
	"langchain_community.vectorstores.tiledb" -> "__future__" [];
	"langchain_community.vectorstores.tiledb" -> "pickle" [];
	"langchain_community.vectorstores.tiledb" -> "random" [];
	"langchain_community.vectorstores.tiledb" -> "sys" [];
	"langchain_community.vectorstores.tiledb" -> "typing" [];
	"langchain_community.vectorstores.tiledb" -> "numpy" [];
	"langchain_community.vectorstores.tigris" -> "__future__" [];
	"langchain_community.vectorstores.tigris" -> "itertools" [];
	"langchain_community.vectorstores.tigris" -> "typing" [];
	"langchain_community.vectorstores.tigris" -> "tigrisdb" [];
	"langchain_community.vectorstores.tigris" -> "'tigrisdb.types'" [];
	"langchain_community.vectorstores.tidb_vector" -> "uuid" [];
	"langchain_community.vectorstores.tidb_vector" -> "typing" [];
	"langchain_community.vectorstores.tidb_vector" -> "tidb_vector" [];
	"langchain_community.vectorstores.tidb_vector" -> "'tidb_vector.integrations'" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "importlib" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "os" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "tempfile" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "pathlib" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "typing" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "pydantic" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "thirdai" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "pandas" [];
	"langchain_community.vectorstores.tencentvectordb" -> "__future__" [];
	"langchain_community.vectorstores.tencentvectordb" -> "json" [];
	"langchain_community.vectorstores.tencentvectordb" -> "logging" [];
	"langchain_community.vectorstores.tencentvectordb" -> "time" [];
	"langchain_community.vectorstores.tencentvectordb" -> "enum" [];
	"langchain_community.vectorstores.tencentvectordb" -> "typing" [];
	"langchain_community.vectorstores.tencentvectordb" -> "numpy" [];
	"langchain_community.vectorstores.tencentvectordb" -> "pydantic" [];
	"langchain_core.structured_query" -> "__future__" [];
	"langchain_core.structured_query" -> "abc" [];
	"langchain_core.structured_query" -> "enum" [];
	"langchain_core.structured_query" -> "typing" [];
	"langchain_core.structured_query" -> "pydantic" [];
	"langchain.retrievers.self_query.tencentvectordb" -> "typing" [];
	"langchain_community.query_constructors.tencentvectordb" -> "__future__" [];
	"langchain_community.query_constructors.tencentvectordb" -> "typing" [];
	"langchain.chains.query_constructor.parser" -> "datetime" [];
	"langchain.chains.query_constructor.parser" -> "warnings" [];
	"langchain.chains.query_constructor.parser" -> "typing" [];
	"langchain.chains.query_constructor.parser" -> "typing_extensions" [];
	"langchain.chains.query_constructor.parser" -> "lark" [];
	"langchain.chains.query_constructor.base" -> "__future__" [];
	"langchain.chains.query_constructor.base" -> "json" [];
	"langchain.chains.query_constructor.base" -> "typing" [];
	"langchain.chains.query_constructor.schema" -> "pydantic" [];
	"langchain_core.prompts.few_shot" -> "__future__" [];
	"langchain_core.prompts.few_shot" -> "typing" [];
	"langchain_core.prompts.few_shot" -> "pydantic" [];
	"langchain_core.prompts.few_shot" -> "typing_extensions" [];
	"langchain_core.prompts.few_shot" -> "pathlib" [];
	"langchain_core.example_selectors" -> "typing" [];
	"langchain_core.example_selectors.semantic_similarity" -> "__future__" [];
	"langchain_core.example_selectors.semantic_similarity" -> "abc" [];
	"langchain_core.example_selectors.semantic_similarity" -> "typing" [];
	"langchain_core.example_selectors.semantic_similarity" -> "pydantic" [];
	"langchain_core.example_selectors.length_based" -> "re" [];
	"langchain_core.example_selectors.length_based" -> "typing" [];
	"langchain_core.example_selectors.length_based" -> "pydantic" [];
	"langchain_core.example_selectors.length_based" -> "typing_extensions" [];
	"langchain_core.example_selectors.base" -> "abc" [];
	"langchain_core.example_selectors.base" -> "typing" [];
	"langchain_community.vectorstores.tair" -> "__future__" [];
	"langchain_community.vectorstores.tair" -> "json" [];
	"langchain_community.vectorstores.tair" -> "logging" [];
	"langchain_community.vectorstores.tair" -> "uuid" [];
	"langchain_community.vectorstores.tair" -> "typing" [];
	"langchain_community.vectorstores.tair" -> "tair" [];
	"langchain_community.vectorstores.tablestore" -> "json" [];
	"langchain_community.vectorstores.tablestore" -> "logging" [];
	"langchain_community.vectorstores.tablestore" -> "uuid" [];
	"langchain_community.vectorstores.tablestore" -> "typing" [];
	"langchain_community.vectorstores.tablestore" -> "tablestore" [];
	"langchain_community.vectorstores.surrealdb" -> "asyncio" [];
	"langchain_community.vectorstores.surrealdb" -> "typing" [];
	"langchain_community.vectorstores.surrealdb" -> "numpy" [];
	"langchain_community.vectorstores.surrealdb" -> "surrealdb" [];
	"langchain_community.vectorstores.surrealdb" -> "'surrealdb.ws'" [];
	"langchain_community.vectorstores.supabase" -> "__future__" [];
	"langchain_community.vectorstores.supabase" -> "uuid" [];
	"langchain_community.vectorstores.supabase" -> "warnings" [];
	"langchain_community.vectorstores.supabase" -> "itertools" [];
	"langchain_community.vectorstores.supabase" -> "typing" [];
	"langchain_community.vectorstores.supabase" -> "numpy" [];
	"langchain_community.vectorstores.supabase" -> "supabase" [];
	"langchain_community.vectorstores.starrocks" -> "__future__" [];
	"langchain_community.vectorstores.starrocks" -> "json" [];
	"langchain_community.vectorstores.starrocks" -> "logging" [];
	"langchain_community.vectorstores.starrocks" -> "hashlib" [];
	"langchain_community.vectorstores.starrocks" -> "threading" [];
	"langchain_community.vectorstores.starrocks" -> "typing" [];
	"langchain_community.vectorstores.starrocks" -> "numpy" [];
	"langchain_community.vectorstores.starrocks" -> "pydantic_settings" [];
	"langchain_community.vectorstores.starrocks" -> "typing_extensions" [];
	"langchain_community.vectorstores.starrocks" -> "pymysql" [];
	"langchain_community.vectorstores.starrocks" -> "tqdm" [];
	"pydantic_settings.sources.types" -> "__future__" [];
	"pydantic_settings.sources.types" -> "pathlib" [];
	"pydantic_settings.sources.types" -> "typing" [];
	"pydantic_settings.sources.providers.yaml" -> "__future__" [];
	"pydantic_settings.sources.providers.yaml" -> "pathlib" [];
	"pydantic_settings.sources.providers.yaml" -> "typing" [];
	"pydantic_settings.sources.providers.yaml" -> "yaml" [];
	"pydantic_settings.sources.providers.toml" -> "__future__" [];
	"pydantic_settings.sources.providers.toml" -> "sys" [];
	"pydantic_settings.sources.providers.toml" -> "pathlib" [];
	"pydantic_settings.sources.providers.toml" -> "typing" [];
	"pydantic_settings.sources.providers.toml" -> "tomllib" [];
	"pydantic_settings.sources.providers.toml" -> "tomli" [];
	"pydantic_settings.sources.providers.secrets" -> "__future__" [];
	"pydantic_settings.sources.providers.secrets" -> "os" [];
	"pydantic_settings.sources.providers.secrets" -> "warnings" [];
	"pydantic_settings.sources.providers.secrets" -> "pathlib" [];
	"pydantic_settings.sources.providers.secrets" -> "typing" [];
	"pydantic_settings.utils" -> "sys" [];
	"pydantic_settings.utils" -> "types" [];
	"pydantic_settings.utils" -> "pathlib" [];
	"pydantic_settings.utils" -> "typing" [];
	"pydantic_settings.utils" -> "typing_extensions" [];
	"pydantic_settings.sources.providers.pyproject" -> "__future__" [];
	"pydantic_settings.sources.providers.pyproject" -> "pathlib" [];
	"pydantic_settings.sources.providers.pyproject" -> "typing" [];
	"pydantic_settings.sources.providers.json" -> "__future__" [];
	"pydantic_settings.sources.providers.json" -> "json" [];
	"pydantic_settings.sources.providers.json" -> "pathlib" [];
	"pydantic_settings.sources.providers.json" -> "typing" [];
	"pydantic_settings.sources.providers.gcp" -> "__future__" [];
	"pydantic_settings.sources.providers.gcp" -> "functools" [];
	"pydantic_settings.sources.providers.gcp" -> "typing" [];
	"pydantic_settings.sources.providers.gcp" -> "'google.cloud.secretmanager'" [];
	"pydantic_settings.sources.providers.env" -> "__future__" [];
	"pydantic_settings.sources.providers.env" -> "os" [];
	"pydantic_settings.sources.providers.env" -> "typing" [];
	"pydantic_settings.sources.providers.env" -> "typing_extensions" [];
	"pydantic_settings.sources.utils" -> "__future__" [];
	"pydantic_settings.sources.utils" -> "collections" [];
	"pydantic_settings.sources.utils" -> "dataclasses" [];
	"pydantic_settings.sources.utils" -> "enum" [];
	"pydantic_settings.sources.utils" -> "typing" [];
	"pydantic_settings.sources.utils" -> "pydantic" [];
	"pydantic_settings.sources.utils" -> "typing_extensions" [];
	"pydantic_settings.sources.utils" -> "typing_inspection" [];
	"pydantic_settings.sources.utils" -> "types" [];
	"pydantic_settings.sources.providers.dotenv" -> "__future__" [];
	"pydantic_settings.sources.providers.dotenv" -> "os" [];
	"pydantic_settings.sources.providers.dotenv" -> "warnings" [];
	"pydantic_settings.sources.providers.dotenv" -> "pathlib" [];
	"pydantic_settings.sources.providers.dotenv" -> "typing" [];
	"pydantic_settings.sources.providers.dotenv" -> "dotenv" [];
	"pydantic_settings.sources.providers.cli" -> "__future__" [];
	"pydantic_settings.sources.providers.cli" -> "json" [];
	"pydantic_settings.sources.providers.cli" -> "re" [];
	"pydantic_settings.sources.providers.cli" -> "shlex" [];
	"pydantic_settings.sources.providers.cli" -> "sys" [];
	"pydantic_settings.sources.providers.cli" -> "typing" [];
	"pydantic_settings.sources.providers.cli" -> "argparse" [];
	"pydantic_settings.sources.providers.cli" -> "collections" [];
	"pydantic_settings.sources.providers.cli" -> "enum" [];
	"pydantic_settings.sources.providers.cli" -> "textwrap" [];
	"pydantic_settings.sources.providers.cli" -> "types" [];
	"pydantic_settings.sources.providers.cli" -> "typing_extensions" [];
	"pydantic_settings.sources.providers.cli" -> "pydantic" [];
	"pydantic_settings.sources.providers.cli" -> "pydantic_core" [];
	"pydantic_settings.sources.providers.cli" -> "typing_inspection" [];
	"pydantic_settings.sources.providers.azure" -> "__future__" [];
	"pydantic_settings.sources.providers.azure" -> "typing" [];
	"pydantic_settings.sources.providers.azure" -> "'azure.core'" [];
	"pydantic_settings.sources.providers.azure" -> "'azure.keyvault'" [];
	"pydantic_settings.sources.providers.aws" -> "__future__" [];
	"pydantic_settings.sources.providers.aws" -> "json" [];
	"pydantic_settings.sources.providers.aws" -> "typing" [];
	"pydantic_settings.sources.providers.aws" -> "boto3" [];
	"pydantic_settings.sources.providers.aws" -> "mypy_boto3_secretsmanager" [];
	"pydantic_settings.sources.base" -> "__future__" [];
	"pydantic_settings.sources.base" -> "json" [];
	"pydantic_settings.sources.base" -> "os" [];
	"pydantic_settings.sources.base" -> "abc" [];
	"pydantic_settings.sources.base" -> "dataclasses" [];
	"pydantic_settings.sources.base" -> "pathlib" [];
	"pydantic_settings.sources.base" -> "typing" [];
	"pydantic_settings.sources.base" -> "pydantic" [];
	"pydantic_settings.sources.base" -> "typing_extensions" [];
	"pydantic_settings.main" -> "__future__" [];
	"pydantic_settings.main" -> "asyncio" [];
	"pydantic_settings.main" -> "inspect" [];
	"pydantic_settings.main" -> "threading" [];
	"pydantic_settings.main" -> "argparse" [];
	"pydantic_settings.main" -> "types" [];
	"pydantic_settings.main" -> "typing" [];
	"pydantic_settings.main" -> "pydantic" [];
	"langchain_community.vectorstores.sqlitevss" -> "__future__" [];
	"langchain_community.vectorstores.sqlitevss" -> "json" [];
	"langchain_community.vectorstores.sqlitevss" -> "logging" [];
	"langchain_community.vectorstores.sqlitevss" -> "warnings" [];
	"langchain_community.vectorstores.sqlitevss" -> "typing" [];
	"langchain_community.vectorstores.sqlitevss" -> "sqlite3" [];
	"langchain_community.vectorstores.sqlitevss" -> "sqlite_vss" [];
	"langchain_community.vectorstores.sqlitevec" -> "__future__" [];
	"langchain_community.vectorstores.sqlitevec" -> "json" [];
	"langchain_community.vectorstores.sqlitevec" -> "logging" [];
	"langchain_community.vectorstores.sqlitevec" -> "struct" [];
	"langchain_community.vectorstores.sqlitevec" -> "warnings" [];
	"langchain_community.vectorstores.sqlitevec" -> "typing" [];
	"langchain_community.vectorstores.sqlitevec" -> "sqlite3" [];
	"langchain_community.vectorstores.sqlitevec" -> "sqlite_vec" [];
	"langchain_community.vectorstores.sklearn" -> "json" [];
	"langchain_community.vectorstores.sklearn" -> "math" [];
	"langchain_community.vectorstores.sklearn" -> "os" [];
	"langchain_community.vectorstores.sklearn" -> "abc" [];
	"langchain_community.vectorstores.sklearn" -> "typing" [];
	"langchain_community.vectorstores.sklearn" -> "uuid" [];
	"langchain_community.vectorstores.singlestoredb" -> "__future__" [];
	"langchain_community.vectorstores.singlestoredb" -> "json" [];
	"langchain_community.vectorstores.singlestoredb" -> "re" [];
	"langchain_community.vectorstores.singlestoredb" -> "enum" [];
	"langchain_community.vectorstores.singlestoredb" -> "typing" [];
	"langchain_community.vectorstores.singlestoredb" -> "singlestoredb" [];
	"langchain_community.vectorstores.semadb" -> "typing" [];
	"langchain_community.vectorstores.semadb" -> "uuid" [];
	"langchain_community.vectorstores.semadb" -> "numpy" [];
	"langchain_community.vectorstores.semadb" -> "requests" [];
	"langchain_community.vectorstores.scann" -> "__future__" [];
	"langchain_community.vectorstores.scann" -> "operator" [];
	"langchain_community.vectorstores.scann" -> "pickle" [];
	"langchain_community.vectorstores.scann" -> "uuid" [];
	"langchain_community.vectorstores.scann" -> "pathlib" [];
	"langchain_community.vectorstores.scann" -> "typing" [];
	"langchain_community.vectorstores.scann" -> "numpy" [];
	"langchain_community.vectorstores.rocksetdb" -> "__future__" [];
	"langchain_community.vectorstores.rocksetdb" -> "logging" [];
	"langchain_community.vectorstores.rocksetdb" -> "copy" [];
	"langchain_community.vectorstores.rocksetdb" -> "enum" [];
	"langchain_community.vectorstores.rocksetdb" -> "typing" [];
	"langchain_community.vectorstores.rocksetdb" -> "numpy" [];
	"langchain_community.vectorstores.rocksetdb" -> "rockset" [];
	"langchain_community.vectorstores.rocksetdb" -> "'rockset.models'" [];
	"langchain_community.vectorstores.relyt" -> "__future__" [];
	"langchain_community.vectorstores.relyt" -> "logging" [];
	"langchain_community.vectorstores.relyt" -> "uuid" [];
	"langchain_community.vectorstores.relyt" -> "typing" [];
	"langchain_community.vectorstores.relyt" -> "sqlalchemy" [];
	"langchain_community.vectorstores.relyt" -> "pgvecto_rs" [];
	"langchain_community.vectorstores.relyt" -> "'pgvecto_rs.sqlalchemy'" [];
	"sqlalchemy.ext.declarative" -> "sqlalchemy" [];
	"sqlalchemy.ext.declarative.extensions" -> "__future__" [];
	"sqlalchemy.ext.declarative.extensions" -> "collections" [];
	"sqlalchemy.ext.declarative.extensions" -> "contextlib" [];
	"sqlalchemy.ext.declarative.extensions" -> "typing" [];
	"sqlalchemy.ext.declarative.extensions" -> "sqlalchemy" [];
	"langchain_community.vectorstores.redis.filters" -> "enum" [];
	"langchain_community.vectorstores.redis.filters" -> "functools" [];
	"langchain_community.vectorstores.redis.filters" -> "typing" [];
	"langchain_community.utilities.redis" -> "__future__" [];
	"langchain_community.utilities.redis" -> "logging" [];
	"langchain_community.utilities.redis" -> "re" [];
	"langchain_community.utilities.redis" -> "typing" [];
	"langchain_community.utilities.redis" -> "numpy" [];
	"langchain_community.utilities.redis" -> "'redis.client'" [];
	"langchain_community.utilities.redis" -> "redis" [];
	"langchain_community.utilities.redis" -> "'redis.cluster'" [];
	"langchain_community.vectorstores.redis.base" -> "__future__" [];
	"langchain_community.vectorstores.redis.base" -> "logging" [];
	"langchain_community.vectorstores.redis.base" -> "os" [];
	"langchain_community.vectorstores.redis.base" -> "uuid" [];
	"langchain_community.vectorstores.redis.base" -> "typing" [];
	"langchain_community.vectorstores.redis.base" -> "numpy" [];
	"langchain_community.vectorstores.redis.base" -> "yaml" [];
	"langchain_community.vectorstores.redis.base" -> "pydantic" [];
	"langchain_community.vectorstores.redis.base" -> "'redis.client'" [];
	"langchain_community.vectorstores.redis.base" -> "'redis.commands'" [];
	"langchain_community.vectorstores.redis.base" -> "redis" [];
	"langchain_community.vectorstores.redis.schema" -> "__future__" [];
	"langchain_community.vectorstores.redis.schema" -> "os" [];
	"langchain_community.vectorstores.redis.schema" -> "enum" [];
	"langchain_community.vectorstores.redis.schema" -> "pathlib" [];
	"langchain_community.vectorstores.redis.schema" -> "typing" [];
	"langchain_community.vectorstores.redis.schema" -> "numpy" [];
	"langchain_community.vectorstores.redis.schema" -> "yaml" [];
	"langchain_community.vectorstores.redis.schema" -> "pydantic" [];
	"langchain_community.vectorstores.redis.schema" -> "typing_extensions" [];
	"langchain_community.vectorstores.redis.schema" -> "'redis.commands'" [];
	"langchain_community.vectorstores.redis.constants" -> "typing" [];
	"langchain_community.vectorstores.redis.constants" -> "numpy" [];
	"langchain_community.vectorstores.qdrant" -> "__future__" [];
	"langchain_community.vectorstores.qdrant" -> "functools" [];
	"langchain_community.vectorstores.qdrant" -> "uuid" [];
	"langchain_community.vectorstores.qdrant" -> "warnings" [];
	"langchain_community.vectorstores.qdrant" -> "itertools" [];
	"langchain_community.vectorstores.qdrant" -> "operator" [];
	"langchain_community.vectorstores.qdrant" -> "typing" [];
	"langchain_community.vectorstores.qdrant" -> "numpy" [];
	"langchain_community.vectorstores.qdrant" -> "qdrant_client" [];
	"langchain_community.vectorstores.qdrant" -> "'qdrant_client.conversions'" [];
	"langchain_community.vectorstores.qdrant" -> "'qdrant_client.http'" [];
	"langchain_community.vectorstores.qdrant" -> "'qdrant_client.local'" [];
	"langchain_community.vectorstores.qdrant" -> "grpc" [];
	"langchain_community.vectorstores.pinecone" -> "__future__" [];
	"langchain_community.vectorstores.pinecone" -> "logging" [];
	"langchain_community.vectorstores.pinecone" -> "os" [];
	"langchain_community.vectorstores.pinecone" -> "uuid" [];
	"langchain_community.vectorstores.pinecone" -> "warnings" [];
	"langchain_community.vectorstores.pinecone" -> "typing" [];
	"langchain_community.vectorstores.pinecone" -> "numpy" [];
	"langchain_community.vectorstores.pinecone" -> "packaging" [];
	"langchain_community.vectorstores.pinecone" -> "pinecone" [];
	"langchain_community.vectorstores.pgvector" -> "__future__" [];
	"langchain_community.vectorstores.pgvector" -> "contextlib" [];
	"langchain_community.vectorstores.pgvector" -> "enum" [];
	"langchain_community.vectorstores.pgvector" -> "json" [];
	"langchain_community.vectorstores.pgvector" -> "logging" [];
	"langchain_community.vectorstores.pgvector" -> "uuid" [];
	"langchain_community.vectorstores.pgvector" -> "typing" [];
	"langchain_community.vectorstores.pgvector" -> "numpy" [];
	"langchain_community.vectorstores.pgvector" -> "sqlalchemy" [];
	"langchain_community.vectorstores.pgvector" -> "pgvector" [];
	"langchain_community.vectorstores.pgembedding" -> "__future__" [];
	"langchain_community.vectorstores.pgembedding" -> "logging" [];
	"langchain_community.vectorstores.pgembedding" -> "uuid" [];
	"langchain_community.vectorstores.pgembedding" -> "typing" [];
	"langchain_community.vectorstores.pgembedding" -> "sqlalchemy" [];
	"langchain_community.vectorstores.pathway" -> "json" [];
	"langchain_community.vectorstores.pathway" -> "logging" [];
	"langchain_community.vectorstores.pathway" -> "typing" [];
	"langchain_community.vectorstores.pathway" -> "requests" [];
	"langchain_community.vectorstores.oraclevs" -> "__future__" [];
	"langchain_community.vectorstores.oraclevs" -> "array" [];
	"langchain_community.vectorstores.oraclevs" -> "functools" [];
	"langchain_community.vectorstores.oraclevs" -> "hashlib" [];
	"langchain_community.vectorstores.oraclevs" -> "json" [];
	"langchain_community.vectorstores.oraclevs" -> "logging" [];
	"langchain_community.vectorstores.oraclevs" -> "os" [];
	"langchain_community.vectorstores.oraclevs" -> "uuid" [];
	"langchain_community.vectorstores.oraclevs" -> "typing" [];
	"langchain_community.vectorstores.oraclevs" -> "oracledb" [];
	"langchain_community.vectorstores.oraclevs" -> "numpy" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "__future__" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "warnings" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "typing" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "numpy" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "opensearchpy" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "'opensearchpy.exceptions'" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "'opensearchpy.helpers'" [];
	"langchain_community.vectorstores.myscale" -> "__future__" [];
	"langchain_community.vectorstores.myscale" -> "json" [];
	"langchain_community.vectorstores.myscale" -> "logging" [];
	"langchain_community.vectorstores.myscale" -> "hashlib" [];
	"langchain_community.vectorstores.myscale" -> "threading" [];
	"langchain_community.vectorstores.myscale" -> "typing" [];
	"langchain_community.vectorstores.myscale" -> "pydantic_settings" [];
	"langchain_community.vectorstores.myscale" -> "clickhouse_connect" [];
	"langchain_community.vectorstores.myscale" -> "tqdm" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "__future__" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "logging" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "typing" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "numpy" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "'pymongo.collection'" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "pymongo" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "'pymongo.driver_info'" [];
	"langchain_community.vectorstores.momento_vector_index" -> "logging" [];
	"langchain_community.vectorstores.momento_vector_index" -> "typing" [];
	"langchain_community.vectorstores.momento_vector_index" -> "uuid" [];
	"langchain_community.vectorstores.momento_vector_index" -> "numpy" [];
	"langchain_community.vectorstores.momento_vector_index" -> "momento" [];
	"langchain_community.vectorstores.momento_vector_index" -> "'momento.requests'" [];
	"langchain_community.vectorstores.momento_vector_index" -> "'momento.responses'" [];
	"langchain_community.vectorstores.milvus" -> "__future__" [];
	"langchain_community.vectorstores.milvus" -> "logging" [];
	"langchain_community.vectorstores.milvus" -> "typing" [];
	"langchain_community.vectorstores.milvus" -> "uuid" [];
	"langchain_community.vectorstores.milvus" -> "numpy" [];
	"langchain_community.vectorstores.milvus" -> "pymilvus" [];
	"langchain_community.vectorstores.milvus" -> "'pymilvus.orm'" [];
	"langchain_community.vectorstores.milvus" -> "'pymilvus.client'" [];
	"langchain_community.vectorstores.meilisearch" -> "__future__" [];
	"langchain_community.vectorstores.meilisearch" -> "uuid" [];
	"langchain_community.vectorstores.meilisearch" -> "typing" [];
	"langchain_community.vectorstores.meilisearch" -> "meilisearch" [];
	"langchain_community.vectorstores.matching_engine" -> "__future__" [];
	"langchain_community.vectorstores.matching_engine" -> "json" [];
	"langchain_community.vectorstores.matching_engine" -> "logging" [];
	"langchain_community.vectorstores.matching_engine" -> "time" [];
	"langchain_community.vectorstores.matching_engine" -> "uuid" [];
	"langchain_community.vectorstores.matching_engine" -> "typing" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint" -> "dataclasses" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint" -> "typing" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint" -> "grpc" [];
	"google.protobuf.reflection" -> "warnings" [];
	"google.protobuf.message_factory" -> "warnings" [];
	"google.protobuf.internal.api_implementation" -> "importlib" [];
	"google.protobuf.internal.api_implementation" -> "os" [];
	"google.protobuf.internal.api_implementation" -> "sys" [];
	"google.protobuf.internal.api_implementation" -> "warnings" [];
	"google.protobuf.internal.python_message" -> "datetime" [];
	"google.protobuf.internal.python_message" -> "io" [];
	"google.protobuf.internal.python_message" -> "struct" [];
	"google.protobuf.internal.python_message" -> "sys" [];
	"google.protobuf.internal.python_message" -> "warnings" [];
	"google.protobuf.internal.python_message" -> "weakref" [];
	"google.protobuf.internal.wire_format" -> "struct" [];
	"google.protobuf.internal.well_known_types" -> "calendar" [];
	"google.protobuf.internal.well_known_types" -> "datetime" [];
	"google.protobuf.internal.well_known_types" -> "warnings" [];
	"google.protobuf.internal.well_known_types" -> "typing" [];
	"google.protobuf.internal.type_checkers" -> "struct" [];
	"google.protobuf.internal.type_checkers" -> "numbers" [];
	"google.protobuf.internal.encoder" -> "struct" [];
	"google.protobuf.internal.decoder" -> "math" [];
	"google.protobuf.internal.decoder" -> "struct" [];
	"google.protobuf.internal.containers" -> "copy" [];
	"google.protobuf.internal.containers" -> "pickle" [];
	"google.protobuf.internal.containers" -> "typing" [];
	"google.protobuf.text_format" -> "io" [];
	"google.protobuf.text_format" -> "math" [];
	"google.protobuf.text_format" -> "re" [];
	"google.protobuf.text_encoding" -> "re" [];
	"google.protobuf.internal.enum_type_wrapper" -> "sys" [];
	"google.protobuf.symbol_database" -> "warnings" [];
	"google.protobuf.runtime_version" -> "enum" [];
	"google.protobuf.runtime_version" -> "os" [];
	"google.protobuf.runtime_version" -> "warnings" [];
	"google.protobuf.descriptor_pool" -> "collections" [];
	"google.protobuf.descriptor_pool" -> "threading" [];
	"google.protobuf.descriptor_pool" -> "warnings" [];
	"google.protobuf.descriptor_database" -> "warnings" [];
	"google.protobuf.descriptor" -> "abc" [];
	"google.protobuf.descriptor" -> "binascii" [];
	"google.protobuf.descriptor" -> "os" [];
	"google.protobuf.descriptor" -> "threading" [];
	"google.protobuf.descriptor" -> "warnings" [];
	"google.cloud.aiplatform.matching_engine._protos.match_service_pb2_grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.async_client" -> "typing" [];
	"google.api_core.client_logging" -> "logging" [];
	"google.api_core.client_logging" -> "json" [];
	"google.api_core.client_logging" -> "os" [];
	"google.api_core.client_logging" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_base" -> "typing" [];
	"google.api_core.path_template" -> "__future__" [];
	"google.api_core.path_template" -> "collections" [];
	"google.api_core.path_template" -> "copy" [];
	"google.api_core.path_template" -> "functools" [];
	"google.api_core.path_template" -> "re" [];
	"google.api_core.rest_helpers" -> "functools" [];
	"google.api_core.rest_helpers" -> "operator" [];
	"google.auth.aio" -> "logging" [];
	"google.api_core.rest_streaming_async" -> "typing" [];
	"google.api_core.rest_streaming_async" -> "proto" [];
	"google.api_core._rest_streaming_base" -> "collections" [];
	"google.api_core._rest_streaming_base" -> "string" [];
	"google.api_core._rest_streaming_base" -> "typing" [];
	"google.api_core._rest_streaming_base" -> "types" [];
	"google.api_core._rest_streaming_base" -> "proto" [];
	"google.auth.aio.transport" -> "abc" [];
	"google.auth.aio.transport" -> "typing" [];
	"google.auth.aio.transport.sessions" -> "asyncio" [];
	"google.auth.aio.transport.sessions" -> "contextlib" [];
	"google.auth.aio.transport.sessions" -> "functools" [];
	"google.auth.aio.transport.sessions" -> "time" [];
	"google.auth.aio.transport.sessions" -> "typing" [];
	"google.auth.aio.transport.aiohttp" -> "asyncio" [];
	"google.auth.aio.transport.aiohttp" -> "typing" [];
	"google.auth.aio.transport.aiohttp" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" -> "warnings" [];
	"google.api_core.rest_streaming" -> "typing" [];
	"google.api_core.rest_streaming" -> "proto" [];
	"google.api_core.rest_streaming" -> "requests" [];
	"google.api_core.datetime_helpers" -> "calendar" [];
	"google.api_core.datetime_helpers" -> "datetime" [];
	"google.api_core.datetime_helpers" -> "re" [];
	"google.api_core.retry.retry_streaming_async" -> "__future__" [];
	"google.api_core.retry.retry_streaming_async" -> "typing" [];
	"google.api_core.retry.retry_streaming_async" -> "asyncio" [];
	"google.api_core.retry.retry_streaming_async" -> "time" [];
	"google.api_core.retry.retry_streaming_async" -> "sys" [];
	"google.api_core.retry.retry_streaming_async" -> "functools" [];
	"google.api_core.retry.retry_streaming_async" -> "typing_extensions" [];
	"google.api_core.retry.retry_streaming" -> "__future__" [];
	"google.api_core.retry.retry_streaming" -> "typing" [];
	"google.api_core.retry.retry_streaming" -> "sys" [];
	"google.api_core.retry.retry_streaming" -> "time" [];
	"google.api_core.retry.retry_streaming" -> "functools" [];
	"google.api_core.retry.retry_streaming" -> "typing_extensions" [];
	"google.api_core.retry.retry_unary_async" -> "__future__" [];
	"google.api_core.retry.retry_unary_async" -> "asyncio" [];
	"google.api_core.retry.retry_unary_async" -> "time" [];
	"google.api_core.retry.retry_unary_async" -> "functools" [];
	"google.api_core.retry.retry_unary_async" -> "typing" [];
	"google.api_core.retry.retry_unary_async" -> "sys" [];
	"google.api_core.retry.retry_unary_async" -> "typing_extensions" [];
	"google.api_core.retry.retry_unary" -> "__future__" [];
	"google.api_core.retry.retry_unary" -> "functools" [];
	"google.api_core.retry.retry_unary" -> "sys" [];
	"google.api_core.retry.retry_unary" -> "time" [];
	"google.api_core.retry.retry_unary" -> "inspect" [];
	"google.api_core.retry.retry_unary" -> "warnings" [];
	"google.api_core.retry.retry_unary" -> "typing" [];
	"google.api_core.retry.retry_unary" -> "typing_extensions" [];
	"google.api_core.retry.retry_base" -> "__future__" [];
	"google.api_core.retry.retry_base" -> "logging" [];
	"google.api_core.retry.retry_base" -> "random" [];
	"google.api_core.retry.retry_base" -> "time" [];
	"google.api_core.retry.retry_base" -> "enum" [];
	"google.api_core.retry.retry_base" -> "typing" [];
	"google.api_core.retry.retry_base" -> "sys" [];
	"google.api_core.retry.retry_base" -> "typing_extensions" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" -> "proto" [];
	"google.api_core.grpc_helpers" -> "typing" [];
	"google.api_core.grpc_helpers" -> "collections" [];
	"google.api_core.grpc_helpers" -> "functools" [];
	"google.api_core.grpc_helpers" -> "warnings" [];
	"google.api_core.grpc_helpers" -> "grpc" [];
	"google.api_core.grpc_helpers" -> "grpc_gcp" [];
	"proto.primitives" -> "enum" [];
	"proto.modules" -> "typing" [];
	"proto.modules" -> "collections" [];
	"proto.message" -> "collections" [];
	"proto.message" -> "copy" [];
	"proto.message" -> "re" [];
	"proto.message" -> "typing" [];
	"proto.message" -> "warnings" [];
	"proto.utils" -> "functools" [];
	"proto.marshal.marshal" -> "abc" [];
	"proto.marshal.marshal" -> "enum" [];
	"proto.marshal.collections.repeated" -> "collections" [];
	"proto.marshal.collections.repeated" -> "copy" [];
	"proto.marshal.collections.repeated" -> "typing" [];
	"proto.marshal.collections.maps" -> "collections" [];
	"proto.marshal.rules.dates" -> "datetime" [];
	"proto.marshal.rules.dates" -> "proto" [];
	"proto.marshal.rules.bytes" -> "base64" [];
	"proto.fields" -> "enum" [];
	"proto.enums" -> "enum" [];
	"proto.marshal.rules.enums" -> "typing" [];
	"proto.marshal.rules.enums" -> "enum" [];
	"proto.marshal.rules.enums" -> "warnings" [];
	"proto._package_info" -> "sys" [];
	"proto._file_info" -> "collections" [];
	"proto._file_info" -> "inspect" [];
	"proto._file_info" -> "logging" [];
	"proto.datetime_helpers" -> "calendar" [];
	"proto.datetime_helpers" -> "datetime" [];
	"proto.datetime_helpers" -> "re" [];
	"google.protobuf.json_format" -> "base64" [];
	"google.protobuf.json_format" -> "collections" [];
	"google.protobuf.json_format" -> "json" [];
	"google.protobuf.json_format" -> "math" [];
	"google.protobuf.json_format" -> "operator" [];
	"google.protobuf.json_format" -> "re" [];
	"google.auth.transport.grpc" -> "__future__" [];
	"google.auth.transport.grpc" -> "logging" [];
	"google.auth.transport.grpc" -> "os" [];
	"google.auth.transport.grpc" -> "grpc" [];
	"google.api_core.operations_v1.operations_rest_client_async" -> "typing" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "collections" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "os" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "re" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "typing" [];
	"google.api_core.operations_v1.transports.base" -> "abc" [];
	"google.api_core.operations_v1.transports.base" -> "re" [];
	"google.api_core.operations_v1.transports.base" -> "typing" [];
	"google.api_core.operations_v1.transports.base" -> "grpc" [];
	"google.api_core.operations_v1.transports" -> "collections" [];
	"google.api_core.operations_v1.transports" -> "typing" [];
	"google.api_core.operations_v1.pagers_async" -> "typing" [];
	"google.api_core.operations_v1.pagers_base" -> "typing" [];
	"google.api_core.operations_v1.transports.rest_asyncio" -> "json" [];
	"google.api_core.operations_v1.transports.rest_asyncio" -> "typing" [];
	"google.api_core.operations_v1.transports.rest" -> "typing" [];
	"google.api_core.operations_v1.transports.rest" -> "requests" [];
	"google.api_core.operations_v1.transports.rest" -> "grpc" [];
	"google.api_core.operations_v1.operations_client" -> "functools" [];
	"google.api_core.operations_v1.operations_client" -> "grpc" [];
	"google.api_core.timeout" -> "__future__" [];
	"google.api_core.timeout" -> "datetime" [];
	"google.api_core.timeout" -> "functools" [];
	"google.api_core.page_iterator" -> "abc" [];
	"google.api_core.operations_v1.operations_async_client" -> "functools" [];
	"google.api_core.operations_v1.operations_async_client" -> "grpc" [];
	"google.api_core.page_iterator_async" -> "abc" [];
	"google.api_core.operations_v1.abstract_operations_client" -> "typing" [];
	"google.api_core.operations_v1.abstract_operations_client" -> "grpc" [];
	"google.api_core.operations_v1.pagers" -> "typing" [];
	"google.api_core.grpc_helpers_async" -> "asyncio" [];
	"google.api_core.grpc_helpers_async" -> "functools" [];
	"google.api_core.grpc_helpers_async" -> "typing" [];
	"google.api_core.grpc_helpers_async" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.base" -> "typing" [];
	"google.longrunning.operations_pb2_grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_data_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_data_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_data_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_data" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_data" -> "typing" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_data" -> "proto" [];
	"google.cloud.aiplatform_v1.types.api_auth" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.api_auth" -> "typing" [];
	"google.cloud.aiplatform_v1.types.api_auth" -> "proto" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.pagers" -> "typing" [];
	"google.api_core.operation_async" -> "functools" [];
	"google.api_core.operation_async" -> "threading" [];
	"google.api_core.future.async_future" -> "asyncio" [];
	"google.api_core.future.base" -> "abc" [];
	"google.api_core.future.polling" -> "abc" [];
	"google.api_core.future._helpers" -> "logging" [];
	"google.api_core.future._helpers" -> "threading" [];
	"google.api_core.protobuf_helpers" -> "collections" [];
	"google.api_core.protobuf_helpers" -> "copy" [];
	"google.api_core.protobuf_helpers" -> "inspect" [];
	"google.api_core.operation" -> "functools" [];
	"google.api_core.operation" -> "threading" [];
	"google.api_core.gapic_v1.routing_header" -> "functools" [];
	"google.api_core.gapic_v1.routing_header" -> "enum" [];
	"google.api_core.gapic_v1.method_async" -> "functools" [];
	"google.api_core.gapic_v1.method" -> "enum" [];
	"google.api_core.gapic_v1.method" -> "functools" [];
	"google.api_core.gapic_v1.config" -> "collections" [];
	"google.api_core.gapic_v1.config" -> "grpc" [];
	"google.api_core.client_info" -> "platform" [];
	"google.api_core.client_info" -> "typing" [];
	"google.api_core.client_info" -> "grpc" [];
	"google.api_core.exceptions" -> "__future__" [];
	"google.api_core.exceptions" -> "typing" [];
	"google.api_core.exceptions" -> "warnings" [];
	"google.api_core.exceptions" -> "grpc" [];
	"google.api_core.exceptions" -> "grpc_status" [];
	"grpc_status.rpc_status" -> "collections" [];
	"grpc_status.rpc_status" -> "sys" [];
	"grpc_status.rpc_status" -> "grpc" [];
	"grpc_status._common" -> "grpc" [];
	"google.api_core.universe" -> "typing" [];
	"google.api_core.client_options" -> "typing" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.value" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.value" -> "typing" [];
	"google.cloud.aiplatform_v1.types.value" -> "proto" [];
	"google.cloud.aiplatform_v1.types.user_action_reference" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.user_action_reference" -> "typing" [];
	"google.cloud.aiplatform_v1.types.user_action_reference" -> "proto" [];
	"google.cloud.aiplatform_v1.types.unmanaged_container_model" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.unmanaged_container_model" -> "typing" [];
	"google.cloud.aiplatform_v1.types.unmanaged_container_model" -> "proto" [];
	"google.cloud.aiplatform_v1.types.tuning_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.tuning_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.tuning_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.tool" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.tool" -> "typing" [];
	"google.cloud.aiplatform_v1.types.tool" -> "proto" [];
	"google.cloud.aiplatform_v1.types.saved_query" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.saved_query" -> "typing" [];
	"google.cloud.aiplatform_v1.types.saved_query" -> "proto" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine_execution_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine_execution_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine_execution_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine" -> "typing" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine" -> "proto" [];
	"google.cloud.aiplatform_v1.types.openapi" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.openapi" -> "typing" [];
	"google.cloud.aiplatform_v1.types.openapi" -> "proto" [];
	"google.cloud.aiplatform_v1.types.notebook_software_config" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.notebook_software_config" -> "typing" [];
	"google.cloud.aiplatform_v1.types.notebook_software_config" -> "proto" [];
	"google.cloud.aiplatform_v1.types.notebook_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.notebook_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.notebook_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.notebook_runtime_template_ref" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.notebook_runtime_template_ref" -> "typing" [];
	"google.cloud.aiplatform_v1.types.notebook_runtime_template_ref" -> "proto" [];
	"google.cloud.aiplatform_v1.types.notebook_runtime" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.notebook_runtime" -> "typing" [];
	"google.cloud.aiplatform_v1.types.notebook_runtime" -> "proto" [];
	"google.cloud.aiplatform_v1.types.notebook_idle_shutdown_config" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.notebook_idle_shutdown_config" -> "typing" [];
	"google.cloud.aiplatform_v1.types.notebook_idle_shutdown_config" -> "proto" [];
	"google.cloud.aiplatform_v1.types.notebook_execution_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.notebook_execution_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.notebook_execution_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.notebook_euc_config" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.notebook_euc_config" -> "typing" [];
	"google.cloud.aiplatform_v1.types.notebook_euc_config" -> "proto" [];
	"google.cloud.aiplatform_v1.types.network_spec" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.network_spec" -> "typing" [];
	"google.cloud.aiplatform_v1.types.network_spec" -> "proto" [];
	"google.cloud.aiplatform_v1.types.nas_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.nas_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.nas_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.model_garden_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.model_garden_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.model_garden_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.migration_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.migration_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.migration_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.migratable_resource" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.migratable_resource" -> "typing" [];
	"google.cloud.aiplatform_v1.types.migratable_resource" -> "proto" [];
	"google.cloud.aiplatform_v1.types.match_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.match_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.match_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.llm_utility_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.llm_utility_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.llm_utility_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.index_endpoint_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.index_endpoint_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.index_endpoint_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.genai_tuning_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.genai_tuning_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.genai_tuning_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.gen_ai_cache_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.gen_ai_cache_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.gen_ai_cache_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.featurestore_monitoring" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.featurestore_monitoring" -> "typing" [];
	"google.cloud.aiplatform_v1.types.featurestore_monitoring" -> "proto" [];
	"google.cloud.aiplatform_v1.types.evaluation_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.evaluation_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.evaluation_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.evaluated_annotation" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.evaluated_annotation" -> "typing" [];
	"google.cloud.aiplatform_v1.types.evaluated_annotation" -> "proto" [];
	"google.cloud.aiplatform_v1.types.dataset_version" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.dataset_version" -> "typing" [];
	"google.cloud.aiplatform_v1.types.dataset_version" -> "proto" [];
	"google.cloud.aiplatform_v1.types.content" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.content" -> "typing" [];
	"google.cloud.aiplatform_v1.types.content" -> "proto" [];
	"google.cloud.aiplatform_v1.services.notebook_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.notebook_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.notebook_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.notebook_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.notebook_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.migration_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.migration_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.migration_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.migration_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.match_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.match_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.match_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.match_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.match_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.vizier_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.vizier_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.vizier_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.vizier_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.schedule_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.schedule_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.schedule_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.schedule_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.prediction_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.prediction_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.prediction_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.model_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.model_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.model_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.metadata_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.metadata_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.metadata_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.metadata_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.job_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.job_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.job_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.job_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.job_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.job_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.index_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.index_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.index_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.index_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.index_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "http" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "json" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "os" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "re" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1.services.dataset_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1.services.dataset_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1.services.dataset_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1.services.dataset_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.value" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.value" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.value" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.user_action_reference" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.user_action_reference" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.user_action_reference" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.unmanaged_container_model" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.unmanaged_container_model" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.unmanaged_container_model" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.ui_pipeline_spec" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.ui_pipeline_spec" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.ui_pipeline_spec" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.tuning_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.tuning_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.tuning_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.tool" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.tool" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.tool" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.session_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.session_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.session_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.session" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.session" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.session" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.saved_query" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.saved_query" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.saved_query" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_execution_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_execution_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_execution_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.openapi" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.openapi" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.openapi" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_software_config" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_software_config" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_software_config" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime_template_ref" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime_template_ref" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime_template_ref" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_idle_shutdown_config" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_idle_shutdown_config" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_idle_shutdown_config" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_execution_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_execution_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_execution_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_euc_config" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_euc_config" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_euc_config" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.network_spec" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.network_spec" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.network_spec" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.nas_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.nas_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.nas_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.migration_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.migration_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.migration_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.migratable_resource" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.migratable_resource" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.migratable_resource" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.llm_utility_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.llm_utility_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.llm_utility_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.genai_tuning_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.genai_tuning_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.genai_tuning_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.extension_registry_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.extension_registry_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.extension_registry_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.extension_execution_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.extension_execution_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.extension_execution_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.extension" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.extension" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.extension" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.example_store_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.example_store_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.example_store_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.example_store" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.example_store" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.example_store" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.example" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.example" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.example" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.evaluation_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.evaluation_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.evaluation_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.evaluated_annotation" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.evaluated_annotation" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.evaluated_annotation" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.dataset_version" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.dataset_version" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.dataset_version" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.content" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.content" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.content" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.api_auth" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.api_auth" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.api_auth" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "http" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "os" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio" -> "aiohttp" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_base" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_base" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" -> "requests" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" -> "dataclasses" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" -> "json" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" -> "pickle" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" -> "warnings" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" -> "grpc" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.base" -> "abc" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.base" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.pagers" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.async_client" -> "logging" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.async_client" -> "collections" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.async_client" -> "re" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.async_client" -> "typing" [];
	"google.cloud.aiplatform_v1.types.vizier_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.vizier_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.vizier_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.types" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.types" -> "typing" [];
	"google.cloud.aiplatform_v1.types.types" -> "proto" [];
	"google.cloud.aiplatform_v1.types.training_pipeline" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.training_pipeline" -> "typing" [];
	"google.cloud.aiplatform_v1.types.training_pipeline" -> "proto" [];
	"google.cloud.aiplatform_v1.types.tensorboard_time_series" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.tensorboard_time_series" -> "typing" [];
	"google.cloud.aiplatform_v1.types.tensorboard_time_series" -> "proto" [];
	"google.cloud.aiplatform_v1.types.tensorboard_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.tensorboard_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.tensorboard_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.tensorboard_run" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.tensorboard_run" -> "typing" [];
	"google.cloud.aiplatform_v1.types.tensorboard_run" -> "proto" [];
	"google.cloud.aiplatform_v1.types.tensorboard_experiment" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.tensorboard_experiment" -> "typing" [];
	"google.cloud.aiplatform_v1.types.tensorboard_experiment" -> "proto" [];
	"google.cloud.aiplatform_v1.types.tensorboard_data" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.tensorboard_data" -> "typing" [];
	"google.cloud.aiplatform_v1.types.tensorboard_data" -> "proto" [];
	"google.cloud.aiplatform_v1.types.tensorboard" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.tensorboard" -> "typing" [];
	"google.cloud.aiplatform_v1.types.tensorboard" -> "proto" [];
	"google.cloud.aiplatform_v1.types.study" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.study" -> "typing" [];
	"google.cloud.aiplatform_v1.types.study" -> "proto" [];
	"google.cloud.aiplatform_v1.types.specialist_pool_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.specialist_pool_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.specialist_pool_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.specialist_pool" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.specialist_pool" -> "typing" [];
	"google.cloud.aiplatform_v1.types.specialist_pool" -> "proto" [];
	"google.cloud.aiplatform_v1.types.service_networking" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.service_networking" -> "typing" [];
	"google.cloud.aiplatform_v1.types.service_networking" -> "proto" [];
	"google.cloud.aiplatform_v1.types.schedule_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.schedule_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.schedule_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.schedule" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.schedule" -> "typing" [];
	"google.cloud.aiplatform_v1.types.schedule" -> "proto" [];
	"google.cloud.aiplatform_v1.types.reservation_affinity" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.reservation_affinity" -> "typing" [];
	"google.cloud.aiplatform_v1.types.reservation_affinity" -> "proto" [];
	"google.cloud.aiplatform_v1.types.publisher_model" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.publisher_model" -> "typing" [];
	"google.cloud.aiplatform_v1.types.publisher_model" -> "proto" [];
	"google.cloud.aiplatform_v1.types.prediction_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.prediction_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.prediction_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.pipeline_state" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.pipeline_state" -> "typing" [];
	"google.cloud.aiplatform_v1.types.pipeline_state" -> "proto" [];
	"google.cloud.aiplatform_v1.types.pipeline_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.pipeline_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.pipeline_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.pipeline_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.pipeline_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.pipeline_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.pipeline_failure_policy" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.pipeline_failure_policy" -> "typing" [];
	"google.cloud.aiplatform_v1.types.pipeline_failure_policy" -> "proto" [];
	"google.cloud.aiplatform_v1.types.persistent_resource_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.persistent_resource_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.persistent_resource_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.persistent_resource" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.persistent_resource" -> "typing" [];
	"google.cloud.aiplatform_v1.types.persistent_resource" -> "proto" [];
	"google.cloud.aiplatform_v1.types.operation" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.operation" -> "typing" [];
	"google.cloud.aiplatform_v1.types.operation" -> "proto" [];
	"google.cloud.aiplatform_v1.types.model_monitoring" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.model_monitoring" -> "typing" [];
	"google.cloud.aiplatform_v1.types.model_monitoring" -> "proto" [];
	"google.cloud.aiplatform_v1.types.model_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.model_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.model_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.model_deployment_monitoring_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.model_deployment_monitoring_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.model_deployment_monitoring_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.model_evaluation_slice" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.model_evaluation_slice" -> "typing" [];
	"google.cloud.aiplatform_v1.types.model_evaluation_slice" -> "proto" [];
	"google.cloud.aiplatform_v1.types.model_evaluation" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.model_evaluation" -> "typing" [];
	"google.cloud.aiplatform_v1.types.model_evaluation" -> "proto" [];
	"google.cloud.aiplatform_v1.types.model" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.model" -> "typing" [];
	"google.cloud.aiplatform_v1.types.model" -> "proto" [];
	"google.cloud.aiplatform_v1.types.metadata_store" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.metadata_store" -> "typing" [];
	"google.cloud.aiplatform_v1.types.metadata_store" -> "proto" [];
	"google.cloud.aiplatform_v1.types.metadata_schema" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.metadata_schema" -> "typing" [];
	"google.cloud.aiplatform_v1.types.metadata_schema" -> "proto" [];
	"google.cloud.aiplatform_v1.types.metadata_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.metadata_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.metadata_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.manual_batch_tuning_parameters" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.manual_batch_tuning_parameters" -> "typing" [];
	"google.cloud.aiplatform_v1.types.manual_batch_tuning_parameters" -> "proto" [];
	"google.cloud.aiplatform_v1.types.machine_resources" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.machine_resources" -> "typing" [];
	"google.cloud.aiplatform_v1.types.machine_resources" -> "proto" [];
	"google.cloud.aiplatform_v1.types.lineage_subgraph" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.lineage_subgraph" -> "typing" [];
	"google.cloud.aiplatform_v1.types.lineage_subgraph" -> "proto" [];
	"google.cloud.aiplatform_v1.types.job_state" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.job_state" -> "typing" [];
	"google.cloud.aiplatform_v1.types.job_state" -> "proto" [];
	"google.cloud.aiplatform_v1.types.job_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.job_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.job_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.io" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.io" -> "typing" [];
	"google.cloud.aiplatform_v1.types.io" -> "proto" [];
	"google.cloud.aiplatform_v1.types.index_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.index_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.index_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.index_endpoint" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.index_endpoint" -> "typing" [];
	"google.cloud.aiplatform_v1.types.index_endpoint" -> "proto" [];
	"google.cloud.aiplatform_v1.types.index" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.index" -> "typing" [];
	"google.cloud.aiplatform_v1.types.index" -> "proto" [];
	"google.cloud.aiplatform_v1.types.hyperparameter_tuning_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.hyperparameter_tuning_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.hyperparameter_tuning_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.featurestore_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.featurestore_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.featurestore_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.featurestore_online_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.featurestore_online_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.featurestore_online_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.featurestore" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.featurestore" -> "typing" [];
	"google.cloud.aiplatform_v1.types.featurestore" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_view_sync" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_view_sync" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_view_sync" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_view" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_view" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_view" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_selector" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_selector" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_selector" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_registry_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_registry_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_registry_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_online_store_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_online_store_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_online_store_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_online_store_admin_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_online_store_admin_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_online_store_admin_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_online_store" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_online_store" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_online_store" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_monitoring_stats" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_monitoring_stats" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_monitoring_stats" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature_group" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature_group" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature_group" -> "proto" [];
	"google.cloud.aiplatform_v1.types.feature" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.feature" -> "typing" [];
	"google.cloud.aiplatform_v1.types.feature" -> "proto" [];
	"google.cloud.aiplatform_v1.types.explanation_metadata" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.explanation_metadata" -> "typing" [];
	"google.cloud.aiplatform_v1.types.explanation_metadata" -> "proto" [];
	"google.cloud.aiplatform_v1.types.explanation" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.explanation" -> "typing" [];
	"google.cloud.aiplatform_v1.types.explanation" -> "proto" [];
	"google.cloud.aiplatform_v1.types.execution" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.execution" -> "typing" [];
	"google.cloud.aiplatform_v1.types.execution" -> "proto" [];
	"google.cloud.aiplatform_v1.types.event" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.event" -> "typing" [];
	"google.cloud.aiplatform_v1.types.event" -> "proto" [];
	"google.cloud.aiplatform_v1.types.env_var" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.env_var" -> "typing" [];
	"google.cloud.aiplatform_v1.types.env_var" -> "proto" [];
	"google.cloud.aiplatform_v1.types.entity_type" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.entity_type" -> "typing" [];
	"google.cloud.aiplatform_v1.types.entity_type" -> "proto" [];
	"google.cloud.aiplatform_v1.types.endpoint_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.endpoint_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.endpoint_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.endpoint" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.endpoint" -> "typing" [];
	"google.cloud.aiplatform_v1.types.endpoint" -> "proto" [];
	"google.cloud.aiplatform_v1.types.encryption_spec" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.encryption_spec" -> "typing" [];
	"google.cloud.aiplatform_v1.types.encryption_spec" -> "proto" [];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool" -> "typing" [];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool" -> "proto" [];
	"google.cloud.aiplatform_v1.types.deployed_model_ref" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.deployed_model_ref" -> "typing" [];
	"google.cloud.aiplatform_v1.types.deployed_model_ref" -> "proto" [];
	"google.cloud.aiplatform_v1.types.deployed_index_ref" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.deployed_index_ref" -> "typing" [];
	"google.cloud.aiplatform_v1.types.deployed_index_ref" -> "proto" [];
	"google.cloud.aiplatform_v1.types.dataset_service" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.dataset_service" -> "typing" [];
	"google.cloud.aiplatform_v1.types.dataset_service" -> "proto" [];
	"google.cloud.aiplatform_v1.types.dataset" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.dataset" -> "typing" [];
	"google.cloud.aiplatform_v1.types.dataset" -> "proto" [];
	"google.cloud.aiplatform_v1.types.data_labeling_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.data_labeling_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.data_labeling_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.data_item" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.data_item" -> "typing" [];
	"google.cloud.aiplatform_v1.types.data_item" -> "proto" [];
	"google.cloud.aiplatform_v1.types.custom_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.custom_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.custom_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.context" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.context" -> "typing" [];
	"google.cloud.aiplatform_v1.types.context" -> "proto" [];
	"google.cloud.aiplatform_v1.types.completion_stats" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.completion_stats" -> "typing" [];
	"google.cloud.aiplatform_v1.types.completion_stats" -> "proto" [];
	"google.cloud.aiplatform_v1.types.cached_content" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.cached_content" -> "typing" [];
	"google.cloud.aiplatform_v1.types.cached_content" -> "proto" [];
	"google.cloud.aiplatform_v1.types.batch_prediction_job" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.batch_prediction_job" -> "typing" [];
	"google.cloud.aiplatform_v1.types.batch_prediction_job" -> "proto" [];
	"google.cloud.aiplatform_v1.types.artifact" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.artifact" -> "typing" [];
	"google.cloud.aiplatform_v1.types.artifact" -> "proto" [];
	"google.cloud.aiplatform_v1.types.annotation_spec" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.annotation_spec" -> "typing" [];
	"google.cloud.aiplatform_v1.types.annotation_spec" -> "proto" [];
	"google.cloud.aiplatform_v1.types.annotation" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.annotation" -> "typing" [];
	"google.cloud.aiplatform_v1.types.annotation" -> "proto" [];
	"google.cloud.aiplatform_v1.types.accelerator_type" -> "__future__" [];
	"google.cloud.aiplatform_v1.types.accelerator_type" -> "typing" [];
	"google.cloud.aiplatform_v1.types.accelerator_type" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.vizier_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.vizier_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.vizier_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.types" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.types" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.types" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.training_pipeline" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.training_pipeline" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.training_pipeline" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_time_series" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_time_series" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_time_series" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_run" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_run" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_run" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_experiment" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_experiment" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_experiment" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_data" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_data" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_data" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.study" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.study" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.study" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.schedule_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.schedule_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.schedule_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.schedule" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.schedule" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.schedule" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.service_networking" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.service_networking" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.service_networking" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.reservation_affinity" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.reservation_affinity" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.reservation_affinity" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.publisher_model" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.publisher_model" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.publisher_model" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.prediction_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.prediction_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.prediction_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_state" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_state" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_state" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_failure_policy" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_failure_policy" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_failure_policy" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.operation" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.operation" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.operation" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_stats" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_stats" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_stats" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_spec" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_spec" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_spec" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_alert" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_alert" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_alert" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitor" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitor" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitor" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_garden_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_garden_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_garden_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_deployment_monitoring_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_deployment_monitoring_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_deployment_monitoring_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation_slice" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation_slice" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation_slice" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.model" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.model" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.model" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_store" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_store" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_store" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_schema" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_schema" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_schema" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.match_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.match_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.match_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.manual_batch_tuning_parameters" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.manual_batch_tuning_parameters" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.manual_batch_tuning_parameters" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.machine_resources" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.machine_resources" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.machine_resources" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.lineage_subgraph" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.lineage_subgraph" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.lineage_subgraph" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.job_state" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.job_state" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.job_state" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.job_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.job_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.job_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.index_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.index_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.index_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.io" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.io" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.io" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.hyperparameter_tuning_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.hyperparameter_tuning_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.hyperparameter_tuning_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.index" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.index" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.index" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.gen_ai_cache_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.gen_ai_cache_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.gen_ai_cache_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_online_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_online_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_online_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_monitoring" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_monitoring" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_monitoring" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_view_sync" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_view_sync" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_view_sync" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_view" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_view" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_view" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_selector" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_selector" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_selector" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_registry_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_registry_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_registry_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_admin_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_admin_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_admin_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitoring_stats" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitoring_stats" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitoring_stats" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature_group" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature_group" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature_group" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.feature" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.feature" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.feature" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.explanation_metadata" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.explanation_metadata" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.explanation_metadata" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.explanation" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.explanation" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.explanation" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.execution" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.execution" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.execution" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.event" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.event" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.event" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.env_var" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.env_var" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.env_var" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.entity_type" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.entity_type" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.entity_type" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.endpoint_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.endpoint_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.endpoint_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.endpoint" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.endpoint" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.endpoint" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.encryption_spec" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.encryption_spec" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.encryption_spec" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.deployed_model_ref" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.deployed_model_ref" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.deployed_model_ref" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.deployed_index_ref" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.deployed_index_ref" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.deployed_index_ref" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.dataset_service" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.dataset_service" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.dataset_service" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.dataset" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.dataset" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.dataset" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.data_labeling_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.data_labeling_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.data_labeling_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.data_item" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.data_item" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.data_item" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.custom_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.custom_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.custom_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.context" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.context" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.context" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.completion_stats" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.completion_stats" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.completion_stats" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.cached_content" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.cached_content" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.cached_content" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.batch_prediction_job" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.batch_prediction_job" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.batch_prediction_job" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.artifact" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.artifact" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.artifact" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.annotation_spec" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.annotation_spec" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.annotation_spec" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.annotation" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.annotation" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.annotation" -> "proto" [];
	"google.cloud.aiplatform_v1beta1.types.accelerator_type" -> "__future__" [];
	"google.cloud.aiplatform_v1beta1.types.accelerator_type" -> "typing" [];
	"google.cloud.aiplatform_v1beta1.types.accelerator_type" -> "proto" [];
	"google.cloud.aiplatform.utils" -> "abc" [];
	"google.cloud.aiplatform.utils" -> "datetime" [];
	"google.cloud.aiplatform.utils" -> "pathlib" [];
	"google.cloud.aiplatform.utils" -> "logging" [];
	"google.cloud.aiplatform.utils" -> "re" [];
	"google.cloud.aiplatform.utils" -> "typing" [];
	"google.cloud.aiplatform.utils" -> "uuid" [];
	"google.cloud.aiplatform.utils.column_transformations_utils" -> "typing" [];
	"google.cloud.aiplatform.datasets.video_dataset" -> "typing" [];
	"google.cloud.aiplatform.datasets.text_dataset" -> "typing" [];
	"google.cloud.aiplatform.datasets.image_dataset" -> "typing" [];
	"google.cloud.aiplatform.datasets.time_series_dataset" -> "typing" [];
	"google.cloud.aiplatform.datasets.tabular_dataset" -> "typing" [];
	"google.cloud.aiplatform.datasets.tabular_dataset" -> "pyarrow" [];
	"google.cloud.bigquery" -> "warnings" [];
	"google.cloud.bigquery" -> "bigquery_magics" [];
	"google.cloud.bigquery.magics.magics" -> "__future__" [];
	"google.cloud.bigquery.magics.magics" -> "re" [];
	"google.cloud.bigquery.magics.magics" -> "ast" [];
	"google.cloud.bigquery.magics.magics" -> "copy" [];
	"google.cloud.bigquery.magics.magics" -> "functools" [];
	"google.cloud.bigquery.magics.magics" -> "sys" [];
	"google.cloud.bigquery.magics.magics" -> "time" [];
	"google.cloud.bigquery.magics.magics" -> "warnings" [];
	"google.cloud.bigquery.magics.magics" -> "concurrent" [];
	"google.cloud.bigquery.magics.magics" -> "IPython" [];
	"google.cloud.bigquery.magics.magics" -> "'IPython.core'" [];
	"google.cloud.bigquery.magics.magics" -> "bigquery_magics" [];
	"google.cloud.bigquery.magics.line_arg_parser.visitors" -> "__future__" [];
	"google.cloud.bigquery.magics.line_arg_parser.lexer" -> "collections" [];
	"google.cloud.bigquery.magics.line_arg_parser.lexer" -> "itertools" [];
	"google.cloud.bigquery.magics.line_arg_parser.lexer" -> "re" [];
	"google.cloud.bigquery.magics.line_arg_parser.lexer" -> "enum" [];
	"google.cloud.bigquery.dbapi._helpers" -> "collections" [];
	"google.cloud.bigquery.dbapi._helpers" -> "datetime" [];
	"google.cloud.bigquery.dbapi._helpers" -> "decimal" [];
	"google.cloud.bigquery.dbapi._helpers" -> "functools" [];
	"google.cloud.bigquery.dbapi._helpers" -> "numbers" [];
	"google.cloud.bigquery.dbapi._helpers" -> "re" [];
	"google.cloud.bigquery.dbapi._helpers" -> "typing" [];
	"google.cloud.bigquery.dbapi.types" -> "datetime" [];
	"google.cloud.bigquery.dbapi.connection" -> "weakref" [];
	"google.cloud.bigquery.dbapi.cursor" -> "__future__" [];
	"google.cloud.bigquery.dbapi.cursor" -> "collections" [];
	"google.cloud.bigquery.dbapi.cursor" -> "re" [];
	"google.cloud.bigquery.dbapi.cursor" -> "typing" [];
	"google.cloud.exceptions" -> "__future__" [];
	"google.cloud.bigquery.encryption_configuration" -> "copy" [];
	"google.cloud.bigquery.table" -> "__future__" [];
	"google.cloud.bigquery.table" -> "copy" [];
	"google.cloud.bigquery.table" -> "datetime" [];
	"google.cloud.bigquery.table" -> "functools" [];
	"google.cloud.bigquery.table" -> "operator" [];
	"google.cloud.bigquery.table" -> "typing" [];
	"google.cloud.bigquery.table" -> "warnings" [];
	"google.cloud.bigquery.table" -> "pandas" [];
	"google.cloud.bigquery.table" -> "pyarrow" [];
	"google.cloud.bigquery.table" -> "db_dtypes" [];
	"google.cloud.bigquery.table" -> "geopandas" [];
	"google.cloud.bigquery.table" -> "shapely" [];
	"google.cloud.bigquery._tqdm_helpers" -> "sys" [];
	"google.cloud.bigquery._tqdm_helpers" -> "time" [];
	"google.cloud.bigquery._tqdm_helpers" -> "typing" [];
	"google.cloud.bigquery._tqdm_helpers" -> "warnings" [];
	"google.cloud.bigquery._tqdm_helpers" -> "tqdm" [];
	"google.cloud._helpers" -> "__future__" [];
	"google.cloud._helpers" -> "calendar" [];
	"google.cloud._helpers" -> "datetime" [];
	"google.cloud._helpers" -> "os" [];
	"google.cloud._helpers" -> "re" [];
	"google.cloud._helpers" -> "threading" [];
	"google.cloud._helpers" -> "typing" [];
	"google.cloud._helpers" -> "grpc" [];
	"shapely.prepared" -> "pickle" [];
	"shapely._version" -> "json" [];
	"shapely.geometry.point" -> "numpy" [];
	"shapely.geometry.point" -> "shapely" [];
	"shapely.geometry.multipolygon" -> "shapely" [];
	"shapely.geometry.multipoint" -> "shapely" [];
	"shapely.geometry.multilinestring" -> "shapely" [];
	"shapely.geometry.linestring" -> "numpy" [];
	"shapely.geometry.linestring" -> "shapely" [];
	"shapely.geometry.geo" -> "numpy" [];
	"shapely.geometry.polygon" -> "numpy" [];
	"shapely.geometry.polygon" -> "shapely" [];
	"shapely.algorithms.cga" -> "numpy" [];
	"shapely.algorithms.cga" -> "shapely" [];
	"shapely.geometry.collection" -> "shapely" [];
	"shapely.geometry.base" -> "re" [];
	"shapely.geometry.base" -> "warnings" [];
	"shapely.geometry.base" -> "numpy" [];
	"shapely.geometry.base" -> "shapely" [];
	"shapely.coords" -> "array" [];
	"shapely.io" -> "numpy" [];
	"shapely.decorators" -> "os" [];
	"shapely.decorators" -> "functools" [];
	"shapely.decorators" -> "numpy" [];
	"shapely._ragged_array" -> "numpy" [];
	"shapely._enum" -> "enum" [];
	"shapely.strtree" -> "typing" [];
	"shapely.strtree" -> "numpy" [];
	"shapely.coordinates" -> "numpy" [];
	"shapely.set_operations" -> "numpy" [];
	"shapely.measurement" -> "warnings" [];
	"shapely.measurement" -> "numpy" [];
	"shapely.predicates" -> "warnings" [];
	"shapely.predicates" -> "numpy" [];
	"shapely.constructive" -> "numpy" [];
	"shapely.algorithms._oriented_envelope" -> "math" [];
	"shapely.algorithms._oriented_envelope" -> "itertools" [];
	"shapely.algorithms._oriented_envelope" -> "numpy" [];
	"shapely.algorithms._oriented_envelope" -> "shapely" [];
	"shapely.affinity" -> "math" [];
	"shapely.affinity" -> "numpy" [];
	"shapely.creation" -> "numpy" [];
	"shapely._geometry" -> "warnings" [];
	"shapely._geometry" -> "enum" [];
	"shapely._geometry" -> "numpy" [];
	"shapely.errors" -> "threading" [];
	"shapely.errors" -> "warnings" [];
	"google.cloud.bigquery.routine.routine" -> "typing" [];
	"google.cloud.bigquery.query" -> "collections" [];
	"google.cloud.bigquery.query" -> "copy" [];
	"google.cloud.bigquery.query" -> "datetime" [];
	"google.cloud.bigquery.query" -> "decimal" [];
	"google.cloud.bigquery.query" -> "typing" [];
	"google.cloud.bigquery.model" -> "__future__" [];
	"google.cloud.bigquery.model" -> "copy" [];
	"google.cloud.bigquery.model" -> "datetime" [];
	"google.cloud.bigquery.model" -> "typing" [];
	"google.cloud.bigquery.job.base" -> "collections" [];
	"google.cloud.bigquery.job.base" -> "copy" [];
	"google.cloud.bigquery.job.base" -> "http" [];
	"google.cloud.bigquery.job.base" -> "threading" [];
	"google.cloud.bigquery.job.base" -> "typing" [];
	"google.cloud.bigquery.format_options" -> "copy" [];
	"google.cloud.bigquery.format_options" -> "typing" [];
	"google.cloud.bigquery.external_config" -> "__future__" [];
	"google.cloud.bigquery.external_config" -> "base64" [];
	"google.cloud.bigquery.external_config" -> "copy" [];
	"google.cloud.bigquery.external_config" -> "typing" [];
	"google.cloud.bigquery.enums" -> "enum" [];
	"google.cloud.bigquery.dataset" -> "__future__" [];
	"google.cloud.bigquery.dataset" -> "copy" [];
	"google.cloud.bigquery.dataset" -> "typing" [];
	"google.cloud.bigquery.client" -> "__future__" [];
	"google.cloud.bigquery.client" -> "collections" [];
	"google.cloud.bigquery.client" -> "copy" [];
	"google.cloud.bigquery.client" -> "datetime" [];
	"google.cloud.bigquery.client" -> "functools" [];
	"google.cloud.bigquery.client" -> "gzip" [];
	"google.cloud.bigquery.client" -> "io" [];
	"google.cloud.bigquery.client" -> "itertools" [];
	"google.cloud.bigquery.client" -> "json" [];
	"google.cloud.bigquery.client" -> "math" [];
	"google.cloud.bigquery.client" -> "os" [];
	"google.cloud.bigquery.client" -> "tempfile" [];
	"google.cloud.bigquery.client" -> "typing" [];
	"google.cloud.bigquery.client" -> "uuid" [];
	"google.cloud.bigquery.client" -> "warnings" [];
	"google.cloud.bigquery.client" -> "requests" [];
	"google.cloud.bigquery.client" -> "google" [];
	"google.cloud.bigquery.client" -> "'google.cloud.bigquery_storage_v1'" [];
	"google.cloud.bigquery.opentelemetry_tracing" -> "logging" [];
	"google.cloud.bigquery.opentelemetry_tracing" -> "contextlib" [];
	"google.cloud.bigquery.opentelemetry_tracing" -> "opentelemetry" [];
	"google.cloud.bigquery.opentelemetry_tracing" -> "'opentelemetry.instrumentation'" [];
	"google.cloud.bigquery.opentelemetry_tracing" -> "'opentelemetry.trace'" [];
	"google.cloud._http" -> "collections" [];
	"google.cloud._http" -> "json" [];
	"google.cloud._http" -> "os" [];
	"google.cloud._http" -> "platform" [];
	"google.cloud._http" -> "typing" [];
	"google.cloud._http" -> "warnings" [];
	"google.cloud.client" -> "io" [];
	"google.cloud.client" -> "json" [];
	"google.cloud.client" -> "os" [];
	"google.cloud.client" -> "pickle" [];
	"google.cloud.client" -> "typing" [];
	"google.api_core.iam" -> "collections" [];
	"google.api_core.iam" -> "operator" [];
	"google.api_core.iam" -> "warnings" [];
	"google.resumable_media.requests.download" -> "http" [];
	"google.resumable_media.requests._request_helpers" -> "time" [];
	"google.cloud.bigquery._job_helpers" -> "copy" [];
	"google.cloud.bigquery._job_helpers" -> "functools" [];
	"google.cloud.bigquery._job_helpers" -> "os" [];
	"google.cloud.bigquery._job_helpers" -> "uuid" [];
	"google.cloud.bigquery._job_helpers" -> "typing" [];
	"google.cloud.bigquery.job.query" -> "copy" [];
	"google.cloud.bigquery.job.query" -> "re" [];
	"google.cloud.bigquery.job.query" -> "time" [];
	"google.cloud.bigquery.job.query" -> "typing" [];
	"google.cloud.bigquery.job.query" -> "requests" [];
	"google.cloud.bigquery.job.query" -> "pandas" [];
	"google.cloud.bigquery.job.query" -> "geopandas" [];
	"google.cloud.bigquery.job.query" -> "pyarrow" [];
	"google.cloud.bigquery.job.load" -> "typing" [];
	"google.cloud.bigquery.job.extract" -> "typing" [];
	"google.cloud.bigquery.job.copy_" -> "typing" [];
	"google.cloud.bigquery._pandas_helpers" -> "datetime" [];
	"google.cloud.bigquery._pandas_helpers" -> "functools" [];
	"google.cloud.bigquery._pandas_helpers" -> "itertools" [];
	"google.cloud.bigquery._pandas_helpers" -> "logging" [];
	"google.cloud.bigquery._pandas_helpers" -> "queue" [];
	"google.cloud.bigquery._pandas_helpers" -> "threading" [];
	"google.cloud.bigquery._pandas_helpers" -> "warnings" [];
	"google.cloud.bigquery._pandas_helpers" -> "typing" [];
	"google.cloud.bigquery._pandas_helpers" -> "pandas" [];
	"google.cloud.bigquery._pandas_helpers" -> "numpy" [];
	"google.cloud.bigquery._pandas_helpers" -> "pandas_gbq" [];
	"google.cloud.bigquery._pandas_helpers" -> "db_dtypes" [];
	"google.cloud.bigquery._pandas_helpers" -> "shapely" [];
	"google.cloud.bigquery._pandas_helpers" -> "'google.cloud.bigquery_storage_v1'" [];
	"google.cloud.bigquery._versions_helpers" -> "sys" [];
	"google.cloud.bigquery._versions_helpers" -> "typing" [];
	"google.cloud.bigquery._versions_helpers" -> "pyarrow" [];
	"google.cloud.bigquery._versions_helpers" -> "pandas" [];
	"google.cloud.bigquery._pyarrow_helpers" -> "typing" [];
	"google.cloud.bigquery._pyarrow_helpers" -> "pyarrow" [];
	"google.cloud.bigquery._pyarrow_helpers" -> "db_dtypes" [];
	"google.cloud.bigquery.schema" -> "__future__" [];
	"google.cloud.bigquery.schema" -> "enum" [];
	"google.cloud.bigquery.schema" -> "typing" [];
	"google.cloud.bigquery.standard_sql" -> "copy" [];
	"google.cloud.bigquery.standard_sql" -> "typing" [];
	"google.cloud.bigquery._helpers" -> "base64" [];
	"google.cloud.bigquery._helpers" -> "datetime" [];
	"google.cloud.bigquery._helpers" -> "decimal" [];
	"google.cloud.bigquery._helpers" -> "json" [];
	"google.cloud.bigquery._helpers" -> "math" [];
	"google.cloud.bigquery._helpers" -> "re" [];
	"google.cloud.bigquery._helpers" -> "os" [];
	"google.cloud.bigquery._helpers" -> "textwrap" [];
	"google.cloud.bigquery._helpers" -> "warnings" [];
	"google.cloud.bigquery._helpers" -> "typing" [];
	"google.cloud.bigquery._helpers" -> "dateutil" [];
	"google.cloud.aiplatform.datasets.column_names_dataset" -> "csv" [];
	"google.cloud.aiplatform.datasets.column_names_dataset" -> "logging" [];
	"google.cloud.aiplatform.datasets.column_names_dataset" -> "typing" [];
	"google.cloud.aiplatform.datasets.dataset" -> "typing" [];
	"google.cloud.aiplatform.datasets._datasources" -> "abc" [];
	"google.cloud.aiplatform.datasets._datasources" -> "typing" [];
	"google.cloud.aiplatform.utils.featurestore_utils" -> "re" [];
	"google.cloud.aiplatform.utils.featurestore_utils" -> "typing" [];
	"google.cloud.aiplatform.utils.autologging_utils" -> "mlflow" [];
	"google.cloud.aiplatform.utils.yaml_utils" -> "types" [];
	"google.cloud.aiplatform.utils.yaml_utils" -> "typing" [];
	"google.cloud.aiplatform.utils.yaml_utils" -> "urllib" [];
	"google.cloud.aiplatform.utils.yaml_utils" -> "yaml" [];
	"google.cloud.aiplatform.constants.pipeline" -> "re" [];
	"google.cloud.aiplatform.utils.pipeline_utils" -> "copy" [];
	"google.cloud.aiplatform.utils.pipeline_utils" -> "json" [];
	"google.cloud.aiplatform.utils.pipeline_utils" -> "typing" [];
	"google.cloud.aiplatform.utils.prediction_utils" -> "shutil" [];
	"google.cloud.aiplatform.utils.prediction_utils" -> "inspect" [];
	"google.cloud.aiplatform.utils.prediction_utils" -> "logging" [];
	"google.cloud.aiplatform.utils.prediction_utils" -> "os" [];
	"google.cloud.aiplatform.utils.prediction_utils" -> "pathlib" [];
	"google.cloud.aiplatform.utils.prediction_utils" -> "re" [];
	"google.cloud.aiplatform.utils.prediction_utils" -> "typing" [];
	"google.cloud.aiplatform.constants.prediction" -> "re" [];
	"google.cloud.aiplatform.constants.prediction" -> "collections" [];
	"google.cloud.aiplatform.utils.path_utils" -> "pathlib" [];
	"google.cloud.aiplatform.utils._ipython_utils" -> "sys" [];
	"google.cloud.aiplatform.utils._ipython_utils" -> "typing" [];
	"google.cloud.aiplatform.utils._ipython_utils" -> "urllib" [];
	"google.cloud.aiplatform.utils._ipython_utils" -> "uuid" [];
	"google.cloud.aiplatform.utils._ipython_utils" -> "IPython" [];
	"google.cloud.aiplatform.utils._ipython_utils" -> "'IPython.display'" [];
	"vertexai.tuning._tuning" -> "typing" [];
	"vertexai" -> "importlib" [];
	"vertexai.generative_models._function_calling_utils" -> "inspect" [];
	"vertexai.generative_models._function_calling_utils" -> "typing" [];
	"vertexai.generative_models._function_calling_utils" -> "warnings" [];
	"vertexai.generative_models._function_calling_utils" -> "pydantic" [];
	"vertexai.generative_models._function_calling_utils" -> "docstring_parser" [];
	"docstring_parser.util" -> "typing" [];
	"docstring_parser.util" -> "collections" [];
	"docstring_parser.util" -> "inspect" [];
	"docstring_parser.util" -> "itertools" [];
	"docstring_parser.parser" -> "inspect" [];
	"docstring_parser.parser" -> "typing" [];
	"docstring_parser.attrdoc" -> "ast" [];
	"docstring_parser.attrdoc" -> "inspect" [];
	"docstring_parser.attrdoc" -> "sys" [];
	"docstring_parser.attrdoc" -> "textwrap" [];
	"docstring_parser.attrdoc" -> "typing" [];
	"docstring_parser.attrdoc" -> "types" [];
	"docstring_parser.rest" -> "inspect" [];
	"docstring_parser.rest" -> "re" [];
	"docstring_parser.rest" -> "typing" [];
	"docstring_parser.numpydoc" -> "inspect" [];
	"docstring_parser.numpydoc" -> "itertools" [];
	"docstring_parser.numpydoc" -> "re" [];
	"docstring_parser.numpydoc" -> "typing" [];
	"docstring_parser.numpydoc" -> "textwrap" [];
	"docstring_parser.google" -> "inspect" [];
	"docstring_parser.google" -> "re" [];
	"docstring_parser.google" -> "typing" [];
	"docstring_parser.google" -> "collections" [];
	"docstring_parser.google" -> "enum" [];
	"docstring_parser.epydoc" -> "inspect" [];
	"docstring_parser.epydoc" -> "re" [];
	"docstring_parser.epydoc" -> "typing" [];
	"docstring_parser.common" -> "enum" [];
	"docstring_parser.common" -> "typing" [];
	"vertexai.generative_models._generative_models" -> "copy" [];
	"vertexai.generative_models._generative_models" -> "functools" [];
	"vertexai.generative_models._generative_models" -> "io" [];
	"vertexai.generative_models._generative_models" -> "json" [];
	"vertexai.generative_models._generative_models" -> "pathlib" [];
	"vertexai.generative_models._generative_models" -> "re" [];
	"vertexai.generative_models._generative_models" -> "typing" [];
	"vertexai.generative_models._generative_models" -> "warnings" [];
	"vertexai.generative_models._generative_models" -> "PIL" [];
	"vertexai.generative_models._generative_models" -> "typing_extensions" [];
	"PIL.Image" -> "__future__" [];
	"PIL.Image" -> "abc" [];
	"PIL.Image" -> "atexit" [];
	"PIL.Image" -> "builtins" [];
	"PIL.Image" -> "io" [];
	"PIL.Image" -> "logging" [];
	"PIL.Image" -> "math" [];
	"PIL.Image" -> "os" [];
	"PIL.Image" -> "re" [];
	"PIL.Image" -> "struct" [];
	"PIL.Image" -> "sys" [];
	"PIL.Image" -> "tempfile" [];
	"PIL.Image" -> "warnings" [];
	"PIL.Image" -> "enum" [];
	"PIL.Image" -> "types" [];
	"PIL.Image" -> "typing" [];
	"PIL.Image" -> "defusedxml" [];
	"PIL.Image" -> "mmap" [];
	"PIL.XpmImagePlugin" -> "__future__" [];
	"PIL.XpmImagePlugin" -> "re" [];
	"PIL.XbmImagePlugin" -> "__future__" [];
	"PIL.XbmImagePlugin" -> "re" [];
	"PIL.XbmImagePlugin" -> "typing" [];
	"PIL.XVThumbImagePlugin" -> "__future__" [];
	"PIL.WmfImagePlugin" -> "__future__" [];
	"PIL.WmfImagePlugin" -> "typing" [];
	"PIL.WebPImagePlugin" -> "__future__" [];
	"PIL.WebPImagePlugin" -> "io" [];
	"PIL.WebPImagePlugin" -> "typing" [];
	"PIL._webp" -> "typing" [];
	"PIL.TgaImagePlugin" -> "__future__" [];
	"PIL.TgaImagePlugin" -> "warnings" [];
	"PIL.TgaImagePlugin" -> "typing" [];
	"PIL.SunImagePlugin" -> "__future__" [];
	"PIL.SpiderImagePlugin" -> "__future__" [];
	"PIL.SpiderImagePlugin" -> "os" [];
	"PIL.SpiderImagePlugin" -> "struct" [];
	"PIL.SpiderImagePlugin" -> "sys" [];
	"PIL.SpiderImagePlugin" -> "typing" [];
	"PIL.ImageTk" -> "__future__" [];
	"PIL.ImageTk" -> "io" [];
	"PIL.ImageTk" -> "typing" [];
	"PIL._imagingtk" -> "typing" [];
	"PIL.SgiImagePlugin" -> "__future__" [];
	"PIL.SgiImagePlugin" -> "os" [];
	"PIL.SgiImagePlugin" -> "struct" [];
	"PIL.SgiImagePlugin" -> "typing" [];
	"PIL.QoiImagePlugin" -> "__future__" [];
	"PIL.QoiImagePlugin" -> "os" [];
	"PIL.PsdImagePlugin" -> "__future__" [];
	"PIL.PsdImagePlugin" -> "io" [];
	"PIL.PsdImagePlugin" -> "functools" [];
	"PIL.PsdImagePlugin" -> "typing" [];
	"PIL.PixarImagePlugin" -> "__future__" [];
	"PIL.PdfImagePlugin" -> "__future__" [];
	"PIL.PdfImagePlugin" -> "io" [];
	"PIL.PdfImagePlugin" -> "math" [];
	"PIL.PdfImagePlugin" -> "os" [];
	"PIL.PdfImagePlugin" -> "time" [];
	"PIL.PdfImagePlugin" -> "typing" [];
	"PIL.features" -> "__future__" [];
	"PIL.features" -> "collections" [];
	"PIL.features" -> "os" [];
	"PIL.features" -> "sys" [];
	"PIL.features" -> "warnings" [];
	"PIL.features" -> "typing" [];
	"PIL.PdfParser" -> "__future__" [];
	"PIL.PdfParser" -> "calendar" [];
	"PIL.PdfParser" -> "codecs" [];
	"PIL.PdfParser" -> "collections" [];
	"PIL.PdfParser" -> "mmap" [];
	"PIL.PdfParser" -> "os" [];
	"PIL.PdfParser" -> "re" [];
	"PIL.PdfParser" -> "time" [];
	"PIL.PdfParser" -> "zlib" [];
	"PIL.PdfParser" -> "typing" [];
	"PIL.ImageSequence" -> "__future__" [];
	"PIL.ImageSequence" -> "typing" [];
	"PIL.PcxImagePlugin" -> "__future__" [];
	"PIL.PcxImagePlugin" -> "io" [];
	"PIL.PcxImagePlugin" -> "logging" [];
	"PIL.PcxImagePlugin" -> "typing" [];
	"PIL.PcdImagePlugin" -> "__future__" [];
	"PIL.PalmImagePlugin" -> "__future__" [];
	"PIL.PalmImagePlugin" -> "typing" [];
	"PIL.MspImagePlugin" -> "__future__" [];
	"PIL.MspImagePlugin" -> "io" [];
	"PIL.MspImagePlugin" -> "struct" [];
	"PIL.MspImagePlugin" -> "typing" [];
	"PIL.MpoImagePlugin" -> "__future__" [];
	"PIL.MpoImagePlugin" -> "itertools" [];
	"PIL.MpoImagePlugin" -> "os" [];
	"PIL.MpoImagePlugin" -> "struct" [];
	"PIL.MpoImagePlugin" -> "typing" [];
	"PIL.MpegImagePlugin" -> "__future__" [];
	"PIL.MicImagePlugin" -> "__future__" [];
	"PIL.MicImagePlugin" -> "olefile" [];
	"PIL.McIdasImagePlugin" -> "__future__" [];
	"PIL.McIdasImagePlugin" -> "struct" [];
	"PIL.Jpeg2KImagePlugin" -> "__future__" [];
	"PIL.Jpeg2KImagePlugin" -> "io" [];
	"PIL.Jpeg2KImagePlugin" -> "os" [];
	"PIL.Jpeg2KImagePlugin" -> "struct" [];
	"PIL.Jpeg2KImagePlugin" -> "typing" [];
	"PIL.IptcImagePlugin" -> "__future__" [];
	"PIL.IptcImagePlugin" -> "io" [];
	"PIL.IptcImagePlugin" -> "typing" [];
	"PIL.ImtImagePlugin" -> "__future__" [];
	"PIL.ImtImagePlugin" -> "re" [];
	"PIL.ImImagePlugin" -> "__future__" [];
	"PIL.ImImagePlugin" -> "os" [];
	"PIL.ImImagePlugin" -> "re" [];
	"PIL.ImImagePlugin" -> "typing" [];
	"PIL.IcoImagePlugin" -> "__future__" [];
	"PIL.IcoImagePlugin" -> "warnings" [];
	"PIL.IcoImagePlugin" -> "io" [];
	"PIL.IcoImagePlugin" -> "math" [];
	"PIL.IcoImagePlugin" -> "typing" [];
	"PIL.IcnsImagePlugin" -> "__future__" [];
	"PIL.IcnsImagePlugin" -> "io" [];
	"PIL.IcnsImagePlugin" -> "os" [];
	"PIL.IcnsImagePlugin" -> "struct" [];
	"PIL.IcnsImagePlugin" -> "sys" [];
	"PIL.IcnsImagePlugin" -> "typing" [];
	"PIL.Hdf5StubImagePlugin" -> "__future__" [];
	"PIL.Hdf5StubImagePlugin" -> "os" [];
	"PIL.Hdf5StubImagePlugin" -> "typing" [];
	"PIL.GribStubImagePlugin" -> "__future__" [];
	"PIL.GribStubImagePlugin" -> "os" [];
	"PIL.GribStubImagePlugin" -> "typing" [];
	"PIL.GbrImagePlugin" -> "__future__" [];
	"PIL.FtexImagePlugin" -> "__future__" [];
	"PIL.FtexImagePlugin" -> "struct" [];
	"PIL.FtexImagePlugin" -> "enum" [];
	"PIL.FtexImagePlugin" -> "io" [];
	"PIL.FpxImagePlugin" -> "__future__" [];
	"PIL.FpxImagePlugin" -> "olefile" [];
	"PIL.FliImagePlugin" -> "__future__" [];
	"PIL.FliImagePlugin" -> "os" [];
	"PIL.FitsImagePlugin" -> "__future__" [];
	"PIL.FitsImagePlugin" -> "gzip" [];
	"PIL.FitsImagePlugin" -> "math" [];
	"PIL.EpsImagePlugin" -> "__future__" [];
	"PIL.EpsImagePlugin" -> "io" [];
	"PIL.EpsImagePlugin" -> "os" [];
	"PIL.EpsImagePlugin" -> "re" [];
	"PIL.EpsImagePlugin" -> "subprocess" [];
	"PIL.EpsImagePlugin" -> "sys" [];
	"PIL.EpsImagePlugin" -> "tempfile" [];
	"PIL.EpsImagePlugin" -> "typing" [];
	"PIL.EpsImagePlugin" -> "shutil" [];
	"PIL.DdsImagePlugin" -> "__future__" [];
	"PIL.DdsImagePlugin" -> "io" [];
	"PIL.DdsImagePlugin" -> "struct" [];
	"PIL.DdsImagePlugin" -> "sys" [];
	"PIL.DdsImagePlugin" -> "enum" [];
	"PIL.DdsImagePlugin" -> "typing" [];
	"PIL.DcxImagePlugin" -> "__future__" [];
	"PIL.CurImagePlugin" -> "__future__" [];
	"PIL.BufrStubImagePlugin" -> "__future__" [];
	"PIL.BufrStubImagePlugin" -> "os" [];
	"PIL.BufrStubImagePlugin" -> "typing" [];
	"PIL.BlpImagePlugin" -> "__future__" [];
	"PIL.BlpImagePlugin" -> "abc" [];
	"PIL.BlpImagePlugin" -> "os" [];
	"PIL.BlpImagePlugin" -> "struct" [];
	"PIL.BlpImagePlugin" -> "enum" [];
	"PIL.BlpImagePlugin" -> "io" [];
	"PIL.BlpImagePlugin" -> "typing" [];
	"PIL.AvifImagePlugin" -> "__future__" [];
	"PIL.AvifImagePlugin" -> "os" [];
	"PIL.AvifImagePlugin" -> "io" [];
	"PIL.AvifImagePlugin" -> "typing" [];
	"PIL.ImageShow" -> "__future__" [];
	"PIL.ImageShow" -> "abc" [];
	"PIL.ImageShow" -> "os" [];
	"PIL.ImageShow" -> "shutil" [];
	"PIL.ImageShow" -> "subprocess" [];
	"PIL.ImageShow" -> "sys" [];
	"PIL.ImageShow" -> "shlex" [];
	"PIL.ImageShow" -> "typing" [];
	"PIL.ImageColor" -> "__future__" [];
	"PIL.ImageColor" -> "re" [];
	"PIL.ImageColor" -> "functools" [];
	"PIL.ImageColor" -> "colorsys" [];
	"PIL.ImageCms" -> "__future__" [];
	"PIL.ImageCms" -> "operator" [];
	"PIL.ImageCms" -> "sys" [];
	"PIL.ImageCms" -> "enum" [];
	"PIL.ImageCms" -> "functools" [];
	"PIL.ImageCms" -> "typing" [];
	"PIL.ImageWin" -> "__future__" [];
	"PIL._imagingcms" -> "datetime" [];
	"PIL._imagingcms" -> "sys" [];
	"PIL._imagingcms" -> "typing" [];
	"PIL.PngImagePlugin" -> "__future__" [];
	"PIL.PngImagePlugin" -> "itertools" [];
	"PIL.PngImagePlugin" -> "logging" [];
	"PIL.PngImagePlugin" -> "re" [];
	"PIL.PngImagePlugin" -> "struct" [];
	"PIL.PngImagePlugin" -> "warnings" [];
	"PIL.PngImagePlugin" -> "zlib" [];
	"PIL.PngImagePlugin" -> "enum" [];
	"PIL.PngImagePlugin" -> "typing" [];
	"PIL.PngImagePlugin" -> "io" [];
	"PIL.ImageChops" -> "__future__" [];
	"PIL.PpmImagePlugin" -> "__future__" [];
	"PIL.PpmImagePlugin" -> "math" [];
	"PIL.PpmImagePlugin" -> "typing" [];
	"PIL.JpegImagePlugin" -> "__future__" [];
	"PIL.JpegImagePlugin" -> "array" [];
	"PIL.JpegImagePlugin" -> "io" [];
	"PIL.JpegImagePlugin" -> "math" [];
	"PIL.JpegImagePlugin" -> "os" [];
	"PIL.JpegImagePlugin" -> "struct" [];
	"PIL.JpegImagePlugin" -> "subprocess" [];
	"PIL.JpegImagePlugin" -> "sys" [];
	"PIL.JpegImagePlugin" -> "tempfile" [];
	"PIL.JpegImagePlugin" -> "warnings" [];
	"PIL.JpegImagePlugin" -> "typing" [];
	"PIL.JpegPresets" -> "__future__" [];
	"PIL.GifImagePlugin" -> "__future__" [];
	"PIL.GifImagePlugin" -> "itertools" [];
	"PIL.GifImagePlugin" -> "math" [];
	"PIL.GifImagePlugin" -> "os" [];
	"PIL.GifImagePlugin" -> "subprocess" [];
	"PIL.GifImagePlugin" -> "enum" [];
	"PIL.GifImagePlugin" -> "functools" [];
	"PIL.GifImagePlugin" -> "typing" [];
	"PIL.GifImagePlugin" -> "copy" [];
	"PIL.GifImagePlugin" -> "io" [];
	"PIL.ImageOps" -> "__future__" [];
	"PIL.ImageOps" -> "functools" [];
	"PIL.ImageOps" -> "operator" [];
	"PIL.ImageOps" -> "re" [];
	"PIL.ImageOps" -> "typing" [];
	"PIL.ImageMath" -> "__future__" [];
	"PIL.ImageMath" -> "builtins" [];
	"PIL.ImageMath" -> "types" [];
	"PIL.ImageMath" -> "typing" [];
	"PIL._imagingmath" -> "typing" [];
	"PIL.BmpImagePlugin" -> "__future__" [];
	"PIL.BmpImagePlugin" -> "os" [];
	"PIL.BmpImagePlugin" -> "typing" [];
	"PIL._typing" -> "__future__" [];
	"PIL._typing" -> "os" [];
	"PIL._typing" -> "sys" [];
	"PIL._typing" -> "typing" [];
	"PIL._typing" -> "numbers" [];
	"PIL._typing" -> "types" [];
	"PIL._typing" -> "typing_extensions" [];
	"PIL.TiffImagePlugin" -> "__future__" [];
	"PIL.TiffImagePlugin" -> "io" [];
	"PIL.TiffImagePlugin" -> "itertools" [];
	"PIL.TiffImagePlugin" -> "logging" [];
	"PIL.TiffImagePlugin" -> "math" [];
	"PIL.TiffImagePlugin" -> "os" [];
	"PIL.TiffImagePlugin" -> "struct" [];
	"PIL.TiffImagePlugin" -> "warnings" [];
	"PIL.TiffImagePlugin" -> "fractions" [];
	"PIL.TiffImagePlugin" -> "numbers" [];
	"PIL.TiffImagePlugin" -> "typing" [];
	"PIL.ImageQt" -> "__future__" [];
	"PIL.ImageQt" -> "sys" [];
	"PIL.ImageQt" -> "io" [];
	"PIL.ImageQt" -> "typing" [];
	"PIL.ImagePalette" -> "__future__" [];
	"PIL.ImagePalette" -> "array" [];
	"PIL.ImagePalette" -> "typing" [];
	"PIL.ImagePalette" -> "random" [];
	"PIL.PaletteFile" -> "__future__" [];
	"PIL.PaletteFile" -> "typing" [];
	"PIL.GimpPaletteFile" -> "__future__" [];
	"PIL.GimpPaletteFile" -> "re" [];
	"PIL.GimpPaletteFile" -> "io" [];
	"PIL.GimpPaletteFile" -> "typing" [];
	"PIL.GimpGradientFile" -> "__future__" [];
	"PIL.GimpGradientFile" -> "math" [];
	"PIL.GimpGradientFile" -> "typing" [];
	"PIL.ImageFilter" -> "__future__" [];
	"PIL.ImageFilter" -> "abc" [];
	"PIL.ImageFilter" -> "functools" [];
	"PIL.ImageFilter" -> "types" [];
	"PIL.ImageFilter" -> "typing" [];
	"PIL.ImageFile" -> "__future__" [];
	"PIL.ImageFile" -> "abc" [];
	"PIL.ImageFile" -> "io" [];
	"PIL.ImageFile" -> "itertools" [];
	"PIL.ImageFile" -> "logging" [];
	"PIL.ImageFile" -> "os" [];
	"PIL.ImageFile" -> "struct" [];
	"PIL.ImageFile" -> "typing" [];
	"PIL.ImageFile" -> "mmap" [];
	"PIL._imaging" -> "typing" [];
	"PIL._util" -> "__future__" [];
	"PIL._util" -> "os" [];
	"PIL._util" -> "typing" [];
	"PIL._deprecate" -> "__future__" [];
	"PIL._deprecate" -> "warnings" [];
	"PIL._binary" -> "__future__" [];
	"PIL._binary" -> "struct" [];
	"PIL.TiffTags" -> "__future__" [];
	"PIL.TiffTags" -> "typing" [];
	"PIL.ImageMode" -> "__future__" [];
	"PIL.ImageMode" -> "sys" [];
	"PIL.ImageMode" -> "functools" [];
	"PIL.ImageMode" -> "typing" [];
	"PIL.ExifTags" -> "__future__" [];
	"PIL.ExifTags" -> "enum" [];
	"PIL" -> "__future__" [];
	"PIL.ImageDraw2" -> "__future__" [];
	"PIL.ImageDraw2" -> "typing" [];
	"PIL.ImagePath" -> "__future__" [];
	"PIL.ImageFont" -> "__future__" [];
	"PIL.ImageFont" -> "base64" [];
	"PIL.ImageFont" -> "os" [];
	"PIL.ImageFont" -> "sys" [];
	"PIL.ImageFont" -> "warnings" [];
	"PIL.ImageFont" -> "enum" [];
	"PIL.ImageFont" -> "io" [];
	"PIL.ImageFont" -> "types" [];
	"PIL.ImageFont" -> "typing" [];
	"PIL._imagingft" -> "typing" [];
	"PIL.ImageDraw" -> "__future__" [];
	"PIL.ImageDraw" -> "math" [];
	"PIL.ImageDraw" -> "struct" [];
	"PIL.ImageDraw" -> "types" [];
	"PIL.ImageDraw" -> "typing" [];
	"PIL._version" -> "__future__" [];
	"vertexai.caching._caching" -> "datetime" [];
	"vertexai.caching._caching" -> "json" [];
	"vertexai.caching._caching" -> "typing" [];
	"vertexai.caching._caching" -> "typing_extensions" [];
	"google.cloud.aiplatform.jobs" -> "typing" [];
	"google.cloud.aiplatform.jobs" -> "abc" [];
	"google.cloud.aiplatform.jobs" -> "copy" [];
	"google.cloud.aiplatform.jobs" -> "datetime" [];
	"google.cloud.aiplatform.jobs" -> "time" [];
	"google.cloud.aiplatform.jobs" -> "tempfile" [];
	"google.cloud.aiplatform._publisher_models" -> "re" [];
	"google.cloud.aiplatform._publisher_models" -> "typing" [];
	"google.cloud.aiplatform.model_monitoring.sampling" -> "typing" [];
	"google.cloud.aiplatform.model_monitoring.objective" -> "typing" [];
	"google.cloud.aiplatform.model_monitoring.alert" -> "typing" [];
	"google.cloud.aiplatform.hyperparameter_tuning" -> "abc" [];
	"google.cloud.aiplatform.hyperparameter_tuning" -> "typing" [];
	"google.cloud.aiplatform.hyperparameter_tuning" -> "proto" [];
	"vertexai.tuning._supervised_tuning" -> "typing" [];
	"vertexai.tuning._supervised_tuning" -> "vertexai" [];
	"google.cloud.aiplatform.metadata.metadata" -> "datetime" [];
	"google.cloud.aiplatform.metadata.metadata" -> "logging" [];
	"google.cloud.aiplatform.metadata.metadata" -> "os" [];
	"google.cloud.aiplatform.metadata.metadata" -> "typing" [];
	"google.cloud.aiplatform.metadata.metadata" -> "pandas" [];
	"google.cloud.aiplatform.metadata.metadata" -> "mlflow" [];
	"google.cloud.aiplatform.metadata.metadata" -> "'mlflow.tracking'" [];
	"google.cloud.aiplatform._mlflow_plugin._vertex_mlflow_tracking" -> "collections" [];
	"google.cloud.aiplatform._mlflow_plugin._vertex_mlflow_tracking" -> "typing" [];
	"google.cloud.aiplatform._mlflow_plugin._vertex_mlflow_tracking" -> "mlflow" [];
	"google.cloud.aiplatform._mlflow_plugin._vertex_mlflow_tracking" -> "'mlflow.store'" [];
	"google.cloud.aiplatform.tensorboard.tensorboard_resource" -> "typing" [];
	"google.cloud.aiplatform.tensorboard.uploader_tracker" -> "threading" [];
	"google.cloud.aiplatform.tensorboard.uploader_tracker" -> "typing" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "abc" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "collections" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "functools" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "logging" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "re" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "time" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "typing" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "uuid" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "grpc" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "tensorflow" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "'tensorboard.backend'" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "'tensorboard.compat'" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "'tensorboard.plugins'" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "'tensorboard.util'" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "collections" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "datetime" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "functools" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "os" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "re" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "typing" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "grpc" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "tensorflow" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "'tensorboard.util'" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "abc" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "contextlib" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "json" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "logging" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "re" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "time" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "typing" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "absl" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "grpc" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "'tensorboard.util'" [];
	"google.cloud.aiplatform.tensorboard.uploader_constants" -> "dataclasses" [];
	"google.cloud.aiplatform.tensorboard.uploader_constants" -> "'tensorboard.plugins'" [];
	"google.cloud.aiplatform.tensorboard.upload_tracker" -> "contextlib" [];
	"google.cloud.aiplatform.tensorboard.upload_tracker" -> "datetime" [];
	"google.cloud.aiplatform.tensorboard.upload_tracker" -> "sys" [];
	"google.cloud.aiplatform.tensorboard.upload_tracker" -> "time" [];
	"google.cloud.aiplatform.tensorboard.logdir_loader" -> "collections" [];
	"google.cloud.aiplatform.tensorboard.logdir_loader" -> "os" [];
	"google.cloud.aiplatform.tensorboard.logdir_loader" -> "tensorflow" [];
	"google.cloud.aiplatform.tensorboard.logdir_loader" -> "tensorboard" [];
	"google.cloud.aiplatform.tensorboard.logdir_loader" -> "'tensorboard.backend'" [];
	"google.cloud.aiplatform.tensorboard.logdir_loader" -> "'tensorboard.util'" [];
	"google.cloud.aiplatform.metadata.schema.google.artifact_schema" -> "copy" [];
	"google.cloud.aiplatform.metadata.schema.google.artifact_schema" -> "typing" [];
	"google.cloud.aiplatform.models" -> "itertools" [];
	"google.cloud.aiplatform.models" -> "json" [];
	"google.cloud.aiplatform.models" -> "pathlib" [];
	"google.cloud.aiplatform.models" -> "re" [];
	"google.cloud.aiplatform.models" -> "shutil" [];
	"google.cloud.aiplatform.models" -> "tempfile" [];
	"google.cloud.aiplatform.models" -> "requests" [];
	"google.cloud.aiplatform.models" -> "typing" [];
	"google.cloud.aiplatform.models" -> "proto" [];
	"requests_toolbelt.adapters.socket_options" -> "socket" [];
	"requests_toolbelt.adapters.socket_options" -> "warnings" [];
	"requests_toolbelt.adapters.socket_options" -> "sys" [];
	"requests_toolbelt.adapters.socket_options" -> "requests" [];
	"requests_toolbelt.adapters.socket_options" -> "requests_toolbelt" [];
	"google.cloud.aiplatform.preview.models" -> "itertools" [];
	"google.cloud.aiplatform.preview.models" -> "typing" [];
	"google.cloud.aiplatform.preview.models" -> "proto" [];
	"google.cloud.aiplatform.prediction.serializer" -> "abc" [];
	"google.cloud.aiplatform.prediction.serializer" -> "json" [];
	"google.cloud.aiplatform.prediction.serializer" -> "typing" [];
	"google.cloud.aiplatform.prediction.serializer" -> "fastapi" [];
	"google.cloud.aiplatform.prediction.predictor" -> "abc" [];
	"google.cloud.aiplatform.prediction.predictor" -> "typing" [];
	"google.cloud.aiplatform.prediction.local_model" -> "copy" [];
	"google.cloud.aiplatform.prediction.local_model" -> "typing" [];
	"google.cloud.aiplatform.docker_utils.utils" -> "collections" [];
	"google.cloud.aiplatform.docker_utils.utils" -> "docker" [];
	"google.cloud.aiplatform.docker_utils.local_util" -> "io" [];
	"google.cloud.aiplatform.docker_utils.local_util" -> "logging" [];
	"google.cloud.aiplatform.docker_utils.local_util" -> "subprocess" [];
	"google.cloud.aiplatform.docker_utils.local_util" -> "typing" [];
	"google.cloud.aiplatform.docker_utils.errors" -> "textwrap" [];
	"google.cloud.aiplatform.docker_utils.errors" -> "typing" [];
	"google.cloud.aiplatform.docker_utils.build" -> "json" [];
	"google.cloud.aiplatform.docker_utils.build" -> "logging" [];
	"google.cloud.aiplatform.docker_utils.build" -> "os" [];
	"google.cloud.aiplatform.docker_utils.build" -> "pathlib" [];
	"google.cloud.aiplatform.docker_utils.build" -> "textwrap" [];
	"google.cloud.aiplatform.docker_utils.build" -> "typing" [];
	"google.cloud.aiplatform.docker_utils.build" -> "shlex" [];
	"google.cloud.aiplatform.docker_utils.run" -> "logging" [];
	"google.cloud.aiplatform.docker_utils.run" -> "os" [];
	"google.cloud.aiplatform.docker_utils.run" -> "pathlib" [];
	"google.cloud.aiplatform.docker_utils.run" -> "re" [];
	"google.cloud.aiplatform.docker_utils.run" -> "typing" [];
	"google.cloud.aiplatform.docker_utils.run" -> "docker" [];
	"google.cloud.aiplatform.helpers.container_uri_builders" -> "re" [];
	"google.cloud.aiplatform.helpers.container_uri_builders" -> "typing" [];
	"google.cloud.aiplatform.helpers.container_uri_builders" -> "warnings" [];
	"google.cloud.aiplatform.helpers.container_uri_builders" -> "packaging" [];
	"google.cloud.aiplatform.prediction.local_endpoint" -> "logging" [];
	"google.cloud.aiplatform.prediction.local_endpoint" -> "pathlib" [];
	"google.cloud.aiplatform.prediction.local_endpoint" -> "requests" [];
	"google.cloud.aiplatform.prediction.local_endpoint" -> "time" [];
	"google.cloud.aiplatform.prediction.local_endpoint" -> "typing" [];
	"google.cloud.aiplatform.prediction.handler" -> "abc" [];
	"google.cloud.aiplatform.prediction.handler" -> "logging" [];
	"google.cloud.aiplatform.prediction.handler" -> "typing" [];
	"google.cloud.aiplatform.prediction.handler" -> "traceback" [];
	"google.cloud.aiplatform.prediction.handler" -> "fastapi" [];
	"google.cloud.aiplatform.prediction.handler_utils" -> "typing" [];
	"google.cloud.aiplatform.prediction.handler_utils" -> "starlette" [];
	"google.cloud.aiplatform.metadata.schema.utils" -> "re" [];
	"google.cloud.aiplatform.metadata.schema.utils" -> "typing" [];
	"google.cloud.aiplatform.metadata.schema.utils" -> "dataclasses" [];
	"google.cloud.aiplatform.metadata.schema.base_artifact" -> "abc" [];
	"google.cloud.aiplatform.metadata.schema.base_artifact" -> "typing" [];
	"google.cloud.aiplatform.metadata.artifact" -> "typing" [];
	"google.cloud.aiplatform.metadata.artifact" -> "proto" [];
	"google.cloud.aiplatform.metadata.artifact" -> "threading" [];
	"google.cloud.aiplatform.metadata.utils" -> "typing" [];
	"google.cloud.aiplatform.metadata.resource" -> "abc" [];
	"google.cloud.aiplatform.metadata.resource" -> "collections" [];
	"google.cloud.aiplatform.metadata.resource" -> "re" [];
	"google.cloud.aiplatform.metadata.resource" -> "threading" [];
	"google.cloud.aiplatform.metadata.resource" -> "copy" [];
	"google.cloud.aiplatform.metadata.resource" -> "typing" [];
	"google.cloud.aiplatform.metadata.resource" -> "proto" [];
	"google.cloud.aiplatform.metadata.metadata_store" -> "logging" [];
	"google.cloud.aiplatform.metadata.metadata_store" -> "typing" [];
	"google.cloud.aiplatform.metadata._models" -> "importlib" [];
	"google.cloud.aiplatform.metadata._models" -> "os" [];
	"google.cloud.aiplatform.metadata._models" -> "pickle" [];
	"google.cloud.aiplatform.metadata._models" -> "tempfile" [];
	"google.cloud.aiplatform.metadata._models" -> "typing" [];
	"google.cloud.aiplatform.metadata._models" -> "tensorflow" [];
	"google.cloud.aiplatform.metadata._models" -> "sklearn" [];
	"google.cloud.aiplatform.metadata._models" -> "xgboost" [];
	"google.cloud.aiplatform.metadata._models" -> "numpy" [];
	"google.cloud.aiplatform.metadata._models" -> "yaml" [];
	"google.cloud.aiplatform.metadata._models" -> "pandas" [];
	"google.cloud.aiplatform.metadata._models" -> "'sklearn.v1_0_2'" [];
	"google.cloud.aiplatform.metadata.execution" -> "copy" [];
	"google.cloud.aiplatform.metadata.execution" -> "typing" [];
	"google.cloud.aiplatform.metadata.execution" -> "proto" [];
	"google.cloud.aiplatform.metadata.context" -> "typing" [];
	"google.cloud.aiplatform.metadata.context" -> "proto" [];
	"google.cloud.aiplatform.metadata.context" -> "re" [];
	"google.cloud.aiplatform.metadata.context" -> "threading" [];
	"google.cloud.aiplatform.pipeline_jobs" -> "datetime" [];
	"google.cloud.aiplatform.pipeline_jobs" -> "logging" [];
	"google.cloud.aiplatform.pipeline_jobs" -> "re" [];
	"google.cloud.aiplatform.pipeline_jobs" -> "tempfile" [];
	"google.cloud.aiplatform.pipeline_jobs" -> "time" [];
	"google.cloud.aiplatform.pipeline_jobs" -> "typing" [];
	"google.cloud.aiplatform.pipeline_jobs" -> "kfp" [];
	"google.cloud.aiplatform.model_evaluation.model_evaluation_job" -> "typing" [];
	"google.cloud.aiplatform.model_evaluation.model_evaluation_job" -> "grpc" [];
	"google.cloud.aiplatform._pipeline_based_service.pipeline_based_service" -> "abc" [];
	"google.cloud.aiplatform._pipeline_based_service.pipeline_based_service" -> "logging" [];
	"google.cloud.aiplatform._pipeline_based_service.pipeline_based_service" -> "typing" [];
	"google.cloud.aiplatform.model_evaluation.model_evaluation" -> "typing" [];
	"google.cloud.aiplatform.metadata.experiment_run_resource" -> "collections" [];
	"google.cloud.aiplatform.metadata.experiment_run_resource" -> "functools" [];
	"google.cloud.aiplatform.metadata.experiment_run_resource" -> "typing" [];
	"google.cloud.aiplatform.metadata.experiment_run_resource" -> "pandas" [];
	"google.cloud.aiplatform.metadata.experiment_resources" -> "abc" [];
	"google.cloud.aiplatform.metadata.experiment_resources" -> "dataclasses" [];
	"google.cloud.aiplatform.metadata.experiment_resources" -> "logging" [];
	"google.cloud.aiplatform.metadata.experiment_resources" -> "typing" [];
	"google.cloud.aiplatform.metadata.experiment_resources" -> "pandas" [];
	"google.cloud.aiplatform.utils._explanation_utils" -> "typing" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "datetime" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "glob" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "logging" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "os" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "pathlib" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "tempfile" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "typing" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "pandas" [];
	"google.cloud.aiplatform.utils.resource_manager_utils" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.tag_values" -> "__future__" [];
	"google.cloud.resourcemanager_v3.types.tag_values" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.tag_values" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_values.pagers" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.pagers" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.pagers" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.pagers" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.pagers" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.pagers" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.pagers" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.tag_keys" -> "__future__" [];
	"google.cloud.resourcemanager_v3.types.tag_keys" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.tag_keys" -> "proto" [];
	"google.cloud.resourcemanager_v3.types.tag_holds" -> "__future__" [];
	"google.cloud.resourcemanager_v3.types.tag_holds" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.tag_holds" -> "proto" [];
	"google.cloud.resourcemanager_v3.types.tag_bindings" -> "__future__" [];
	"google.cloud.resourcemanager_v3.types.tag_bindings" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.tag_bindings" -> "proto" [];
	"google.cloud.resourcemanager_v3.types.projects" -> "__future__" [];
	"google.cloud.resourcemanager_v3.types.projects" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.projects" -> "proto" [];
	"google.cloud.resourcemanager_v3.types.organizations" -> "__future__" [];
	"google.cloud.resourcemanager_v3.types.organizations" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.organizations" -> "proto" [];
	"google.cloud.resourcemanager_v3.types.folders" -> "__future__" [];
	"google.cloud.resourcemanager_v3.types.folders" -> "typing" [];
	"google.cloud.resourcemanager_v3.types.folders" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "http" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "os" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest" -> "dataclasses" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest" -> "requests" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest_base" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest_base" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest_base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.base" -> "abc" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_values.async_client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_values.async_client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_values.async_client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_values.async_client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "http" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "os" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" -> "dataclasses" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" -> "requests" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest_base" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest_base" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest_base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.base" -> "abc" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.async_client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.async_client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.async_client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.async_client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "http" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "os" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" -> "dataclasses" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" -> "requests" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest_base" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest_base" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest_base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.base" -> "abc" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.async_client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.async_client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.async_client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.async_client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "http" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "os" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" -> "dataclasses" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" -> "requests" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest_base" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest_base" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest_base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" -> "json" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.base" -> "abc" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.async_client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.async_client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.async_client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.async_client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "http" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "json" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "os" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest" -> "dataclasses" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest" -> "json" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest" -> "requests" [];
	"google.cloud.resourcemanager_v3.services.projects.transports" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.projects.transports" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest_base" -> "json" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest_base" -> "re" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest_base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "json" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" -> "json" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.base" -> "abc" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.projects.async_client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.projects.async_client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.projects.async_client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.projects.async_client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "http" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "json" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "os" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest" -> "dataclasses" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest" -> "json" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest" -> "requests" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest_base" -> "json" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest_base" -> "re" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest_base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "json" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" -> "json" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.base" -> "abc" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.organizations.async_client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.organizations.async_client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.organizations.async_client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.organizations.async_client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "http" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "json" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "os" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest" -> "dataclasses" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest" -> "json" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest" -> "requests" [];
	"google.cloud.resourcemanager_v3.services.folders.transports" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.folders.transports" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest_base" -> "json" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest_base" -> "re" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest_base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "inspect" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "json" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" -> "json" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" -> "pickle" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" -> "warnings" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" -> "grpc" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" -> "proto" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.base" -> "abc" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.base" -> "typing" [];
	"google.cloud.resourcemanager_v3.services.folders.async_client" -> "collections" [];
	"google.cloud.resourcemanager_v3.services.folders.async_client" -> "logging" [];
	"google.cloud.resourcemanager_v3.services.folders.async_client" -> "re" [];
	"google.cloud.resourcemanager_v3.services.folders.async_client" -> "typing" [];
	"google.cloud.aiplatform.utils.worker_spec_utils" -> "typing" [];
	"google.cloud.aiplatform.utils.source_utils" -> "functools" [];
	"google.cloud.aiplatform.utils.source_utils" -> "os" [];
	"google.cloud.aiplatform.utils.source_utils" -> "pathlib" [];
	"google.cloud.aiplatform.utils.source_utils" -> "shutil" [];
	"google.cloud.aiplatform.utils.source_utils" -> "subprocess" [];
	"google.cloud.aiplatform.utils.source_utils" -> "sys" [];
	"google.cloud.aiplatform.utils.source_utils" -> "tempfile" [];
	"google.cloud.aiplatform.utils.source_utils" -> "typing" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index" -> "typing" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_config" -> "abc" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_config" -> "enum" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_config" -> "dataclasses" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_config" -> "typing" [];
	"google.cloud.aiplatform.initializer" -> "concurrent" [];
	"google.cloud.aiplatform.initializer" -> "enum" [];
	"google.cloud.aiplatform.initializer" -> "functools" [];
	"google.cloud.aiplatform.initializer" -> "inspect" [];
	"google.cloud.aiplatform.initializer" -> "logging" [];
	"google.cloud.aiplatform.initializer" -> "os" [];
	"google.cloud.aiplatform.initializer" -> "types" [];
	"google.cloud.aiplatform.initializer" -> "typing" [];
	"google.cloud.aiplatform.telemetry" -> "contextlib" [];
	"google.cloud.aiplatform.base" -> "abc" [];
	"google.cloud.aiplatform.base" -> "concurrent" [];
	"google.cloud.aiplatform.base" -> "datetime" [];
	"google.cloud.aiplatform.base" -> "functools" [];
	"google.cloud.aiplatform.base" -> "inspect" [];
	"google.cloud.aiplatform.base" -> "logging" [];
	"google.cloud.aiplatform.base" -> "re" [];
	"google.cloud.aiplatform.base" -> "sys" [];
	"google.cloud.aiplatform.base" -> "threading" [];
	"google.cloud.aiplatform.base" -> "time" [];
	"google.cloud.aiplatform.base" -> "typing" [];
	"google.cloud.aiplatform.base" -> "proto" [];
	"google.cloud.aiplatform._streaming_prediction" -> "typing" [];
	"google.cloud.aiplatform.training_jobs" -> "datetime" [];
	"google.cloud.aiplatform.training_jobs" -> "time" [];
	"google.cloud.aiplatform.training_jobs" -> "typing" [];
	"google.cloud.aiplatform.training_jobs" -> "abc" [];
	"google.cloud.aiplatform.training_jobs" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.export_evaluated_data_items_config" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.export_evaluated_data_items_config" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.export_evaluated_data_items_config" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_object_tracking" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_object_tracking" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_object_tracking" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_action_recognition" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_action_recognition" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_video_action_recognition" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_sentiment" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_sentiment" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_sentiment" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_extraction" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_extraction" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_extraction" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_text_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_tables" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_tables" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_tables" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_segmentation" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_segmentation" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_segmentation" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_object_detection" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_object_detection" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_object_detection" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.trainingjob.definition_v1.types.automl_image_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_object_tracking" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_object_tracking" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_object_tracking" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_action_recognition" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_action_recognition" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_action_recognition" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_sentiment" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_sentiment" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_sentiment" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_extraction" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_extraction" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.text_extraction" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_regression" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_regression" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_regression" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.tabular_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_segmentation" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_segmentation" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_segmentation" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_object_detection" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_object_detection" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_object_detection" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_object_tracking" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_object_tracking" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_object_tracking" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_action_recognition" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_action_recognition" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.video_action_recognition" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_segmentation" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_segmentation" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_segmentation" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_object_detection" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_object_detection" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_object_detection" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.params_v1.types.image_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_object_tracking" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_object_tracking" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_object_tracking" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_action_recognition" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_action_recognition" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.video_action_recognition" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_sentiment" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_sentiment" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_sentiment" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_extraction" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_extraction" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_extraction" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.text_classification" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_segmentation" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_segmentation" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_segmentation" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_object_detection" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_object_detection" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_object_detection" -> "proto" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_classification" -> "typing" [];
	"google.cloud.aiplatform.v1.schema.predict.instance_v1.types.image_classification" -> "proto" [];
	"google.cloud.aiplatform.pipeline_job_schedules" -> "typing" [];
	"google.cloud.aiplatform.schedules" -> "time" [];
	"google.cloud.aiplatform.schedules" -> "typing" [];
	"google.cloud.aiplatform.featurestore.featurestore" -> "typing" [];
	"google.cloud.aiplatform.featurestore.featurestore" -> "uuid" [];
	"google.cloud.aiplatform.featurestore.featurestore" -> "pyarrow" [];
	"google.cloud.aiplatform.featurestore.featurestore" -> "pandas" [];
	"google.cloud.aiplatform.featurestore.feature" -> "typing" [];
	"google.cloud.aiplatform.preview.featurestore.entity_type" -> "typing" [];
	"google.cloud.aiplatform.featurestore._entity_type" -> "datetime" [];
	"google.cloud.aiplatform.featurestore._entity_type" -> "typing" [];
	"google.cloud.aiplatform.featurestore._entity_type" -> "uuid" [];
	"google.cloud.aiplatform.featurestore._entity_type" -> "pyarrow" [];
	"google.cloud.aiplatform.featurestore._entity_type" -> "pandas" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_object_tracking" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_object_tracking" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_object_tracking" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_action_recognition" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_action_recognition" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_video_action_recognition" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_time_series_forecasting" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_time_series_forecasting" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_time_series_forecasting" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_sentiment" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_sentiment" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_sentiment" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_extraction" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_extraction" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_extraction" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_text_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_tables" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_tables" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_tables" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.export_evaluated_data_items_config" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.export_evaluated_data_items_config" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.export_evaluated_data_items_config" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_segmentation" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_segmentation" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_segmentation" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_object_detection" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_object_detection" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_object_detection" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.trainingjob.definition_v1beta1.types.automl_image_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_object_tracking" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_object_tracking" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_object_tracking" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_action_recognition" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_action_recognition" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_action_recognition" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.time_series_forecasting" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.time_series_forecasting" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.time_series_forecasting" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_sentiment" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_sentiment" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_sentiment" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_extraction" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_extraction" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.text_extraction" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_regression" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_regression" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_regression" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.tabular_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_segmentation" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_segmentation" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_segmentation" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_object_detection" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_object_detection" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_object_detection" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_object_tracking" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_object_tracking" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_object_tracking" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_action_recognition" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_action_recognition" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.video_action_recognition" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_segmentation" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_segmentation" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_segmentation" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_object_detection" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_object_detection" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_object_detection" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.params_v1beta1.types.image_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_object_tracking" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_object_tracking" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_object_tracking" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_action_recognition" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_action_recognition" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.video_action_recognition" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_sentiment" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_sentiment" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_sentiment" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_extraction" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_extraction" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_extraction" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.text_classification" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_segmentation" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_segmentation" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_segmentation" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_object_detection" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_object_detection" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_object_detection" -> "proto" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_classification" -> "__future__" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_classification" -> "typing" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.instance_v1beta1.types.image_classification" -> "proto" [];
	"google.cloud.aiplatform.utils.enhanced_library._decorators" -> "__future__" [];
	"google.cloud.aiplatform.utils.enhanced_library.value_converter" -> "__future__" [];
	"google.cloud.aiplatform.utils.enhanced_library.value_converter" -> "proto" [];
	"google.cloud.storage.client" -> "base64" [];
	"google.cloud.storage.client" -> "binascii" [];
	"google.cloud.storage.client" -> "collections" [];
	"google.cloud.storage.client" -> "datetime" [];
	"google.cloud.storage.client" -> "functools" [];
	"google.cloud.storage.client" -> "json" [];
	"google.cloud.storage.client" -> "warnings" [];
	"google.cloud.storage.retry" -> "requests" [];
	"google.cloud.storage._signing" -> "base64" [];
	"google.cloud.storage._signing" -> "binascii" [];
	"google.cloud.storage._signing" -> "collections" [];
	"google.cloud.storage._signing" -> "datetime" [];
	"google.cloud.storage._signing" -> "hashlib" [];
	"google.cloud.storage._signing" -> "json" [];
	"google.cloud.storage._signing" -> "http" [];
	"google.cloud.storage._signing" -> "urllib" [];
	"google.cloud.storage._http" -> "functools" [];
	"google.cloud.storage._opentelemetry_tracing" -> "logging" [];
	"google.cloud.storage._opentelemetry_tracing" -> "os" [];
	"google.cloud.storage._opentelemetry_tracing" -> "contextlib" [];
	"google.cloud.storage._opentelemetry_tracing" -> "opentelemetry" [];
	"google.cloud.storage.bucket" -> "base64" [];
	"google.cloud.storage.bucket" -> "copy" [];
	"google.cloud.storage.bucket" -> "datetime" [];
	"google.cloud.storage.bucket" -> "json" [];
	"google.cloud.storage.bucket" -> "warnings" [];
	"google.cloud.storage.notification" -> "re" [];
	"google.cloud.storage.blob" -> "base64" [];
	"google.cloud.storage.blob" -> "copy" [];
	"google.cloud.storage.blob" -> "hashlib" [];
	"google.cloud.storage.blob" -> "io" [];
	"google.cloud.storage.blob" -> "logging" [];
	"google.cloud.storage.blob" -> "mimetypes" [];
	"google.cloud.storage.blob" -> "os" [];
	"google.cloud.storage.blob" -> "re" [];
	"google.cloud.storage.blob" -> "warnings" [];
	"google.cloud.storage.blob" -> "google" [];
	"google.cloud.storage.fileio" -> "io" [];
	"google.cloud.storage.fileio" -> "warnings" [];
	"google.cloud.storage.batch" -> "io" [];
	"google.cloud.storage.batch" -> "json" [];
	"google.cloud.storage.batch" -> "requests" [];
	"email.mime.base" -> "email" [];
	"email.mime.application" -> "email" [];
	"email.mime.nonmultipart" -> "email" [];
	"google.cloud.storage._helpers" -> "base64" [];
	"google.cloud.storage._helpers" -> "datetime" [];
	"google.cloud.storage._helpers" -> "hashlib" [];
	"google.cloud.storage._helpers" -> "os" [];
	"google.cloud.storage._helpers" -> "uuid" [];
	"google.cloud.storage._helpers" -> "google" [];
	"langchain_community.utilities.vertexai" -> "importlib" [];
	"langchain_community.utilities.vertexai" -> "typing" [];
	"langchain_community.utilities.vertexai" -> "vertexai" [];
	"langchain_community.vectorstores.marqo" -> "__future__" [];
	"langchain_community.vectorstores.marqo" -> "json" [];
	"langchain_community.vectorstores.marqo" -> "uuid" [];
	"langchain_community.vectorstores.marqo" -> "typing" [];
	"langchain_community.vectorstores.marqo" -> "marqo" [];
	"langchain_community.vectorstores.manticore_search" -> "__future__" [];
	"langchain_community.vectorstores.manticore_search" -> "json" [];
	"langchain_community.vectorstores.manticore_search" -> "logging" [];
	"langchain_community.vectorstores.manticore_search" -> "uuid" [];
	"langchain_community.vectorstores.manticore_search" -> "hashlib" [];
	"langchain_community.vectorstores.manticore_search" -> "typing" [];
	"langchain_community.vectorstores.manticore_search" -> "pydantic_settings" [];
	"langchain_community.vectorstores.manticore_search" -> "manticoresearch" [];
	"langchain_community.vectorstores.manticore_search" -> "'manticoresearch.api_client'" [];
	"langchain_community.vectorstores.manticore_search" -> "tqdm" [];
	"langchain_community.vectorstores.llm_rails" -> "__future__" [];
	"langchain_community.vectorstores.llm_rails" -> "json" [];
	"langchain_community.vectorstores.llm_rails" -> "logging" [];
	"langchain_community.vectorstores.llm_rails" -> "os" [];
	"langchain_community.vectorstores.llm_rails" -> "uuid" [];
	"langchain_community.vectorstores.llm_rails" -> "typing" [];
	"langchain_community.vectorstores.llm_rails" -> "requests" [];
	"langchain_community.vectorstores.llm_rails" -> "pydantic" [];
	"langchain_community.vectorstores.lantern" -> "__future__" [];
	"langchain_community.vectorstores.lantern" -> "contextlib" [];
	"langchain_community.vectorstores.lantern" -> "enum" [];
	"langchain_community.vectorstores.lantern" -> "logging" [];
	"langchain_community.vectorstores.lantern" -> "uuid" [];
	"langchain_community.vectorstores.lantern" -> "typing" [];
	"langchain_community.vectorstores.lantern" -> "numpy" [];
	"langchain_community.vectorstores.lantern" -> "sqlalchemy" [];
	"langchain_community.vectorstores.lancedb" -> "__future__" [];
	"langchain_community.vectorstores.lancedb" -> "base64" [];
	"langchain_community.vectorstores.lancedb" -> "os" [];
	"langchain_community.vectorstores.lancedb" -> "uuid" [];
	"langchain_community.vectorstores.lancedb" -> "warnings" [];
	"langchain_community.vectorstores.lancedb" -> "typing" [];
	"langchain_community.vectorstores.lancedb" -> "numpy" [];
	"langchain_community.vectorstores.kinetica" -> "__future__" [];
	"langchain_community.vectorstores.kinetica" -> "asyncio" [];
	"langchain_community.vectorstores.kinetica" -> "enum" [];
	"langchain_community.vectorstores.kinetica" -> "json" [];
	"langchain_community.vectorstores.kinetica" -> "logging" [];
	"langchain_community.vectorstores.kinetica" -> "struct" [];
	"langchain_community.vectorstores.kinetica" -> "uuid" [];
	"langchain_community.vectorstores.kinetica" -> "collections" [];
	"langchain_community.vectorstores.kinetica" -> "functools" [];
	"langchain_community.vectorstores.kinetica" -> "typing" [];
	"langchain_community.vectorstores.kinetica" -> "numpy" [];
	"langchain_community.vectorstores.kinetica" -> "pydantic_settings" [];
	"langchain_community.vectorstores.kinetica" -> "gpudb" [];
	"langchain_community.vectorstores.kdbai" -> "__future__" [];
	"langchain_community.vectorstores.kdbai" -> "logging" [];
	"langchain_community.vectorstores.kdbai" -> "uuid" [];
	"langchain_community.vectorstores.kdbai" -> "typing" [];
	"langchain_community.vectorstores.kdbai" -> "kdbai_client" [];
	"langchain_community.vectorstores.kdbai" -> "numpy" [];
	"langchain_community.vectorstores.kdbai" -> "pandas" [];
	"langchain_community.vectorstores.infinispanvs" -> "__future__" [];
	"langchain_community.vectorstores.infinispanvs" -> "json" [];
	"langchain_community.vectorstores.infinispanvs" -> "logging" [];
	"langchain_community.vectorstores.infinispanvs" -> "uuid" [];
	"langchain_community.vectorstores.infinispanvs" -> "warnings" [];
	"langchain_community.vectorstores.infinispanvs" -> "typing" [];
	"langchain_community.vectorstores.hologres" -> "__future__" [];
	"langchain_community.vectorstores.hologres" -> "logging" [];
	"langchain_community.vectorstores.hologres" -> "uuid" [];
	"langchain_community.vectorstores.hologres" -> "typing" [];
	"langchain_community.vectorstores.hologres" -> "hologres_vector" [];
	"langchain_community.vectorstores.hanavector" -> "__future__" [];
	"langchain_community.vectorstores.hanavector" -> "json" [];
	"langchain_community.vectorstores.hanavector" -> "re" [];
	"langchain_community.vectorstores.hanavector" -> "typing" [];
	"langchain_community.vectorstores.hanavector" -> "numpy" [];
	"langchain_community.vectorstores.hanavector" -> "hdbcli" [];
	"langchain_community.vectorstores.faiss" -> "__future__" [];
	"langchain_community.vectorstores.faiss" -> "logging" [];
	"langchain_community.vectorstores.faiss" -> "operator" [];
	"langchain_community.vectorstores.faiss" -> "os" [];
	"langchain_community.vectorstores.faiss" -> "pickle" [];
	"langchain_community.vectorstores.faiss" -> "uuid" [];
	"langchain_community.vectorstores.faiss" -> "warnings" [];
	"langchain_community.vectorstores.faiss" -> "pathlib" [];
	"langchain_community.vectorstores.faiss" -> "typing" [];
	"langchain_community.vectorstores.faiss" -> "numpy" [];
	"langchain_community.vectorstores.faiss" -> "faiss" [];
	"langchain_community.vectorstores.epsilla" -> "__future__" [];
	"langchain_community.vectorstores.epsilla" -> "logging" [];
	"langchain_community.vectorstores.epsilla" -> "uuid" [];
	"langchain_community.vectorstores.epsilla" -> "typing" [];
	"langchain_community.vectorstores.epsilla" -> "pyepsilla" [];
	"langchain_community.vectorstores.elasticsearch" -> "logging" [];
	"langchain_community.vectorstores.elasticsearch" -> "uuid" [];
	"langchain_community.vectorstores.elasticsearch" -> "abc" [];
	"langchain_community.vectorstores.elasticsearch" -> "typing" [];
	"langchain_community.vectorstores.elasticsearch" -> "numpy" [];
	"langchain_community.vectorstores.elasticsearch" -> "elasticsearch" [];
	"langchain_community.vectorstores.elasticsearch" -> "langchain_community" [];
	"langchain_community.vectorstores.elasticsearch" -> "'elasticsearch.helpers'" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "__future__" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "warnings" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "typing" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "elasticsearch" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "langchain_community" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "'elasticsearch.exceptions'" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "'elasticsearch.helpers'" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "logging" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "typing" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "elasticsearch" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "'elasticsearch.helpers'" [];
	"langchain_community.vectorstores.duckdb" -> "__future__" [];
	"langchain_community.vectorstores.duckdb" -> "json" [];
	"langchain_community.vectorstores.duckdb" -> "logging" [];
	"langchain_community.vectorstores.duckdb" -> "uuid" [];
	"langchain_community.vectorstores.duckdb" -> "warnings" [];
	"langchain_community.vectorstores.duckdb" -> "typing" [];
	"langchain_community.vectorstores.duckdb" -> "duckdb" [];
	"langchain_community.vectorstores.duckdb" -> "pandas" [];
	"langchain_community.vectorstores.documentdb" -> "__future__" [];
	"langchain_community.vectorstores.documentdb" -> "logging" [];
	"langchain_community.vectorstores.documentdb" -> "enum" [];
	"langchain_community.vectorstores.documentdb" -> "typing" [];
	"langchain_community.vectorstores.documentdb" -> "'pymongo.collection'" [];
	"langchain_community.vectorstores.documentdb" -> "pymongo" [];
	"langchain_community.vectorstores.documentdb" -> "'bson.objectid'" [];
	"langchain_community.vectorstores.docarray.in_memory" -> "__future__" [];
	"langchain_community.vectorstores.docarray.in_memory" -> "typing" [];
	"langchain_community.vectorstores.docarray.in_memory" -> "'docarray.index'" [];
	"langchain_community.vectorstores.docarray.base" -> "abc" [];
	"langchain_community.vectorstores.docarray.base" -> "typing" [];
	"langchain_community.vectorstores.docarray.base" -> "numpy" [];
	"langchain_community.vectorstores.docarray.base" -> "pydantic" [];
	"langchain_community.vectorstores.docarray.base" -> "docarray" [];
	"langchain_community.vectorstores.docarray.base" -> "'docarray.index'" [];
	"langchain_community.vectorstores.docarray.base" -> "'docarray.typing'" [];
	"langchain_community.vectorstores.docarray.hnsw" -> "__future__" [];
	"langchain_community.vectorstores.docarray.hnsw" -> "typing" [];
	"langchain_community.vectorstores.docarray.hnsw" -> "'docarray.index'" [];
	"langchain_community.vectorstores.dingo" -> "__future__" [];
	"langchain_community.vectorstores.dingo" -> "logging" [];
	"langchain_community.vectorstores.dingo" -> "uuid" [];
	"langchain_community.vectorstores.dingo" -> "typing" [];
	"langchain_community.vectorstores.dingo" -> "numpy" [];
	"langchain_community.vectorstores.dingo" -> "dingodb" [];
	"langchain_community.vectorstores.deeplake" -> "__future__" [];
	"langchain_community.vectorstores.deeplake" -> "logging" [];
	"langchain_community.vectorstores.deeplake" -> "typing" [];
	"langchain_community.vectorstores.deeplake" -> "numpy" [];
	"langchain_community.vectorstores.deeplake" -> "deeplake" [];
	"langchain_community.vectorstores.deeplake" -> "'deeplake.core'" [];
	"langchain_community.vectorstores.deeplake" -> "'deeplake.util'" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "__future__" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "json" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "logging" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "typing" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "numpy" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "'databricks.vector_search'" [];
	"langchain_community.vectorstores.dashvector" -> "__future__" [];
	"langchain_community.vectorstores.dashvector" -> "logging" [];
	"langchain_community.vectorstores.dashvector" -> "uuid" [];
	"langchain_community.vectorstores.dashvector" -> "typing" [];
	"langchain_community.vectorstores.dashvector" -> "numpy" [];
	"langchain_community.vectorstores.dashvector" -> "dashvector" [];
	"langchain_community.vectorstores.couchbase" -> "__future__" [];
	"langchain_community.vectorstores.couchbase" -> "uuid" [];
	"langchain_community.vectorstores.couchbase" -> "typing" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.cluster'" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.exceptions'" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.search'" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.options'" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.vector_search'" [];
	"langchain_community.vectorstores.clickhouse" -> "__future__" [];
	"langchain_community.vectorstores.clickhouse" -> "json" [];
	"langchain_community.vectorstores.clickhouse" -> "logging" [];
	"langchain_community.vectorstores.clickhouse" -> "hashlib" [];
	"langchain_community.vectorstores.clickhouse" -> "threading" [];
	"langchain_community.vectorstores.clickhouse" -> "typing" [];
	"langchain_community.vectorstores.clickhouse" -> "pydantic_settings" [];
	"langchain_community.vectorstores.clickhouse" -> "clickhouse_connect" [];
	"langchain_community.vectorstores.clickhouse" -> "tqdm" [];
	"langchain_community.vectorstores.clarifai" -> "__future__" [];
	"langchain_community.vectorstores.clarifai" -> "logging" [];
	"langchain_community.vectorstores.clarifai" -> "os" [];
	"langchain_community.vectorstores.clarifai" -> "traceback" [];
	"langchain_community.vectorstores.clarifai" -> "uuid" [];
	"langchain_community.vectorstores.clarifai" -> "typing" [];
	"langchain_community.vectorstores.clarifai" -> "requests" [];
	"langchain_community.vectorstores.clarifai" -> "'clarifai.client'" [];
	"langchain_community.vectorstores.clarifai" -> "clarifai_grpc" [];
	"langchain_community.vectorstores.chroma" -> "__future__" [];
	"langchain_community.vectorstores.chroma" -> "base64" [];
	"langchain_community.vectorstores.chroma" -> "logging" [];
	"langchain_community.vectorstores.chroma" -> "uuid" [];
	"langchain_community.vectorstores.chroma" -> "typing" [];
	"langchain_community.vectorstores.chroma" -> "numpy" [];
	"langchain_community.vectorstores.chroma" -> "chromadb" [];
	"langchain_community.vectorstores.chroma" -> "'chromadb.config'" [];
	"langchain_community.vectorstores.chroma" -> "'chromadb.api'" [];
	"langchain_community.vectorstores.chroma" -> "'chromadb.utils'" [];
	"langchain_community.vectorstores.cassandra" -> "__future__" [];
	"langchain_community.vectorstores.cassandra" -> "asyncio" [];
	"langchain_community.vectorstores.cassandra" -> "typing" [];
	"langchain_community.vectorstores.cassandra" -> "uuid" [];
	"langchain_community.vectorstores.cassandra" -> "warnings" [];
	"langchain_community.vectorstores.cassandra" -> "numpy" [];
	"langchain_community.vectorstores.cassandra" -> "'cassandra.cluster'" [];
	"langchain_community.vectorstores.cassandra" -> "'cassio.table'" [];
	"langchain_community.utilities.cassandra" -> "__future__" [];
	"langchain_community.utilities.cassandra" -> "asyncio" [];
	"langchain_community.utilities.cassandra" -> "enum" [];
	"langchain_community.utilities.cassandra" -> "typing" [];
	"langchain_community.utilities.cassandra" -> "cassandra" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "__future__" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "asyncio" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "json" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "logging" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "sys" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "datetime" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "functools" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "threading" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "typing" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "numpy" [];
	"langchain_community.utils.google" -> "importlib" [];
	"langchain_community.utils.google" -> "typing" [];
	"langchain_community.vectorstores.baiduvectordb" -> "__future__" [];
	"langchain_community.vectorstores.baiduvectordb" -> "json" [];
	"langchain_community.vectorstores.baiduvectordb" -> "logging" [];
	"langchain_community.vectorstores.baiduvectordb" -> "time" [];
	"langchain_community.vectorstores.baiduvectordb" -> "typing" [];
	"langchain_community.vectorstores.baiduvectordb" -> "numpy" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "logging" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "typing" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "elasticsearch" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "'elasticsearch.helpers'" [];
	"langchain_community.vectorstores.bagel" -> "__future__" [];
	"langchain_community.vectorstores.bagel" -> "uuid" [];
	"langchain_community.vectorstores.bagel" -> "typing" [];
	"langchain_community.vectorstores.bagel" -> "bagel" [];
	"langchain_community.vectorstores.bagel" -> "'bagel.config'" [];
	"langchain_community.vectorstores.bagel" -> "'bagel.api'" [];
	"langchain_community.vectorstores.azuresearch" -> "__future__" [];
	"langchain_community.vectorstores.azuresearch" -> "asyncio" [];
	"langchain_community.vectorstores.azuresearch" -> "base64" [];
	"langchain_community.vectorstores.azuresearch" -> "itertools" [];
	"langchain_community.vectorstores.azuresearch" -> "json" [];
	"langchain_community.vectorstores.azuresearch" -> "logging" [];
	"langchain_community.vectorstores.azuresearch" -> "time" [];
	"langchain_community.vectorstores.azuresearch" -> "uuid" [];
	"langchain_community.vectorstores.azuresearch" -> "typing" [];
	"langchain_community.vectorstores.azuresearch" -> "numpy" [];
	"langchain_community.vectorstores.azuresearch" -> "pydantic" [];
	"langchain_community.vectorstores.azuresearch" -> "'azure.core'" [];
	"langchain_community.vectorstores.azuresearch" -> "'azure.search'" [];
	"langchain_community.vectorstores.azuresearch" -> "'azure.identity'" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "__future__" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "uuid" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "warnings" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "enum" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "typing" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "numpy" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "pydantic" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "'azure.cosmos'" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "'azure.identity'" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "__future__" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "logging" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "enum" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "typing" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "numpy" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "'pymongo.collection'" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "pymongo" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "bson" [];
	"langchain_community.vectorstores.awadb" -> "__future__" [];
	"langchain_community.vectorstores.awadb" -> "logging" [];
	"langchain_community.vectorstores.awadb" -> "uuid" [];
	"langchain_community.vectorstores.awadb" -> "typing" [];
	"langchain_community.vectorstores.awadb" -> "numpy" [];
	"langchain_community.vectorstores.awadb" -> "awadb" [];
	"langchain_community.vectorstores.atlas" -> "__future__" [];
	"langchain_community.vectorstores.atlas" -> "logging" [];
	"langchain_community.vectorstores.atlas" -> "uuid" [];
	"langchain_community.vectorstores.atlas" -> "typing" [];
	"langchain_community.vectorstores.atlas" -> "numpy" [];
	"langchain_community.vectorstores.atlas" -> "nomic" [];
	"langchain_community.vectorstores.astradb" -> "__future__" [];
	"langchain_community.vectorstores.astradb" -> "uuid" [];
	"langchain_community.vectorstores.astradb" -> "warnings" [];
	"langchain_community.vectorstores.astradb" -> "typing" [];
	"langchain_community.vectorstores.astradb" -> "numpy" [];
	"langchain_community.vectorstores.astradb" -> "'astrapy.db'" [];
	"langchain_community.utilities.astradb" -> "__future__" [];
	"langchain_community.utilities.astradb" -> "asyncio" [];
	"langchain_community.utilities.astradb" -> "inspect" [];
	"langchain_community.utilities.astradb" -> "enum" [];
	"langchain_community.utilities.astradb" -> "typing" [];
	"langchain_community.utilities.astradb" -> "astrapy" [];
	"langchain_community.utilities.astradb" -> "'astrapy.db'" [];
	"langchain_community.vectorstores.aperturedb" -> "__future__" [];
	"langchain_community.vectorstores.aperturedb" -> "logging" [];
	"langchain_community.vectorstores.aperturedb" -> "time" [];
	"langchain_community.vectorstores.aperturedb" -> "uuid" [];
	"langchain_community.vectorstores.aperturedb" -> "typing" [];
	"langchain_community.vectorstores.aperturedb" -> "numpy" [];
	"langchain_community.vectorstores.aperturedb" -> "typing_extensions" [];
	"langchain_community.vectorstores.aperturedb" -> "aperturedb" [];
	"langchain_community.vectorstores.aperturedb" -> "'aperturedb.Utils'" [];
	"langchain_community.vectorstores.aperturedb" -> "'aperturedb.Descriptors'" [];
	"langchain_community.vectorstores.aperturedb" -> "'aperturedb.ParallelLoader'" [];
	"langchain_core.indexing.base" -> "__future__" [];
	"langchain_core.indexing.base" -> "abc" [];
	"langchain_core.indexing.base" -> "time" [];
	"langchain_core.indexing.base" -> "typing" [];
	"langchain_core.indexing" -> "typing" [];
	"langchain_core.indexing.api" -> "__future__" [];
	"langchain_core.indexing.api" -> "hashlib" [];
	"langchain_core.indexing.api" -> "json" [];
	"langchain_core.indexing.api" -> "uuid" [];
	"langchain_core.indexing.api" -> "itertools" [];
	"langchain_core.indexing.api" -> "typing" [];
	"langchain_core.indexing.api" -> "pydantic" [];
	"langchain_core.document_loaders.base" -> "__future__" [];
	"langchain_core.document_loaders.base" -> "abc" [];
	"langchain_core.document_loaders.base" -> "typing" [];
	"langchain_core.document_loaders.base" -> "langchain_text_splitters" [];
	"langchain_core.document_loaders" -> "typing" [];
	"langchain_core.document_loaders.langsmith" -> "datetime" [];
	"langchain_core.document_loaders.langsmith" -> "json" [];
	"langchain_core.document_loaders.langsmith" -> "uuid" [];
	"langchain_core.document_loaders.langsmith" -> "typing" [];
	"langchain_core.document_loaders.langsmith" -> "langsmith" [];
	"langchain_core.document_loaders.langsmith" -> "typing_extensions" [];
	"langchain_core.document_loaders.blob_loaders" -> "__future__" [];
	"langchain_core.document_loaders.blob_loaders" -> "abc" [];
	"langchain_core.document_loaders.blob_loaders" -> "typing" [];
	"langchain_core.documents.base" -> "__future__" [];
	"langchain_core.documents.base" -> "contextlib" [];
	"langchain_core.documents.base" -> "mimetypes" [];
	"langchain_core.documents.base" -> "io" [];
	"langchain_core.documents.base" -> "pathlib" [];
	"langchain_core.documents.base" -> "typing" [];
	"langchain_core.documents.base" -> "pydantic" [];
	"langchain_community.vectorstores.apache_doris" -> "__future__" [];
	"langchain_community.vectorstores.apache_doris" -> "json" [];
	"langchain_community.vectorstores.apache_doris" -> "logging" [];
	"langchain_community.vectorstores.apache_doris" -> "hashlib" [];
	"langchain_community.vectorstores.apache_doris" -> "threading" [];
	"langchain_community.vectorstores.apache_doris" -> "typing" [];
	"langchain_community.vectorstores.apache_doris" -> "numpy" [];
	"langchain_community.vectorstores.apache_doris" -> "pydantic_settings" [];
	"langchain_community.vectorstores.apache_doris" -> "typing_extensions" [];
	"langchain_community.vectorstores.apache_doris" -> "pymysql" [];
	"langchain_community.vectorstores.apache_doris" -> "tqdm" [];
	"langchain_community.vectorstores.annoy" -> "__future__" [];
	"langchain_community.vectorstores.annoy" -> "os" [];
	"langchain_community.vectorstores.annoy" -> "pickle" [];
	"langchain_community.vectorstores.annoy" -> "uuid" [];
	"langchain_community.vectorstores.annoy" -> "configparser" [];
	"langchain_community.vectorstores.annoy" -> "pathlib" [];
	"langchain_community.vectorstores.annoy" -> "typing" [];
	"langchain_community.vectorstores.annoy" -> "numpy" [];
	"langchain_community.vectorstores.analyticdb" -> "__future__" [];
	"langchain_community.vectorstores.analyticdb" -> "logging" [];
	"langchain_community.vectorstores.analyticdb" -> "uuid" [];
	"langchain_community.vectorstores.analyticdb" -> "typing" [];
	"langchain_community.vectorstores.analyticdb" -> "sqlalchemy" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "json" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "logging" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "numbers" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "hashlib" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "typing" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "alibabacloud_ha3engine_vector" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "alibabacloud_tea_util" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "'alibabacloud_ha3engine_vector.models'" [];
	"langchain_community.vectorstores.aerospike" -> "__future__" [];
	"langchain_community.vectorstores.aerospike" -> "logging" [];
	"langchain_community.vectorstores.aerospike" -> "uuid" [];
	"langchain_community.vectorstores.aerospike" -> "warnings" [];
	"langchain_community.vectorstores.aerospike" -> "typing" [];
	"langchain_community.vectorstores.aerospike" -> "numpy" [];
	"langchain_community.vectorstores.aerospike" -> "aerospike_vector_search" [];
	"langchain_community.vectorstores.aerospike" -> "'aerospike_vector_search.types'" [];
	"langchain_community.utilities" -> "importlib" [];
	"langchain_community.utilities" -> "typing" [];
	"langchain_community.utilities.zapier" -> "json" [];
	"langchain_community.utilities.zapier" -> "typing" [];
	"langchain_community.utilities.zapier" -> "aiohttp" [];
	"langchain_community.utilities.zapier" -> "requests" [];
	"langchain_community.utilities.zapier" -> "pydantic" [];
	"langchain_community.utilities.you" -> "warnings" [];
	"langchain_community.utilities.you" -> "typing" [];
	"langchain_community.utilities.you" -> "aiohttp" [];
	"langchain_community.utilities.you" -> "requests" [];
	"langchain_community.utilities.you" -> "pydantic" [];
	"langchain_community.utilities.you" -> "typing_extensions" [];
	"langchain_community.utilities.wolfram_alpha" -> "typing" [];
	"langchain_community.utilities.wolfram_alpha" -> "pydantic" [];
	"langchain_community.utilities.wolfram_alpha" -> "wolframalpha" [];
	"langchain_community.utilities.wikipedia" -> "logging" [];
	"langchain_community.utilities.wikipedia" -> "typing" [];
	"langchain_community.utilities.wikipedia" -> "pydantic" [];
	"langchain_community.utilities.wikipedia" -> "wikipedia" [];
	"langchain_community.utilities.twilio" -> "typing" [];
	"langchain_community.utilities.twilio" -> "pydantic" [];
	"langchain_community.utilities.twilio" -> "twilio" [];
	"langchain_community.utilities.tensorflow_datasets" -> "logging" [];
	"langchain_community.utilities.tensorflow_datasets" -> "typing" [];
	"langchain_community.utilities.tensorflow_datasets" -> "pydantic" [];
	"langchain_community.utilities.tensorflow_datasets" -> "tensorflow" [];
	"langchain_community.utilities.tensorflow_datasets" -> "tensorflow_datasets" [];
	"langchain_community.utilities.steam" -> "typing" [];
	"langchain_community.utilities.steam" -> "pydantic" [];
	"langchain_community.utilities.steam" -> "steam" [];
	"langchain_community.utilities.steam" -> "decouple" [];
	"langchain_community.utilities.steam" -> "bs4" [];
	"langchain_community.utilities.steam" -> "steamspypi" [];
	"langchain_community.tools" -> "importlib" [];
	"langchain_community.tools" -> "typing" [];
	"langchain_community.tools.zenguard.tool" -> "os" [];
	"langchain_community.tools.zenguard.tool" -> "enum" [];
	"langchain_community.tools.zenguard.tool" -> "typing" [];
	"langchain_community.tools.zenguard.tool" -> "requests" [];
	"langchain_community.tools.zenguard.tool" -> "pydantic" [];
	"langchain_community.tools.zapier.tool" -> "typing" [];
	"langchain_community.tools.zapier.tool" -> "pydantic" [];
	"langchain_community.tools.youtube.search" -> "json" [];
	"langchain_community.tools.youtube.search" -> "typing" [];
	"langchain_community.tools.youtube.search" -> "youtube_search" [];
	"langchain_community.tools.you.tool" -> "typing" [];
	"langchain_community.tools.you.tool" -> "pydantic" [];
	"langchain_community.tools.yahoo_finance_news" -> "typing" [];
	"langchain_community.tools.yahoo_finance_news" -> "pydantic" [];
	"langchain_community.tools.yahoo_finance_news" -> "yfinance" [];
	"langchain_community.document_loaders.web_base" -> "asyncio" [];
	"langchain_community.document_loaders.web_base" -> "logging" [];
	"langchain_community.document_loaders.web_base" -> "warnings" [];
	"langchain_community.document_loaders.web_base" -> "typing" [];
	"langchain_community.document_loaders.web_base" -> "aiohttp" [];
	"langchain_community.document_loaders.web_base" -> "requests" [];
	"langchain_community.document_loaders.web_base" -> "fake_useragent" [];
	"langchain_community.document_loaders.web_base" -> "bs4" [];
	"langchain_community.utils.user_agent" -> "logging" [];
	"langchain_community.utils.user_agent" -> "os" [];
	"langchain_community.tools.wolfram_alpha.tool" -> "typing" [];
	"langchain_community.tools.wikipedia.tool" -> "typing" [];
	"langchain_community.tools.wikipedia.tool" -> "pydantic" [];
	"langchain_community.tools.vectorstore.tool" -> "json" [];
	"langchain_community.tools.vectorstore.tool" -> "typing" [];
	"langchain_community.tools.vectorstore.tool" -> "pydantic" [];
	"langchain.chains.qa_with_sources.retrieval" -> "typing" [];
	"langchain.chains.qa_with_sources.retrieval" -> "pydantic" [];
	"langchain.chains.qa_with_sources.loading" -> "__future__" [];
	"langchain.chains.qa_with_sources.loading" -> "typing" [];
	"langchain.chains.question_answering.chain" -> "typing" [];
	"langchain.chains.prompt_selector" -> "abc" [];
	"langchain.chains.prompt_selector" -> "typing" [];
	"langchain.chains.prompt_selector" -> "pydantic" [];
	"langchain.chains.combine_documents.refine" -> "__future__" [];
	"langchain.chains.combine_documents.refine" -> "typing" [];
	"langchain.chains.combine_documents.refine" -> "pydantic" [];
	"langchain.chains.combine_documents.reduce" -> "__future__" [];
	"langchain.chains.combine_documents.reduce" -> "typing" [];
	"langchain.chains.combine_documents.reduce" -> "pydantic" [];
	"langchain.chains.combine_documents.map_rerank" -> "__future__" [];
	"langchain.chains.combine_documents.map_rerank" -> "typing" [];
	"langchain.chains.combine_documents.map_rerank" -> "pydantic" [];
	"langchain.chains.combine_documents.map_rerank" -> "typing_extensions" [];
	"langchain.chains.combine_documents.map_reduce" -> "__future__" [];
	"langchain.chains.combine_documents.map_reduce" -> "typing" [];
	"langchain.chains.combine_documents.map_reduce" -> "pydantic" [];
	"langchain.chains.combine_documents.base" -> "abc" [];
	"langchain.chains.combine_documents.base" -> "typing" [];
	"langchain.chains.combine_documents.base" -> "langchain_text_splitters" [];
	"langchain.chains.combine_documents.base" -> "pydantic" [];
	"langchain.chains.qa_with_sources.base" -> "__future__" [];
	"langchain.chains.qa_with_sources.base" -> "inspect" [];
	"langchain.chains.qa_with_sources.base" -> "re" [];
	"langchain.chains.qa_with_sources.base" -> "abc" [];
	"langchain.chains.qa_with_sources.base" -> "typing" [];
	"langchain.chains.qa_with_sources.base" -> "pydantic" [];
	"langchain.chains.combine_documents.stuff" -> "typing" [];
	"langchain.chains.combine_documents.stuff" -> "pydantic" [];
	"langchain.chains.retrieval_qa.base" -> "__future__" [];
	"langchain.chains.retrieval_qa.base" -> "inspect" [];
	"langchain.chains.retrieval_qa.base" -> "warnings" [];
	"langchain.chains.retrieval_qa.base" -> "abc" [];
	"langchain.chains.retrieval_qa.base" -> "typing" [];
	"langchain.chains.retrieval_qa.base" -> "pydantic" [];
	"langchain_community.llms.openai" -> "__future__" [];
	"langchain_community.llms.openai" -> "logging" [];
	"langchain_community.llms.openai" -> "os" [];
	"langchain_community.llms.openai" -> "sys" [];
	"langchain_community.llms.openai" -> "warnings" [];
	"langchain_community.llms.openai" -> "typing" [];
	"langchain_community.llms.openai" -> "pydantic" [];
	"langchain_community.llms.openai" -> "openai" [];
	"langchain_community.llms.openai" -> "tiktoken" [];
	"langchain_community.tools.tavily_search.tool" -> "typing" [];
	"langchain_community.tools.tavily_search.tool" -> "pydantic" [];
	"langchain_community.utilities.tavily_search" -> "json" [];
	"langchain_community.utilities.tavily_search" -> "typing" [];
	"langchain_community.utilities.tavily_search" -> "aiohttp" [];
	"langchain_community.utilities.tavily_search" -> "requests" [];
	"langchain_community.utilities.tavily_search" -> "pydantic" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "__future__" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "enum" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "typing" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "pydantic" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "steamship" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "__future__" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "uuid" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "typing" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "steamship" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "'steamship.data'" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "'steamship.utils'" [];
	"langchain_community.tools.steam.tool" -> "typing" [];
	"langchain_community.tools.stackexchange.tool" -> "typing" [];
	"langchain_community.tools.sql_database.tool" -> "typing" [];
	"langchain_community.tools.sql_database.tool" -> "pydantic" [];
	"langchain_community.tools.spark_sql.tool" -> "typing" [];
	"langchain_community.tools.spark_sql.tool" -> "pydantic" [];
	"langchain_community.tools.sleep.tool" -> "asyncio" [];
	"langchain_community.tools.sleep.tool" -> "time" [];
	"langchain_community.tools.sleep.tool" -> "typing" [];
	"langchain_community.tools.sleep.tool" -> "pydantic" [];
	"langchain_community.tools.slack.send_message" -> "typing" [];
	"langchain_community.tools.slack.send_message" -> "pydantic" [];
	"langchain_community.tools.slack.utils" -> "__future__" [];
	"langchain_community.tools.slack.utils" -> "logging" [];
	"langchain_community.tools.slack.utils" -> "os" [];
	"langchain_community.tools.slack.utils" -> "typing" [];
	"langchain_community.tools.slack.utils" -> "slack_sdk" [];
	"langchain_community.tools.slack.base" -> "__future__" [];
	"langchain_community.tools.slack.base" -> "typing" [];
	"langchain_community.tools.slack.base" -> "pydantic" [];
	"langchain_community.tools.slack.base" -> "slack_sdk" [];
	"langchain_community.tools.slack.schedule_message" -> "logging" [];
	"langchain_community.tools.slack.schedule_message" -> "datetime" [];
	"langchain_community.tools.slack.schedule_message" -> "typing" [];
	"langchain_community.tools.slack.schedule_message" -> "pydantic" [];
	"langchain_community.tools.slack.get_message" -> "json" [];
	"langchain_community.tools.slack.get_message" -> "logging" [];
	"langchain_community.tools.slack.get_message" -> "typing" [];
	"langchain_community.tools.slack.get_message" -> "pydantic" [];
	"langchain_community.tools.slack.get_channel" -> "json" [];
	"langchain_community.tools.slack.get_channel" -> "logging" [];
	"langchain_community.tools.slack.get_channel" -> "typing" [];
	"langchain_community.tools.shell.tool" -> "logging" [];
	"langchain_community.tools.shell.tool" -> "platform" [];
	"langchain_community.tools.shell.tool" -> "warnings" [];
	"langchain_community.tools.shell.tool" -> "typing" [];
	"langchain_community.tools.shell.tool" -> "pydantic" [];
	"langchain_experimental.llm_bash.bash" -> "__future__" [];
	"langchain_experimental.llm_bash.bash" -> "platform" [];
	"langchain_experimental.llm_bash.bash" -> "re" [];
	"langchain_experimental.llm_bash.bash" -> "subprocess" [];
	"langchain_experimental.llm_bash.bash" -> "typing" [];
	"langchain_experimental.llm_bash.bash" -> "uuid" [];
	"langchain_experimental.llm_bash.bash" -> "pexpect" [];
	"langchain_experimental" -> "importlib" [];
	"langchain_community.tools.searx_search.tool" -> "typing" [];
	"langchain_community.tools.searx_search.tool" -> "pydantic" [];
	"langchain_community.tools.searchapi.tool" -> "typing" [];
	"langchain_community.tools.searchapi.tool" -> "pydantic" [];
	"langchain_community.tools.scenexplain.tool" -> "typing" [];
	"langchain_community.tools.scenexplain.tool" -> "pydantic" [];
	"langchain_community.tools.requests.tool" -> "json" [];
	"langchain_community.tools.requests.tool" -> "typing" [];
	"langchain_community.tools.requests.tool" -> "pydantic" [];
	"langchain_community.tools.reddit_search.tool" -> "typing" [];
	"langchain_community.tools.reddit_search.tool" -> "pydantic" [];
	"langchain_community.utilities.reddit_search" -> "typing" [];
	"langchain_community.utilities.reddit_search" -> "pydantic" [];
	"langchain_community.utilities.reddit_search" -> "praw" [];
	"langchain_community.tools.pubmed.tool" -> "typing" [];
	"langchain_community.tools.pubmed.tool" -> "pydantic" [];
	"langchain_community.tools.powerbi.tool" -> "logging" [];
	"langchain_community.tools.powerbi.tool" -> "time" [];
	"langchain_community.tools.powerbi.tool" -> "typing" [];
	"langchain_community.tools.powerbi.tool" -> "pydantic" [];
	"langchain_community.tools.polygon.ticker_news" -> "typing" [];
	"langchain_community.tools.polygon.ticker_news" -> "pydantic" [];
	"langchain_community.utilities.polygon" -> "json" [];
	"langchain_community.utilities.polygon" -> "typing" [];
	"langchain_community.utilities.polygon" -> "requests" [];
	"langchain_community.utilities.polygon" -> "pydantic" [];
	"langchain_community.tools.polygon.last_quote" -> "typing" [];
	"langchain_community.tools.polygon.last_quote" -> "pydantic" [];
	"langchain_community.tools.polygon.financials" -> "typing" [];
	"langchain_community.tools.polygon.financials" -> "pydantic" [];
	"langchain_community.tools.polygon.aggregates" -> "typing" [];
	"langchain_community.tools.polygon.aggregates" -> "pydantic" [];
	"langchain_community.tools.plugin" -> "__future__" [];
	"langchain_community.tools.plugin" -> "json" [];
	"langchain_community.tools.plugin" -> "typing" [];
	"langchain_community.tools.plugin" -> "requests" [];
	"langchain_community.tools.plugin" -> "yaml" [];
	"langchain_community.tools.plugin" -> "pydantic" [];
	"langchain_community.tools.playwright.navigate_back" -> "__future__" [];
	"langchain_community.tools.playwright.navigate_back" -> "typing" [];
	"langchain_community.tools.playwright.navigate_back" -> "pydantic" [];
	"langchain_community.tools.playwright.utils" -> "__future__" [];
	"langchain_community.tools.playwright.utils" -> "asyncio" [];
	"langchain_community.tools.playwright.utils" -> "typing" [];
	"langchain_community.tools.playwright.utils" -> "'playwright.async_api'" [];
	"langchain_community.tools.playwright.utils" -> "'playwright.sync_api'" [];
	"langchain_community.tools.playwright.base" -> "__future__" [];
	"langchain_community.tools.playwright.base" -> "typing" [];
	"langchain_community.tools.playwright.base" -> "pydantic" [];
	"langchain_community.tools.playwright.base" -> "'playwright.async_api'" [];
	"langchain_community.tools.playwright.base" -> "'playwright.sync_api'" [];
	"langchain_community.tools.playwright.navigate" -> "__future__" [];
	"langchain_community.tools.playwright.navigate" -> "typing" [];
	"langchain_community.tools.playwright.navigate" -> "pydantic" [];
	"langchain_community.tools.playwright.get_elements" -> "__future__" [];
	"langchain_community.tools.playwright.get_elements" -> "json" [];
	"langchain_community.tools.playwright.get_elements" -> "typing" [];
	"langchain_community.tools.playwright.get_elements" -> "pydantic" [];
	"langchain_community.tools.playwright.get_elements" -> "'playwright.async_api'" [];
	"langchain_community.tools.playwright.get_elements" -> "'playwright.sync_api'" [];
	"langchain_community.tools.playwright.extract_text" -> "__future__" [];
	"langchain_community.tools.playwright.extract_text" -> "typing" [];
	"langchain_community.tools.playwright.extract_text" -> "pydantic" [];
	"langchain_community.tools.playwright.extract_text" -> "bs4" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "__future__" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "json" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "typing" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "pydantic" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "bs4" [];
	"langchain_community.tools.playwright.current_page" -> "__future__" [];
	"langchain_community.tools.playwright.current_page" -> "typing" [];
	"langchain_community.tools.playwright.current_page" -> "pydantic" [];
	"langchain_community.tools.playwright.click" -> "__future__" [];
	"langchain_community.tools.playwright.click" -> "typing" [];
	"langchain_community.tools.playwright.click" -> "pydantic" [];
	"langchain_community.tools.playwright.click" -> "'playwright.sync_api'" [];
	"langchain_community.tools.playwright.click" -> "'playwright.async_api'" [];
	"langchain_community.tools.openweathermap.tool" -> "typing" [];
	"langchain_community.tools.openweathermap.tool" -> "pydantic" [];
	"langchain_community.utilities.openapi" -> "__future__" [];
	"langchain_community.utilities.openapi" -> "copy" [];
	"langchain_community.utilities.openapi" -> "json" [];
	"langchain_community.utilities.openapi" -> "logging" [];
	"langchain_community.utilities.openapi" -> "re" [];
	"langchain_community.utilities.openapi" -> "enum" [];
	"langchain_community.utilities.openapi" -> "pathlib" [];
	"langchain_community.utilities.openapi" -> "typing" [];
	"langchain_community.utilities.openapi" -> "requests" [];
	"langchain_community.utilities.openapi" -> "yaml" [];
	"langchain_community.utilities.openapi" -> "pydantic" [];
	"langchain_community.utilities.openapi" -> "openapi_pydantic" [];
	"langchain_community.tools.openapi.utils.api_models" -> "__future__" [];
	"langchain_community.tools.openapi.utils.api_models" -> "logging" [];
	"langchain_community.tools.openapi.utils.api_models" -> "enum" [];
	"langchain_community.tools.openapi.utils.api_models" -> "typing" [];
	"langchain_community.tools.openapi.utils.api_models" -> "pydantic" [];
	"langchain_community.tools.openapi.utils.api_models" -> "openapi_pydantic" [];
	"langchain_community.tools.office365.utils" -> "__future__" [];
	"langchain_community.tools.office365.utils" -> "logging" [];
	"langchain_community.tools.office365.utils" -> "os" [];
	"langchain_community.tools.office365.utils" -> "typing" [];
	"langchain_community.tools.office365.utils" -> "O365" [];
	"langchain_community.tools.office365.utils" -> "bs4" [];
	"langchain_community.tools.office365.send_message" -> "typing" [];
	"langchain_community.tools.office365.send_message" -> "pydantic" [];
	"langchain_community.tools.office365.base" -> "__future__" [];
	"langchain_community.tools.office365.base" -> "typing" [];
	"langchain_community.tools.office365.base" -> "pydantic" [];
	"langchain_community.tools.office365.base" -> "O365" [];
	"langchain_community.tools.office365.send_event" -> "datetime" [];
	"langchain_community.tools.office365.send_event" -> "typing" [];
	"langchain_community.tools.office365.send_event" -> "zoneinfo" [];
	"langchain_community.tools.office365.send_event" -> "pydantic" [];
	"langchain_community.tools.office365.messages_search" -> "typing" [];
	"langchain_community.tools.office365.messages_search" -> "pydantic" [];
	"langchain_community.tools.office365.events_search" -> "datetime" [];
	"langchain_community.tools.office365.events_search" -> "typing" [];
	"langchain_community.tools.office365.events_search" -> "pydantic" [];
	"langchain_community.tools.office365.create_draft_message" -> "typing" [];
	"langchain_community.tools.office365.create_draft_message" -> "pydantic" [];
	"langchain_community.tools.nasa.tool" -> "typing" [];
	"langchain_community.tools.nasa.tool" -> "pydantic" [];
	"langchain_community.tools.mojeek_search.tool" -> "__future__" [];
	"langchain_community.tools.mojeek_search.tool" -> "typing" [];
	"langchain_community.tools.metaphor_search.tool" -> "typing" [];
	"langchain_community.tools.merriam_webster.tool" -> "typing" [];
	"langchain_community.tools.json.tool" -> "__future__" [];
	"langchain_community.tools.json.tool" -> "json" [];
	"langchain_community.tools.json.tool" -> "re" [];
	"langchain_community.tools.json.tool" -> "pathlib" [];
	"langchain_community.tools.json.tool" -> "typing" [];
	"langchain_community.tools.json.tool" -> "pydantic" [];
	"langchain_community.tools.jira.tool" -> "typing" [];
	"langchain_community.tools.jira.tool" -> "pydantic" [];
	"langchain_community.tools.jina_search.tool" -> "__future__" [];
	"langchain_community.tools.jina_search.tool" -> "typing" [];
	"langchain_community.tools.jina_search.tool" -> "pydantic" [];
	"langchain_community.utilities.jina_search" -> "json" [];
	"langchain_community.utilities.jina_search" -> "typing" [];
	"langchain_community.utilities.jina_search" -> "requests" [];
	"langchain_community.utilities.jina_search" -> "pydantic" [];
	"langchain_community.utilities.jina_search" -> "yarl" [];
	"langchain_community.tools.interaction.tool" -> "warnings" [];
	"langchain_community.tools.interaction.tool" -> "typing" [];
	"langchain_community.tools.ifttt" -> "typing" [];
	"langchain_community.tools.ifttt" -> "requests" [];
	"langchain_community.tools.human.tool" -> "typing" [];
	"langchain_community.tools.human.tool" -> "pydantic" [];
	"langchain_community.tools.graphql.tool" -> "json" [];
	"langchain_community.tools.graphql.tool" -> "typing" [];
	"langchain_community.tools.graphql.tool" -> "pydantic" [];
	"langchain_community.tools.google_serper.tool" -> "typing" [];
	"langchain_community.tools.google_serper.tool" -> "pydantic" [];
	"langchain_community.tools.google_search.tool" -> "typing" [];
	"langchain_community.tools.google_places.tool" -> "typing" [];
	"langchain_community.tools.google_places.tool" -> "pydantic" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "__future__" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "tempfile" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "typing" [];
	"langchain_community.tools.google_books" -> "typing" [];
	"langchain_community.tools.google_books" -> "pydantic" [];
	"langchain_community.tools.gmail.utils" -> "__future__" [];
	"langchain_community.tools.gmail.utils" -> "logging" [];
	"langchain_community.tools.gmail.utils" -> "os" [];
	"langchain_community.tools.gmail.utils" -> "typing" [];
	"langchain_community.tools.gmail.utils" -> "'google_auth_oauthlib.flow'" [];
	"langchain_community.tools.gmail.utils" -> "bs4" [];
	"googleapiclient.discovery" -> "__future__" [];
	"googleapiclient.discovery" -> "collections" [];
	"googleapiclient.discovery" -> "copy" [];
	"googleapiclient.discovery" -> "io" [];
	"googleapiclient.discovery" -> "json" [];
	"googleapiclient.discovery" -> "keyword" [];
	"googleapiclient.discovery" -> "logging" [];
	"googleapiclient.discovery" -> "mimetypes" [];
	"googleapiclient.discovery" -> "os" [];
	"googleapiclient.discovery" -> "re" [];
	"googleapiclient.discovery" -> "urllib" [];
	"googleapiclient.discovery" -> "httplib2" [];
	"googleapiclient.discovery" -> "uritemplate" [];
	"googleapiclient.discovery" -> "google_auth_httplib2" [];
	"googleapiclient.discovery_cache" -> "__future__" [];
	"googleapiclient.discovery_cache" -> "logging" [];
	"googleapiclient.discovery_cache" -> "os" [];
	"googleapiclient.discovery_cache.file_cache" -> "__future__" [];
	"googleapiclient.discovery_cache.file_cache" -> "datetime" [];
	"googleapiclient.discovery_cache.file_cache" -> "json" [];
	"googleapiclient.discovery_cache.file_cache" -> "logging" [];
	"googleapiclient.discovery_cache.file_cache" -> "os" [];
	"googleapiclient.discovery_cache.file_cache" -> "tempfile" [];
	"googleapiclient.discovery_cache.file_cache" -> "'oauth2client.contrib'" [];
	"googleapiclient.discovery_cache.file_cache" -> "'oauth2client.locked_file'" [];
	"googleapiclient.discovery_cache.appengine_memcache" -> "logging" [];
	"googleapiclient.discovery_cache.appengine_memcache" -> "'google.appengine'" [];
	"googleapiclient.discovery_cache.base" -> "abc" [];
	"googleapiclient.schema" -> "__future__" [];
	"googleapiclient.schema" -> "collections" [];
	"googleapiclient.model" -> "__future__" [];
	"googleapiclient.model" -> "json" [];
	"googleapiclient.model" -> "logging" [];
	"googleapiclient.model" -> "platform" [];
	"googleapiclient.model" -> "urllib" [];
	"googleapiclient.model" -> "warnings" [];
	"googleapiclient.http" -> "__future__" [];
	"googleapiclient.http" -> "copy" [];
	"googleapiclient.http" -> "io" [];
	"googleapiclient.http" -> "json" [];
	"googleapiclient.http" -> "logging" [];
	"googleapiclient.http" -> "mimetypes" [];
	"googleapiclient.http" -> "os" [];
	"googleapiclient.http" -> "random" [];
	"googleapiclient.http" -> "socket" [];
	"googleapiclient.http" -> "time" [];
	"googleapiclient.http" -> "urllib" [];
	"googleapiclient.http" -> "uuid" [];
	"googleapiclient.http" -> "httplib2" [];
	"googleapiclient.http" -> "ssl" [];
	"googleapiclient.errors" -> "__future__" [];
	"googleapiclient.errors" -> "json" [];
	"googleapiclient._helpers" -> "functools" [];
	"googleapiclient._helpers" -> "inspect" [];
	"googleapiclient._helpers" -> "logging" [];
	"googleapiclient._helpers" -> "urllib" [];
	"googleapiclient.mimeparse" -> "__future__" [];
	"googleapiclient.mimeparse" -> "functools" [];
	"googleapiclient._auth" -> "httplib2" [];
	"googleapiclient._auth" -> "google_auth_httplib2" [];
	"googleapiclient._auth" -> "oauth2client" [];
	"googleapiclient._auth" -> "'oauth2client.client'" [];
	"googleapiclient" -> "logging" [];
	"google_auth_httplib2" -> "__future__" [];
	"google_auth_httplib2" -> "logging" [];
	"google_auth_httplib2" -> "httplib2" [];
	"uritemplate.api" -> "typing" [];
	"uritemplate.template" -> "re" [];
	"uritemplate.template" -> "typing" [];
	"uritemplate.orderedset" -> "typing" [];
	"uritemplate.orderedset" -> "weakref" [];
	"uritemplate.variable" -> "typing" [];
	"httplib2" -> "base64" [];
	"httplib2" -> "calendar" [];
	"httplib2" -> "copy" [];
	"httplib2" -> "email" [];
	"httplib2" -> "errno" [];
	"httplib2" -> "gettext" [];
	"httplib2" -> "gzip" [];
	"httplib2" -> "hashlib" [];
	"httplib2" -> "hmac" [];
	"httplib2" -> "io" [];
	"httplib2" -> "os" [];
	"httplib2" -> "random" [];
	"httplib2" -> "re" [];
	"httplib2" -> "socket" [];
	"httplib2" -> "ssl" [];
	"httplib2" -> "sys" [];
	"httplib2" -> "time" [];
	"httplib2" -> "zlib" [];
	"httplib2" -> "socks" [];
	"httplib2.certs" -> "os" [];
	"httplib2.certs" -> "certifi" [];
	"httplib2.certs" -> "ca_certs_locater" [];
	"httplib2.iri2uri" -> "unittest" [];
	"httplib2.auth" -> "base64" [];
	"httplib2.auth" -> "re" [];
	"httplib2.auth" -> "pyparsing" [];
	"pyparsing" -> "typing" [];
	"pyparsing.common" -> "datetime" [];
	"pyparsing.testing" -> "contextlib" [];
	"pyparsing.testing" -> "re" [];
	"pyparsing.testing" -> "typing" [];
	"pyparsing.unicode" -> "sys" [];
	"pyparsing.unicode" -> "itertools" [];
	"pyparsing.unicode" -> "typing" [];
	"pyparsing.helpers" -> "operator" [];
	"pyparsing.helpers" -> "re" [];
	"pyparsing.helpers" -> "sys" [];
	"pyparsing.helpers" -> "typing" [];
	"pyparsing.results" -> "__future__" [];
	"pyparsing.results" -> "collections" [];
	"pyparsing.results" -> "pprint" [];
	"pyparsing.results" -> "typing" [];
	"pyparsing.core" -> "__future__" [];
	"pyparsing.core" -> "collections" [];
	"pyparsing.core" -> "os" [];
	"pyparsing.core" -> "typing" [];
	"pyparsing.core" -> "abc" [];
	"pyparsing.core" -> "enum" [];
	"pyparsing.core" -> "string" [];
	"pyparsing.core" -> "copy" [];
	"pyparsing.core" -> "warnings" [];
	"pyparsing.core" -> "re" [];
	"pyparsing.core" -> "sys" [];
	"pyparsing.core" -> "traceback" [];
	"pyparsing.core" -> "types" [];
	"pyparsing.core" -> "operator" [];
	"pyparsing.core" -> "functools" [];
	"pyparsing.core" -> "threading" [];
	"pyparsing.core" -> "pathlib" [];
	"pyparsing.diagram" -> "__future__" [];
	"pyparsing.diagram" -> "itertools" [];
	"pyparsing.diagram" -> "railroad" [];
	"pyparsing.diagram" -> "dataclasses" [];
	"pyparsing.diagram" -> "typing" [];
	"pyparsing.diagram" -> "jinja2" [];
	"pyparsing.diagram" -> "io" [];
	"pyparsing.diagram" -> "inspect" [];
	"pyparsing.diagram" -> "re" [];
	"pyparsing.actions" -> "__future__" [];
	"pyparsing.actions" -> "typing" [];
	"pyparsing.exceptions" -> "__future__" [];
	"pyparsing.exceptions" -> "copy" [];
	"pyparsing.exceptions" -> "re" [];
	"pyparsing.exceptions" -> "sys" [];
	"pyparsing.exceptions" -> "typing" [];
	"pyparsing.exceptions" -> "functools" [];
	"pyparsing.exceptions" -> "inspect" [];
	"pyparsing.util" -> "contextlib" [];
	"pyparsing.util" -> "re" [];
	"pyparsing.util" -> "functools" [];
	"pyparsing.util" -> "inspect" [];
	"pyparsing.util" -> "itertools" [];
	"pyparsing.util" -> "types" [];
	"pyparsing.util" -> "typing" [];
	"pyparsing.util" -> "warnings" [];
	"httplib2.socks" -> "base64" [];
	"httplib2.socks" -> "socket" [];
	"httplib2.socks" -> "struct" [];
	"httplib2.socks" -> "sys" [];
	"langchain_community.tools.gmail.send_message" -> "base64" [];
	"langchain_community.tools.gmail.send_message" -> "typing" [];
	"langchain_community.tools.gmail.send_message" -> "pydantic" [];
	"langchain_community.tools.gmail.base" -> "__future__" [];
	"langchain_community.tools.gmail.base" -> "typing" [];
	"langchain_community.tools.gmail.base" -> "pydantic" [];
	"langchain_community.tools.gmail.search" -> "base64" [];
	"langchain_community.tools.gmail.search" -> "email" [];
	"langchain_community.tools.gmail.search" -> "enum" [];
	"langchain_community.tools.gmail.search" -> "typing" [];
	"langchain_community.tools.gmail.search" -> "pydantic" [];
	"langchain_community.tools.gmail.get_thread" -> "typing" [];
	"langchain_community.tools.gmail.get_thread" -> "pydantic" [];
	"langchain_community.tools.gmail.get_message" -> "base64" [];
	"langchain_community.tools.gmail.get_message" -> "email" [];
	"langchain_community.tools.gmail.get_message" -> "typing" [];
	"langchain_community.tools.gmail.get_message" -> "pydantic" [];
	"langchain_community.tools.gmail.create_draft" -> "base64" [];
	"langchain_community.tools.gmail.create_draft" -> "typing" [];
	"langchain_community.tools.gmail.create_draft" -> "pydantic" [];
	"langchain_community.tools.financial_datasets.income_statements" -> "typing" [];
	"langchain_community.tools.financial_datasets.income_statements" -> "pydantic" [];
	"langchain_community.utilities.financial_datasets" -> "json" [];
	"langchain_community.utilities.financial_datasets" -> "typing" [];
	"langchain_community.utilities.financial_datasets" -> "requests" [];
	"langchain_community.utilities.financial_datasets" -> "pydantic" [];
	"langchain_community.tools.financial_datasets.cash_flow_statements" -> "typing" [];
	"langchain_community.tools.financial_datasets.cash_flow_statements" -> "pydantic" [];
	"langchain_community.tools.financial_datasets.balance_sheets" -> "typing" [];
	"langchain_community.tools.financial_datasets.balance_sheets" -> "pydantic" [];
	"langchain_community.tools.file_management.write" -> "typing" [];
	"langchain_community.tools.file_management.write" -> "pydantic" [];
	"langchain_community.tools.file_management.utils" -> "sys" [];
	"langchain_community.tools.file_management.utils" -> "pathlib" [];
	"langchain_community.tools.file_management.utils" -> "typing" [];
	"langchain_community.tools.file_management.utils" -> "pydantic" [];
	"langchain_community.tools.file_management.read" -> "typing" [];
	"langchain_community.tools.file_management.read" -> "pydantic" [];
	"langchain_community.tools.file_management.move" -> "shutil" [];
	"langchain_community.tools.file_management.move" -> "typing" [];
	"langchain_community.tools.file_management.move" -> "pydantic" [];
	"langchain_community.tools.file_management.list_dir" -> "os" [];
	"langchain_community.tools.file_management.list_dir" -> "typing" [];
	"langchain_community.tools.file_management.list_dir" -> "pydantic" [];
	"langchain_community.tools.file_management.file_search" -> "fnmatch" [];
	"langchain_community.tools.file_management.file_search" -> "os" [];
	"langchain_community.tools.file_management.file_search" -> "typing" [];
	"langchain_community.tools.file_management.file_search" -> "pydantic" [];
	"langchain_community.tools.file_management.delete" -> "os" [];
	"langchain_community.tools.file_management.delete" -> "typing" [];
	"langchain_community.tools.file_management.delete" -> "pydantic" [];
	"langchain_community.tools.file_management.copy" -> "shutil" [];
	"langchain_community.tools.file_management.copy" -> "typing" [];
	"langchain_community.tools.file_management.copy" -> "pydantic" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "tempfile" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "enum" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "typing" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "pydantic" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "elevenlabs" [];
	"langchain_community.tools.edenai.text_moderation" -> "__future__" [];
	"langchain_community.tools.edenai.text_moderation" -> "logging" [];
	"langchain_community.tools.edenai.text_moderation" -> "typing" [];
	"langchain_community.tools.edenai.text_moderation" -> "pydantic" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "__future__" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "logging" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "typing" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "pydantic" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "__future__" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "logging" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "typing" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "pydantic" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "__future__" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "logging" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "typing" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "pydantic" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "__future__" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "logging" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "typing" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "pydantic" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "__future__" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "logging" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "abc" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "typing" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "requests" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "pydantic" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "langchain_community" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "__future__" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "logging" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "typing" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "requests" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "pydantic" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "__future__" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "json" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "logging" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "time" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "typing" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "requests" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "pydantic" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "__future__" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "ast" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "json" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "os" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "io" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "sys" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "typing" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "pydantic" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "e2b" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "'e2b.templates'" [];
	"langchain_community.tools.e2b_data_analysis.unparse" -> "ast" [];
	"langchain_community.tools.e2b_data_analysis.unparse" -> "io" [];
	"langchain_community.tools.e2b_data_analysis.unparse" -> "sys" [];
	"langchain_community.tools.e2b_data_analysis.unparse" -> "tokenize" [];
	"langchain_community.tools.ddg_search.tool" -> "json" [];
	"langchain_community.tools.ddg_search.tool" -> "warnings" [];
	"langchain_community.tools.ddg_search.tool" -> "typing" [];
	"langchain_community.tools.ddg_search.tool" -> "pydantic" [];
	"langchain_community.tools.dataherald.tool" -> "typing" [];
	"langchain_community.tools.dataherald.tool" -> "pydantic" [];
	"langchain_community.tools.connery.tool" -> "asyncio" [];
	"langchain_community.tools.connery.tool" -> "functools" [];
	"langchain_community.tools.connery.tool" -> "typing" [];
	"langchain_community.tools.connery.tool" -> "pydantic" [];
	"langchain_community.tools.connery.models" -> "typing" [];
	"langchain_community.tools.connery.models" -> "pydantic" [];
	"langchain_community.tools.connery.service" -> "json" [];
	"langchain_community.tools.connery.service" -> "typing" [];
	"langchain_community.tools.connery.service" -> "requests" [];
	"langchain_community.tools.connery.service" -> "pydantic" [];
	"langchain_community.tools.cogniswitch.tool" -> "__future__" [];
	"langchain_community.tools.cogniswitch.tool" -> "typing" [];
	"langchain_community.tools.cogniswitch.tool" -> "requests" [];
	"langchain_community.tools.cassandra_database.tool" -> "__future__" [];
	"langchain_community.tools.cassandra_database.tool" -> "traceback" [];
	"langchain_community.tools.cassandra_database.tool" -> "typing" [];
	"langchain_community.tools.cassandra_database.tool" -> "pydantic" [];
	"langchain_community.tools.cassandra_database.tool" -> "'cassandra.cluster'" [];
	"langchain_community.utilities.cassandra_database" -> "__future__" [];
	"langchain_community.utilities.cassandra_database" -> "re" [];
	"langchain_community.utilities.cassandra_database" -> "typing" [];
	"langchain_community.utilities.cassandra_database" -> "pydantic" [];
	"langchain_community.utilities.cassandra_database" -> "typing_extensions" [];
	"langchain_community.utilities.cassandra_database" -> "'cassandra.cluster'" [];
	"langchain_community.utilities.cassandra_database" -> "'cassio.config'" [];
	"langchain_community.tools.brave_search.tool" -> "__future__" [];
	"langchain_community.tools.brave_search.tool" -> "typing" [];
	"langchain_community.tools.brave_search.tool" -> "pydantic" [];
	"langchain_community.tools.bing_search.tool" -> "typing" [];
	"langchain_community.tools.bearly.tool" -> "base64" [];
	"langchain_community.tools.bearly.tool" -> "itertools" [];
	"langchain_community.tools.bearly.tool" -> "json" [];
	"langchain_community.tools.bearly.tool" -> "re" [];
	"langchain_community.tools.bearly.tool" -> "pathlib" [];
	"langchain_community.tools.bearly.tool" -> "typing" [];
	"langchain_community.tools.bearly.tool" -> "requests" [];
	"langchain_community.tools.bearly.tool" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "'azure.ai'" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "'azure.core'" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "tempfile" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "'azure.cognitiveservices'" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "time" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "'azure.cognitiveservices'" [];
	"langchain_community.tools.azure_cognitive_services.utils" -> "os" [];
	"langchain_community.tools.azure_cognitive_services.utils" -> "tempfile" [];
	"langchain_community.tools.azure_cognitive_services.utils" -> "requests" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "'azure.ai'" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "'azure.ai'" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "'azure.core'" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "logging" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "tempfile" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "typing" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "'azure.cognitiveservices'" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "logging" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "typing" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "'azure.ai'" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "'azure.core'" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "logging" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "time" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "typing" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "'azure.cognitiveservices'" [];
	"langchain_community.tools.azure_ai_services.utils" -> "os" [];
	"langchain_community.tools.azure_ai_services.utils" -> "tempfile" [];
	"langchain_community.tools.azure_ai_services.utils" -> "requests" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "logging" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "typing" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "'azure.ai'" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "'azure.core'" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "logging" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "typing" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "'azure.ai'" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "'azure.core'" [];
	"langchain_community.tools.asknews.tool" -> "typing" [];
	"langchain_community.tools.asknews.tool" -> "pydantic" [];
	"langchain_community.tools.arxiv.tool" -> "typing" [];
	"langchain_community.tools.arxiv.tool" -> "pydantic" [];
	"langchain_community.tools.ainetwork.value" -> "builtins" [];
	"langchain_community.tools.ainetwork.value" -> "json" [];
	"langchain_community.tools.ainetwork.value" -> "typing" [];
	"langchain_community.tools.ainetwork.value" -> "pydantic" [];
	"langchain_community.tools.ainetwork.value" -> "'ain.types'" [];
	"langchain_community.tools.ainetwork.base" -> "__future__" [];
	"langchain_community.tools.ainetwork.base" -> "asyncio" [];
	"langchain_community.tools.ainetwork.base" -> "threading" [];
	"langchain_community.tools.ainetwork.base" -> "enum" [];
	"langchain_community.tools.ainetwork.base" -> "typing" [];
	"langchain_community.tools.ainetwork.base" -> "pydantic" [];
	"langchain_community.tools.ainetwork.base" -> "'ain.ain'" [];
	"langchain_community.tools.ainetwork.utils" -> "__future__" [];
	"langchain_community.tools.ainetwork.utils" -> "os" [];
	"langchain_community.tools.ainetwork.utils" -> "typing" [];
	"langchain_community.tools.ainetwork.utils" -> "ain" [];
	"langchain_community.tools.ainetwork.utils" -> "'ain.ain'" [];
	"langchain_community.tools.ainetwork.transfer" -> "json" [];
	"langchain_community.tools.ainetwork.transfer" -> "typing" [];
	"langchain_community.tools.ainetwork.transfer" -> "pydantic" [];
	"langchain_community.tools.ainetwork.rule" -> "builtins" [];
	"langchain_community.tools.ainetwork.rule" -> "json" [];
	"langchain_community.tools.ainetwork.rule" -> "typing" [];
	"langchain_community.tools.ainetwork.rule" -> "pydantic" [];
	"langchain_community.tools.ainetwork.rule" -> "'ain.types'" [];
	"langchain_community.tools.ainetwork.owner" -> "builtins" [];
	"langchain_community.tools.ainetwork.owner" -> "json" [];
	"langchain_community.tools.ainetwork.owner" -> "typing" [];
	"langchain_community.tools.ainetwork.owner" -> "pydantic" [];
	"langchain_community.tools.ainetwork.owner" -> "'ain.types'" [];
	"langchain_community.tools.ainetwork.app" -> "builtins" [];
	"langchain_community.tools.ainetwork.app" -> "json" [];
	"langchain_community.tools.ainetwork.app" -> "enum" [];
	"langchain_community.tools.ainetwork.app" -> "typing" [];
	"langchain_community.tools.ainetwork.app" -> "pydantic" [];
	"langchain_community.tools.ainetwork.app" -> "'ain.types'" [];
	"langchain_community.tools.ainetwork.app" -> "'ain.utils'" [];
	"langchain_community.utilities.stackexchange" -> "html" [];
	"langchain_community.utilities.stackexchange" -> "typing" [];
	"langchain_community.utilities.stackexchange" -> "pydantic" [];
	"langchain_community.utilities.stackexchange" -> "stackapi" [];
	"langchain_community.utilities.sql_database" -> "__future__" [];
	"langchain_community.utilities.sql_database" -> "re" [];
	"langchain_community.utilities.sql_database" -> "typing" [];
	"langchain_community.utilities.sql_database" -> "sqlalchemy" [];
	"langchain_community.utilities.sql_database" -> "databricks" [];
	"langchain_community.utilities.sql_database" -> "dbruntime" [];
	"langchain_community.utilities.sql_database" -> "cnosdb_connector" [];
	"langchain_community.utilities.spark_sql" -> "__future__" [];
	"langchain_community.utilities.spark_sql" -> "typing" [];
	"langchain_community.utilities.spark_sql" -> "'pyspark.sql'" [];
	"langchain_community.utilities.serpapi" -> "os" [];
	"langchain_community.utilities.serpapi" -> "sys" [];
	"langchain_community.utilities.serpapi" -> "typing" [];
	"langchain_community.utilities.serpapi" -> "aiohttp" [];
	"langchain_community.utilities.serpapi" -> "pydantic" [];
	"langchain_community.utilities.serpapi" -> "serpapi" [];
	"langchain_community.utilities.searx_search" -> "json" [];
	"langchain_community.utilities.searx_search" -> "typing" [];
	"langchain_community.utilities.searx_search" -> "aiohttp" [];
	"langchain_community.utilities.searx_search" -> "requests" [];
	"langchain_community.utilities.searx_search" -> "pydantic" [];
	"langchain_community.utilities.searchapi" -> "typing" [];
	"langchain_community.utilities.searchapi" -> "aiohttp" [];
	"langchain_community.utilities.searchapi" -> "requests" [];
	"langchain_community.utilities.searchapi" -> "pydantic" [];
	"langchain_community.utilities.scenexplain" -> "typing" [];
	"langchain_community.utilities.scenexplain" -> "requests" [];
	"langchain_community.utilities.scenexplain" -> "pydantic" [];
	"langchain_community.utilities.requests" -> "contextlib" [];
	"langchain_community.utilities.requests" -> "typing" [];
	"langchain_community.utilities.requests" -> "aiohttp" [];
	"langchain_community.utilities.requests" -> "requests" [];
	"langchain_community.utilities.requests" -> "pydantic" [];
	"langchain_community.utilities.rememberizer" -> "typing" [];
	"langchain_community.utilities.rememberizer" -> "requests" [];
	"langchain_community.utilities.rememberizer" -> "pydantic" [];
	"langchain_community.utilities.pubmed" -> "json" [];
	"langchain_community.utilities.pubmed" -> "logging" [];
	"langchain_community.utilities.pubmed" -> "time" [];
	"langchain_community.utilities.pubmed" -> "typing" [];
	"langchain_community.utilities.pubmed" -> "pydantic" [];
	"langchain_community.utilities.pubmed" -> "xmltodict" [];
	"langchain_community.utilities.powerbi" -> "__future__" [];
	"langchain_community.utilities.powerbi" -> "asyncio" [];
	"langchain_community.utilities.powerbi" -> "logging" [];
	"langchain_community.utilities.powerbi" -> "os" [];
	"langchain_community.utilities.powerbi" -> "typing" [];
	"langchain_community.utilities.powerbi" -> "aiohttp" [];
	"langchain_community.utilities.powerbi" -> "requests" [];
	"langchain_community.utilities.powerbi" -> "pydantic" [];
	"langchain_community.utilities.powerbi" -> "'azure.core'" [];
	"langchain_community.utilities.portkey" -> "json" [];
	"langchain_community.utilities.portkey" -> "os" [];
	"langchain_community.utilities.portkey" -> "typing" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "datetime" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "typing" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "requests" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "pydantic" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "tenacity" [];
	"langchain_community.utilities.outline" -> "logging" [];
	"langchain_community.utilities.outline" -> "typing" [];
	"langchain_community.utilities.outline" -> "requests" [];
	"langchain_community.utilities.outline" -> "pydantic" [];
	"langchain_community.utilities.oracleai" -> "__future__" [];
	"langchain_community.utilities.oracleai" -> "json" [];
	"langchain_community.utilities.oracleai" -> "logging" [];
	"langchain_community.utilities.oracleai" -> "traceback" [];
	"langchain_community.utilities.oracleai" -> "typing" [];
	"langchain_community.utilities.oracleai" -> "oracledb" [];
	"langchain_community.utilities.openweathermap" -> "typing" [];
	"langchain_community.utilities.openweathermap" -> "pydantic" [];
	"langchain_community.utilities.openweathermap" -> "pyowm" [];
	"langchain_community.utilities.nvidia_riva" -> "asyncio" [];
	"langchain_community.utilities.nvidia_riva" -> "logging" [];
	"langchain_community.utilities.nvidia_riva" -> "pathlib" [];
	"langchain_community.utilities.nvidia_riva" -> "queue" [];
	"langchain_community.utilities.nvidia_riva" -> "tempfile" [];
	"langchain_community.utilities.nvidia_riva" -> "threading" [];
	"langchain_community.utilities.nvidia_riva" -> "wave" [];
	"langchain_community.utilities.nvidia_riva" -> "enum" [];
	"langchain_community.utilities.nvidia_riva" -> "typing" [];
	"langchain_community.utilities.nvidia_riva" -> "pydantic" [];
	"langchain_community.utilities.nvidia_riva" -> "riva" [];
	"langchain_community.utilities.nvidia_riva" -> "'riva.client'" [];
	"wave" -> "chunk" [];
	"wave" -> "collections" [];
	"wave" -> "audioop" [];
	"wave" -> "builtins" [];
	"wave" -> "struct" [];
	"wave" -> "sys" [];
	"chunk" -> "struct" [];
	"langchain_community.utilities.nasa" -> "json" [];
	"langchain_community.utilities.nasa" -> "requests" [];
	"langchain_community.utilities.nasa" -> "pydantic" [];
	"langchain_community.utilities.mojeek_search" -> "json" [];
	"langchain_community.utilities.mojeek_search" -> "typing" [];
	"langchain_community.utilities.mojeek_search" -> "requests" [];
	"langchain_community.utilities.mojeek_search" -> "pydantic" [];
	"langchain_community.utilities.metaphor_search" -> "json" [];
	"langchain_community.utilities.metaphor_search" -> "typing" [];
	"langchain_community.utilities.metaphor_search" -> "aiohttp" [];
	"langchain_community.utilities.metaphor_search" -> "requests" [];
	"langchain_community.utilities.metaphor_search" -> "pydantic" [];
	"langchain_community.utilities.merriam_webster" -> "json" [];
	"langchain_community.utilities.merriam_webster" -> "typing" [];
	"langchain_community.utilities.merriam_webster" -> "requests" [];
	"langchain_community.utilities.merriam_webster" -> "pydantic" [];
	"langchain_community.utilities.max_compute" -> "__future__" [];
	"langchain_community.utilities.max_compute" -> "typing" [];
	"langchain_community.utilities.max_compute" -> "odps" [];
	"langchain_community.utilities.jira" -> "typing" [];
	"langchain_community.utilities.jira" -> "pydantic" [];
	"langchain_community.utilities.jira" -> "typing_extensions" [];
	"langchain_community.utilities.jira" -> "json" [];
	"langchain_community.utilities.jira" -> "atlassian" [];
	"langchain_community.utilities.infobip" -> "typing" [];
	"langchain_community.utilities.infobip" -> "requests" [];
	"langchain_community.utilities.infobip" -> "pydantic" [];
	"langchain_community.utilities.infobip" -> "requests_toolbelt" [];
	"langchain_community.utilities.graphql" -> "json" [];
	"langchain_community.utilities.graphql" -> "typing" [];
	"langchain_community.utilities.graphql" -> "pydantic" [];
	"langchain_community.utilities.graphql" -> "gql" [];
	"langchain_community.utilities.graphql" -> "'gql.transport'" [];
	"langchain_community.utilities.google_trends" -> "typing" [];
	"langchain_community.utilities.google_trends" -> "pydantic" [];
	"langchain_community.utilities.google_trends" -> "serpapi" [];
	"langchain_community.utilities.google_serper" -> "typing" [];
	"langchain_community.utilities.google_serper" -> "aiohttp" [];
	"langchain_community.utilities.google_serper" -> "requests" [];
	"langchain_community.utilities.google_serper" -> "pydantic" [];
	"langchain_community.utilities.google_serper" -> "typing_extensions" [];
	"langchain_community.utilities.google_search" -> "typing" [];
	"langchain_community.utilities.google_search" -> "pydantic" [];
	"langchain_community.utilities.google_scholar" -> "typing" [];
	"langchain_community.utilities.google_scholar" -> "pydantic" [];
	"langchain_community.utilities.google_scholar" -> "serpapi" [];
	"langchain_community.utilities.google_places_api" -> "logging" [];
	"langchain_community.utilities.google_places_api" -> "typing" [];
	"langchain_community.utilities.google_places_api" -> "pydantic" [];
	"langchain_community.utilities.google_places_api" -> "googlemaps" [];
	"langchain_community.utilities.google_lens" -> "typing" [];
	"langchain_community.utilities.google_lens" -> "requests" [];
	"langchain_community.utilities.google_lens" -> "pydantic" [];
	"langchain_community.utilities.google_jobs" -> "typing" [];
	"langchain_community.utilities.google_jobs" -> "pydantic" [];
	"langchain_community.utilities.google_jobs" -> "serpapi" [];
	"langchain_community.utilities.google_finance" -> "typing" [];
	"langchain_community.utilities.google_finance" -> "pydantic" [];
	"langchain_community.utilities.google_finance" -> "serpapi" [];
	"langchain_community.utilities.google_books" -> "typing" [];
	"langchain_community.utilities.google_books" -> "requests" [];
	"langchain_community.utilities.google_books" -> "pydantic" [];
	"langchain_community.utilities.golden_query" -> "json" [];
	"langchain_community.utilities.golden_query" -> "typing" [];
	"langchain_community.utilities.golden_query" -> "requests" [];
	"langchain_community.utilities.golden_query" -> "pydantic" [];
	"langchain_community.utilities.duckduckgo_search" -> "typing" [];
	"langchain_community.utilities.duckduckgo_search" -> "pydantic" [];
	"langchain_community.utilities.duckduckgo_search" -> "duckduckgo_search" [];
	"langchain_community.utilities.dria_index" -> "logging" [];
	"langchain_community.utilities.dria_index" -> "typing" [];
	"langchain_community.utilities.dria_index" -> "dria" [];
	"langchain_community.utilities.dataherald" -> "typing" [];
	"langchain_community.utilities.dataherald" -> "pydantic" [];
	"langchain_community.utilities.dataherald" -> "dataherald" [];
	"langchain_community.utilities.dataherald" -> "'dataherald.types'" [];
	"langchain_community.utilities.brave_search" -> "json" [];
	"langchain_community.utilities.brave_search" -> "typing" [];
	"langchain_community.utilities.brave_search" -> "requests" [];
	"langchain_community.utilities.brave_search" -> "pydantic" [];
	"langchain_community.utilities.bing_search" -> "typing" [];
	"langchain_community.utilities.bing_search" -> "requests" [];
	"langchain_community.utilities.bing_search" -> "pydantic" [];
	"langchain_community.utilities.bibtex" -> "logging" [];
	"langchain_community.utilities.bibtex" -> "typing" [];
	"langchain_community.utilities.bibtex" -> "pydantic" [];
	"langchain_community.utilities.bibtex" -> "bibtexparser" [];
	"langchain_community.utilities.awslambda" -> "json" [];
	"langchain_community.utilities.awslambda" -> "typing" [];
	"langchain_community.utilities.awslambda" -> "pydantic" [];
	"langchain_community.utilities.awslambda" -> "boto3" [];
	"langchain_community.utilities.asknews" -> "__future__" [];
	"langchain_community.utilities.asknews" -> "datetime" [];
	"langchain_community.utilities.asknews" -> "typing" [];
	"langchain_community.utilities.asknews" -> "pydantic" [];
	"langchain_community.utilities.asknews" -> "asknews_sdk" [];
	"langchain_community.utilities.arxiv" -> "logging" [];
	"langchain_community.utilities.arxiv" -> "os" [];
	"langchain_community.utilities.arxiv" -> "re" [];
	"langchain_community.utilities.arxiv" -> "typing" [];
	"langchain_community.utilities.arxiv" -> "pydantic" [];
	"langchain_community.utilities.arxiv" -> "arxiv" [];
	"langchain_community.utilities.arxiv" -> "fitz" [];
	"langchain_community.utilities.arcee" -> "enum" [];
	"langchain_community.utilities.arcee" -> "typing" [];
	"langchain_community.utilities.arcee" -> "requests" [];
	"langchain_community.utilities.arcee" -> "pydantic" [];
	"langchain_community.utilities.apify" -> "typing" [];
	"langchain_community.utilities.apify" -> "pydantic" [];
	"langchain_community.utilities.apify" -> "apify_client" [];
	"langchain_community.utilities.alpha_vantage" -> "typing" [];
	"langchain_community.utilities.alpha_vantage" -> "requests" [];
	"langchain_community.utilities.alpha_vantage" -> "pydantic" [];
	"langchain_community.llms.huggingface_pipeline" -> "__future__" [];
	"langchain_community.llms.huggingface_pipeline" -> "logging" [];
	"langchain_community.llms.huggingface_pipeline" -> "typing" [];
	"langchain_community.llms.huggingface_pipeline" -> "pydantic" [];
	"langchain_community.llms.huggingface_pipeline" -> "transformers" [];
	"langchain_community.llms.huggingface_pipeline" -> "optimum" [];
	"langchain_community.llms.huggingface_pipeline" -> "'optimum.intel'" [];
	"langchain_community.llms.huggingface_pipeline" -> "torch" [];
	"langchain_community.llms.huggingface_pipeline" -> "threading" [];
	"langchain_community.llms" -> "typing" [];
	"langchain_community.llms.yi" -> "__future__" [];
	"langchain_community.llms.yi" -> "json" [];
	"langchain_community.llms.yi" -> "logging" [];
	"langchain_community.llms.yi" -> "typing" [];
	"langchain_community.llms.yi" -> "requests" [];
	"langchain_community.llms.yi" -> "pydantic" [];
	"langchain_community.llms.utils" -> "re" [];
	"langchain_community.llms.utils" -> "typing" [];
	"langchain_community.llms.you" -> "os" [];
	"langchain_community.llms.you" -> "typing" [];
	"langchain_community.llms.you" -> "requests" [];
	"langchain_community.llms.you" -> "pydantic" [];
	"langchain_community.llms.you" -> "sseclient" [];
	"langchain_community.llms.sparkllm" -> "__future__" [];
	"langchain_community.llms.sparkllm" -> "base64" [];
	"langchain_community.llms.sparkllm" -> "hashlib" [];
	"langchain_community.llms.sparkllm" -> "hmac" [];
	"langchain_community.llms.sparkllm" -> "json" [];
	"langchain_community.llms.sparkllm" -> "logging" [];
	"langchain_community.llms.sparkllm" -> "queue" [];
	"langchain_community.llms.sparkllm" -> "threading" [];
	"langchain_community.llms.sparkllm" -> "datetime" [];
	"langchain_community.llms.sparkllm" -> "time" [];
	"langchain_community.llms.sparkllm" -> "typing" [];
	"langchain_community.llms.sparkllm" -> "pydantic" [];
	"langchain_community.llms.sparkllm" -> "websocket" [];
	"wsgiref.handlers" -> "sys" [];
	"wsgiref.handlers" -> "os" [];
	"wsgiref.handlers" -> "time" [];
	"wsgiref.handlers" -> "traceback" [];
	"wsgiref.handlers" -> "warnings" [];
	"wsgiref.headers" -> "re" [];
	"wsgiref.util" -> "posixpath" [];
	"wsgiref.util" -> "warnings" [];
	"wsgiref.util" -> "io" [];
	"langchain_community.llms.volcengine_maas" -> "__future__" [];
	"langchain_community.llms.volcengine_maas" -> "typing" [];
	"langchain_community.llms.volcengine_maas" -> "pydantic" [];
	"langchain_community.llms.volcengine_maas" -> "volcengine" [];
	"langchain_community.llms.yuan2" -> "json" [];
	"langchain_community.llms.yuan2" -> "logging" [];
	"langchain_community.llms.yuan2" -> "typing" [];
	"langchain_community.llms.yuan2" -> "requests" [];
	"langchain_community.llms.yuan2" -> "pydantic" [];
	"langchain_community.llms.yandex" -> "__future__" [];
	"langchain_community.llms.yandex" -> "logging" [];
	"langchain_community.llms.yandex" -> "typing" [];
	"langchain_community.llms.yandex" -> "pydantic" [];
	"langchain_community.llms.yandex" -> "tenacity" [];
	"langchain_community.llms.yandex" -> "grpc" [];
	"langchain_community.llms.yandex" -> "yandex" [];
	"langchain_community.llms.yandex" -> "'yandex.cloud'" [];
	"langchain_community.llms.yandex" -> "asyncio" [];
	"langchain_community.llms.xinference" -> "__future__" [];
	"langchain_community.llms.xinference" -> "json" [];
	"langchain_community.llms.xinference" -> "typing" [];
	"langchain_community.llms.xinference" -> "aiohttp" [];
	"langchain_community.llms.xinference" -> "requests" [];
	"langchain_community.llms.xinference" -> "xinference" [];
	"langchain_community.llms.xinference" -> "'xinference.model'" [];
	"langchain_community.llms.xinference" -> "'xinference.client'" [];
	"langchain_community.llms.xinference" -> "xinference_client" [];
	"langchain_community.llms.writer" -> "typing" [];
	"langchain_community.llms.writer" -> "pydantic" [];
	"langchain_community.llms.writer" -> "writerai" [];
	"langchain_community.llms.weight_only_quantization" -> "importlib" [];
	"langchain_community.llms.weight_only_quantization" -> "typing" [];
	"langchain_community.llms.weight_only_quantization" -> "pydantic" [];
	"langchain_community.llms.weight_only_quantization" -> "intel_extension_for_transformers" [];
	"langchain_community.llms.weight_only_quantization" -> "'intel_extension_for_transformers.utils'" [];
	"langchain_community.llms.weight_only_quantization" -> "transformers" [];
	"langchain_community.llms.watsonxllm" -> "logging" [];
	"langchain_community.llms.watsonxllm" -> "os" [];
	"langchain_community.llms.watsonxllm" -> "typing" [];
	"langchain_community.llms.watsonxllm" -> "pydantic" [];
	"langchain_community.llms.watsonxllm" -> "ibm_watsonx_ai" [];
	"langchain_community.llms.vllm" -> "typing" [];
	"langchain_community.llms.vllm" -> "pydantic" [];
	"langchain_community.llms.vllm" -> "vllm" [];
	"langchain_community.llms.vertexai" -> "__future__" [];
	"langchain_community.llms.vertexai" -> "typing" [];
	"langchain_community.llms.vertexai" -> "pydantic" [];
	"vertexai.language_models._evaluatable_language_models" -> "dataclasses" [];
	"vertexai.language_models._evaluatable_language_models" -> "os" [];
	"vertexai.language_models._evaluatable_language_models" -> "typing" [];
	"vertexai.language_models._evaluatable_language_models" -> "pandas" [];
	"vertexai._model_garden._model_garden_models" -> "dataclasses" [];
	"vertexai._model_garden._model_garden_models" -> "typing" [];
	"vertexai.language_models._distillation" -> "typing" [];
	"vertexai.language_models._language_models" -> "abc" [];
	"vertexai.language_models._language_models" -> "dataclasses" [];
	"vertexai.language_models._language_models" -> "typing" [];
	"vertexai.language_models._language_models" -> "warnings" [];
	"vertexai.language_models._language_models" -> "pandas" [];
	"langchain_community.llms.tongyi" -> "__future__" [];
	"langchain_community.llms.tongyi" -> "asyncio" [];
	"langchain_community.llms.tongyi" -> "functools" [];
	"langchain_community.llms.tongyi" -> "logging" [];
	"langchain_community.llms.tongyi" -> "typing" [];
	"langchain_community.llms.tongyi" -> "pydantic" [];
	"langchain_community.llms.tongyi" -> "tenacity" [];
	"langchain_community.llms.tongyi" -> "dashscope" [];
	"langchain_community.llms.together" -> "logging" [];
	"langchain_community.llms.together" -> "typing" [];
	"langchain_community.llms.together" -> "aiohttp" [];
	"langchain_community.llms.together" -> "pydantic" [];
	"langchain_community.llms.together" -> "langchain_community" [];
	"langchain_community.llms.titan_takeoff" -> "enum" [];
	"langchain_community.llms.titan_takeoff" -> "typing" [];
	"langchain_community.llms.titan_takeoff" -> "pydantic" [];
	"langchain_community.llms.titan_takeoff" -> "takeoff_client" [];
	"langchain_community.llms.textgen" -> "json" [];
	"langchain_community.llms.textgen" -> "logging" [];
	"langchain_community.llms.textgen" -> "typing" [];
	"langchain_community.llms.textgen" -> "requests" [];
	"langchain_community.llms.textgen" -> "pydantic" [];
	"langchain_community.llms.textgen" -> "websocket" [];
	"langchain_community.llms.symblai_nebula" -> "json" [];
	"langchain_community.llms.symblai_nebula" -> "logging" [];
	"langchain_community.llms.symblai_nebula" -> "typing" [];
	"langchain_community.llms.symblai_nebula" -> "requests" [];
	"langchain_community.llms.symblai_nebula" -> "pydantic" [];
	"langchain_community.llms.symblai_nebula" -> "tenacity" [];
	"langchain_community.llms.stochasticai" -> "logging" [];
	"langchain_community.llms.stochasticai" -> "time" [];
	"langchain_community.llms.stochasticai" -> "typing" [];
	"langchain_community.llms.stochasticai" -> "requests" [];
	"langchain_community.llms.stochasticai" -> "pydantic" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "logging" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "typing" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "pydantic" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "transformers" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "torch" [];
	"langchain_community.llms.self_hosted" -> "logging" [];
	"langchain_community.llms.self_hosted" -> "pickle" [];
	"langchain_community.llms.self_hosted" -> "typing" [];
	"langchain_community.llms.self_hosted" -> "pydantic" [];
	"langchain_community.llms.self_hosted" -> "torch" [];
	"langchain_community.llms.self_hosted" -> "runhouse" [];
	"langchain_community.llms.sambanova" -> "json" [];
	"langchain_community.llms.sambanova" -> "typing" [];
	"langchain_community.llms.sambanova" -> "requests" [];
	"langchain_community.llms.sambanova" -> "pydantic" [];
	"langchain_community.llms.sambanova" -> "sseclient" [];
	"langchain_community.llms.sagemaker_endpoint" -> "io" [];
	"langchain_community.llms.sagemaker_endpoint" -> "json" [];
	"langchain_community.llms.sagemaker_endpoint" -> "abc" [];
	"langchain_community.llms.sagemaker_endpoint" -> "typing" [];
	"langchain_community.llms.sagemaker_endpoint" -> "pydantic" [];
	"langchain_community.llms.sagemaker_endpoint" -> "boto3" [];
	"langchain_community.llms.rwkv" -> "typing" [];
	"langchain_community.llms.rwkv" -> "pydantic" [];
	"langchain_community.llms.rwkv" -> "tokenizers" [];
	"langchain_community.llms.rwkv" -> "rwkv" [];
	"langchain_community.llms.rwkv" -> "'rwkv.utils'" [];
	"langchain_community.llms.replicate" -> "__future__" [];
	"langchain_community.llms.replicate" -> "logging" [];
	"langchain_community.llms.replicate" -> "typing" [];
	"langchain_community.llms.replicate" -> "pydantic" [];
	"langchain_community.llms.replicate" -> "replicate" [];
	"langchain_community.llms.promptlayer_openai" -> "datetime" [];
	"langchain_community.llms.promptlayer_openai" -> "typing" [];
	"langchain_community.llms.promptlayer_openai" -> "'promptlayer.utils'" [];
	"langchain_community.llms.predictionguard" -> "logging" [];
	"langchain_community.llms.predictionguard" -> "typing" [];
	"langchain_community.llms.predictionguard" -> "pydantic" [];
	"langchain_community.llms.predictionguard" -> "predictionguard" [];
	"langchain_community.llms.predibase" -> "os" [];
	"langchain_community.llms.predibase" -> "typing" [];
	"langchain_community.llms.predibase" -> "pydantic" [];
	"langchain_community.llms.predibase" -> "predibase" [];
	"langchain_community.llms.predibase" -> "'predibase.pql'" [];
	"langchain_community.llms.predibase" -> "'predibase.resource'" [];
	"langchain_community.llms.predibase" -> "requests" [];
	"langchain_community.llms.predibase" -> "lorax" [];
	"langchain_community.llms.predibase" -> "'lorax.errors'" [];
	"langchain_community.llms.predibase" -> "'lorax.types'" [];
	"langchain_community.llms.predibase" -> "semantic_version" [];
	"langchain_community.llms.predibase" -> "'predibase.version'" [];
	"langchain_community.llms.predibase" -> "'semantic_version.base'" [];
	"langchain_community.llms.pipelineai" -> "logging" [];
	"langchain_community.llms.pipelineai" -> "typing" [];
	"langchain_community.llms.pipelineai" -> "pydantic" [];
	"langchain_community.llms.pipelineai" -> "pipeline" [];
	"langchain_community.llms.petals" -> "logging" [];
	"langchain_community.llms.petals" -> "typing" [];
	"langchain_community.llms.petals" -> "pydantic" [];
	"langchain_community.llms.petals" -> "petals" [];
	"langchain_community.llms.petals" -> "transformers" [];
	"langchain_community.llms.pai_eas_endpoint" -> "json" [];
	"langchain_community.llms.pai_eas_endpoint" -> "logging" [];
	"langchain_community.llms.pai_eas_endpoint" -> "typing" [];
	"langchain_community.llms.pai_eas_endpoint" -> "requests" [];
	"langchain_community.llms.outlines" -> "__future__" [];
	"langchain_community.llms.outlines" -> "logging" [];
	"langchain_community.llms.outlines" -> "platform" [];
	"langchain_community.llms.outlines" -> "typing" [];
	"langchain_community.llms.outlines" -> "pydantic" [];
	"langchain_community.llms.outlines" -> "'outlines.models'" [];
	"langchain_community.llms.outlines" -> "transformers" [];
	"langchain_community.llms.outlines" -> "outlines" [];
	"langchain_community.llms.openlm" -> "typing" [];
	"langchain_community.llms.openlm" -> "openlm" [];
	"langchain_community.llms.openllm" -> "__future__" [];
	"langchain_community.llms.openllm" -> "typing" [];
	"langchain_community.llms.opaqueprompts" -> "logging" [];
	"langchain_community.llms.opaqueprompts" -> "typing" [];
	"langchain_community.llms.opaqueprompts" -> "pydantic" [];
	"langchain_community.llms.opaqueprompts" -> "opaqueprompts" [];
	"langchain_community.llms.ollama" -> "__future__" [];
	"langchain_community.llms.ollama" -> "json" [];
	"langchain_community.llms.ollama" -> "typing" [];
	"langchain_community.llms.ollama" -> "aiohttp" [];
	"langchain_community.llms.ollama" -> "requests" [];
	"langchain_community.llms.ollama" -> "pydantic" [];
	"langchain_community.llms.octoai_endpoint" -> "typing" [];
	"langchain_community.llms.octoai_endpoint" -> "pydantic" [];
	"langchain_community.llms.octoai_endpoint" -> "openai" [];
	"langchain_community.llms.oci_generative_ai" -> "__future__" [];
	"langchain_community.llms.oci_generative_ai" -> "json" [];
	"langchain_community.llms.oci_generative_ai" -> "abc" [];
	"langchain_community.llms.oci_generative_ai" -> "enum" [];
	"langchain_community.llms.oci_generative_ai" -> "typing" [];
	"langchain_community.llms.oci_generative_ai" -> "pydantic" [];
	"langchain_community.llms.oci_generative_ai" -> "oci" [];
	"langchain_community.llms.oci_generative_ai" -> "'oci.generative_ai_inference'" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "json" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "logging" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "traceback" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "typing" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "aiohttp" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "requests" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "pydantic" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "ads" [];
	"langchain_community.llms.nlpcloud" -> "typing" [];
	"langchain_community.llms.nlpcloud" -> "pydantic" [];
	"langchain_community.llms.nlpcloud" -> "nlpcloud" [];
	"langchain_community.llms.mosaicml" -> "typing" [];
	"langchain_community.llms.mosaicml" -> "requests" [];
	"langchain_community.llms.mosaicml" -> "pydantic" [];
	"langchain_community.llms.mosaicml" -> "time" [];
	"langchain_community.llms.modal" -> "logging" [];
	"langchain_community.llms.modal" -> "typing" [];
	"langchain_community.llms.modal" -> "requests" [];
	"langchain_community.llms.modal" -> "pydantic" [];
	"langchain_community.llms.mlx_pipeline" -> "__future__" [];
	"langchain_community.llms.mlx_pipeline" -> "logging" [];
	"langchain_community.llms.mlx_pipeline" -> "typing" [];
	"langchain_community.llms.mlx_pipeline" -> "pydantic" [];
	"langchain_community.llms.mlx_pipeline" -> "mlx_lm" [];
	"langchain_community.llms.mlx_pipeline" -> "'mlx_lm.sample_utils'" [];
	"langchain_community.llms.mlx_pipeline" -> "mlx" [];
	"langchain_community.llms.mlx_pipeline" -> "'mlx_lm.utils'" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "__future__" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "warnings" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "typing" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "pydantic" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "'mlflow.gateway'" [];
	"langchain_community.chat_models.mlflow" -> "json" [];
	"langchain_community.chat_models.mlflow" -> "logging" [];
	"langchain_community.chat_models.mlflow" -> "typing" [];
	"langchain_community.chat_models.mlflow" -> "pydantic" [];
	"langchain_community.chat_models.mlflow" -> "'mlflow.deployments'" [];
	"langchain_community.llms.mlflow" -> "__future__" [];
	"langchain_community.llms.mlflow" -> "typing" [];
	"langchain_community.llms.mlflow" -> "pydantic" [];
	"langchain_community.llms.mlflow" -> "'mlflow.deployments'" [];
	"langchain_community.llms.minimax" -> "__future__" [];
	"langchain_community.llms.minimax" -> "logging" [];
	"langchain_community.llms.minimax" -> "typing" [];
	"langchain_community.llms.minimax" -> "requests" [];
	"langchain_community.llms.minimax" -> "pydantic" [];
	"langchain_community.llms.manifest" -> "typing" [];
	"langchain_community.llms.manifest" -> "pydantic" [];
	"langchain_community.llms.manifest" -> "manifest" [];
	"langchain_community.llms.llamafile" -> "__future__" [];
	"langchain_community.llms.llamafile" -> "json" [];
	"langchain_community.llms.llamafile" -> "io" [];
	"langchain_community.llms.llamafile" -> "typing" [];
	"langchain_community.llms.llamafile" -> "requests" [];
	"langchain_community.llms.llamafile" -> "pydantic" [];
	"langchain_community.llms.llamacpp" -> "__future__" [];
	"langchain_community.llms.llamacpp" -> "logging" [];
	"langchain_community.llms.llamacpp" -> "pathlib" [];
	"langchain_community.llms.llamacpp" -> "typing" [];
	"langchain_community.llms.llamacpp" -> "pydantic" [];
	"langchain_community.llms.llamacpp" -> "llama_cpp" [];
	"langchain_community.llms.konko" -> "logging" [];
	"langchain_community.llms.konko" -> "warnings" [];
	"langchain_community.llms.konko" -> "typing" [];
	"langchain_community.llms.konko" -> "pydantic" [];
	"langchain_community.llms.konko" -> "konko" [];
	"langchain_community.llms.konko" -> "langchain_community" [];
	"langchain_community.llms.koboldai" -> "logging" [];
	"langchain_community.llms.koboldai" -> "typing" [];
	"langchain_community.llms.koboldai" -> "requests" [];
	"langchain_community.llms.javelin_ai_gateway" -> "__future__" [];
	"langchain_community.llms.javelin_ai_gateway" -> "typing" [];
	"langchain_community.llms.javelin_ai_gateway" -> "pydantic" [];
	"langchain_community.llms.javelin_ai_gateway" -> "javelin_sdk" [];
	"langchain_community.llms.ipex_llm" -> "logging" [];
	"langchain_community.llms.ipex_llm" -> "typing" [];
	"langchain_community.llms.ipex_llm" -> "pydantic" [];
	"langchain_community.llms.ipex_llm" -> "ipex_llm" [];
	"langchain_community.llms.ipex_llm" -> "transformers" [];
	"langchain_community.llms.ipex_llm" -> "'transformers.generation'" [];
	"langchain_community.llms.ipex_llm" -> "'transformers.tools'" [];
	"langchain_community.llms.human" -> "typing" [];
	"langchain_community.llms.human" -> "pydantic" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "logging" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "typing" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "pydantic" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "text_generation" [];
	"langchain_community.llms.huggingface_hub" -> "json" [];
	"langchain_community.llms.huggingface_hub" -> "typing" [];
	"langchain_community.llms.huggingface_hub" -> "pydantic" [];
	"langchain_community.llms.huggingface_hub" -> "huggingface_hub" [];
	"langchain_community.llms.huggingface_endpoint" -> "json" [];
	"langchain_community.llms.huggingface_endpoint" -> "logging" [];
	"langchain_community.llms.huggingface_endpoint" -> "os" [];
	"langchain_community.llms.huggingface_endpoint" -> "typing" [];
	"langchain_community.llms.huggingface_endpoint" -> "pydantic" [];
	"langchain_community.llms.huggingface_endpoint" -> "huggingface_hub" [];
	"langchain_community.llms.gradient_ai" -> "asyncio" [];
	"langchain_community.llms.gradient_ai" -> "logging" [];
	"langchain_community.llms.gradient_ai" -> "typing" [];
	"langchain_community.llms.gradient_ai" -> "aiohttp" [];
	"langchain_community.llms.gradient_ai" -> "requests" [];
	"langchain_community.llms.gradient_ai" -> "pydantic" [];
	"langchain_community.llms.gradient_ai" -> "typing_extensions" [];
	"langchain_community.llms.gradient_ai" -> "gradientai" [];
	"langchain_community.llms.gpt4all" -> "functools" [];
	"langchain_community.llms.gpt4all" -> "typing" [];
	"langchain_community.llms.gpt4all" -> "pydantic" [];
	"langchain_community.llms.gpt4all" -> "gpt4all" [];
	"langchain_community.llms.gooseai" -> "logging" [];
	"langchain_community.llms.gooseai" -> "typing" [];
	"langchain_community.llms.gooseai" -> "pydantic" [];
	"langchain_community.llms.gooseai" -> "openai" [];
	"langchain_community.llms.google_palm" -> "__future__" [];
	"langchain_community.llms.google_palm" -> "typing" [];
	"langchain_community.llms.google_palm" -> "pydantic" [];
	"langchain_community.llms.gigachat" -> "__future__" [];
	"langchain_community.llms.gigachat" -> "logging" [];
	"langchain_community.llms.gigachat" -> "functools" [];
	"langchain_community.llms.gigachat" -> "typing" [];
	"langchain_community.llms.gigachat" -> "pydantic" [];
	"langchain_community.llms.gigachat" -> "gigachat" [];
	"langchain_community.llms.gigachat" -> "'gigachat.models'" [];
	"langchain_community.llms.friendli" -> "__future__" [];
	"langchain_community.llms.friendli" -> "os" [];
	"langchain_community.llms.friendli" -> "typing" [];
	"langchain_community.llms.friendli" -> "pydantic" [];
	"langchain_community.llms.friendli" -> "friendli" [];
	"langchain_community.llms.forefrontai" -> "typing" [];
	"langchain_community.llms.forefrontai" -> "requests" [];
	"langchain_community.llms.forefrontai" -> "pydantic" [];
	"langchain_community.llms.fireworks" -> "asyncio" [];
	"langchain_community.llms.fireworks" -> "typing" [];
	"langchain_community.llms.fireworks" -> "pydantic" [];
	"langchain_community.llms.fireworks" -> "'fireworks.client'" [];
	"langchain_community.llms.fake" -> "asyncio" [];
	"langchain_community.llms.fake" -> "time" [];
	"langchain_community.llms.fake" -> "typing" [];
	"langchain_community.llms.edenai" -> "logging" [];
	"langchain_community.llms.edenai" -> "typing" [];
	"langchain_community.llms.edenai" -> "aiohttp" [];
	"langchain_community.llms.edenai" -> "pydantic" [];
	"langchain_community.llms.edenai" -> "langchain_community" [];
	"langchain_community.llms.deepsparse" -> "typing" [];
	"langchain_community.llms.deepsparse" -> "pydantic" [];
	"langchain_community.llms.deepsparse" -> "deepsparse" [];
	"langchain_community.llms.deepinfra" -> "json" [];
	"langchain_community.llms.deepinfra" -> "typing" [];
	"langchain_community.llms.deepinfra" -> "aiohttp" [];
	"langchain_community.llms.deepinfra" -> "pydantic" [];
	"langchain_community.chat_models.databricks" -> "logging" [];
	"langchain_community.llms.databricks" -> "os" [];
	"langchain_community.llms.databricks" -> "re" [];
	"langchain_community.llms.databricks" -> "warnings" [];
	"langchain_community.llms.databricks" -> "abc" [];
	"langchain_community.llms.databricks" -> "typing" [];
	"langchain_community.llms.databricks" -> "requests" [];
	"langchain_community.llms.databricks" -> "pydantic" [];
	"langchain_community.llms.databricks" -> "'mlflow.deployments'" [];
	"langchain_community.llms.databricks" -> "'dbruntime.databricks_repl_context'" [];
	"langchain_community.llms.databricks" -> "cloudpickle" [];
	"langchain_community.llms.ctranslate2" -> "typing" [];
	"langchain_community.llms.ctranslate2" -> "pydantic" [];
	"langchain_community.llms.ctranslate2" -> "ctranslate2" [];
	"langchain_community.llms.ctranslate2" -> "transformers" [];
	"langchain_community.llms.ctransformers" -> "functools" [];
	"langchain_community.llms.ctransformers" -> "typing" [];
	"langchain_community.llms.ctransformers" -> "ctransformers" [];
	"langchain_community.llms.cohere" -> "__future__" [];
	"langchain_community.llms.cohere" -> "logging" [];
	"langchain_community.llms.cohere" -> "typing" [];
	"langchain_community.llms.cohere" -> "pydantic" [];
	"langchain_community.llms.cohere" -> "tenacity" [];
	"langchain_community.llms.cohere" -> "cohere" [];
	"langchain_community.llms.clarifai" -> "logging" [];
	"langchain_community.llms.clarifai" -> "typing" [];
	"langchain_community.llms.clarifai" -> "pydantic" [];
	"langchain_community.llms.clarifai" -> "'clarifai.client'" [];
	"langchain_community.llms.chatglm" -> "logging" [];
	"langchain_community.llms.chatglm" -> "typing" [];
	"langchain_community.llms.chatglm" -> "requests" [];
	"langchain_community.llms.cerebriumai" -> "logging" [];
	"langchain_community.llms.cerebriumai" -> "typing" [];
	"langchain_community.llms.cerebriumai" -> "requests" [];
	"langchain_community.llms.cerebriumai" -> "pydantic" [];
	"langchain_community.llms.bittensor" -> "json" [];
	"langchain_community.llms.bittensor" -> "ssl" [];
	"langchain_community.llms.bittensor" -> "typing" [];
	"langchain_community.llms.bigdl_llm" -> "logging" [];
	"langchain_community.llms.bigdl_llm" -> "typing" [];
	"langchain_community.llms.bigdl_llm" -> "bigdl" [];
	"langchain_community.llms.bigdl_llm" -> "transformers" [];
	"langchain_community.llms.bigdl_llm" -> "'bigdl.llm'" [];
	"langchain_community.llms.bedrock" -> "asyncio" [];
	"langchain_community.llms.bedrock" -> "json" [];
	"langchain_community.llms.bedrock" -> "warnings" [];
	"langchain_community.llms.bedrock" -> "abc" [];
	"langchain_community.llms.bedrock" -> "typing" [];
	"langchain_community.llms.bedrock" -> "pydantic" [];
	"langchain_community.llms.bedrock" -> "boto3" [];
	"langchain_community.utilities.anthropic" -> "typing" [];
	"langchain_community.utilities.anthropic" -> "anthropic" [];
	"langchain_community.llms.beam" -> "base64" [];
	"langchain_community.llms.beam" -> "json" [];
	"langchain_community.llms.beam" -> "logging" [];
	"langchain_community.llms.beam" -> "subprocess" [];
	"langchain_community.llms.beam" -> "textwrap" [];
	"langchain_community.llms.beam" -> "time" [];
	"langchain_community.llms.beam" -> "typing" [];
	"langchain_community.llms.beam" -> "requests" [];
	"langchain_community.llms.beam" -> "pydantic" [];
	"langchain_community.llms.beam" -> "beam" [];
	"langchain_community.llms.baseten" -> "logging" [];
	"langchain_community.llms.baseten" -> "os" [];
	"langchain_community.llms.baseten" -> "typing" [];
	"langchain_community.llms.baseten" -> "requests" [];
	"langchain_community.llms.baseten" -> "pydantic" [];
	"langchain_community.llms.bananadev" -> "logging" [];
	"langchain_community.llms.bananadev" -> "typing" [];
	"langchain_community.llms.bananadev" -> "pydantic" [];
	"langchain_community.llms.bananadev" -> "banana_dev" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "__future__" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "logging" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "typing" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "pydantic" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "qianfan" [];
	"langchain_community.llms.baichuan" -> "__future__" [];
	"langchain_community.llms.baichuan" -> "json" [];
	"langchain_community.llms.baichuan" -> "logging" [];
	"langchain_community.llms.baichuan" -> "typing" [];
	"langchain_community.llms.baichuan" -> "requests" [];
	"langchain_community.llms.baichuan" -> "pydantic" [];
	"langchain_community.llms.azureml_endpoint" -> "json" [];
	"langchain_community.llms.azureml_endpoint" -> "warnings" [];
	"langchain_community.llms.azureml_endpoint" -> "abc" [];
	"langchain_community.llms.azureml_endpoint" -> "enum" [];
	"langchain_community.llms.azureml_endpoint" -> "typing" [];
	"langchain_community.llms.azureml_endpoint" -> "pydantic" [];
	"langchain_community.llms.aviary" -> "dataclasses" [];
	"langchain_community.llms.aviary" -> "os" [];
	"langchain_community.llms.aviary" -> "typing" [];
	"langchain_community.llms.aviary" -> "requests" [];
	"langchain_community.llms.aviary" -> "pydantic" [];
	"langchain_community.llms.arcee" -> "typing" [];
	"langchain_community.llms.arcee" -> "pydantic" [];
	"langchain_community.llms.aphrodite" -> "typing" [];
	"langchain_community.llms.aphrodite" -> "pydantic" [];
	"langchain_community.llms.aphrodite" -> "aphrodite" [];
	"langchain_community.llms.anyscale" -> "typing" [];
	"langchain_community.llms.anyscale" -> "pydantic" [];
	"langchain_community.llms.anyscale" -> "openai" [];
	"langchain_community.llms.anthropic" -> "re" [];
	"langchain_community.llms.anthropic" -> "warnings" [];
	"langchain_community.llms.anthropic" -> "typing" [];
	"langchain_community.llms.anthropic" -> "pydantic" [];
	"langchain_community.llms.anthropic" -> "anthropic" [];
	"langchain_community.llms.amazon_api_gateway" -> "typing" [];
	"langchain_community.llms.amazon_api_gateway" -> "requests" [];
	"langchain_community.llms.amazon_api_gateway" -> "pydantic" [];
	"langchain_community.llms.aleph_alpha" -> "typing" [];
	"langchain_community.llms.aleph_alpha" -> "pydantic" [];
	"langchain_community.llms.aleph_alpha" -> "aleph_alpha_client" [];
	"langchain_community.llms.ai21" -> "typing" [];
	"langchain_community.llms.ai21" -> "requests" [];
	"langchain_community.llms.ai21" -> "pydantic" [];
	"langchain_community.docstore" -> "importlib" [];
	"langchain_community.docstore" -> "typing" [];
	"langchain_community.docstore.wikipedia" -> "typing" [];
	"langchain_community.docstore.wikipedia" -> "wikipedia" [];
	"langchain_community.docstore.arbitrary_fn" -> "typing" [];
	"langchain.chains" -> "typing" [];
	"langchain.agents" -> "pathlib" [];
	"langchain.agents" -> "typing" [];
	"langchain_community.agent_toolkits.sql.base" -> "__future__" [];
	"langchain_community.agent_toolkits.sql.base" -> "typing" [];
	"langchain_community.agent_toolkits" -> "importlib" [];
	"langchain_community.agent_toolkits" -> "typing" [];
	"langchain_community.agent_toolkits.zapier.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.steam.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.spark_sql.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.spark_sql.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "slack_sdk" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.polygon.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "'playwright.async_api'" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "'playwright.sync_api'" [];
	"langchain_community.agent_toolkits.openapi.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.openapi.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "O365" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.nla.tool" -> "__future__" [];
	"langchain_community.agent_toolkits.nla.tool" -> "typing" [];
	"langchain_community.chains.openapi.chain" -> "__future__" [];
	"langchain_community.chains.openapi.chain" -> "json" [];
	"langchain_community.chains.openapi.chain" -> "typing" [];
	"langchain_community.chains.openapi.chain" -> "pydantic" [];
	"langchain_community.chains.openapi.chain" -> "requests" [];
	"langchain_community.chains" -> "importlib" [];
	"langchain_community.chains" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "datetime" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "inspect" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "logging" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "pydantic" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "json" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "logging" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "os" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "platform" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "enum" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "http" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "aiohttp" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "pydantic" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "requests" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "socket" [];
	"langchain_community.chains.pebblo_retrieval.models" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.models" -> "pydantic" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "logging" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "qdrant_client" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "'qdrant_client.http'" [];
	"langchain.chains.api.openapi.response_chain" -> "typing" [];
	"langchain_community.chains.openapi.response_chain" -> "json" [];
	"langchain_community.chains.openapi.response_chain" -> "re" [];
	"langchain_community.chains.openapi.response_chain" -> "typing" [];
	"langchain.chains.api.openapi.prompts" -> "typing" [];
	"langchain.chains.api.openapi.requests_chain" -> "typing" [];
	"langchain_community.chains.openapi.requests_chain" -> "json" [];
	"langchain_community.chains.openapi.requests_chain" -> "re" [];
	"langchain_community.chains.openapi.requests_chain" -> "typing" [];
	"langchain_community.agent_toolkits.nasa.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "pydantic" [];
	"langchain_community.tools.multion.update_session" -> "typing" [];
	"langchain_community.tools.multion.update_session" -> "pydantic" [];
	"langchain_community.tools.multion.update_session" -> "multion" [];
	"langchain_community.tools.multion.create_session" -> "typing" [];
	"langchain_community.tools.multion.create_session" -> "pydantic" [];
	"langchain_community.tools.multion.create_session" -> "multion" [];
	"langchain_community.tools.multion.close_session" -> "typing" [];
	"langchain_community.tools.multion.close_session" -> "pydantic" [];
	"langchain_community.tools.multion.close_session" -> "multion" [];
	"langchain_community.agent_toolkits.json.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.json.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.jira.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.connery.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.connery.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.cogniswitch.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "__future__" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "sys" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "typing" [];
	"langchain_community.agent_toolkits.azure_ai_services" -> "__future__" [];
	"langchain_community.agent_toolkits.azure_ai_services" -> "typing" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "amadeus" [];
	"langchain_community.tools.amadeus.utils" -> "__future__" [];
	"langchain_community.tools.amadeus.utils" -> "logging" [];
	"langchain_community.tools.amadeus.utils" -> "os" [];
	"langchain_community.tools.amadeus.utils" -> "typing" [];
	"langchain_community.tools.amadeus.utils" -> "amadeus" [];
	"langchain_community.tools.amadeus.flight_search" -> "logging" [];
	"langchain_community.tools.amadeus.flight_search" -> "datetime" [];
	"langchain_community.tools.amadeus.flight_search" -> "typing" [];
	"langchain_community.tools.amadeus.flight_search" -> "pydantic" [];
	"langchain_community.tools.amadeus.flight_search" -> "amadeus" [];
	"langchain_community.tools.amadeus.base" -> "__future__" [];
	"langchain_community.tools.amadeus.base" -> "typing" [];
	"langchain_community.tools.amadeus.base" -> "pydantic" [];
	"langchain_community.tools.amadeus.base" -> "amadeus" [];
	"langchain_community.tools.amadeus.closest_airport" -> "typing" [];
	"langchain_community.tools.amadeus.closest_airport" -> "pydantic" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "'ain.ain'" [];
	"langchain_community.agent_toolkits.sql.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.sql.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.spark_sql.base" -> "__future__" [];
	"langchain_community.agent_toolkits.spark_sql.base" -> "typing" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "__future__" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "typing" [];
	"langchain.memory" -> "typing" [];
	"langchain_community.memory.zep_memory" -> "__future__" [];
	"langchain_community.memory.zep_memory" -> "typing" [];
	"langchain_community.memory.motorhead_memory" -> "typing" [];
	"langchain_community.memory.motorhead_memory" -> "requests" [];
	"langchain_community.memory.kg" -> "typing" [];
	"langchain_community.memory.kg" -> "pydantic" [];
	"langchain.memory.utils" -> "typing" [];
	"langchain_community.graphs.networkx_graph" -> "__future__" [];
	"langchain_community.graphs.networkx_graph" -> "typing" [];
	"langchain_community.graphs.networkx_graph" -> "networkx" [];
	"langchain_community.graphs.networkx_graph" -> "'networkx.drawing'" [];
	"langchain_community.graphs.networkx_graph" -> "pygraphviz" [];
	"langchain_community.graphs" -> "importlib" [];
	"langchain_community.graphs" -> "typing" [];
	"langchain_community.graphs.tigergraph_graph" -> "typing" [];
	"langchain_community.graphs.tigergraph_graph" -> "pyTigerGraph" [];
	"langchain_community.graphs.graph_store" -> "abc" [];
	"langchain_community.graphs.graph_store" -> "typing" [];
	"langchain_community.graphs.graph_document" -> "__future__" [];
	"langchain_community.graphs.graph_document" -> "typing" [];
	"langchain_community.graphs.graph_document" -> "pydantic" [];
	"langchain_community.graphs.rdf_graph" -> "__future__" [];
	"langchain_community.graphs.rdf_graph" -> "typing" [];
	"langchain_community.graphs.rdf_graph" -> "rdflib" [];
	"langchain_community.graphs.rdf_graph" -> "'rdflib.plugins'" [];
	"langchain_community.graphs.rdf_graph" -> "'rdflib.exceptions'" [];
	"langchain_community.graphs.rdf_graph" -> "'rdflib.query'" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "__future__" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "os" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "typing" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "rdflib" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "'rdflib.plugins'" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "pyparsing" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "'rdflib.exceptions'" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "'rdflib.query'" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "json" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "types" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "typing" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "requests" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "boto3" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "botocore" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "'botocore.config'" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "'botocore.awsrequest'" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "'botocore.auth'" [];
	"langchain_community.graphs.neptune_graph" -> "json" [];
	"langchain_community.graphs.neptune_graph" -> "abc" [];
	"langchain_community.graphs.neptune_graph" -> "typing" [];
	"langchain_community.graphs.neptune_graph" -> "boto3" [];
	"langchain_community.graphs.neptune_graph" -> "botocore" [];
	"langchain_community.graphs.neptune_graph" -> "'botocore.config'" [];
	"langchain_community.graphs.neo4j_graph" -> "hashlib" [];
	"langchain_community.graphs.neo4j_graph" -> "typing" [];
	"langchain_community.graphs.neo4j_graph" -> "neo4j" [];
	"langchain_community.graphs.nebula_graph" -> "logging" [];
	"langchain_community.graphs.nebula_graph" -> "string" [];
	"langchain_community.graphs.nebula_graph" -> "typing" [];
	"langchain_community.graphs.nebula_graph" -> "nebula3" [];
	"langchain_community.graphs.nebula_graph" -> "pandas" [];
	"langchain_community.graphs.nebula_graph" -> "'nebula3.Config'" [];
	"langchain_community.graphs.nebula_graph" -> "'nebula3.Exception'" [];
	"langchain_community.graphs.nebula_graph" -> "'nebula3.gclient'" [];
	"langchain_community.graphs.nebula_graph" -> "'nebula3.fbthrift'" [];
	"langchain_community.graphs.memgraph_graph" -> "logging" [];
	"langchain_community.graphs.memgraph_graph" -> "hashlib" [];
	"langchain_community.graphs.memgraph_graph" -> "typing" [];
	"langchain_community.graphs.memgraph_graph" -> "neo4j" [];
	"langchain_community.graphs.memgraph_graph" -> "ast" [];
	"langchain_community.graphs.kuzu_graph" -> "hashlib" [];
	"langchain_community.graphs.kuzu_graph" -> "typing" [];
	"langchain_community.graphs.kuzu_graph" -> "kuzu" [];
	"langchain_community.graphs.hugegraph" -> "typing" [];
	"langchain_community.graphs.hugegraph" -> "hugegraph" [];
	"langchain_community.graphs.gremlin_graph" -> "hashlib" [];
	"langchain_community.graphs.gremlin_graph" -> "sys" [];
	"langchain_community.graphs.gremlin_graph" -> "typing" [];
	"langchain_community.graphs.gremlin_graph" -> "asyncio" [];
	"langchain_community.graphs.gremlin_graph" -> "gremlin_python" [];
	"langchain_community.graphs.falkordb_graph" -> "warnings" [];
	"langchain_community.graphs.falkordb_graph" -> "typing" [];
	"langchain_community.graphs.falkordb_graph" -> "falkordb" [];
	"langchain_community.graphs.falkordb_graph" -> "redis" [];
	"langchain_community.graphs.falkordb_graph" -> "'redis.commands'" [];
	"langchain_community.graphs.arangodb_graph" -> "os" [];
	"langchain_community.graphs.arangodb_graph" -> "math" [];
	"langchain_community.graphs.arangodb_graph" -> "typing" [];
	"langchain_community.graphs.arangodb_graph" -> "arango" [];
	"langchain_community.graphs.arangodb_graph" -> "itertools" [];
	"langchain_community.chat_message_histories" -> "importlib" [];
	"langchain_community.chat_message_histories" -> "typing" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "__future__" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "logging" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "typing" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "zep_cloud" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "'zep_cloud.client'" [];
	"langchain_community.chat_message_histories.zep" -> "__future__" [];
	"langchain_community.chat_message_histories.zep" -> "logging" [];
	"langchain_community.chat_message_histories.zep" -> "enum" [];
	"langchain_community.chat_message_histories.zep" -> "typing" [];
	"langchain_community.chat_message_histories.zep" -> "zep_python" [];
	"langchain_community.chat_message_histories.xata" -> "json" [];
	"langchain_community.chat_message_histories.xata" -> "typing" [];
	"langchain_community.chat_message_histories.xata" -> "xata" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "json" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "logging" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "typing" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "upstash_redis" [];
	"langchain_community.chat_message_histories.tidb" -> "json" [];
	"langchain_community.chat_message_histories.tidb" -> "logging" [];
	"langchain_community.chat_message_histories.tidb" -> "datetime" [];
	"langchain_community.chat_message_histories.tidb" -> "typing" [];
	"langchain_community.chat_message_histories.tidb" -> "sqlalchemy" [];
	"langchain_community.chat_message_histories.streamlit" -> "typing" [];
	"langchain_community.chat_message_histories.streamlit" -> "streamlit" [];
	"langchain_community.chat_message_histories.sql" -> "contextlib" [];
	"langchain_community.chat_message_histories.sql" -> "json" [];
	"langchain_community.chat_message_histories.sql" -> "logging" [];
	"langchain_community.chat_message_histories.sql" -> "abc" [];
	"langchain_community.chat_message_histories.sql" -> "typing" [];
	"langchain_community.chat_message_histories.sql" -> "sqlalchemy" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "json" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "logging" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "re" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "typing" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "singlestoredb" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "datetime" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "time" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "typing" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "uuid" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "rockset" [];
	"langchain_community.chat_message_histories.redis" -> "json" [];
	"langchain_community.chat_message_histories.redis" -> "logging" [];
	"langchain_community.chat_message_histories.redis" -> "typing" [];
	"langchain_community.chat_message_histories.redis" -> "redis" [];
	"langchain_community.chat_message_histories.postgres" -> "json" [];
	"langchain_community.chat_message_histories.postgres" -> "logging" [];
	"langchain_community.chat_message_histories.postgres" -> "typing" [];
	"langchain_community.chat_message_histories.postgres" -> "psycopg" [];
	"langchain_community.chat_message_histories.postgres" -> "'psycopg.rows'" [];
	"langchain_community.chat_message_histories.neo4j" -> "typing" [];
	"langchain_community.chat_message_histories.neo4j" -> "neo4j" [];
	"langchain_community.chat_message_histories.mongodb" -> "json" [];
	"langchain_community.chat_message_histories.mongodb" -> "logging" [];
	"langchain_community.chat_message_histories.mongodb" -> "typing" [];
	"langchain_community.chat_message_histories.mongodb" -> "pymongo" [];
	"langchain_community.chat_message_histories.momento" -> "__future__" [];
	"langchain_community.chat_message_histories.momento" -> "json" [];
	"langchain_community.chat_message_histories.momento" -> "datetime" [];
	"langchain_community.chat_message_histories.momento" -> "typing" [];
	"langchain_community.chat_message_histories.momento" -> "momento" [];
	"langchain_community.chat_message_histories.momento" -> "'momento.responses'" [];
	"langchain_community.chat_message_histories.momento" -> "'momento.requests'" [];
	"langchain_community.chat_message_histories.kafka" -> "__future__" [];
	"langchain_community.chat_message_histories.kafka" -> "json" [];
	"langchain_community.chat_message_histories.kafka" -> "logging" [];
	"langchain_community.chat_message_histories.kafka" -> "time" [];
	"langchain_community.chat_message_histories.kafka" -> "enum" [];
	"langchain_community.chat_message_histories.kafka" -> "typing" [];
	"langchain_community.chat_message_histories.kafka" -> "confluent_kafka" [];
	"langchain_community.chat_message_histories.kafka" -> "'confluent_kafka.admin'" [];
	"langchain_community.chat_message_histories.firestore" -> "__future__" [];
	"langchain_community.chat_message_histories.firestore" -> "logging" [];
	"langchain_community.chat_message_histories.firestore" -> "typing" [];
	"langchain_community.chat_message_histories.firestore" -> "'google.cloud.firestore'" [];
	"langchain_community.chat_message_histories.firestore" -> "firebase_admin" [];
	"langchain_community.chat_message_histories.file" -> "json" [];
	"langchain_community.chat_message_histories.file" -> "pathlib" [];
	"langchain_community.chat_message_histories.file" -> "typing" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "json" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "logging" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "time" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "typing" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "elasticsearch" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "langchain_community" [];
	"langchain_community.chat_message_histories.dynamodb" -> "__future__" [];
	"langchain_community.chat_message_histories.dynamodb" -> "decimal" [];
	"langchain_community.chat_message_histories.dynamodb" -> "typing" [];
	"langchain_community.chat_message_histories.dynamodb" -> "'boto3.session'" [];
	"langchain_community.chat_message_histories.dynamodb" -> "boto3" [];
	"langchain_community.chat_message_histories.dynamodb" -> "dynamodb_encryption_sdk" [];
	"langchain_community.chat_message_histories.dynamodb" -> "'dynamodb_encryption_sdk.identifiers'" [];
	"langchain_community.chat_message_histories.dynamodb" -> "'dynamodb_encryption_sdk.material_providers'" [];
	"langchain_community.chat_message_histories.dynamodb" -> "'dynamodb_encryption_sdk.structures'" [];
	"langchain_community.chat_message_histories.dynamodb" -> "time" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "__future__" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "logging" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "types" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "typing" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "'azure.cosmos'" [];
	"langchain_community.chat_message_histories.cassandra" -> "__future__" [];
	"langchain_community.chat_message_histories.cassandra" -> "json" [];
	"langchain_community.chat_message_histories.cassandra" -> "uuid" [];
	"langchain_community.chat_message_histories.cassandra" -> "typing" [];
	"langchain_community.chat_message_histories.cassandra" -> "'cassandra.cluster'" [];
	"langchain_community.chat_message_histories.cassandra" -> "'cassio.table'" [];
	"langchain_community.chat_message_histories.astradb" -> "__future__" [];
	"langchain_community.chat_message_histories.astradb" -> "json" [];
	"langchain_community.chat_message_histories.astradb" -> "time" [];
	"langchain_community.chat_message_histories.astradb" -> "typing" [];
	"langchain_community.chat_message_histories.astradb" -> "'astrapy.db'" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "warnings" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "datetime" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "typing" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "pydantic" [];
	"langchain.memory.vectorstore" -> "typing" [];
	"langchain.memory.vectorstore" -> "pydantic" [];
	"langchain.memory.token_buffer" -> "typing" [];
	"langchain.memory.summary_buffer" -> "typing" [];
	"langchain.memory.summary" -> "__future__" [];
	"langchain.memory.summary" -> "typing" [];
	"langchain.memory.summary" -> "pydantic" [];
	"langchain.memory.simple" -> "typing" [];
	"langchain.memory.readonly" -> "typing" [];
	"langchain.memory.entity" -> "logging" [];
	"langchain.memory.entity" -> "abc" [];
	"langchain.memory.entity" -> "itertools" [];
	"langchain.memory.entity" -> "typing" [];
	"langchain.memory.entity" -> "pydantic" [];
	"langchain.memory.entity" -> "upstash_redis" [];
	"langchain.memory.entity" -> "redis" [];
	"langchain.memory.entity" -> "sqlite3" [];
	"langchain.memory.combined" -> "warnings" [];
	"langchain.memory.combined" -> "typing" [];
	"langchain.memory.combined" -> "pydantic" [];
	"langchain.memory.buffer_window" -> "typing" [];
	"langchain.memory.buffer" -> "typing" [];
	"langchain.memory.chat_memory" -> "warnings" [];
	"langchain.memory.chat_memory" -> "abc" [];
	"langchain.memory.chat_memory" -> "typing" [];
	"langchain.memory.chat_memory" -> "pydantic" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "__future__" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "typing" [];
	"langchain_community.agent_toolkits.openapi.base" -> "__future__" [];
	"langchain_community.agent_toolkits.openapi.base" -> "typing" [];
	"langchain_community.agent_toolkits.load_tools" -> "warnings" [];
	"langchain_community.agent_toolkits.load_tools" -> "typing" [];
	"langchain_community.agent_toolkits.load_tools" -> "mypy_extensions" [];
	"langchain_community.agent_toolkits.load_tools" -> "transformers" [];
	"langchain.chains.api.base" -> "__future__" [];
	"langchain.chains.api.base" -> "typing" [];
	"langchain.chains.api.base" -> "pydantic" [];
	"langchain.chains.api.base" -> "typing_extensions" [];
	"langchain.chains.llm_math.base" -> "__future__" [];
	"langchain.chains.llm_math.base" -> "math" [];
	"langchain.chains.llm_math.base" -> "re" [];
	"langchain.chains.llm_math.base" -> "warnings" [];
	"langchain.chains.llm_math.base" -> "typing" [];
	"langchain.chains.llm_math.base" -> "pydantic" [];
	"langchain.chains.llm_math.base" -> "numexpr" [];
	"langchain_community.utilities.dataforseo_api_search" -> "base64" [];
	"langchain_community.utilities.dataforseo_api_search" -> "typing" [];
	"langchain_community.utilities.dataforseo_api_search" -> "aiohttp" [];
	"langchain_community.utilities.dataforseo_api_search" -> "requests" [];
	"langchain_community.utilities.dataforseo_api_search" -> "pydantic" [];
	"langchain_community.utilities.dalle_image_generator" -> "logging" [];
	"langchain_community.utilities.dalle_image_generator" -> "typing" [];
	"langchain_community.utilities.dalle_image_generator" -> "pydantic" [];
	"langchain_community.utilities.dalle_image_generator" -> "typing_extensions" [];
	"langchain_community.utilities.dalle_image_generator" -> "openai" [];
	"langchain_community.tools.memorize.tool" -> "abc" [];
	"langchain_community.tools.memorize.tool" -> "typing" [];
	"langchain_community.tools.memorize.tool" -> "pydantic" [];
	"langchain_community.tools.google_trends.tool" -> "typing" [];
	"langchain_community.tools.google_scholar.tool" -> "typing" [];
	"langchain_community.tools.google_lens.tool" -> "typing" [];
	"langchain_community.tools.google_jobs.tool" -> "typing" [];
	"langchain_community.tools.google_finance.tool" -> "typing" [];
	"langchain_community.tools.golden_query.tool" -> "typing" [];
	"langchain_community.tools.dataforseo_api_search.tool" -> "typing" [];
	"langchain_community.tools.dataforseo_api_search.tool" -> "pydantic" [];
	"mypy_extensions" -> "typing" [];
	"mypy_extensions" -> "sys" [];
	"mypy_extensions" -> "warnings" [];
	"langchain_community.agent_toolkits.json.base" -> "__future__" [];
	"langchain_community.agent_toolkits.json.base" -> "typing" [];
	"langchain.agents.xml.base" -> "typing" [];
	"langchain.agents.output_parsers.xml" -> "typing" [];
	"langchain.agents.output_parsers.tools" -> "json" [];
	"langchain.agents.output_parsers.tools" -> "typing" [];
	"langchain.agents.output_parsers.self_ask" -> "typing" [];
	"langchain.agents.output_parsers.react_single_input" -> "re" [];
	"langchain.agents.output_parsers.react_single_input" -> "typing" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "json" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "re" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "typing" [];
	"langchain.agents.output_parsers.openai_functions" -> "json" [];
	"langchain.agents.output_parsers.openai_functions" -> "typing" [];
	"langchain.agents.output_parsers.json" -> "__future__" [];
	"langchain.agents.output_parsers.json" -> "logging" [];
	"langchain.agents.output_parsers.json" -> "typing" [];
	"langchain.agents.format_scratchpad.tools" -> "json" [];
	"langchain.agents.format_scratchpad.openai_functions" -> "json" [];
	"langchain.agents.tool_calling_agent.base" -> "typing" [];
	"langchain.agents.structured_chat.base" -> "re" [];
	"langchain.agents.structured_chat.base" -> "typing" [];
	"langchain.agents.structured_chat.base" -> "pydantic" [];
	"langchain.tools" -> "warnings" [];
	"langchain.tools" -> "typing" [];
	"langchain.tools" -> "langchain_community" [];
	"langchain.agents.structured_chat.output_parser" -> "__future__" [];
	"langchain.agents.structured_chat.output_parser" -> "json" [];
	"langchain.agents.structured_chat.output_parser" -> "logging" [];
	"langchain.agents.structured_chat.output_parser" -> "re" [];
	"langchain.agents.structured_chat.output_parser" -> "typing" [];
	"langchain.agents.structured_chat.output_parser" -> "pydantic" [];
	"langchain.agents.self_ask_with_search.base" -> "__future__" [];
	"langchain.agents.self_ask_with_search.base" -> "typing" [];
	"langchain.agents.self_ask_with_search.base" -> "pydantic" [];
	"langchain.agents.react.base" -> "__future__" [];
	"langchain.agents.react.base" -> "typing" [];
	"langchain.agents.react.base" -> "pydantic" [];
	"langchain.agents.react.output_parser" -> "re" [];
	"langchain.agents.react.output_parser" -> "typing" [];
	"langchain.agents.react.agent" -> "__future__" [];
	"langchain.agents.react.agent" -> "typing" [];
	"langchain.agents.openai_tools.base" -> "typing" [];
	"langchain.agents.output_parsers.openai_tools" -> "typing" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "json" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "typing" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "pydantic" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "typing_extensions" [];
	"langchain.agents.openai_functions_agent.base" -> "typing" [];
	"langchain.agents.openai_functions_agent.base" -> "pydantic" [];
	"langchain.agents.openai_functions_agent.base" -> "typing_extensions" [];
	"langchain.agents.mrkl.base" -> "__future__" [];
	"langchain.agents.mrkl.base" -> "typing" [];
	"langchain.agents.mrkl.base" -> "pydantic" [];
	"langchain.agents.mrkl.output_parser" -> "re" [];
	"langchain.agents.mrkl.output_parser" -> "typing" [];
	"langchain.agents.loading" -> "json" [];
	"langchain.agents.loading" -> "logging" [];
	"langchain.agents.loading" -> "pathlib" [];
	"langchain.agents.loading" -> "typing" [];
	"langchain.agents.loading" -> "yaml" [];
	"langchain.chains.loading" -> "__future__" [];
	"langchain.chains.loading" -> "json" [];
	"langchain.chains.loading" -> "pathlib" [];
	"langchain.chains.loading" -> "typing" [];
	"langchain.chains.loading" -> "yaml" [];
	"langchain_experimental.sql.base" -> "__future__" [];
	"langchain_experimental.sql.base" -> "warnings" [];
	"langchain_experimental.sql.base" -> "typing" [];
	"langchain_experimental.sql.base" -> "pydantic" [];
	"langchain_core.output_parsers.list" -> "__future__" [];
	"langchain_core.output_parsers.list" -> "csv" [];
	"langchain_core.output_parsers.list" -> "re" [];
	"langchain_core.output_parsers.list" -> "abc" [];
	"langchain_core.output_parsers.list" -> "collections" [];
	"langchain_core.output_parsers.list" -> "io" [];
	"langchain_core.output_parsers.list" -> "typing" [];
	"langchain_core.output_parsers.list" -> "typing_extensions" [];
	"langchain_experimental.pal_chain.base" -> "__future__" [];
	"langchain_experimental.pal_chain.base" -> "ast" [];
	"langchain_experimental.pal_chain.base" -> "typing" [];
	"langchain_experimental.pal_chain.base" -> "pydantic" [];
	"langchain_experimental.pal_chain.base" -> "typing_extensions" [];
	"langchain_experimental.utilities.python" -> "functools" [];
	"langchain_experimental.utilities.python" -> "logging" [];
	"langchain_experimental.utilities.python" -> "multiprocessing" [];
	"langchain_experimental.utilities.python" -> "re" [];
	"langchain_experimental.utilities.python" -> "sys" [];
	"langchain_experimental.utilities.python" -> "io" [];
	"langchain_experimental.utilities.python" -> "typing" [];
	"langchain_experimental.utilities.python" -> "pydantic" [];
	"langchain_experimental.llm_bash.base" -> "__future__" [];
	"langchain_experimental.llm_bash.base" -> "logging" [];
	"langchain_experimental.llm_bash.base" -> "warnings" [];
	"langchain_experimental.llm_bash.base" -> "typing" [];
	"langchain_experimental.llm_bash.base" -> "pydantic" [];
	"langchain_experimental.llm_bash.prompt" -> "__future__" [];
	"langchain_experimental.llm_bash.prompt" -> "re" [];
	"langchain_experimental.llm_bash.prompt" -> "typing" [];
	"langchain_community.llms.loading" -> "json" [];
	"langchain_community.llms.loading" -> "pathlib" [];
	"langchain_community.llms.loading" -> "typing" [];
	"langchain_community.llms.loading" -> "yaml" [];
	"langchain.chains.llm_requests" -> "typing" [];
	"langchain_community.chains.llm_requests" -> "__future__" [];
	"langchain_community.chains.llm_requests" -> "typing" [];
	"langchain_community.chains.llm_requests" -> "pydantic" [];
	"langchain_community.chains.llm_requests" -> "bs4" [];
	"langchain_community.chains.graph_qa.cypher" -> "__future__" [];
	"langchain_community.chains.graph_qa.cypher" -> "re" [];
	"langchain_community.chains.graph_qa.cypher" -> "typing" [];
	"langchain_community.chains.graph_qa.cypher" -> "pydantic" [];
	"langchain_community.chains.graph_qa.cypher_utils" -> "re" [];
	"langchain_community.chains.graph_qa.cypher_utils" -> "collections" [];
	"langchain_community.chains.graph_qa.cypher_utils" -> "typing" [];
	"langchain.chains.qa_with_sources.vector_db" -> "warnings" [];
	"langchain.chains.qa_with_sources.vector_db" -> "typing" [];
	"langchain.chains.qa_with_sources.vector_db" -> "pydantic" [];
	"langchain.chains.llm_checker.base" -> "__future__" [];
	"langchain.chains.llm_checker.base" -> "warnings" [];
	"langchain.chains.llm_checker.base" -> "typing" [];
	"langchain.chains.llm_checker.base" -> "pydantic" [];
	"langchain.chains.sequential" -> "typing" [];
	"langchain.chains.sequential" -> "pydantic" [];
	"langchain.chains.sequential" -> "typing_extensions" [];
	"langchain.chains.hyde.base" -> "__future__" [];
	"langchain.chains.hyde.base" -> "logging" [];
	"langchain.chains.hyde.base" -> "typing" [];
	"langchain.chains.hyde.base" -> "pydantic" [];
	"langchain.chains.hyde.base" -> "numpy" [];
	"langchain_core.prompts.loading" -> "json" [];
	"langchain_core.prompts.loading" -> "logging" [];
	"langchain_core.prompts.loading" -> "pathlib" [];
	"langchain_core.prompts.loading" -> "typing" [];
	"langchain_core.prompts.loading" -> "yaml" [];
	"langchain.agents.types" -> "typing" [];
	"langchain.agents.chat.base" -> "typing" [];
	"langchain.agents.chat.base" -> "pydantic" [];
	"langchain.agents.chat.output_parser" -> "json" [];
	"langchain.agents.chat.output_parser" -> "re" [];
	"langchain.agents.chat.output_parser" -> "typing" [];
	"langchain.agents.json_chat.base" -> "typing" [];
	"langchain.agents.initialize" -> "typing" [];
	"langchain.agents.conversational_chat.base" -> "__future__" [];
	"langchain.agents.conversational_chat.base" -> "typing" [];
	"langchain.agents.conversational_chat.base" -> "pydantic" [];
	"langchain.agents.conversational_chat.output_parser" -> "__future__" [];
	"langchain.agents.conversational_chat.output_parser" -> "typing" [];
	"langchain.agents.conversational.base" -> "__future__" [];
	"langchain.agents.conversational.base" -> "typing" [];
	"langchain.agents.conversational.base" -> "pydantic" [];
	"langchain.agents.conversational.output_parser" -> "re" [];
	"langchain.agents.conversational.output_parser" -> "typing" [];
	"langchain.agents.agent_types" -> "enum" [];
	"langchain.agents.agent_toolkits.vectorstore.base" -> "typing" [];
	"langchain.agents.agent_toolkits" -> "pathlib" [];
	"langchain.agents.agent_toolkits" -> "typing" [];
	"langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" -> "typing" [];
	"langchain.agents.openai_functions_agent.agent_token_buffer_memory" -> "typing" [];
	"langchain.agents.agent_toolkits.vectorstore.toolkit" -> "pydantic" [];
	"langchain.agents.agent_iterator" -> "__future__" [];
	"langchain.agents.agent_iterator" -> "asyncio" [];
	"langchain.agents.agent_iterator" -> "logging" [];
	"langchain.agents.agent_iterator" -> "time" [];
	"langchain.agents.agent_iterator" -> "typing" [];
	"langchain.agents.agent_iterator" -> "uuid" [];
	"langchain.utilities.asyncio" -> "sys" [];
	"langchain.utilities.asyncio" -> "async_timeout" [];
	"langchain.utilities.asyncio" -> "asyncio" [];
	"langchain.utilities" -> "typing" [];
	"langchain.agents.agent" -> "__future__" [];
	"langchain.agents.agent" -> "asyncio" [];
	"langchain.agents.agent" -> "builtins" [];
	"langchain.agents.agent" -> "json" [];
	"langchain.agents.agent" -> "logging" [];
	"langchain.agents.agent" -> "time" [];
	"langchain.agents.agent" -> "abc" [];
	"langchain.agents.agent" -> "pathlib" [];
	"langchain.agents.agent" -> "typing" [];
	"langchain.agents.agent" -> "yaml" [];
	"langchain.agents.agent" -> "pydantic" [];
	"langchain.agents.agent" -> "typing_extensions" [];
	"langchain.agents.tools" -> "typing" [];
	"langchain._api.interactive_env" -> "sys" [];
	"langchain_google_genai.llms" -> "__future__" [];
	"langchain_google_genai.llms" -> "enum" [];
	"langchain_google_genai.llms" -> "typing" [];
	"langchain_google_genai.llms" -> "pydantic" [];
	"langchain_google_genai.llms" -> "typing_extensions" [];
	"langchain_google_genai.google_vector_store" -> "asyncio" [];
	"langchain_google_genai.google_vector_store" -> "functools" [];
	"langchain_google_genai.google_vector_store" -> "typing" [];
	"langchain_google_genai.google_vector_store" -> "pydantic" [];
	"google.ai.generativelanguage_v1beta.types.tuned_model" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.tuned_model" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.tuned_model" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.text_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.text_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.text_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.safety" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.safety" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.safety" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.retriever_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.retriever_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.retriever_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.retriever" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.retriever" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.retriever" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.prediction_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.prediction_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.prediction_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.permission_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.permission_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.permission_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.permission" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.permission" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.permission" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.model_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.model_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.model_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.model" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.model" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.model" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.generative_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.generative_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.generative_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.file_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.file_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.file_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.file" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.file" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.file" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.discuss_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.discuss_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.discuss_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.content" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.content" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.content" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.citation" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.citation" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.citation" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.cached_content" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.cached_content" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.cached_content" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.cache_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.cache_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.cache_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "typing" [];
	"langchain_google_genai.genai_aqa" -> "typing" [];
	"langchain_google_genai.genai_aqa" -> "pydantic" [];
	"langchain_google_genai.embeddings" -> "re" [];
	"langchain_google_genai.embeddings" -> "string" [];
	"langchain_google_genai.embeddings" -> "typing" [];
	"langchain_google_genai.embeddings" -> "pydantic" [];
	"langchain_google_genai.embeddings" -> "typing_extensions" [];
	"langchain_google_genai._common" -> "importlib" [];
	"langchain_google_genai._common" -> "typing" [];
	"langchain_google_genai.chat_models" -> "__future__" [];
	"langchain_google_genai.chat_models" -> "asyncio" [];
	"langchain_google_genai.chat_models" -> "json" [];
	"langchain_google_genai.chat_models" -> "logging" [];
	"langchain_google_genai.chat_models" -> "uuid" [];
	"langchain_google_genai.chat_models" -> "warnings" [];
	"langchain_google_genai.chat_models" -> "operator" [];
	"langchain_google_genai.chat_models" -> "typing" [];
	"langchain_google_genai.chat_models" -> "proto" [];
	"langchain_google_genai.chat_models" -> "pydantic" [];
	"langchain_google_genai.chat_models" -> "tenacity" [];
	"langchain_google_genai.chat_models" -> "typing_extensions" [];
	"langchain_google_genai._image_utils" -> "__future__" [];
	"langchain_google_genai._image_utils" -> "base64" [];
	"langchain_google_genai._image_utils" -> "mimetypes" [];
	"langchain_google_genai._image_utils" -> "os" [];
	"langchain_google_genai._image_utils" -> "re" [];
	"langchain_google_genai._image_utils" -> "enum" [];
	"langchain_google_genai._image_utils" -> "typing" [];
	"langchain_google_genai._image_utils" -> "filetype" [];
	"langchain_google_genai._image_utils" -> "requests" [];
	"filetype" -> "__future__" [];
	"filetype.match" -> "__future__" [];
	"filetype.utils" -> "pathlib" [];
	"filetype.types" -> "__future__" [];
	"filetype.types.video" -> "__future__" [];
	"filetype.types.isobmff" -> "__future__" [];
	"filetype.types.isobmff" -> "codecs" [];
	"filetype.types.image" -> "__future__" [];
	"filetype.types.font" -> "__future__" [];
	"filetype.types.document" -> "__future__" [];
	"filetype.types.application" -> "__future__" [];
	"filetype.types.audio" -> "__future__" [];
	"filetype.types.archive" -> "__future__" [];
	"filetype.types.archive" -> "struct" [];
	"filetype.helpers" -> "__future__" [];
	"filetype.filetype" -> "__future__" [];
	"langchain_google_genai._function_utils" -> "__future__" [];
	"langchain_google_genai._function_utils" -> "collections" [];
	"langchain_google_genai._function_utils" -> "importlib" [];
	"langchain_google_genai._function_utils" -> "json" [];
	"langchain_google_genai._function_utils" -> "logging" [];
	"langchain_google_genai._function_utils" -> "typing" [];
	"langchain_google_genai._function_utils" -> "proto" [];
	"langchain_google_genai._function_utils" -> "pydantic" [];
	"google.generativeai.types.content_types" -> "__future__" [];
	"google.generativeai.types.content_types" -> "io" [];
	"google.generativeai.types.content_types" -> "inspect" [];
	"google.generativeai.types.content_types" -> "mimetypes" [];
	"google.generativeai.types.content_types" -> "pathlib" [];
	"google.generativeai.types.content_types" -> "typing" [];
	"google.generativeai.types.content_types" -> "typing_extensions" [];
	"google.generativeai.types.content_types" -> "pydantic" [];
	"google.generativeai.types.content_types" -> "'IPython.display'" [];
	"google.generativeai.types.file_types" -> "__future__" [];
	"google.generativeai.types.file_types" -> "datetime" [];
	"google.generativeai.types.file_types" -> "typing" [];
	"google.generativeai.types.file_types" -> "typing_extensions" [];
	"google.generativeai.types.file_types" -> "pprint" [];
	"google.generativeai.client" -> "__future__" [];
	"google.generativeai.client" -> "os" [];
	"google.generativeai.client" -> "contextlib" [];
	"google.generativeai.client" -> "inspect" [];
	"google.generativeai.client" -> "dataclasses" [];
	"google.generativeai.client" -> "pathlib" [];
	"google.generativeai.client" -> "threading" [];
	"google.generativeai.client" -> "typing" [];
	"google.generativeai.client" -> "httplib2" [];
	"google.generativeai.client" -> "io" [];
	"google.generativeai.client" -> "google" [];
	"google.generativeai.version" -> "__future__" [];
	"google.generativeai.types.caching_types" -> "__future__" [];
	"google.generativeai.types.caching_types" -> "datetime" [];
	"google.generativeai.types.caching_types" -> "typing" [];
	"google.generativeai.types.caching_types" -> "typing_extensions" [];
	"google.generativeai.types.text_types" -> "__future__" [];
	"google.generativeai.types.text_types" -> "sys" [];
	"google.generativeai.types.text_types" -> "abc" [];
	"google.generativeai.types.text_types" -> "dataclasses" [];
	"google.generativeai.types.text_types" -> "typing" [];
	"google.generativeai.types.text_types" -> "typing_extensions" [];
	"google.generativeai.string_utils" -> "__future__" [];
	"google.generativeai.string_utils" -> "dataclasses" [];
	"google.generativeai.string_utils" -> "pprint" [];
	"google.generativeai.string_utils" -> "re" [];
	"google.generativeai.string_utils" -> "reprlib" [];
	"google.generativeai.string_utils" -> "textwrap" [];
	"google.generativeai.types.safety_types" -> "__future__" [];
	"google.generativeai.types.safety_types" -> "enum" [];
	"google.generativeai.types.safety_types" -> "typing" [];
	"google.generativeai.types.safety_types" -> "typing_extensions" [];
	"google.generativeai.types.safety_types" -> "proto" [];
	"google.generativeai.types.model_types" -> "__future__" [];
	"google.generativeai.types.model_types" -> "csv" [];
	"google.generativeai.types.model_types" -> "dataclasses" [];
	"google.generativeai.types.model_types" -> "datetime" [];
	"google.generativeai.types.model_types" -> "json" [];
	"google.generativeai.types.model_types" -> "pathlib" [];
	"google.generativeai.types.model_types" -> "re" [];
	"google.generativeai.types.model_types" -> "typing" [];
	"google.generativeai.types.model_types" -> "typing_extensions" [];
	"google.generativeai.types.permission_types" -> "__future__" [];
	"google.generativeai.types.permission_types" -> "dataclasses" [];
	"google.generativeai.types.permission_types" -> "typing" [];
	"google.generativeai.types.permission_types" -> "re" [];
	"google.generativeai.utils" -> "__future__" [];
	"google.generativeai.types.helper_types" -> "__future__" [];
	"google.generativeai.types.helper_types" -> "collections" [];
	"google.generativeai.types.helper_types" -> "dataclasses" [];
	"google.generativeai.types.helper_types" -> "typing" [];
	"google.generativeai.types.helper_types" -> "typing_extensions" [];
	"google.generativeai.types.generation_types" -> "__future__" [];
	"google.generativeai.types.generation_types" -> "collections" [];
	"google.generativeai.types.generation_types" -> "contextlib" [];
	"google.generativeai.types.generation_types" -> "dataclasses" [];
	"google.generativeai.types.generation_types" -> "itertools" [];
	"google.generativeai.types.generation_types" -> "json" [];
	"google.generativeai.types.generation_types" -> "sys" [];
	"google.generativeai.types.generation_types" -> "textwrap" [];
	"google.generativeai.types.generation_types" -> "typing" [];
	"google.generativeai.types.generation_types" -> "typing_extensions" [];
	"google.generativeai.types.generation_types" -> "types" [];
	"google.generativeai.responder" -> "__future__" [];
	"google.generativeai.responder" -> "inspect" [];
	"google.generativeai.responder" -> "typing" [];
	"google.generativeai.responder" -> "typing_extensions" [];
	"google.generativeai.responder" -> "pydantic" [];
	"google.generativeai.types.citation_types" -> "__future__" [];
	"google.generativeai.types.citation_types" -> "typing" [];
	"google.generativeai.types.citation_types" -> "typing_extensions" [];
	"google.generativeai.caching" -> "__future__" [];
	"google.generativeai.caching" -> "datetime" [];
	"google.generativeai.caching" -> "textwrap" [];
	"google.generativeai.caching" -> "typing" [];
	"langchain_google_genai._genai_extension" -> "datetime" [];
	"langchain_google_genai._genai_extension" -> "logging" [];
	"langchain_google_genai._genai_extension" -> "re" [];
	"langchain_google_genai._genai_extension" -> "dataclasses" [];
	"langchain_google_genai._genai_extension" -> "typing" [];
	"langchain_google_genai._genai_extension" -> "langchain_core" [];
	"langchain_anthropic.llms" -> "re" [];
	"langchain_anthropic.llms" -> "warnings" [];
	"langchain_anthropic.llms" -> "typing" [];
	"langchain_anthropic.llms" -> "anthropic" [];
	"langchain_anthropic.llms" -> "pydantic" [];
	"langchain_anthropic.llms" -> "typing_extensions" [];
	"langchain_anthropic.chat_models" -> "copy" [];
	"langchain_anthropic.chat_models" -> "re" [];
	"langchain_anthropic.chat_models" -> "warnings" [];
	"langchain_anthropic.chat_models" -> "functools" [];
	"langchain_anthropic.chat_models" -> "operator" [];
	"langchain_anthropic.chat_models" -> "typing" [];
	"langchain_anthropic.chat_models" -> "anthropic" [];
	"langchain_anthropic.chat_models" -> "pydantic" [];
	"langchain_anthropic.chat_models" -> "typing_extensions" [];
	"langchain_anthropic.output_parsers" -> "typing" [];
	"langchain_anthropic.output_parsers" -> "pydantic" [];
	"langchain_openai.llms.base" -> "__future__" [];
	"langchain_openai.llms.base" -> "logging" [];
	"langchain_openai.llms.base" -> "sys" [];
	"langchain_openai.llms.base" -> "typing" [];
	"langchain_openai.llms.base" -> "openai" [];
	"langchain_openai.llms.base" -> "tiktoken" [];
	"langchain_openai.llms.base" -> "pydantic" [];
	"langchain_openai.llms.base" -> "typing_extensions" [];
	"langchain_openai.llms.azure" -> "__future__" [];
	"langchain_openai.llms.azure" -> "logging" [];
	"langchain_openai.llms.azure" -> "typing" [];
	"langchain_openai.llms.azure" -> "openai" [];
	"langchain_openai.llms.azure" -> "pydantic" [];
	"langchain_openai.llms.azure" -> "typing_extensions" [];
	"langchain_openai.embeddings.base" -> "__future__" [];
	"langchain_openai.embeddings.base" -> "logging" [];
	"langchain_openai.embeddings.base" -> "warnings" [];
	"langchain_openai.embeddings.base" -> "typing" [];
	"langchain_openai.embeddings.base" -> "openai" [];
	"langchain_openai.embeddings.base" -> "tiktoken" [];
	"langchain_openai.embeddings.base" -> "pydantic" [];
	"langchain_openai.embeddings.base" -> "typing_extensions" [];
	"langchain_openai.embeddings.base" -> "transformers" [];
	"langchain_openai.embeddings.azure" -> "__future__" [];
	"langchain_openai.embeddings.azure" -> "typing" [];
	"langchain_openai.embeddings.azure" -> "openai" [];
	"langchain_openai.embeddings.azure" -> "pydantic" [];
	"langchain_openai.embeddings.azure" -> "typing_extensions" [];
	"langchain_openai.chat_models.base" -> "__future__" [];
	"langchain_openai.chat_models.base" -> "base64" [];
	"langchain_openai.chat_models.base" -> "json" [];
	"langchain_openai.chat_models.base" -> "logging" [];
	"langchain_openai.chat_models.base" -> "os" [];
	"langchain_openai.chat_models.base" -> "re" [];
	"langchain_openai.chat_models.base" -> "ssl" [];
	"langchain_openai.chat_models.base" -> "sys" [];
	"langchain_openai.chat_models.base" -> "warnings" [];
	"langchain_openai.chat_models.base" -> "functools" [];
	"langchain_openai.chat_models.base" -> "io" [];
	"langchain_openai.chat_models.base" -> "math" [];
	"langchain_openai.chat_models.base" -> "operator" [];
	"langchain_openai.chat_models.base" -> "typing" [];
	"langchain_openai.chat_models.base" -> "certifi" [];
	"langchain_openai.chat_models.base" -> "openai" [];
	"langchain_openai.chat_models.base" -> "tiktoken" [];
	"langchain_openai.chat_models.base" -> "pydantic" [];
	"langchain_openai.chat_models.base" -> "typing_extensions" [];
	"langchain_openai.chat_models.base" -> "PIL" [];
	"openai.types.responses" -> "__future__" [];
	"openai.types" -> "__future__" [];
	"openai.types.static_file_chunking_strategy_object_param" -> "__future__" [];
	"openai.types.static_file_chunking_strategy_object_param" -> "typing_extensions" [];
	"openai.types.eval_stored_completions_data_source_config" -> "typing" [];
	"openai.types.eval_stored_completions_data_source_config" -> "typing_extensions" [];
	"openai.types.eval_stored_completions_data_source_config" -> "pydantic" [];
	"openai.types.shared.metadata" -> "typing" [];
	"openai.types.shared.metadata" -> "typing_extensions" [];
	"openai._models" -> "__future__" [];
	"openai._models" -> "os" [];
	"openai._models" -> "inspect" [];
	"openai._models" -> "typing" [];
	"openai._models" -> "datetime" [];
	"openai._models" -> "typing_extensions" [];
	"openai._models" -> "pydantic" [];
	"openai._compat" -> "__future__" [];
	"openai._compat" -> "typing" [];
	"openai._compat" -> "datetime" [];
	"openai._compat" -> "typing_extensions" [];
	"openai._compat" -> "pydantic" [];
	"openai._compat" -> "pydantic_core" [];
	"openai._compat" -> "functools" [];
	"openai._utils._reflection" -> "__future__" [];
	"openai._utils._reflection" -> "inspect" [];
	"openai._utils._reflection" -> "typing" [];
	"openai._utils._transform" -> "__future__" [];
	"openai._utils._transform" -> "io" [];
	"openai._utils._transform" -> "base64" [];
	"openai._utils._transform" -> "pathlib" [];
	"openai._utils._transform" -> "typing" [];
	"openai._utils._transform" -> "datetime" [];
	"openai._utils._transform" -> "typing_extensions" [];
	"openai._utils._transform" -> "anyio" [];
	"openai._utils._transform" -> "pydantic" [];
	"openai._files" -> "__future__" [];
	"openai._files" -> "io" [];
	"openai._files" -> "os" [];
	"openai._files" -> "pathlib" [];
	"openai._files" -> "typing" [];
	"openai._files" -> "typing_extensions" [];
	"openai._files" -> "anyio" [];
	"openai._utils._streams" -> "typing" [];
	"openai._utils._streams" -> "typing_extensions" [];
	"openai._utils._typing" -> "__future__" [];
	"openai._utils._typing" -> "sys" [];
	"openai._utils._typing" -> "typing" [];
	"openai._utils._typing" -> "typing_extensions" [];
	"openai._utils._typing" -> "collections" [];
	"openai._utils._utils" -> "__future__" [];
	"openai._utils._utils" -> "os" [];
	"openai._utils._utils" -> "re" [];
	"openai._utils._utils" -> "inspect" [];
	"openai._utils._utils" -> "functools" [];
	"openai._utils._utils" -> "typing" [];
	"openai._utils._utils" -> "pathlib" [];
	"openai._utils._utils" -> "datetime" [];
	"openai._utils._utils" -> "typing_extensions" [];
	"openai._utils._utils" -> "sniffio" [];
	"openai.lib.azure" -> "__future__" [];
	"openai.lib.azure" -> "os" [];
	"openai.lib.azure" -> "inspect" [];
	"openai.lib.azure" -> "typing" [];
	"openai.lib.azure" -> "typing_extensions" [];
	"openai.lib._parsing._completions" -> "__future__" [];
	"openai.lib._parsing._completions" -> "json" [];
	"openai.lib._parsing._completions" -> "typing" [];
	"openai.lib._parsing._completions" -> "typing_extensions" [];
	"openai.lib._parsing._completions" -> "pydantic" [];
	"openai.types.chat.chat_completion_message_tool_call" -> "typing_extensions" [];
	"openai.types.shared_params.response_format_json_schema" -> "__future__" [];
	"openai.types.shared_params.response_format_json_schema" -> "typing" [];
	"openai.types.shared_params.response_format_json_schema" -> "typing_extensions" [];
	"openai.types.shared_params.response_format_json_object" -> "__future__" [];
	"openai.types.shared_params.response_format_json_object" -> "typing_extensions" [];
	"openai.types.shared_params.response_format_text" -> "__future__" [];
	"openai.types.shared_params.response_format_text" -> "typing_extensions" [];
	"openai.types.shared_params.function_parameters" -> "__future__" [];
	"openai.types.shared_params.function_parameters" -> "typing" [];
	"openai.types.shared_params.function_parameters" -> "typing_extensions" [];
	"openai.types.shared_params.function_definition" -> "__future__" [];
	"openai.types.shared_params.function_definition" -> "typing" [];
	"openai.types.shared_params.function_definition" -> "typing_extensions" [];
	"openai.types.shared_params.comparison_filter" -> "__future__" [];
	"openai.types.shared_params.comparison_filter" -> "typing" [];
	"openai.types.shared_params.comparison_filter" -> "typing_extensions" [];
	"openai.types.shared_params.reasoning_effort" -> "__future__" [];
	"openai.types.shared_params.reasoning_effort" -> "typing" [];
	"openai.types.shared_params.reasoning_effort" -> "typing_extensions" [];
	"openai.types.shared_params.responses_model" -> "__future__" [];
	"openai.types.shared_params.responses_model" -> "typing" [];
	"openai.types.shared_params.responses_model" -> "typing_extensions" [];
	"openai.types.shared.chat_model" -> "typing_extensions" [];
	"openai.types.shared_params.compound_filter" -> "__future__" [];
	"openai.types.shared_params.compound_filter" -> "typing" [];
	"openai.types.shared_params.compound_filter" -> "typing_extensions" [];
	"openai.types.shared_params.chat_model" -> "__future__" [];
	"openai.types.shared_params.chat_model" -> "typing_extensions" [];
	"openai.types.shared_params.reasoning" -> "__future__" [];
	"openai.types.shared_params.reasoning" -> "typing" [];
	"openai.types.shared_params.reasoning" -> "typing_extensions" [];
	"openai.types.shared.reasoning_effort" -> "typing" [];
	"openai.types.shared.reasoning_effort" -> "typing_extensions" [];
	"openai.types.shared_params.metadata" -> "__future__" [];
	"openai.types.shared_params.metadata" -> "typing" [];
	"openai.types.shared_params.metadata" -> "typing_extensions" [];
	"openai.types.chat.completion_create_params" -> "__future__" [];
	"openai.types.chat.completion_create_params" -> "typing" [];
	"openai.types.chat.completion_create_params" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_function_call_option_param" -> "__future__" [];
	"openai.types.chat.chat_completion_function_call_option_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_tool_choice_option_param" -> "__future__" [];
	"openai.types.chat.chat_completion_tool_choice_option_param" -> "typing" [];
	"openai.types.chat.chat_completion_tool_choice_option_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_named_tool_choice_param" -> "__future__" [];
	"openai.types.chat.chat_completion_named_tool_choice_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_prediction_content_param" -> "__future__" [];
	"openai.types.chat.chat_completion_prediction_content_param" -> "typing" [];
	"openai.types.chat.chat_completion_prediction_content_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_text_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_text_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_stream_options_param" -> "__future__" [];
	"openai.types.chat.chat_completion_stream_options_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_developer_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_developer_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_developer_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_assistant_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_assistant_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_assistant_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_refusal_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_refusal_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_message_tool_call_param" -> "__future__" [];
	"openai.types.chat.chat_completion_message_tool_call_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_function_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_function_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_function_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_system_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_system_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_system_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_user_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_user_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_user_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_param" -> "typing" [];
	"openai.types.chat.chat_completion_content_part_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_input_audio_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_input_audio_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_image_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_image_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_tool_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_tool_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_tool_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_audio_param" -> "__future__" [];
	"openai.types.chat.chat_completion_audio_param" -> "typing" [];
	"openai.types.chat.chat_completion_audio_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_tool_param" -> "__future__" [];
	"openai.types.chat.chat_completion_tool_param" -> "typing_extensions" [];
	"openai.types.chat" -> "__future__" [];
	"openai.types.chat.chat_completion_token_logprob" -> "typing" [];
	"openai.types.chat.parsed_function_tool_call" -> "typing" [];
	"openai.types.chat.completion_update_params" -> "__future__" [];
	"openai.types.chat.completion_update_params" -> "typing" [];
	"openai.types.chat.completion_update_params" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_modality" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_message" -> "typing" [];
	"openai.types.chat.chat_completion_message" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_deleted" -> "typing_extensions" [];
	"openai.types.chat.parsed_chat_completion" -> "typing" [];
	"openai.types.chat.completion_list_params" -> "__future__" [];
	"openai.types.chat.completion_list_params" -> "typing" [];
	"openai.types.chat.completion_list_params" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_chunk" -> "typing" [];
	"openai.types.chat.chat_completion_chunk" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_role" -> "typing_extensions" [];
	"openai.types.chat.chat_completion" -> "typing" [];
	"openai.types.chat.chat_completion" -> "typing_extensions" [];
	"openai.lib._pydantic" -> "__future__" [];
	"openai.lib._pydantic" -> "inspect" [];
	"openai.lib._pydantic" -> "typing" [];
	"openai.lib._pydantic" -> "typing_extensions" [];
	"openai.lib._pydantic" -> "pydantic" [];
	"openai.lib._tools" -> "__future__" [];
	"openai.lib._tools" -> "typing" [];
	"openai.lib._tools" -> "pydantic" [];
	"openai._base_client" -> "__future__" [];
	"openai._base_client" -> "sys" [];
	"openai._base_client" -> "json" [];
	"openai._base_client" -> "time" [];
	"openai._base_client" -> "uuid" [];
	"openai._base_client" -> "email" [];
	"openai._base_client" -> "asyncio" [];
	"openai._base_client" -> "inspect" [];
	"openai._base_client" -> "logging" [];
	"openai._base_client" -> "platform" [];
	"openai._base_client" -> "types" [];
	"openai._base_client" -> "random" [];
	"openai._base_client" -> "typing" [];
	"openai._base_client" -> "typing_extensions" [];
	"openai._base_client" -> "anyio" [];
	"openai._base_client" -> "distro" [];
	"openai._base_client" -> "pydantic" [];
	"openai._legacy_response" -> "__future__" [];
	"openai._legacy_response" -> "os" [];
	"openai._legacy_response" -> "inspect" [];
	"openai._legacy_response" -> "logging" [];
	"openai._legacy_response" -> "datetime" [];
	"openai._legacy_response" -> "functools" [];
	"openai._legacy_response" -> "typing" [];
	"openai._legacy_response" -> "typing_extensions" [];
	"openai._legacy_response" -> "anyio" [];
	"openai._legacy_response" -> "pydantic" [];
	"openai._response" -> "__future__" [];
	"openai._response" -> "os" [];
	"openai._response" -> "inspect" [];
	"openai._response" -> "logging" [];
	"openai._response" -> "datetime" [];
	"openai._response" -> "functools" [];
	"openai._response" -> "types" [];
	"openai._response" -> "typing" [];
	"openai._response" -> "typing_extensions" [];
	"openai._response" -> "anyio" [];
	"openai._response" -> "pydantic" [];
	"openai._qs" -> "__future__" [];
	"openai._qs" -> "typing" [];
	"openai._qs" -> "typing_extensions" [];
	"distro.distro" -> "argparse" [];
	"distro.distro" -> "json" [];
	"distro.distro" -> "logging" [];
	"distro.distro" -> "os" [];
	"distro.distro" -> "re" [];
	"distro.distro" -> "shlex" [];
	"distro.distro" -> "subprocess" [];
	"distro.distro" -> "sys" [];
	"distro.distro" -> "warnings" [];
	"distro.distro" -> "typing" [];
	"distro.distro" -> "functools" [];
	"openai._exceptions" -> "__future__" [];
	"openai._exceptions" -> "typing" [];
	"openai._exceptions" -> "typing_extensions" [];
	"openai._streaming" -> "__future__" [];
	"openai._streaming" -> "json" [];
	"openai._streaming" -> "inspect" [];
	"openai._streaming" -> "types" [];
	"openai._streaming" -> "typing" [];
	"openai._streaming" -> "typing_extensions" [];
	"openai._client" -> "__future__" [];
	"openai._client" -> "os" [];
	"openai._client" -> "typing" [];
	"openai._client" -> "typing_extensions" [];
	"openai.resources.vector_stores.vector_stores" -> "__future__" [];
	"openai.resources.vector_stores.vector_stores" -> "typing" [];
	"openai.resources.vector_stores.vector_stores" -> "typing_extensions" [];
	"openai.resources.vector_stores.vector_stores" -> "openai" [];
	"openai.resources.vector_stores.file_batches" -> "__future__" [];
	"openai.resources.vector_stores.file_batches" -> "asyncio" [];
	"openai.resources.vector_stores.file_batches" -> "typing" [];
	"openai.resources.vector_stores.file_batches" -> "typing_extensions" [];
	"openai.resources.vector_stores.file_batches" -> "sniffio" [];
	"openai.resources.vector_stores.file_batches" -> "openai" [];
	"openai.resources.vector_stores.file_batches" -> "trio" [];
	"openai.types.vector_stores.vector_store_file_batch" -> "typing_extensions" [];
	"openai.types.vector_stores.vector_store_file" -> "typing" [];
	"openai.types.vector_stores.vector_store_file" -> "typing_extensions" [];
	"openai.types.vector_stores.file_batch_list_files_params" -> "__future__" [];
	"openai.types.vector_stores.file_batch_list_files_params" -> "typing_extensions" [];
	"openai.types.vector_stores.file_batch_create_params" -> "__future__" [];
	"openai.types.vector_stores.file_batch_create_params" -> "typing" [];
	"openai.types.vector_stores.file_batch_create_params" -> "typing_extensions" [];
	"openai.types.vector_stores" -> "__future__" [];
	"openai.types.vector_stores.vector_store_file_deleted" -> "typing_extensions" [];
	"openai.types.vector_stores.file_content_response" -> "typing" [];
	"openai.types.vector_stores.file_update_params" -> "__future__" [];
	"openai.types.vector_stores.file_update_params" -> "typing" [];
	"openai.types.vector_stores.file_update_params" -> "typing_extensions" [];
	"openai.types.vector_stores.file_create_params" -> "__future__" [];
	"openai.types.vector_stores.file_create_params" -> "typing" [];
	"openai.types.vector_stores.file_create_params" -> "typing_extensions" [];
	"openai.types.vector_stores.file_list_params" -> "__future__" [];
	"openai.types.vector_stores.file_list_params" -> "typing_extensions" [];
	"openai.pagination" -> "typing" [];
	"openai.pagination" -> "typing_extensions" [];
	"openai._resource" -> "__future__" [];
	"openai._resource" -> "time" [];
	"openai._resource" -> "typing" [];
	"openai._resource" -> "anyio" [];
	"openai.resources.vector_stores.files" -> "__future__" [];
	"openai.resources.vector_stores.files" -> "typing" [];
	"openai.resources.vector_stores.files" -> "typing_extensions" [];
	"openai.resources.vector_stores.files" -> "openai" [];
	"openai.resources.fine_tuning.fine_tuning" -> "__future__" [];
	"openai.resources.fine_tuning.checkpoints.checkpoints" -> "__future__" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "__future__" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "typing" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "typing_extensions" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "openai" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_response" -> "typing" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_response" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints.permission_delete_response" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints.permission_create_response" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_params" -> "__future__" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints.permission_create_params" -> "__future__" [];
	"openai.types.fine_tuning.checkpoints.permission_create_params" -> "typing" [];
	"openai.types.fine_tuning.checkpoints.permission_create_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints" -> "__future__" [];
	"openai.types.fine_tuning" -> "__future__" [];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration_object" -> "typing_extensions" [];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration" -> "typing" [];
	"openai.types.fine_tuning.job_list_events_params" -> "__future__" [];
	"openai.types.fine_tuning.job_list_events_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.fine_tuning_job_event" -> "builtins" [];
	"openai.types.fine_tuning.fine_tuning_job_event" -> "typing" [];
	"openai.types.fine_tuning.fine_tuning_job_event" -> "typing_extensions" [];
	"openai.types.fine_tuning.job_create_params" -> "__future__" [];
	"openai.types.fine_tuning.job_create_params" -> "typing" [];
	"openai.types.fine_tuning.job_create_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.job_list_params" -> "__future__" [];
	"openai.types.fine_tuning.job_list_params" -> "typing" [];
	"openai.types.fine_tuning.job_list_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.fine_tuning_job" -> "typing" [];
	"openai.types.fine_tuning.fine_tuning_job" -> "typing_extensions" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "__future__" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "typing" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "typing_extensions" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "openai" [];
	"openai.resources.fine_tuning.jobs.checkpoints" -> "__future__" [];
	"openai.resources.fine_tuning.jobs.checkpoints" -> "openai" [];
	"openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" -> "typing" [];
	"openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" -> "typing_extensions" [];
	"openai.types.fine_tuning.jobs.checkpoint_list_params" -> "__future__" [];
	"openai.types.fine_tuning.jobs.checkpoint_list_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.jobs" -> "__future__" [];
	"openai.resources.responses.responses" -> "__future__" [];
	"openai.resources.responses.responses" -> "typing" [];
	"openai.resources.responses.responses" -> "functools" [];
	"openai.resources.responses.responses" -> "typing_extensions" [];
	"openai.resources.responses.responses" -> "openai" [];
	"openai.lib.streaming.responses._responses" -> "__future__" [];
	"openai.lib.streaming.responses._responses" -> "inspect" [];
	"openai.lib.streaming.responses._responses" -> "types" [];
	"openai.lib.streaming.responses._responses" -> "typing" [];
	"openai.lib.streaming.responses._responses" -> "typing_extensions" [];
	"openai.lib.streaming._assistants" -> "__future__" [];
	"openai.lib.streaming._assistants" -> "asyncio" [];
	"openai.lib.streaming._assistants" -> "types" [];
	"openai.lib.streaming._assistants" -> "typing" [];
	"openai.lib.streaming._assistants" -> "typing_extensions" [];
	"openai.types.beta.threads.runs" -> "__future__" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call_delta" -> "typing" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.message_creation_step_details" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.code_interpreter_output_image" -> "typing" [];
	"openai.types.beta.threads.runs.code_interpreter_output_image" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step_delta_message_delta" -> "typing" [];
	"openai.types.beta.threads.runs.run_step_delta_message_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.file_search_tool_call_delta" -> "typing" [];
	"openai.types.beta.threads.runs.file_search_tool_call_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call" -> "typing" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.function_tool_call_delta" -> "typing" [];
	"openai.types.beta.threads.runs.function_tool_call_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.tool_calls_step_details" -> "typing" [];
	"openai.types.beta.threads.runs.tool_calls_step_details" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.tool_call_delta_object" -> "typing" [];
	"openai.types.beta.threads.runs.tool_call_delta_object" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.file_search_tool_call" -> "typing" [];
	"openai.types.beta.threads.runs.file_search_tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.code_interpreter_logs" -> "typing" [];
	"openai.types.beta.threads.runs.code_interpreter_logs" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.step_retrieve_params" -> "__future__" [];
	"openai.types.beta.threads.runs.step_retrieve_params" -> "typing" [];
	"openai.types.beta.threads.runs.step_retrieve_params" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step_delta_event" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.function_tool_call" -> "typing" [];
	"openai.types.beta.threads.runs.function_tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.step_list_params" -> "__future__" [];
	"openai.types.beta.threads.runs.step_list_params" -> "typing" [];
	"openai.types.beta.threads.runs.step_list_params" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step_include" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.tool_call_delta" -> "typing" [];
	"openai.types.beta.threads.runs.tool_call_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step_delta" -> "typing" [];
	"openai.types.beta.threads.runs.run_step_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.tool_call" -> "typing" [];
	"openai.types.beta.threads.runs.tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step" -> "typing" [];
	"openai.types.beta.threads.runs.run_step" -> "typing_extensions" [];
	"openai.types.beta.threads" -> "__future__" [];
	"openai.types.beta.threads.required_action_function_tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.run_submit_tool_outputs_params" -> "__future__" [];
	"openai.types.beta.threads.run_submit_tool_outputs_params" -> "typing" [];
	"openai.types.beta.threads.run_submit_tool_outputs_params" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_content_block_param" -> "__future__" [];
	"openai.types.beta.threads.image_file_content_block_param" -> "typing_extensions" [];
	"openai.types.beta.threads.file_citation_delta_annotation" -> "typing" [];
	"openai.types.beta.threads.file_citation_delta_annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_content_block_param" -> "__future__" [];
	"openai.types.beta.threads.image_url_content_block_param" -> "typing_extensions" [];
	"openai.types.beta.threads.message_content_part_param" -> "__future__" [];
	"openai.types.beta.threads.message_content_part_param" -> "typing" [];
	"openai.types.beta.threads.message_content_part_param" -> "typing_extensions" [];
	"openai.types.beta.threads.file_path_delta_annotation" -> "typing" [];
	"openai.types.beta.threads.file_path_delta_annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.text_content_block_param" -> "__future__" [];
	"openai.types.beta.threads.text_content_block_param" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_content_block" -> "typing_extensions" [];
	"openai.types.beta.threads.file_citation_annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_content_block" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_delta_block" -> "typing" [];
	"openai.types.beta.threads.image_file_delta_block" -> "typing_extensions" [];
	"openai.types.beta.threads.refusal_content_block" -> "typing_extensions" [];
	"openai.types.beta.threads.message_update_params" -> "__future__" [];
	"openai.types.beta.threads.message_update_params" -> "typing" [];
	"openai.types.beta.threads.message_update_params" -> "typing_extensions" [];
	"openai.types.beta.threads.message_create_params" -> "__future__" [];
	"openai.types.beta.threads.message_create_params" -> "typing" [];
	"openai.types.beta.threads.message_create_params" -> "typing_extensions" [];
	"openai.types.beta.code_interpreter_tool_param" -> "__future__" [];
	"openai.types.beta.code_interpreter_tool_param" -> "typing_extensions" [];
	"openai.types.beta.threads.message_content_delta" -> "typing" [];
	"openai.types.beta.threads.message_content_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_delta_block" -> "typing" [];
	"openai.types.beta.threads.image_url_delta_block" -> "typing_extensions" [];
	"openai.types.beta.threads.file_path_annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.refusal_delta_block" -> "typing" [];
	"openai.types.beta.threads.refusal_delta_block" -> "typing_extensions" [];
	"openai.types.beta.threads.message_list_params" -> "__future__" [];
	"openai.types.beta.threads.message_list_params" -> "typing_extensions" [];
	"openai.types.beta.threads.message_delta_event" -> "typing_extensions" [];
	"openai.types.beta.threads.text_content_block" -> "typing_extensions" [];
	"openai.types.beta.threads.run_update_params" -> "__future__" [];
	"openai.types.beta.threads.run_update_params" -> "typing" [];
	"openai.types.beta.threads.run_update_params" -> "typing_extensions" [];
	"openai.types.beta.threads.run_create_params" -> "__future__" [];
	"openai.types.beta.threads.run_create_params" -> "typing" [];
	"openai.types.beta.threads.run_create_params" -> "typing_extensions" [];
	"openai.types.beta.assistant_response_format_option_param" -> "__future__" [];
	"openai.types.beta.assistant_response_format_option_param" -> "typing" [];
	"openai.types.beta.assistant_response_format_option_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice_option_param" -> "__future__" [];
	"openai.types.beta.assistant_tool_choice_option_param" -> "typing" [];
	"openai.types.beta.assistant_tool_choice_option_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice_param" -> "__future__" [];
	"openai.types.beta.assistant_tool_choice_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice_function_param" -> "__future__" [];
	"openai.types.beta.assistant_tool_choice_function_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_param" -> "__future__" [];
	"openai.types.beta.assistant_tool_param" -> "typing" [];
	"openai.types.beta.assistant_tool_param" -> "typing_extensions" [];
	"openai.types.beta.file_search_tool_param" -> "__future__" [];
	"openai.types.beta.file_search_tool_param" -> "typing_extensions" [];
	"openai.types.beta.function_tool_param" -> "__future__" [];
	"openai.types.beta.function_tool_param" -> "typing_extensions" [];
	"openai.types.beta.threads.text_delta_block" -> "typing" [];
	"openai.types.beta.threads.text_delta_block" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_param" -> "__future__" [];
	"openai.types.beta.threads.image_file_param" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_delta" -> "typing" [];
	"openai.types.beta.threads.image_file_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.annotation_delta" -> "typing" [];
	"openai.types.beta.threads.annotation_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.run_list_params" -> "__future__" [];
	"openai.types.beta.threads.run_list_params" -> "typing_extensions" [];
	"openai.types.beta.threads.message_deleted" -> "typing_extensions" [];
	"openai.types.beta.threads.message_content" -> "typing" [];
	"openai.types.beta.threads.message_content" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_param" -> "__future__" [];
	"openai.types.beta.threads.image_url_param" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_delta" -> "typing" [];
	"openai.types.beta.threads.image_url_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.message_delta" -> "typing" [];
	"openai.types.beta.threads.message_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.text_delta" -> "typing" [];
	"openai.types.beta.threads.run_status" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file" -> "typing" [];
	"openai.types.beta.threads.image_file" -> "typing_extensions" [];
	"openai.types.beta.threads.annotation" -> "typing" [];
	"openai.types.beta.threads.annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url" -> "typing" [];
	"openai.types.beta.threads.image_url" -> "typing_extensions" [];
	"openai.types.beta.threads.message" -> "typing" [];
	"openai.types.beta.threads.message" -> "typing_extensions" [];
	"openai.types.beta.code_interpreter_tool" -> "typing_extensions" [];
	"openai.types.beta.threads.text" -> "typing" [];
	"openai.types.beta.threads.run" -> "typing" [];
	"openai.types.beta.threads.run" -> "typing_extensions" [];
	"openai.types.beta.assistant_response_format_option" -> "typing" [];
	"openai.types.beta.assistant_response_format_option" -> "typing_extensions" [];
	"openai.types.shared.response_format_json_schema" -> "typing" [];
	"openai.types.shared.response_format_json_schema" -> "typing_extensions" [];
	"openai.types.shared.response_format_json_schema" -> "pydantic" [];
	"openai.types.shared.response_format_json_object" -> "typing_extensions" [];
	"openai.types.shared.response_format_text" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice_option" -> "typing" [];
	"openai.types.beta.assistant_tool_choice_option" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice" -> "typing" [];
	"openai.types.beta.assistant_tool_choice" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool" -> "typing" [];
	"openai.types.beta.assistant_tool" -> "typing_extensions" [];
	"openai.types.beta.file_search_tool" -> "typing" [];
	"openai.types.beta.file_search_tool" -> "typing_extensions" [];
	"openai.types.beta.function_tool" -> "typing_extensions" [];
	"openai.types.shared.function_definition" -> "typing" [];
	"openai.types.shared.function_parameters" -> "typing" [];
	"openai.types.shared.function_parameters" -> "typing_extensions" [];
	"openai.types.beta" -> "__future__" [];
	"openai.types.beta.thread_create_and_run_params" -> "__future__" [];
	"openai.types.beta.thread_create_and_run_params" -> "typing" [];
	"openai.types.beta.thread_create_and_run_params" -> "typing_extensions" [];
	"openai.types.beta.assistant_update_params" -> "__future__" [];
	"openai.types.beta.assistant_update_params" -> "typing" [];
	"openai.types.beta.assistant_update_params" -> "typing_extensions" [];
	"openai.types.beta.assistant_create_params" -> "__future__" [];
	"openai.types.beta.assistant_create_params" -> "typing" [];
	"openai.types.beta.assistant_create_params" -> "typing_extensions" [];
	"openai.types.beta.assistant_stream_event" -> "typing" [];
	"openai.types.beta.assistant_stream_event" -> "typing_extensions" [];
	"openai.types.shared.error_object" -> "typing" [];
	"openai.types.beta.assistant_list_params" -> "__future__" [];
	"openai.types.beta.assistant_list_params" -> "typing_extensions" [];
	"openai.types.beta.thread_update_params" -> "__future__" [];
	"openai.types.beta.thread_update_params" -> "typing" [];
	"openai.types.beta.thread_update_params" -> "typing_extensions" [];
	"openai.types.beta.thread_create_params" -> "__future__" [];
	"openai.types.beta.thread_create_params" -> "typing" [];
	"openai.types.beta.thread_create_params" -> "typing_extensions" [];
	"openai.types.beta.assistant_deleted" -> "typing_extensions" [];
	"openai.types.beta.thread_deleted" -> "typing_extensions" [];
	"openai.types.beta.assistant" -> "typing" [];
	"openai.types.beta.assistant" -> "typing_extensions" [];
	"openai.types.beta.thread" -> "typing" [];
	"openai.types.beta.thread" -> "typing_extensions" [];
	"openai.lib.streaming.responses._events" -> "__future__" [];
	"openai.lib.streaming.responses._events" -> "typing" [];
	"openai.lib.streaming.responses._events" -> "typing_extensions" [];
	"openai.lib.streaming.responses._types" -> "__future__" [];
	"openai.lib.streaming.responses._types" -> "typing_extensions" [];
	"openai.lib._parsing._responses" -> "__future__" [];
	"openai.lib._parsing._responses" -> "json" [];
	"openai.lib._parsing._responses" -> "typing" [];
	"openai.lib._parsing._responses" -> "typing_extensions" [];
	"openai.lib._parsing._responses" -> "pydantic" [];
	"openai.resources.responses.input_items" -> "__future__" [];
	"openai.resources.responses.input_items" -> "typing" [];
	"openai.resources.responses.input_items" -> "typing_extensions" [];
	"openai.resources.responses.input_items" -> "openai" [];
	"openai.resources.uploads.uploads" -> "__future__" [];
	"openai.resources.uploads.uploads" -> "io" [];
	"openai.resources.uploads.uploads" -> "os" [];
	"openai.resources.uploads.uploads" -> "logging" [];
	"openai.resources.uploads.uploads" -> "builtins" [];
	"openai.resources.uploads.uploads" -> "typing" [];
	"openai.resources.uploads.uploads" -> "pathlib" [];
	"openai.resources.uploads.uploads" -> "anyio" [];
	"openai.resources.uploads.uploads" -> "openai" [];
	"openai.resources.uploads.parts" -> "__future__" [];
	"openai.resources.uploads.parts" -> "typing" [];
	"openai.resources.uploads.parts" -> "openai" [];
	"openai.types.uploads.upload_part" -> "typing_extensions" [];
	"openai.types.uploads.part_create_params" -> "__future__" [];
	"openai.types.uploads.part_create_params" -> "typing_extensions" [];
	"openai.types.uploads" -> "__future__" [];
	"openai.resources.evals.evals" -> "__future__" [];
	"openai.resources.evals.evals" -> "typing" [];
	"openai.resources.evals.evals" -> "typing_extensions" [];
	"openai.resources.evals.evals" -> "openai" [];
	"openai.resources.evals.runs.runs" -> "__future__" [];
	"openai.resources.evals.runs.runs" -> "typing" [];
	"openai.resources.evals.runs.runs" -> "typing_extensions" [];
	"openai.resources.evals.runs.runs" -> "openai" [];
	"openai.types.evals.run_retrieve_response" -> "typing" [];
	"openai.types.evals.run_retrieve_response" -> "typing_extensions" [];
	"openai.types.evals.run_retrieve_response" -> "pydantic" [];
	"openai.types.evals.create_eval_completions_run_data_source" -> "typing" [];
	"openai.types.evals.create_eval_completions_run_data_source" -> "typing_extensions" [];
	"openai.types.evals.create_eval_jsonl_run_data_source" -> "typing" [];
	"openai.types.evals.create_eval_jsonl_run_data_source" -> "typing_extensions" [];
	"openai.types.evals.run_delete_response" -> "typing" [];
	"openai.types.evals.run_create_response" -> "typing" [];
	"openai.types.evals.run_create_response" -> "typing_extensions" [];
	"openai.types.evals.run_create_response" -> "pydantic" [];
	"openai.types.evals.run_cancel_response" -> "typing" [];
	"openai.types.evals.run_cancel_response" -> "typing_extensions" [];
	"openai.types.evals.run_cancel_response" -> "pydantic" [];
	"openai.types.evals.run_list_response" -> "typing" [];
	"openai.types.evals.run_list_response" -> "typing_extensions" [];
	"openai.types.evals.run_list_response" -> "pydantic" [];
	"openai.types.evals.run_create_params" -> "__future__" [];
	"openai.types.evals.run_create_params" -> "typing" [];
	"openai.types.evals.run_create_params" -> "typing_extensions" [];
	"openai.types.evals.create_eval_completions_run_data_source_param" -> "__future__" [];
	"openai.types.evals.create_eval_completions_run_data_source_param" -> "typing" [];
	"openai.types.evals.create_eval_completions_run_data_source_param" -> "typing_extensions" [];
	"openai.types.evals.create_eval_jsonl_run_data_source_param" -> "__future__" [];
	"openai.types.evals.create_eval_jsonl_run_data_source_param" -> "typing" [];
	"openai.types.evals.create_eval_jsonl_run_data_source_param" -> "typing_extensions" [];
	"openai.types.evals.run_list_params" -> "__future__" [];
	"openai.types.evals.run_list_params" -> "typing_extensions" [];
	"openai.types.evals" -> "__future__" [];
	"openai.resources.evals.runs.output_items" -> "__future__" [];
	"openai.resources.evals.runs.output_items" -> "typing_extensions" [];
	"openai.resources.evals.runs.output_items" -> "openai" [];
	"openai.types.evals.runs.output_item_retrieve_response" -> "builtins" [];
	"openai.types.evals.runs.output_item_retrieve_response" -> "typing" [];
	"openai.types.evals.runs.output_item_retrieve_response" -> "typing_extensions" [];
	"openai.types.evals.runs.output_item_list_response" -> "builtins" [];
	"openai.types.evals.runs.output_item_list_response" -> "typing" [];
	"openai.types.evals.runs.output_item_list_response" -> "typing_extensions" [];
	"openai.types.evals.runs.output_item_list_params" -> "__future__" [];
	"openai.types.evals.runs.output_item_list_params" -> "typing_extensions" [];
	"openai.types.evals.runs" -> "__future__" [];
	"openai.resources.audio.audio" -> "__future__" [];
	"openai.resources.audio.transcriptions" -> "__future__" [];
	"openai.resources.audio.transcriptions" -> "logging" [];
	"openai.resources.audio.transcriptions" -> "typing" [];
	"openai.resources.audio.transcriptions" -> "typing_extensions" [];
	"openai.resources.audio.transcriptions" -> "openai" [];
	"openai.types.audio.transcription_create_response" -> "typing" [];
	"openai.types.audio.transcription_create_response" -> "typing_extensions" [];
	"openai.types.audio.transcription_stream_event" -> "typing" [];
	"openai.types.audio.transcription_stream_event" -> "typing_extensions" [];
	"openai.types.audio.transcription_text_delta_event" -> "typing" [];
	"openai.types.audio.transcription_text_delta_event" -> "typing_extensions" [];
	"openai.types.audio.transcription_text_done_event" -> "typing" [];
	"openai.types.audio.transcription_text_done_event" -> "typing_extensions" [];
	"openai.types.audio.transcription_verbose" -> "typing" [];
	"openai.types.audio.transcription_segment" -> "typing" [];
	"openai.types.audio.transcription_include" -> "typing_extensions" [];
	"openai.types.audio.transcription" -> "typing" [];
	"openai.types.audio.transcription_create_params" -> "__future__" [];
	"openai.types.audio.transcription_create_params" -> "typing" [];
	"openai.types.audio.transcription_create_params" -> "typing_extensions" [];
	"openai.types.audio" -> "__future__" [];
	"openai.types.audio.translation_create_response" -> "typing" [];
	"openai.types.audio.translation_create_response" -> "typing_extensions" [];
	"openai.types.audio.translation_create_params" -> "__future__" [];
	"openai.types.audio.translation_create_params" -> "typing" [];
	"openai.types.audio.translation_create_params" -> "typing_extensions" [];
	"openai.types.audio.speech_create_params" -> "__future__" [];
	"openai.types.audio.speech_create_params" -> "typing" [];
	"openai.types.audio.speech_create_params" -> "typing_extensions" [];
	"openai.types.audio.translation_verbose" -> "typing" [];
	"openai.types.audio.speech_model" -> "typing_extensions" [];
	"openai.resources.audio.translations" -> "__future__" [];
	"openai.resources.audio.translations" -> "logging" [];
	"openai.resources.audio.translations" -> "typing" [];
	"openai.resources.audio.translations" -> "typing_extensions" [];
	"openai.resources.audio.translations" -> "openai" [];
	"openai.resources.audio.speech" -> "__future__" [];
	"openai.resources.audio.speech" -> "typing" [];
	"openai.resources.audio.speech" -> "typing_extensions" [];
	"openai.resources.audio.speech" -> "openai" [];
	"openai.resources.chat.chat" -> "__future__" [];
	"openai.resources.chat.completions.completions" -> "__future__" [];
	"openai.resources.chat.completions.completions" -> "inspect" [];
	"openai.resources.chat.completions.completions" -> "typing" [];
	"openai.resources.chat.completions.completions" -> "typing_extensions" [];
	"openai.resources.chat.completions.completions" -> "pydantic" [];
	"openai.resources.chat.completions.completions" -> "openai" [];
	"openai.resources.chat.completions.messages" -> "__future__" [];
	"openai.resources.chat.completions.messages" -> "typing_extensions" [];
	"openai.resources.chat.completions.messages" -> "openai" [];
	"openai.types.chat.completions.message_list_params" -> "__future__" [];
	"openai.types.chat.completions.message_list_params" -> "typing_extensions" [];
	"openai.types.chat.completions" -> "__future__" [];
	"openai.resources.beta.beta" -> "__future__" [];
	"openai.resources.beta.realtime.realtime" -> "__future__" [];
	"openai.resources.beta.realtime.realtime" -> "json" [];
	"openai.resources.beta.realtime.realtime" -> "logging" [];
	"openai.resources.beta.realtime.realtime" -> "types" [];
	"openai.resources.beta.realtime.realtime" -> "typing" [];
	"openai.resources.beta.realtime.realtime" -> "typing_extensions" [];
	"openai.resources.beta.realtime.realtime" -> "pydantic" [];
	"websockets.exceptions" -> "__future__" [];
	"websockets.exceptions" -> "warnings" [];
	"websockets.http11" -> "__future__" [];
	"websockets.http11" -> "dataclasses" [];
	"websockets.http11" -> "os" [];
	"websockets.http11" -> "re" [];
	"websockets.http11" -> "sys" [];
	"websockets.http11" -> "warnings" [];
	"websockets.http11" -> "typing" [];
	"websockets.version" -> "__future__" [];
	"websockets.version" -> "pathlib" [];
	"websockets.version" -> "re" [];
	"websockets.version" -> "subprocess" [];
	"websockets.datastructures" -> "__future__" [];
	"websockets.datastructures" -> "typing" [];
	"websockets.frames" -> "__future__" [];
	"websockets.frames" -> "dataclasses" [];
	"websockets.frames" -> "enum" [];
	"websockets.frames" -> "io" [];
	"websockets.frames" -> "os" [];
	"websockets.frames" -> "secrets" [];
	"websockets.frames" -> "struct" [];
	"websockets.frames" -> "typing" [];
	"websockets.extensions.base" -> "__future__" [];
	"websockets.typing" -> "__future__" [];
	"websockets.typing" -> "http" [];
	"websockets.typing" -> "logging" [];
	"websockets.typing" -> "typing" [];
	"websockets.utils" -> "__future__" [];
	"websockets.utils" -> "base64" [];
	"websockets.utils" -> "hashlib" [];
	"websockets.utils" -> "secrets" [];
	"websockets.utils" -> "sys" [];
	"websockets" -> "__future__" [];
	"websockets" -> "typing" [];
	"websockets.uri" -> "__future__" [];
	"websockets.uri" -> "dataclasses" [];
	"websockets.sync.utils" -> "__future__" [];
	"websockets.sync.utils" -> "time" [];
	"websockets.sync.server" -> "__future__" [];
	"websockets.sync.server" -> "hmac" [];
	"websockets.sync.server" -> "http" [];
	"websockets.sync.server" -> "logging" [];
	"websockets.sync.server" -> "os" [];
	"websockets.sync.server" -> "re" [];
	"websockets.sync.server" -> "selectors" [];
	"websockets.sync.server" -> "socket" [];
	"websockets.sync.server" -> "ssl" [];
	"websockets.sync.server" -> "sys" [];
	"websockets.sync.server" -> "threading" [];
	"websockets.sync.server" -> "warnings" [];
	"websockets.sync.server" -> "types" [];
	"websockets.sync.server" -> "typing" [];
	"websockets.sync.router" -> "__future__" [];
	"websockets.sync.router" -> "http" [];
	"websockets.sync.router" -> "ssl" [];
	"websockets.sync.router" -> "typing" [];
	"websockets.sync.router" -> "'werkzeug.exceptions'" [];
	"websockets.sync.router" -> "'werkzeug.routing'" [];
	"websockets.sync.messages" -> "__future__" [];
	"websockets.sync.messages" -> "codecs" [];
	"websockets.sync.messages" -> "queue" [];
	"websockets.sync.messages" -> "threading" [];
	"websockets.sync.messages" -> "typing" [];
	"websockets.sync.connection" -> "__future__" [];
	"websockets.sync.connection" -> "contextlib" [];
	"websockets.sync.connection" -> "logging" [];
	"websockets.sync.connection" -> "random" [];
	"websockets.sync.connection" -> "socket" [];
	"websockets.sync.connection" -> "struct" [];
	"websockets.sync.connection" -> "threading" [];
	"websockets.sync.connection" -> "time" [];
	"websockets.sync.connection" -> "uuid" [];
	"websockets.sync.connection" -> "types" [];
	"websockets.sync.connection" -> "typing" [];
	"websockets.streams" -> "__future__" [];
	"websockets.legacy.server" -> "__future__" [];
	"websockets.legacy.server" -> "asyncio" [];
	"websockets.legacy.server" -> "functools" [];
	"websockets.legacy.server" -> "http" [];
	"websockets.legacy.server" -> "inspect" [];
	"websockets.legacy.server" -> "logging" [];
	"websockets.legacy.server" -> "socket" [];
	"websockets.legacy.server" -> "warnings" [];
	"websockets.legacy.server" -> "types" [];
	"websockets.legacy.server" -> "typing" [];
	"websockets.legacy.protocol" -> "__future__" [];
	"websockets.legacy.protocol" -> "asyncio" [];
	"websockets.legacy.protocol" -> "codecs" [];
	"websockets.legacy.protocol" -> "collections" [];
	"websockets.legacy.protocol" -> "logging" [];
	"websockets.legacy.protocol" -> "random" [];
	"websockets.legacy.protocol" -> "ssl" [];
	"websockets.legacy.protocol" -> "struct" [];
	"websockets.legacy.protocol" -> "sys" [];
	"websockets.legacy.protocol" -> "time" [];
	"websockets.legacy.protocol" -> "traceback" [];
	"websockets.legacy.protocol" -> "uuid" [];
	"websockets.legacy.protocol" -> "warnings" [];
	"websockets.legacy.protocol" -> "typing" [];
	"websockets.legacy.http" -> "__future__" [];
	"websockets.legacy.http" -> "asyncio" [];
	"websockets.legacy.http" -> "os" [];
	"websockets.legacy.http" -> "re" [];
	"websockets.legacy.handshake" -> "__future__" [];
	"websockets.legacy.handshake" -> "base64" [];
	"websockets.legacy.handshake" -> "binascii" [];
	"websockets.legacy.framing" -> "__future__" [];
	"websockets.legacy.framing" -> "struct" [];
	"websockets.legacy.framing" -> "typing" [];
	"websockets.legacy.framing" -> "websockets" [];
	"websockets.legacy.exceptions" -> "http" [];
	"websockets.legacy.exceptions" -> "websockets" [];
	"websockets.legacy.client" -> "__future__" [];
	"websockets.legacy.client" -> "asyncio" [];
	"websockets.legacy.client" -> "functools" [];
	"websockets.legacy.client" -> "logging" [];
	"websockets.legacy.client" -> "os" [];
	"websockets.legacy.client" -> "random" [];
	"websockets.legacy.client" -> "traceback" [];
	"websockets.legacy.client" -> "warnings" [];
	"websockets.legacy.client" -> "types" [];
	"websockets.legacy.client" -> "typing" [];
	"websockets.legacy.auth" -> "__future__" [];
	"websockets.legacy.auth" -> "functools" [];
	"websockets.legacy.auth" -> "hmac" [];
	"websockets.legacy.auth" -> "http" [];
	"websockets.legacy.auth" -> "typing" [];
	"websockets.legacy" -> "__future__" [];
	"websockets.legacy" -> "warnings" [];
	"websockets.http" -> "__future__" [];
	"websockets.http" -> "warnings" [];
	"websockets.headers" -> "__future__" [];
	"websockets.headers" -> "base64" [];
	"websockets.headers" -> "binascii" [];
	"websockets.headers" -> "ipaddress" [];
	"websockets.headers" -> "re" [];
	"websockets.headers" -> "typing" [];
	"websockets.extensions.permessage_deflate" -> "__future__" [];
	"websockets.extensions.permessage_deflate" -> "zlib" [];
	"websockets.extensions.permessage_deflate" -> "typing" [];
	"websockets.extensions.permessage_deflate" -> "websockets" [];
	"websockets.connection" -> "__future__" [];
	"websockets.connection" -> "warnings" [];
	"websockets.cli" -> "__future__" [];
	"websockets.cli" -> "argparse" [];
	"websockets.cli" -> "asyncio" [];
	"websockets.cli" -> "os" [];
	"websockets.cli" -> "sys" [];
	"websockets.cli" -> "typing" [];
	"websockets.cli" -> "readline" [];
	"websockets.auth" -> "__future__" [];
	"websockets.auth" -> "warnings" [];
	"websockets.asyncio.messages" -> "__future__" [];
	"websockets.asyncio.messages" -> "asyncio" [];
	"websockets.asyncio.messages" -> "codecs" [];
	"websockets.asyncio.messages" -> "collections" [];
	"websockets.asyncio.messages" -> "typing" [];
	"websockets.asyncio.connection" -> "__future__" [];
	"websockets.asyncio.connection" -> "asyncio" [];
	"websockets.asyncio.connection" -> "collections" [];
	"websockets.asyncio.connection" -> "contextlib" [];
	"websockets.asyncio.connection" -> "logging" [];
	"websockets.asyncio.connection" -> "random" [];
	"websockets.asyncio.connection" -> "struct" [];
	"websockets.asyncio.connection" -> "sys" [];
	"websockets.asyncio.connection" -> "traceback" [];
	"websockets.asyncio.connection" -> "uuid" [];
	"websockets.asyncio.connection" -> "types" [];
	"websockets.asyncio.connection" -> "typing" [];
	"websockets.asyncio.compatibility" -> "__future__" [];
	"websockets.asyncio.compatibility" -> "sys" [];
	"websockets.asyncio.compatibility" -> "asyncio" [];
	"websockets.asyncio.async_timeout" -> "asyncio" [];
	"websockets.asyncio.async_timeout" -> "enum" [];
	"websockets.asyncio.async_timeout" -> "sys" [];
	"websockets.asyncio.async_timeout" -> "warnings" [];
	"websockets.asyncio.async_timeout" -> "types" [];
	"websockets.asyncio.async_timeout" -> "typing" [];
	"websockets.server" -> "__future__" [];
	"websockets.server" -> "base64" [];
	"websockets.server" -> "binascii" [];
	"websockets.server" -> "http" [];
	"websockets.server" -> "re" [];
	"websockets.server" -> "warnings" [];
	"websockets.server" -> "typing" [];
	"websockets.protocol" -> "__future__" [];
	"websockets.protocol" -> "enum" [];
	"websockets.protocol" -> "logging" [];
	"websockets.protocol" -> "uuid" [];
	"websockets.protocol" -> "typing" [];
	"websockets.client" -> "__future__" [];
	"websockets.client" -> "os" [];
	"websockets.client" -> "random" [];
	"websockets.client" -> "warnings" [];
	"websockets.client" -> "typing" [];
	"websockets.asyncio.server" -> "__future__" [];
	"websockets.asyncio.server" -> "asyncio" [];
	"websockets.asyncio.server" -> "hmac" [];
	"websockets.asyncio.server" -> "http" [];
	"websockets.asyncio.server" -> "logging" [];
	"websockets.asyncio.server" -> "re" [];
	"websockets.asyncio.server" -> "socket" [];
	"websockets.asyncio.server" -> "sys" [];
	"websockets.asyncio.server" -> "types" [];
	"websockets.asyncio.server" -> "typing" [];
	"websockets.asyncio.router" -> "__future__" [];
	"websockets.asyncio.router" -> "http" [];
	"websockets.asyncio.router" -> "ssl" [];
	"websockets.asyncio.router" -> "typing" [];
	"websockets.asyncio.router" -> "werkzeug" [];
	"websockets.asyncio.router" -> "'werkzeug.routing'" [];
	"websockets.imports" -> "__future__" [];
	"websockets.imports" -> "warnings" [];
	"websockets.imports" -> "typing" [];
	"websockets.asyncio.client" -> "__future__" [];
	"websockets.asyncio.client" -> "asyncio" [];
	"websockets.asyncio.client" -> "logging" [];
	"websockets.asyncio.client" -> "os" [];
	"websockets.asyncio.client" -> "socket" [];
	"websockets.asyncio.client" -> "ssl" [];
	"websockets.asyncio.client" -> "traceback" [];
	"websockets.asyncio.client" -> "types" [];
	"websockets.asyncio.client" -> "typing" [];
	"websockets.asyncio.client" -> "python_socks" [];
	"websockets.asyncio.client" -> "'python_socks.async_'" [];
	"websockets.sync.client" -> "__future__" [];
	"websockets.sync.client" -> "socket" [];
	"websockets.sync.client" -> "ssl" [];
	"websockets.sync.client" -> "threading" [];
	"websockets.sync.client" -> "warnings" [];
	"websockets.sync.client" -> "typing" [];
	"websockets.sync.client" -> "python_socks" [];
	"websockets.sync.client" -> "'python_socks.sync'" [];
	"openai.types.beta.realtime.realtime_client_event_param" -> "__future__" [];
	"openai.types.beta.realtime.realtime_client_event_param" -> "typing" [];
	"openai.types.beta.realtime.realtime_client_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_truncate_event_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_truncate_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event_param" -> "__future__" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event_param" -> "__future__" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event_param" -> "__future__" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_delete_event_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_delete_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_create_event_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_create_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_cancel_event_param" -> "__future__" [];
	"openai.types.beta.realtime.response_cancel_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_param" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_content_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_content_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_server_event" -> "typing" [];
	"openai.types.beta.realtime.realtime_server_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_function_call_arguments_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_function_call_arguments_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_speech_stopped_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_speech_started_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_audio_transcript_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_audio_transcript_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.transcription_session_updated_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.transcription_session" -> "typing" [];
	"openai.types.beta.realtime.transcription_session" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_committed_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_content_part_added_event" -> "typing" [];
	"openai.types.beta.realtime.response_content_part_added_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_truncated_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_output_item_added_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_content_part_done_event" -> "typing" [];
	"openai.types.beta.realtime.response_content_part_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_cleared_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_output_item_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_deleted_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_created_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_audio_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_created_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_created_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_text_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_audio_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.rate_limits_updated_event" -> "typing" [];
	"openai.types.beta.realtime.rate_limits_updated_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_text_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_created_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_response" -> "typing" [];
	"openai.types.beta.realtime.realtime_response" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_response_status" -> "typing" [];
	"openai.types.beta.realtime.realtime_response_status" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_response_usage" -> "typing" [];
	"openai.types.beta.realtime.session_updated_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.session" -> "typing" [];
	"openai.types.beta.realtime.session" -> "typing_extensions" [];
	"openai.types.beta.realtime.session_created_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item" -> "typing" [];
	"openai.types.beta.realtime.conversation_item" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_content" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_content" -> "typing_extensions" [];
	"openai.types.beta.realtime.error_event" -> "typing" [];
	"openai.types.beta.realtime.error_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_client_event" -> "typing" [];
	"openai.types.beta.realtime.realtime_client_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_truncate_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_truncate_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event" -> "typing" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event" -> "typing" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event" -> "typing" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_delete_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_delete_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_create_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_create_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.transcription_session_update" -> "typing" [];
	"openai.types.beta.realtime.transcription_session_update" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_create_event" -> "typing" [];
	"openai.types.beta.realtime.response_create_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_with_reference" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_with_reference" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_cancel_event" -> "typing" [];
	"openai.types.beta.realtime.response_cancel_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.session_update_event" -> "typing" [];
	"openai.types.beta.realtime.session_update_event" -> "typing_extensions" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "__future__" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "typing" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "typing_extensions" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "openai" [];
	"openai.types.beta.realtime.transcription_session_create_params" -> "__future__" [];
	"openai.types.beta.realtime.transcription_session_create_params" -> "typing" [];
	"openai.types.beta.realtime.transcription_session_create_params" -> "typing_extensions" [];
	"openai.types.beta.realtime.transcription_session_update_param" -> "__future__" [];
	"openai.types.beta.realtime.transcription_session_update_param" -> "typing" [];
	"openai.types.beta.realtime.transcription_session_update_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_create_event_param" -> "__future__" [];
	"openai.types.beta.realtime.response_create_event_param" -> "typing" [];
	"openai.types.beta.realtime.response_create_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_with_reference_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_with_reference_param" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_with_reference_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.session_update_event_param" -> "__future__" [];
	"openai.types.beta.realtime.session_update_event_param" -> "typing" [];
	"openai.types.beta.realtime.session_update_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime" -> "__future__" [];
	"openai.types.beta.realtime.session_create_response" -> "typing" [];
	"openai.types.beta.realtime.session_create_response" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_connect_params" -> "__future__" [];
	"openai.types.beta.realtime.realtime_connect_params" -> "typing_extensions" [];
	"openai.types.beta.realtime.session_create_params" -> "__future__" [];
	"openai.types.beta.realtime.session_create_params" -> "typing" [];
	"openai.types.beta.realtime.session_create_params" -> "typing_extensions" [];
	"openai.resources.beta.realtime.sessions" -> "__future__" [];
	"openai.resources.beta.realtime.sessions" -> "typing" [];
	"openai.resources.beta.realtime.sessions" -> "typing_extensions" [];
	"openai.resources.beta.realtime.sessions" -> "openai" [];
	"openai.resources.beta.threads.threads" -> "__future__" [];
	"openai.resources.beta.threads.threads" -> "typing" [];
	"openai.resources.beta.threads.threads" -> "functools" [];
	"openai.resources.beta.threads.threads" -> "typing_extensions" [];
	"openai.resources.beta.threads.threads" -> "openai" [];
	"openai.resources.beta.threads.runs.steps" -> "__future__" [];
	"openai.resources.beta.threads.runs.steps" -> "typing" [];
	"openai.resources.beta.threads.runs.steps" -> "typing_extensions" [];
	"openai.resources.beta.threads.runs.steps" -> "openai" [];
	"openai.resources.beta.threads.runs.runs" -> "__future__" [];
	"openai.resources.beta.threads.runs.runs" -> "typing_extensions" [];
	"openai.resources.beta.threads.runs.runs" -> "typing" [];
	"openai.resources.beta.threads.runs.runs" -> "functools" [];
	"openai.resources.beta.threads.runs.runs" -> "openai" [];
	"openai.resources.beta.threads.messages" -> "__future__" [];
	"openai.resources.beta.threads.messages" -> "typing" [];
	"openai.resources.beta.threads.messages" -> "typing_extensions" [];
	"openai.resources.beta.threads.messages" -> "openai" [];
	"openai.resources.beta.assistants" -> "__future__" [];
	"openai.resources.beta.assistants" -> "typing" [];
	"openai.resources.beta.assistants" -> "typing_extensions" [];
	"openai.resources.beta.assistants" -> "openai" [];
	"openai.resources.beta.chat.chat" -> "__future__" [];
	"openai.resources.beta.chat.completions" -> "__future__" [];
	"openai.resources.beta.chat.completions" -> "typing" [];
	"openai.resources.beta.chat.completions" -> "functools" [];
	"openai.resources.beta.chat.completions" -> "typing_extensions" [];
	"openai.resources.beta.chat.completions" -> "openai" [];
	"openai.lib.streaming.chat._completions" -> "__future__" [];
	"openai.lib.streaming.chat._completions" -> "inspect" [];
	"openai.lib.streaming.chat._completions" -> "types" [];
	"openai.lib.streaming.chat._completions" -> "typing" [];
	"openai.lib.streaming.chat._completions" -> "typing_extensions" [];
	"openai.lib.streaming.chat._completions" -> "jiter" [];
	"openai.lib.streaming._deltas" -> "__future__" [];
	"openai.lib.streaming.chat._events" -> "typing" [];
	"openai.lib.streaming.chat._events" -> "typing_extensions" [];
	"openai.lib.streaming.chat._types" -> "__future__" [];
	"openai.lib.streaming.chat._types" -> "typing_extensions" [];
	"openai.resources.moderations" -> "__future__" [];
	"openai.resources.moderations" -> "typing" [];
	"openai.resources.moderations" -> "openai" [];
	"openai.resources.completions" -> "__future__" [];
	"openai.resources.completions" -> "typing" [];
	"openai.resources.completions" -> "typing_extensions" [];
	"openai.resources.completions" -> "openai" [];
	"openai.resources.embeddings" -> "__future__" [];
	"openai.resources.embeddings" -> "array" [];
	"openai.resources.embeddings" -> "base64" [];
	"openai.resources.embeddings" -> "typing" [];
	"openai.resources.embeddings" -> "typing_extensions" [];
	"openai.resources.embeddings" -> "openai" [];
	"openai._extras.sounddevice_proxy" -> "__future__" [];
	"openai._extras.sounddevice_proxy" -> "typing" [];
	"openai._extras.sounddevice_proxy" -> "typing_extensions" [];
	"openai._extras.sounddevice_proxy" -> "sounddevice" [];
	"openai._extras.pandas_proxy" -> "__future__" [];
	"openai._extras.pandas_proxy" -> "typing" [];
	"openai._extras.pandas_proxy" -> "typing_extensions" [];
	"openai._extras.pandas_proxy" -> "pandas" [];
	"openai._extras.numpy_proxy" -> "__future__" [];
	"openai._extras.numpy_proxy" -> "typing" [];
	"openai._extras.numpy_proxy" -> "typing_extensions" [];
	"openai._extras.numpy_proxy" -> "numpy" [];
	"openai.resources.batches" -> "__future__" [];
	"openai.resources.batches" -> "typing" [];
	"openai.resources.batches" -> "typing_extensions" [];
	"openai.resources.batches" -> "openai" [];
	"openai.resources.models" -> "__future__" [];
	"openai.resources.models" -> "openai" [];
	"openai.resources.images" -> "__future__" [];
	"openai.resources.images" -> "typing" [];
	"openai.resources.images" -> "typing_extensions" [];
	"openai.resources.images" -> "openai" [];
	"openai.resources.files" -> "__future__" [];
	"openai.resources.files" -> "time" [];
	"openai.resources.files" -> "typing_extensions" [];
	"openai.resources.files" -> "typing" [];
	"openai.resources.files" -> "openai" [];
	"openai._utils._proxy" -> "__future__" [];
	"openai._utils._proxy" -> "abc" [];
	"openai._utils._proxy" -> "typing" [];
	"openai._utils._proxy" -> "typing_extensions" [];
	"openai._utils._sync" -> "__future__" [];
	"openai._utils._sync" -> "sys" [];
	"openai._utils._sync" -> "asyncio" [];
	"openai._utils._sync" -> "functools" [];
	"openai._utils._sync" -> "contextvars" [];
	"openai._utils._sync" -> "typing" [];
	"openai._utils._sync" -> "typing_extensions" [];
	"openai._utils._sync" -> "anyio" [];
	"openai._utils._sync" -> "sniffio" [];
	"openai._utils._logs" -> "os" [];
	"openai._utils._logs" -> "logging" [];
	"openai._utils._logs" -> "typing_extensions" [];
	"openai._types" -> "__future__" [];
	"openai._types" -> "os" [];
	"openai._types" -> "typing" [];
	"openai._types" -> "typing_extensions" [];
	"openai._types" -> "pydantic" [];
	"openai.types.static_file_chunking_strategy_object" -> "typing_extensions" [];
	"openai.types.static_file_chunking_strategy_param" -> "__future__" [];
	"openai.types.static_file_chunking_strategy_param" -> "typing_extensions" [];
	"openai.types.other_file_chunking_strategy_object" -> "typing_extensions" [];
	"openai.types.moderation_multi_modal_input_param" -> "__future__" [];
	"openai.types.moderation_multi_modal_input_param" -> "typing" [];
	"openai.types.moderation_multi_modal_input_param" -> "typing_extensions" [];
	"openai.types.eval_text_similarity_grader_param" -> "__future__" [];
	"openai.types.eval_text_similarity_grader_param" -> "typing_extensions" [];
	"openai.types.auto_file_chunking_strategy_param" -> "__future__" [];
	"openai.types.auto_file_chunking_strategy_param" -> "typing_extensions" [];
	"openai.types.moderation_image_url_input_param" -> "__future__" [];
	"openai.types.moderation_image_url_input_param" -> "typing_extensions" [];
	"openai.types.eval_string_check_grader_param" -> "__future__" [];
	"openai.types.eval_string_check_grader_param" -> "typing_extensions" [];
	"openai.types.eval_custom_data_source_config" -> "typing" [];
	"openai.types.eval_custom_data_source_config" -> "typing_extensions" [];
	"openai.types.eval_custom_data_source_config" -> "pydantic" [];
	"openai.types.websocket_connection_options" -> "__future__" [];
	"openai.types.websocket_connection_options" -> "typing" [];
	"openai.types.websocket_connection_options" -> "typing_extensions" [];
	"openai.types.websocket_connection_options" -> "websockets" [];
	"openai.types.vector_store_search_response" -> "typing" [];
	"openai.types.vector_store_search_response" -> "typing_extensions" [];
	"openai.types.file_chunking_strategy_param" -> "__future__" [];
	"openai.types.file_chunking_strategy_param" -> "typing" [];
	"openai.types.file_chunking_strategy_param" -> "typing_extensions" [];
	"openai.types.moderation_text_input_param" -> "__future__" [];
	"openai.types.moderation_text_input_param" -> "typing_extensions" [];
	"openai.types.eval_text_similarity_grader" -> "typing" [];
	"openai.types.eval_text_similarity_grader" -> "typing_extensions" [];
	"openai.types.moderation_create_response" -> "typing" [];
	"openai.types.create_embedding_response" -> "typing" [];
	"openai.types.create_embedding_response" -> "typing_extensions" [];
	"openai.types.eval_string_check_grader" -> "typing_extensions" [];
	"openai.types.eval_label_model_grader" -> "typing" [];
	"openai.types.eval_label_model_grader" -> "typing_extensions" [];
	"openai.types.file_chunking_strategy" -> "typing" [];
	"openai.types.file_chunking_strategy" -> "typing_extensions" [];
	"openai.types.eval_retrieve_response" -> "typing" [];
	"openai.types.eval_retrieve_response" -> "typing_extensions" [];
	"openai.types.audio_response_format" -> "typing_extensions" [];
	"openai.types.vector_store_deleted" -> "typing_extensions" [];
	"openai.types.eval_update_response" -> "typing" [];
	"openai.types.eval_update_response" -> "typing_extensions" [];
	"openai.types.eval_create_response" -> "typing" [];
	"openai.types.eval_create_response" -> "typing_extensions" [];
	"openai.types.eval_list_response" -> "typing" [];
	"openai.types.eval_list_response" -> "typing_extensions" [];
	"openai.types.completion_choice" -> "typing" [];
	"openai.types.completion_choice" -> "typing_extensions" [];
	"openai.types.moderation_model" -> "typing_extensions" [];
	"openai.types.completion_usage" -> "typing" [];
	"openai.types.images_response" -> "typing" [];
	"openai.types.embedding_model" -> "typing_extensions" [];
	"openai.types.vector_store" -> "typing" [];
	"openai.types.vector_store" -> "typing_extensions" [];
	"openai.types.file_purpose" -> "typing_extensions" [];
	"openai.types.file_deleted" -> "typing_extensions" [];
	"openai.types.file_content" -> "typing_extensions" [];
	"openai.types.image_model" -> "typing_extensions" [];
	"openai.types.file_object" -> "typing" [];
	"openai.types.file_object" -> "typing_extensions" [];
	"openai.types.batch_error" -> "typing" [];
	"openai.types.audio_model" -> "typing_extensions" [];
	"openai.types.moderation" -> "typing" [];
	"openai.types.moderation" -> "typing_extensions" [];
	"openai.types.moderation" -> "pydantic" [];
	"openai.types.completion" -> "typing" [];
	"openai.types.completion" -> "typing_extensions" [];
	"openai.types.embedding" -> "typing" [];
	"openai.types.embedding" -> "typing_extensions" [];
	"openai.types.upload" -> "typing" [];
	"openai.types.upload" -> "typing_extensions" [];
	"openai.types.shared.comparison_filter" -> "typing" [];
	"openai.types.shared.comparison_filter" -> "typing_extensions" [];
	"openai.types.shared.responses_model" -> "typing" [];
	"openai.types.shared.responses_model" -> "typing_extensions" [];
	"openai.types.shared.compound_filter" -> "typing" [];
	"openai.types.shared.compound_filter" -> "typing_extensions" [];
	"openai.types.shared.all_models" -> "typing" [];
	"openai.types.shared.all_models" -> "typing_extensions" [];
	"openai.types.shared.reasoning" -> "typing" [];
	"openai.types.shared.reasoning" -> "typing_extensions" [];
	"openai.types.model" -> "typing_extensions" [];
	"openai.types.image" -> "typing" [];
	"openai.types.batch" -> "typing" [];
	"openai.types.batch" -> "typing_extensions" [];
	"openai.types.vector_store_update_params" -> "__future__" [];
	"openai.types.vector_store_update_params" -> "typing" [];
	"openai.types.vector_store_update_params" -> "typing_extensions" [];
	"openai.types.vector_store_search_params" -> "__future__" [];
	"openai.types.vector_store_search_params" -> "typing" [];
	"openai.types.vector_store_search_params" -> "typing_extensions" [];
	"openai.types.vector_store_create_params" -> "__future__" [];
	"openai.types.vector_store_create_params" -> "typing" [];
	"openai.types.vector_store_create_params" -> "typing_extensions" [];
	"openai.types.vector_store_list_params" -> "__future__" [];
	"openai.types.vector_store_list_params" -> "typing_extensions" [];
	"openai.types.moderation_create_params" -> "__future__" [];
	"openai.types.moderation_create_params" -> "typing" [];
	"openai.types.moderation_create_params" -> "typing_extensions" [];
	"openai.types.completion_create_params" -> "__future__" [];
	"openai.types.completion_create_params" -> "typing" [];
	"openai.types.completion_create_params" -> "typing_extensions" [];
	"openai.types.embedding_create_params" -> "__future__" [];
	"openai.types.embedding_create_params" -> "typing" [];
	"openai.types.embedding_create_params" -> "typing_extensions" [];
	"openai.types.upload_complete_params" -> "__future__" [];
	"openai.types.upload_complete_params" -> "typing" [];
	"openai.types.upload_complete_params" -> "typing_extensions" [];
	"openai.types.upload_create_params" -> "__future__" [];
	"openai.types.upload_create_params" -> "typing_extensions" [];
	"openai.types.batch_create_params" -> "__future__" [];
	"openai.types.batch_create_params" -> "typing" [];
	"openai.types.batch_create_params" -> "typing_extensions" [];
	"openai.types.batch_list_params" -> "__future__" [];
	"openai.types.batch_list_params" -> "typing_extensions" [];
	"openai.types.image_create_variation_params" -> "__future__" [];
	"openai.types.image_create_variation_params" -> "typing" [];
	"openai.types.image_create_variation_params" -> "typing_extensions" [];
	"openai.types.image_generate_params" -> "__future__" [];
	"openai.types.image_generate_params" -> "typing" [];
	"openai.types.image_generate_params" -> "typing_extensions" [];
	"openai.types.image_edit_params" -> "__future__" [];
	"openai.types.image_edit_params" -> "typing" [];
	"openai.types.image_edit_params" -> "typing_extensions" [];
	"openai.types.file_create_params" -> "__future__" [];
	"openai.types.file_create_params" -> "typing_extensions" [];
	"openai.types.file_list_params" -> "__future__" [];
	"openai.types.file_list_params" -> "typing_extensions" [];
	"openai.types.eval_update_params" -> "__future__" [];
	"openai.types.eval_update_params" -> "typing" [];
	"openai.types.eval_update_params" -> "typing_extensions" [];
	"openai.types.eval_create_params" -> "__future__" [];
	"openai.types.eval_create_params" -> "typing" [];
	"openai.types.eval_create_params" -> "typing_extensions" [];
	"openai.types.eval_list_params" -> "__future__" [];
	"openai.types.eval_list_params" -> "typing_extensions" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot_param" -> "__future__" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot_param" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_interpreting_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_in_progress_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_code_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_completed_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_code_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_json_schema_config_param" -> "__future__" [];
	"openai.types.responses.response_format_text_json_schema_config_param" -> "typing" [];
	"openai.types.responses.response_format_text_json_schema_config_param" -> "typing_extensions" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot" -> "typing" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot" -> "typing_extensions" [];
	"openai.types.responses.response_function_call_arguments_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_reasoning_summary_text_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_reasoning_summary_part_added_event" -> "typing_extensions" [];
	"openai.types.responses.response_function_call_arguments_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_call_in_progress_event" -> "typing_extensions" [];
	"openai.types.responses.response_web_search_call_in_progress_event" -> "typing_extensions" [];
	"openai.types.responses.response_reasoning_summary_text_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_reasoning_summary_part_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_input_message_content_list_param" -> "__future__" [];
	"openai.types.responses.response_input_message_content_list_param" -> "typing" [];
	"openai.types.responses.response_input_message_content_list_param" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_call_searching_event" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_call_completed_event" -> "typing_extensions" [];
	"openai.types.responses.response_web_search_call_searching_event" -> "typing_extensions" [];
	"openai.types.responses.response_web_search_call_completed_event" -> "typing_extensions" [];
	"openai.types.responses.response_function_tool_call_output_item" -> "typing" [];
	"openai.types.responses.response_function_tool_call_output_item" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_json_schema_config" -> "typing" [];
	"openai.types.responses.response_format_text_json_schema_config" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_json_schema_config" -> "pydantic" [];
	"openai.types.responses.response_computer_tool_call_output_item" -> "typing" [];
	"openai.types.responses.response_computer_tool_call_output_item" -> "typing_extensions" [];
	"openai.types.responses.response_audio_transcript_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_text_annotation_delta_event" -> "typing" [];
	"openai.types.responses.response_text_annotation_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_tool_call_param" -> "__future__" [];
	"openai.types.responses.response_file_search_tool_call_param" -> "typing" [];
	"openai.types.responses.response_file_search_tool_call_param" -> "typing_extensions" [];
	"openai.types.responses.response_audio_transcript_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_input_message_content_list" -> "typing" [];
	"openai.types.responses.response_input_message_content_list" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_tool_call" -> "typing" [];
	"openai.types.responses.response_code_interpreter_tool_call" -> "typing_extensions" [];
	"openai.types.responses.response_function_web_search_param" -> "__future__" [];
	"openai.types.responses.response_function_web_search_param" -> "typing_extensions" [];
	"openai.types.responses.response_function_tool_call_param" -> "__future__" [];
	"openai.types.responses.response_function_tool_call_param" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_config_param" -> "__future__" [];
	"openai.types.responses.response_format_text_config_param" -> "typing" [];
	"openai.types.responses.response_format_text_config_param" -> "typing_extensions" [];
	"openai.types.responses.response_content_part_added_event" -> "typing" [];
	"openai.types.responses.response_content_part_added_event" -> "typing_extensions" [];
	"openai.types.responses.response_computer_tool_call_param" -> "__future__" [];
	"openai.types.responses.response_computer_tool_call_param" -> "typing" [];
	"openai.types.responses.response_computer_tool_call_param" -> "typing_extensions" [];
	"openai.types.responses.response_output_item_added_event" -> "typing_extensions" [];
	"openai.types.responses.response_content_part_done_event" -> "typing" [];
	"openai.types.responses.response_content_part_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_output_item_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_tool_call" -> "typing" [];
	"openai.types.responses.response_file_search_tool_call" -> "typing_extensions" [];
	"openai.types.responses.response_reasoning_item_param" -> "__future__" [];
	"openai.types.responses.response_reasoning_item_param" -> "typing" [];
	"openai.types.responses.response_reasoning_item_param" -> "typing_extensions" [];
	"openai.types.responses.response_output_refusal_param" -> "__future__" [];
	"openai.types.responses.response_output_refusal_param" -> "typing_extensions" [];
	"openai.types.responses.response_output_message_param" -> "__future__" [];
	"openai.types.responses.response_output_message_param" -> "typing" [];
	"openai.types.responses.response_output_message_param" -> "typing_extensions" [];
	"openai.types.responses.response_refusal_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_input_content_param" -> "__future__" [];
	"openai.types.responses.response_input_content_param" -> "typing" [];
	"openai.types.responses.response_input_content_param" -> "typing_extensions" [];
	"openai.types.responses.response_function_web_search" -> "typing_extensions" [];
	"openai.types.responses.response_refusal_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_input_message_item" -> "typing" [];
	"openai.types.responses.response_input_message_item" -> "typing_extensions" [];
	"openai.types.responses.response_function_tool_call" -> "typing" [];
	"openai.types.responses.response_function_tool_call" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_config" -> "typing" [];
	"openai.types.responses.response_format_text_config" -> "typing_extensions" [];
	"openai.types.responses.response_computer_tool_call" -> "typing" [];
	"openai.types.responses.response_computer_tool_call" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_function_param" -> "__future__" [];
	"openai.types.responses.tool_choice_function_param" -> "typing_extensions" [];
	"openai.types.responses.response_text_config_param" -> "__future__" [];
	"openai.types.responses.response_text_config_param" -> "typing_extensions" [];
	"openai.types.responses.response_output_text_param" -> "__future__" [];
	"openai.types.responses.response_output_text_param" -> "typing" [];
	"openai.types.responses.response_output_text_param" -> "typing_extensions" [];
	"openai.types.responses.response_input_image_param" -> "__future__" [];
	"openai.types.responses.response_input_image_param" -> "typing" [];
	"openai.types.responses.response_input_image_param" -> "typing_extensions" [];
	"openai.types.responses.response_in_progress_event" -> "typing_extensions" [];
	"openai.types.responses.response_audio_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_text_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_input_text_param" -> "__future__" [];
	"openai.types.responses.response_input_text_param" -> "typing_extensions" [];
	"openai.types.responses.response_input_item_param" -> "__future__" [];
	"openai.types.responses.response_input_item_param" -> "typing" [];
	"openai.types.responses.response_input_item_param" -> "typing_extensions" [];
	"openai.types.responses.response_input_file_param" -> "__future__" [];
	"openai.types.responses.response_input_file_param" -> "typing_extensions" [];
	"openai.types.responses.response_incomplete_event" -> "typing_extensions" [];
	"openai.types.responses.response_audio_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_text_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_retrieve_params" -> "__future__" [];
	"openai.types.responses.response_retrieve_params" -> "typing" [];
	"openai.types.responses.response_retrieve_params" -> "typing_extensions" [];
	"openai.types.responses.response_completed_event" -> "typing_extensions" [];
	"openai.types.responses.easy_input_message_param" -> "__future__" [];
	"openai.types.responses.easy_input_message_param" -> "typing" [];
	"openai.types.responses.easy_input_message_param" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_types_param" -> "__future__" [];
	"openai.types.responses.tool_choice_types_param" -> "typing_extensions" [];
	"openai.types.responses.response_reasoning_item" -> "typing" [];
	"openai.types.responses.response_reasoning_item" -> "typing_extensions" [];
	"openai.types.responses.response_output_refusal" -> "typing_extensions" [];
	"openai.types.responses.response_output_message" -> "typing" [];
	"openai.types.responses.response_output_message" -> "typing_extensions" [];
	"openai.types.responses.response_input_content" -> "typing" [];
	"openai.types.responses.response_input_content" -> "typing_extensions" [];
	"openai.types.responses.response_created_event" -> "typing_extensions" [];
	"openai.types.responses.response_create_params" -> "__future__" [];
	"openai.types.responses.response_create_params" -> "typing" [];
	"openai.types.responses.response_create_params" -> "typing_extensions" [];
	"openai.types.responses.input_item_list_params" -> "__future__" [];
	"openai.types.responses.input_item_list_params" -> "typing" [];
	"openai.types.responses.input_item_list_params" -> "typing_extensions" [];
	"openai.types.responses.file_search_tool_param" -> "__future__" [];
	"openai.types.responses.file_search_tool_param" -> "typing" [];
	"openai.types.responses.file_search_tool_param" -> "typing_extensions" [];
	"openai.types.responses.web_search_tool_param" -> "__future__" [];
	"openai.types.responses.web_search_tool_param" -> "typing" [];
	"openai.types.responses.web_search_tool_param" -> "typing_extensions" [];
	"openai.types.responses.response_stream_event" -> "typing" [];
	"openai.types.responses.response_stream_event" -> "typing_extensions" [];
	"openai.types.responses.response_failed_event" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_function" -> "typing_extensions" [];
	"openai.types.responses.response_text_config" -> "typing" [];
	"openai.types.responses.response_output_text" -> "typing" [];
	"openai.types.responses.response_output_text" -> "typing_extensions" [];
	"openai.types.responses.response_output_item" -> "typing" [];
	"openai.types.responses.response_output_item" -> "typing_extensions" [];
	"openai.types.responses.response_input_param" -> "__future__" [];
	"openai.types.responses.response_input_param" -> "typing" [];
	"openai.types.responses.response_input_param" -> "typing_extensions" [];
	"openai.types.responses.response_input_image" -> "typing" [];
	"openai.types.responses.response_input_image" -> "typing_extensions" [];
	"openai.types.responses.response_error_event" -> "typing" [];
	"openai.types.responses.response_error_event" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_options" -> "typing_extensions" [];
	"openai.types.responses.response_input_text" -> "typing_extensions" [];
	"openai.types.responses.response_input_file" -> "typing" [];
	"openai.types.responses.response_input_file" -> "typing_extensions" [];
	"openai.types.responses.response_includable" -> "typing_extensions" [];
	"openai.types.responses.function_tool_param" -> "__future__" [];
	"openai.types.responses.function_tool_param" -> "typing" [];
	"openai.types.responses.function_tool_param" -> "typing_extensions" [];
	"openai.types.responses.computer_tool_param" -> "__future__" [];
	"openai.types.responses.computer_tool_param" -> "typing_extensions" [];
	"openai.types.responses.response_item_list" -> "typing" [];
	"openai.types.responses.response_item_list" -> "typing_extensions" [];
	"openai.types.responses.easy_input_message" -> "typing" [];
	"openai.types.responses.easy_input_message" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_types" -> "typing_extensions" [];
	"openai.types.responses.file_search_tool" -> "typing" [];
	"openai.types.responses.file_search_tool" -> "typing_extensions" [];
	"openai.types.responses.web_search_tool" -> "typing" [];
	"openai.types.responses.web_search_tool" -> "typing_extensions" [];
	"openai.types.responses.response_status" -> "typing_extensions" [];
	"openai.types.responses.parsed_response" -> "typing" [];
	"openai.types.responses.parsed_response" -> "typing_extensions" [];
	"openai.types.responses.response_error" -> "typing_extensions" [];
	"openai.types.responses.response_item" -> "typing" [];
	"openai.types.responses.response_item" -> "typing_extensions" [];
	"openai.types.responses.function_tool" -> "typing" [];
	"openai.types.responses.function_tool" -> "typing_extensions" [];
	"openai.types.responses.computer_tool" -> "typing_extensions" [];
	"openai.types.responses.tool_param" -> "__future__" [];
	"openai.types.responses.tool_param" -> "typing" [];
	"openai.types.responses.tool_param" -> "typing_extensions" [];
	"openai.types.responses.response" -> "typing" [];
	"openai.types.responses.response" -> "typing_extensions" [];
	"openai.types.responses.tool" -> "typing" [];
	"openai.types.responses.tool" -> "typing_extensions" [];
	"langchain_openai.chat_models.azure" -> "__future__" [];
	"langchain_openai.chat_models.azure" -> "logging" [];
	"langchain_openai.chat_models.azure" -> "os" [];
	"langchain_openai.chat_models.azure" -> "typing" [];
	"langchain_openai.chat_models.azure" -> "openai" [];
	"langchain_openai.chat_models.azure" -> "pydantic" [];
	"langchain_openai.chat_models.azure" -> "typing_extensions" [];
	"anthropic.lib.streaming._beta_messages" -> "__future__" [];
	"anthropic.lib.streaming._beta_messages" -> "types" [];
	"anthropic.lib.streaming._beta_messages" -> "typing" [];
	"anthropic.lib.streaming._beta_messages" -> "typing_extensions" [];
	"anthropic.lib.streaming._beta_messages" -> "pydantic" [];
	"anthropic.lib.streaming._beta_messages" -> "jiter" [];
	"anthropic.types.beta" -> "__future__" [];
	"anthropic.types.beta.beta_citation_content_block_location_param" -> "__future__" [];
	"anthropic.types.beta.beta_citation_content_block_location_param" -> "typing" [];
	"anthropic.types.beta.beta_citation_content_block_location_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_content_block_source_content_param" -> "__future__" [];
	"anthropic.types.beta.beta_content_block_source_content_param" -> "typing" [];
	"anthropic.types.beta.beta_content_block_source_content_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_computer_use_20250124_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_computer_use_20250124_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_computer_use_20250124_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_computer_use_20241022_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_computer_use_20241022_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_computer_use_20241022_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_text_editor_20250124_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_text_editor_20250124_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_text_editor_20250124_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_text_editor_20241022_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_text_editor_20241022_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_text_editor_20241022_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_citation_content_block_location" -> "typing" [];
	"anthropic.types.beta.beta_citation_content_block_location" -> "typing_extensions" [];
	"anthropic.types.beta.beta_thinking_config_disabled_param" -> "__future__" [];
	"anthropic.types.beta.beta_thinking_config_disabled_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_thinking_config_enabled_param" -> "__future__" [];
	"anthropic.types.beta.beta_thinking_config_enabled_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_redacted_thinking_block_param" -> "__future__" [];
	"anthropic.types.beta.beta_redacted_thinking_block_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_raw_content_block_start_event" -> "typing" [];
	"anthropic.types.beta.beta_raw_content_block_start_event" -> "typing_extensions" [];
	"anthropic.types.beta.beta_raw_content_block_delta_event" -> "typing_extensions" [];
	"anthropic.types.beta.beta_cache_control_ephemeral_param" -> "__future__" [];
	"anthropic.types.beta.beta_cache_control_ephemeral_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_raw_content_block_stop_event" -> "typing_extensions" [];
	"anthropic.types.beta.beta_citation_page_location_param" -> "__future__" [];
	"anthropic.types.beta.beta_citation_page_location_param" -> "typing" [];
	"anthropic.types.beta.beta_citation_page_location_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_citation_char_location_param" -> "__future__" [];
	"anthropic.types.beta.beta_citation_char_location_param" -> "typing" [];
	"anthropic.types.beta.beta_citation_char_location_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_content_block_source_param" -> "__future__" [];
	"anthropic.types.beta.beta_content_block_source_param" -> "typing" [];
	"anthropic.types.beta.beta_content_block_source_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_base64_image_source_param" -> "__future__" [];
	"anthropic.types.beta.beta_base64_image_source_param" -> "typing" [];
	"anthropic.types.beta.beta_base64_image_source_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_bash_20250124_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_bash_20250124_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_bash_20250124_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_bash_20241022_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_bash_20241022_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_bash_20241022_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_raw_message_stream_event" -> "typing" [];
	"anthropic.types.beta.beta_raw_message_stream_event" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_result_block_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_result_block_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_result_block_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_redacted_thinking_block" -> "typing_extensions" [];
	"anthropic.types.beta.beta_raw_message_start_event" -> "typing_extensions" [];
	"anthropic.types.beta.beta_raw_message_delta_event" -> "typing" [];
	"anthropic.types.beta.beta_raw_message_delta_event" -> "typing_extensions" [];
	"anthropic.types.beta.beta_raw_content_block_delta" -> "typing" [];
	"anthropic.types.beta.beta_raw_content_block_delta" -> "typing_extensions" [];
	"anthropic.types.beta.beta_plain_text_source_param" -> "__future__" [];
	"anthropic.types.beta.beta_plain_text_source_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_base64_pdf_source_param" -> "__future__" [];
	"anthropic.types.beta.beta_base64_pdf_source_param" -> "typing" [];
	"anthropic.types.beta.beta_base64_pdf_source_param" -> "typing_extensions" [];
	"anthropic.types.beta.message_count_tokens_params" -> "__future__" [];
	"anthropic.types.beta.message_count_tokens_params" -> "typing" [];
	"anthropic.types.beta.message_count_tokens_params" -> "typing_extensions" [];
	"anthropic.types.anthropic_beta_param" -> "__future__" [];
	"anthropic.types.anthropic_beta_param" -> "typing" [];
	"anthropic.types.anthropic_beta_param" -> "typing_extensions" [];
	"anthropic.types.model_param" -> "__future__" [];
	"anthropic.types.model_param" -> "typing" [];
	"anthropic.types.model_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_url_image_source_param" -> "__future__" [];
	"anthropic.types.beta.beta_url_image_source_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_choice_tool_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_choice_tool_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_choice_none_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_choice_none_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_choice_auto_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_choice_auto_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_raw_message_stop_event" -> "typing_extensions" [];
	"anthropic.types.beta.beta_citations_config_param" -> "__future__" [];
	"anthropic.types.beta.beta_citations_config_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_citation_page_location" -> "typing" [];
	"anthropic.types.beta.beta_citation_page_location" -> "typing_extensions" [];
	"anthropic.types.beta.beta_citation_char_location" -> "typing" [];
	"anthropic.types.beta.beta_citation_char_location" -> "typing_extensions" [];
	"anthropic.types.beta.beta_base64_pdf_block_param" -> "__future__" [];
	"anthropic.types.beta.beta_base64_pdf_block_param" -> "typing" [];
	"anthropic.types.beta.beta_base64_pdf_block_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_choice_any_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_choice_any_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_thinking_config_param" -> "__future__" [];
	"anthropic.types.beta.beta_thinking_config_param" -> "typing" [];
	"anthropic.types.beta.beta_thinking_config_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_url_pdf_source_param" -> "__future__" [];
	"anthropic.types.beta.beta_url_pdf_source_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_use_block_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_use_block_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_use_block_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_thinking_block_param" -> "__future__" [];
	"anthropic.types.beta.beta_thinking_block_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_text_citation_param" -> "__future__" [];
	"anthropic.types.beta.beta_text_citation_param" -> "typing" [];
	"anthropic.types.beta.beta_text_citation_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_content_block_param" -> "__future__" [];
	"anthropic.types.beta.beta_content_block_param" -> "typing" [];
	"anthropic.types.beta.beta_content_block_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_choice_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_choice_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_choice_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_image_block_param" -> "__future__" [];
	"anthropic.types.beta.beta_image_block_param" -> "typing" [];
	"anthropic.types.beta.beta_image_block_param" -> "typing_extensions" [];
	"anthropic.types.beta.message_create_params" -> "__future__" [];
	"anthropic.types.beta.message_create_params" -> "typing" [];
	"anthropic.types.beta.message_create_params" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_union_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_union_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_union_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_text_block_param" -> "__future__" [];
	"anthropic.types.beta.beta_text_block_param" -> "typing" [];
	"anthropic.types.beta.beta_text_block_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_input_json_delta" -> "typing_extensions" [];
	"anthropic.types.beta.beta_signature_delta" -> "typing_extensions" [];
	"anthropic.types.beta.beta_citations_delta" -> "typing" [];
	"anthropic.types.beta.beta_citations_delta" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_use_block" -> "typing_extensions" [];
	"anthropic.types.beta.beta_thinking_delta" -> "typing_extensions" [];
	"anthropic.types.beta.beta_thinking_block" -> "typing_extensions" [];
	"anthropic.types.beta.beta_metadata_param" -> "__future__" [];
	"anthropic.types.beta.beta_metadata_param" -> "typing" [];
	"anthropic.types.beta.beta_metadata_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_text_citation" -> "typing" [];
	"anthropic.types.beta.beta_text_citation" -> "typing_extensions" [];
	"anthropic.types.beta.beta_message_param" -> "__future__" [];
	"anthropic.types.beta.beta_message_param" -> "typing" [];
	"anthropic.types.beta.beta_message_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_content_block" -> "typing" [];
	"anthropic.types.beta.beta_content_block" -> "typing_extensions" [];
	"anthropic.types.beta.model_list_params" -> "__future__" [];
	"anthropic.types.beta.model_list_params" -> "typing_extensions" [];
	"anthropic.types.beta.beta_stop_reason" -> "typing_extensions" [];
	"anthropic.types.beta.beta_tool_param" -> "__future__" [];
	"anthropic.types.beta.beta_tool_param" -> "typing" [];
	"anthropic.types.beta.beta_tool_param" -> "typing_extensions" [];
	"anthropic.types.beta.beta_text_delta" -> "typing_extensions" [];
	"anthropic.types.beta.beta_text_block" -> "typing" [];
	"anthropic.types.beta.beta_text_block" -> "typing_extensions" [];
	"anthropic.types.beta.beta_model_info" -> "datetime" [];
	"anthropic.types.beta.beta_model_info" -> "typing_extensions" [];
	"anthropic.types.beta.beta_message" -> "typing" [];
	"anthropic.types.beta.beta_message" -> "typing_extensions" [];
	"anthropic.types.model" -> "typing" [];
	"anthropic.types.model" -> "typing_extensions" [];
	"anthropic.types.beta.beta_usage" -> "typing" [];
	"anthropic._streaming" -> "__future__" [];
	"anthropic._streaming" -> "abc" [];
	"anthropic._streaming" -> "json" [];
	"anthropic._streaming" -> "inspect" [];
	"anthropic._streaming" -> "warnings" [];
	"anthropic._streaming" -> "types" [];
	"anthropic._streaming" -> "typing" [];
	"anthropic._streaming" -> "typing_extensions" [];
	"anthropic.lib.streaming._beta_types" -> "typing" [];
	"anthropic.lib.streaming._beta_types" -> "typing_extensions" [];
	"anthropic._utils._transform" -> "__future__" [];
	"anthropic._utils._transform" -> "io" [];
	"anthropic._utils._transform" -> "base64" [];
	"anthropic._utils._transform" -> "pathlib" [];
	"anthropic._utils._transform" -> "typing" [];
	"anthropic._utils._transform" -> "datetime" [];
	"anthropic._utils._transform" -> "typing_extensions" [];
	"anthropic._utils._transform" -> "anyio" [];
	"anthropic._utils._transform" -> "pydantic" [];
	"anthropic._compat" -> "__future__" [];
	"anthropic._compat" -> "typing" [];
	"anthropic._compat" -> "datetime" [];
	"anthropic._compat" -> "typing_extensions" [];
	"anthropic._compat" -> "pydantic" [];
	"anthropic._compat" -> "pydantic_core" [];
	"anthropic._compat" -> "functools" [];
	"anthropic._utils._typing" -> "__future__" [];
	"anthropic._utils._typing" -> "sys" [];
	"anthropic._utils._typing" -> "typing" [];
	"anthropic._utils._typing" -> "typing_extensions" [];
	"anthropic._utils._typing" -> "collections" [];
	"anthropic._files" -> "__future__" [];
	"anthropic._files" -> "io" [];
	"anthropic._files" -> "os" [];
	"anthropic._files" -> "pathlib" [];
	"anthropic._files" -> "typing" [];
	"anthropic._files" -> "typing_extensions" [];
	"anthropic._files" -> "anyio" [];
	"anthropic._utils._utils" -> "__future__" [];
	"anthropic._utils._utils" -> "os" [];
	"anthropic._utils._utils" -> "re" [];
	"anthropic._utils._utils" -> "inspect" [];
	"anthropic._utils._utils" -> "functools" [];
	"anthropic._utils._utils" -> "typing" [];
	"anthropic._utils._utils" -> "pathlib" [];
	"anthropic._utils._utils" -> "datetime" [];
	"anthropic._utils._utils" -> "typing_extensions" [];
	"anthropic._utils._utils" -> "sniffio" [];
	"anthropic.lib.streaming._messages" -> "__future__" [];
	"anthropic.lib.streaming._messages" -> "types" [];
	"anthropic.lib.streaming._messages" -> "typing" [];
	"anthropic.lib.streaming._messages" -> "typing_extensions" [];
	"anthropic.lib.streaming._messages" -> "pydantic" [];
	"anthropic.lib.streaming._messages" -> "jiter" [];
	"anthropic.lib.streaming._types" -> "typing" [];
	"anthropic.lib.streaming._types" -> "typing_extensions" [];
	"anthropic.types.citations_delta" -> "typing" [];
	"anthropic.types.citations_delta" -> "typing_extensions" [];
	"anthropic.types.citation_content_block_location" -> "typing" [];
	"anthropic.types.citation_content_block_location" -> "typing_extensions" [];
	"anthropic.types.citation_page_location" -> "typing" [];
	"anthropic.types.citation_page_location" -> "typing_extensions" [];
	"anthropic.types.citation_char_location" -> "typing" [];
	"anthropic.types.citation_char_location" -> "typing_extensions" [];
	"anthropic.lib.bedrock._client" -> "__future__" [];
	"anthropic.lib.bedrock._client" -> "os" [];
	"anthropic.lib.bedrock._client" -> "typing" [];
	"anthropic.lib.bedrock._client" -> "typing_extensions" [];
	"anthropic.lib.bedrock._client" -> "anthropic" [];
	"anthropic.lib.bedrock._auth" -> "__future__" [];
	"anthropic.lib.bedrock._auth" -> "typing" [];
	"anthropic.lib.bedrock._auth" -> "boto3" [];
	"anthropic.lib.bedrock._auth" -> "'botocore.auth'" [];
	"anthropic.lib.bedrock._auth" -> "'botocore.awsrequest'" [];
	"anthropic.resources.completions" -> "__future__" [];
	"anthropic.resources.completions" -> "typing" [];
	"anthropic.resources.completions" -> "typing_extensions" [];
	"anthropic.resources.completions" -> "anthropic" [];
	"anthropic.resources.models" -> "__future__" [];
	"anthropic.resources.models" -> "anthropic" [];
	"anthropic.types.model_info" -> "datetime" [];
	"anthropic.types.model_info" -> "typing_extensions" [];
	"anthropic.pagination" -> "typing" [];
	"anthropic.pagination" -> "typing_extensions" [];
	"anthropic.types.model_list_params" -> "__future__" [];
	"anthropic.types.model_list_params" -> "typing_extensions" [];
	"anthropic.resources.beta.messages.messages" -> "__future__" [];
	"anthropic.resources.beta.messages.messages" -> "warnings" [];
	"anthropic.resources.beta.messages.messages" -> "typing" [];
	"anthropic.resources.beta.messages.messages" -> "functools" [];
	"anthropic.resources.beta.messages.messages" -> "itertools" [];
	"anthropic.resources.beta.messages.messages" -> "typing_extensions" [];
	"anthropic.resources.beta.messages.messages" -> "anthropic" [];
	"anthropic.resources.messages.messages" -> "__future__" [];
	"anthropic.resources.messages.messages" -> "warnings" [];
	"anthropic.resources.messages.messages" -> "typing" [];
	"anthropic.resources.messages.messages" -> "functools" [];
	"anthropic.resources.messages.messages" -> "typing_extensions" [];
	"anthropic.resources.messages.messages" -> "anthropic" [];
	"anthropic.types.message_count_tokens_tool_param" -> "__future__" [];
	"anthropic.types.message_count_tokens_tool_param" -> "typing" [];
	"anthropic.types.message_count_tokens_tool_param" -> "typing_extensions" [];
	"anthropic.types.tool_text_editor_20250124_param" -> "__future__" [];
	"anthropic.types.tool_text_editor_20250124_param" -> "typing" [];
	"anthropic.types.tool_text_editor_20250124_param" -> "typing_extensions" [];
	"anthropic.types.cache_control_ephemeral_param" -> "__future__" [];
	"anthropic.types.cache_control_ephemeral_param" -> "typing_extensions" [];
	"anthropic.types.tool_bash_20250124_param" -> "__future__" [];
	"anthropic.types.tool_bash_20250124_param" -> "typing" [];
	"anthropic.types.tool_bash_20250124_param" -> "typing_extensions" [];
	"anthropic.types.tool_param" -> "__future__" [];
	"anthropic.types.tool_param" -> "typing" [];
	"anthropic.types.tool_param" -> "typing_extensions" [];
	"anthropic.types.raw_message_stream_event" -> "typing" [];
	"anthropic.types.raw_message_stream_event" -> "typing_extensions" [];
	"anthropic.types.raw_content_block_start_event" -> "typing" [];
	"anthropic.types.raw_content_block_start_event" -> "typing_extensions" [];
	"anthropic.types.redacted_thinking_block" -> "typing_extensions" [];
	"anthropic.types.tool_use_block" -> "typing_extensions" [];
	"anthropic.types.thinking_block" -> "typing_extensions" [];
	"anthropic.types.text_block" -> "typing" [];
	"anthropic.types.text_block" -> "typing_extensions" [];
	"anthropic.types.text_citation" -> "typing" [];
	"anthropic.types.text_citation" -> "typing_extensions" [];
	"anthropic.types.raw_content_block_delta_event" -> "typing_extensions" [];
	"anthropic.types.raw_content_block_delta" -> "typing" [];
	"anthropic.types.raw_content_block_delta" -> "typing_extensions" [];
	"anthropic.types.input_json_delta" -> "typing_extensions" [];
	"anthropic.types.signature_delta" -> "typing_extensions" [];
	"anthropic.types.thinking_delta" -> "typing_extensions" [];
	"anthropic.types.text_delta" -> "typing_extensions" [];
	"anthropic.types.raw_content_block_stop_event" -> "typing_extensions" [];
	"anthropic.types.raw_message_start_event" -> "typing_extensions" [];
	"anthropic.types.raw_message_delta_event" -> "typing" [];
	"anthropic.types.raw_message_delta_event" -> "typing_extensions" [];
	"anthropic.types.stop_reason" -> "typing_extensions" [];
	"anthropic.types.raw_message_stop_event" -> "typing_extensions" [];
	"anthropic.types.thinking_config_param" -> "__future__" [];
	"anthropic.types.thinking_config_param" -> "typing" [];
	"anthropic.types.thinking_config_param" -> "typing_extensions" [];
	"anthropic.types.thinking_config_disabled_param" -> "__future__" [];
	"anthropic.types.thinking_config_disabled_param" -> "typing_extensions" [];
	"anthropic.types.thinking_config_enabled_param" -> "__future__" [];
	"anthropic.types.thinking_config_enabled_param" -> "typing_extensions" [];
	"anthropic.types.tool_choice_param" -> "__future__" [];
	"anthropic.types.tool_choice_param" -> "typing" [];
	"anthropic.types.tool_choice_param" -> "typing_extensions" [];
	"anthropic.types.tool_choice_tool_param" -> "__future__" [];
	"anthropic.types.tool_choice_tool_param" -> "typing_extensions" [];
	"anthropic.types.tool_choice_none_param" -> "__future__" [];
	"anthropic.types.tool_choice_none_param" -> "typing_extensions" [];
	"anthropic.types.tool_choice_auto_param" -> "__future__" [];
	"anthropic.types.tool_choice_auto_param" -> "typing_extensions" [];
	"anthropic.types.tool_choice_any_param" -> "__future__" [];
	"anthropic.types.tool_choice_any_param" -> "typing_extensions" [];
	"anthropic.types.tool_union_param" -> "__future__" [];
	"anthropic.types.tool_union_param" -> "typing" [];
	"anthropic.types.tool_union_param" -> "typing_extensions" [];
	"anthropic.types.text_block_param" -> "__future__" [];
	"anthropic.types.text_block_param" -> "typing" [];
	"anthropic.types.text_block_param" -> "typing_extensions" [];
	"anthropic.types.text_citation_param" -> "__future__" [];
	"anthropic.types.text_citation_param" -> "typing" [];
	"anthropic.types.text_citation_param" -> "typing_extensions" [];
	"anthropic.types.citation_content_block_location_param" -> "__future__" [];
	"anthropic.types.citation_content_block_location_param" -> "typing" [];
	"anthropic.types.citation_content_block_location_param" -> "typing_extensions" [];
	"anthropic.types.citation_page_location_param" -> "__future__" [];
	"anthropic.types.citation_page_location_param" -> "typing" [];
	"anthropic.types.citation_page_location_param" -> "typing_extensions" [];
	"anthropic.types.citation_char_location_param" -> "__future__" [];
	"anthropic.types.citation_char_location_param" -> "typing" [];
	"anthropic.types.citation_char_location_param" -> "typing_extensions" [];
	"anthropic.types.message_param" -> "__future__" [];
	"anthropic.types.message_param" -> "typing" [];
	"anthropic.types.message_param" -> "typing_extensions" [];
	"anthropic.types.redacted_thinking_block_param" -> "__future__" [];
	"anthropic.types.redacted_thinking_block_param" -> "typing_extensions" [];
	"anthropic.types.tool_result_block_param" -> "__future__" [];
	"anthropic.types.tool_result_block_param" -> "typing" [];
	"anthropic.types.tool_result_block_param" -> "typing_extensions" [];
	"anthropic.types.tool_use_block_param" -> "__future__" [];
	"anthropic.types.tool_use_block_param" -> "typing" [];
	"anthropic.types.tool_use_block_param" -> "typing_extensions" [];
	"anthropic.types.thinking_block_param" -> "__future__" [];
	"anthropic.types.thinking_block_param" -> "typing_extensions" [];
	"anthropic.types.document_block_param" -> "__future__" [];
	"anthropic.types.document_block_param" -> "typing" [];
	"anthropic.types.document_block_param" -> "typing_extensions" [];
	"anthropic.types.content_block_source_param" -> "__future__" [];
	"anthropic.types.content_block_source_param" -> "typing" [];
	"anthropic.types.content_block_source_param" -> "typing_extensions" [];
	"anthropic.types.content_block_source_content_param" -> "__future__" [];
	"anthropic.types.content_block_source_content_param" -> "typing" [];
	"anthropic.types.content_block_source_content_param" -> "typing_extensions" [];
	"anthropic.types.plain_text_source_param" -> "__future__" [];
	"anthropic.types.plain_text_source_param" -> "typing_extensions" [];
	"anthropic.types.base64_pdf_source_param" -> "__future__" [];
	"anthropic.types.base64_pdf_source_param" -> "typing" [];
	"anthropic.types.base64_pdf_source_param" -> "typing_extensions" [];
	"anthropic.types.citations_config_param" -> "__future__" [];
	"anthropic.types.citations_config_param" -> "typing_extensions" [];
	"anthropic.types.url_pdf_source_param" -> "__future__" [];
	"anthropic.types.url_pdf_source_param" -> "typing_extensions" [];
	"anthropic.types.image_block_param" -> "__future__" [];
	"anthropic.types.image_block_param" -> "typing" [];
	"anthropic.types.image_block_param" -> "typing_extensions" [];
	"anthropic.types.base64_image_source_param" -> "__future__" [];
	"anthropic.types.base64_image_source_param" -> "typing" [];
	"anthropic.types.base64_image_source_param" -> "typing_extensions" [];
	"anthropic.types.url_image_source_param" -> "__future__" [];
	"anthropic.types.url_image_source_param" -> "typing_extensions" [];
	"anthropic.types.content_block" -> "typing" [];
	"anthropic.types.content_block" -> "typing_extensions" [];
	"anthropic.types.message" -> "typing" [];
	"anthropic.types.message" -> "typing_extensions" [];
	"anthropic.types.usage" -> "typing" [];
	"anthropic.resources.messages.batches" -> "__future__" [];
	"anthropic.resources.messages.batches" -> "typing" [];
	"anthropic.resources.messages.batches" -> "anthropic" [];
	"anthropic.types.messages.message_batch_result" -> "typing" [];
	"anthropic.types.messages.message_batch_result" -> "typing_extensions" [];
	"anthropic.types.messages.message_batch_succeeded_result" -> "typing_extensions" [];
	"anthropic.types.messages.message_batch_canceled_result" -> "typing_extensions" [];
	"anthropic.types.messages.message_batch_expired_result" -> "typing_extensions" [];
	"anthropic.types.messages.message_batch_errored_result" -> "typing_extensions" [];
	"anthropic.types.shared.error_response" -> "typing_extensions" [];
	"anthropic.types.shared.invalid_request_error" -> "typing_extensions" [];
	"anthropic.types.shared.gateway_timeout_error" -> "typing_extensions" [];
	"anthropic.types.shared.authentication_error" -> "typing_extensions" [];
	"anthropic.types.shared.rate_limit_error" -> "typing_extensions" [];
	"anthropic.types.shared.permission_error" -> "typing_extensions" [];
	"anthropic.types.shared.overloaded_error" -> "typing_extensions" [];
	"anthropic.types.shared.api_error_object" -> "typing_extensions" [];
	"anthropic.types.shared.not_found_error" -> "typing_extensions" [];
	"anthropic.types.shared.billing_error" -> "typing_extensions" [];
	"anthropic.types.shared.error_object" -> "typing" [];
	"anthropic.types.shared.error_object" -> "typing_extensions" [];
	"anthropic.types.messages.deleted_message_batch" -> "typing_extensions" [];
	"anthropic.types.messages.message_batch" -> "typing" [];
	"anthropic.types.messages.message_batch" -> "datetime" [];
	"anthropic.types.messages.message_batch" -> "typing_extensions" [];
	"anthropic._decoders.jsonl" -> "__future__" [];
	"anthropic._decoders.jsonl" -> "json" [];
	"anthropic._decoders.jsonl" -> "typing_extensions" [];
	"anthropic.types.messages.batch_create_params" -> "__future__" [];
	"anthropic.types.messages.batch_create_params" -> "typing" [];
	"anthropic.types.messages.batch_create_params" -> "typing_extensions" [];
	"anthropic.types.messages.batch_list_params" -> "__future__" [];
	"anthropic.types.messages.batch_list_params" -> "typing_extensions" [];
	"anthropic.types.messages" -> "__future__" [];
	"anthropic.types.message_count_tokens_params" -> "__future__" [];
	"anthropic.types.message_count_tokens_params" -> "typing" [];
	"anthropic.types.message_count_tokens_params" -> "typing_extensions" [];
	"anthropic.types.message_create_params" -> "__future__" [];
	"anthropic.types.message_create_params" -> "typing" [];
	"anthropic.types.message_create_params" -> "typing_extensions" [];
	"anthropic.resources.beta.messages.batches" -> "__future__" [];
	"anthropic.resources.beta.messages.batches" -> "typing" [];
	"anthropic.resources.beta.messages.batches" -> "itertools" [];
	"anthropic.resources.beta.messages.batches" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_message_batch_result" -> "typing" [];
	"anthropic.types.beta.messages.beta_message_batch_result" -> "typing_extensions" [];
	"anthropic.types.beta.messages.beta_message_batch_succeeded_result" -> "typing_extensions" [];
	"anthropic.types.beta.messages.beta_message_batch_canceled_result" -> "typing_extensions" [];
	"anthropic.types.beta.messages.beta_message_batch_expired_result" -> "typing_extensions" [];
	"anthropic.types.beta.messages.beta_message_batch_errored_result" -> "typing_extensions" [];
	"anthropic.types.beta_error_response" -> "typing_extensions" [];
	"anthropic.types.beta_error" -> "typing" [];
	"anthropic.types.beta_error" -> "typing_extensions" [];
	"anthropic.types.beta_invalid_request_error" -> "typing_extensions" [];
	"anthropic.types.beta_gateway_timeout_error" -> "typing_extensions" [];
	"anthropic.types.beta_authentication_error" -> "typing_extensions" [];
	"anthropic.types.beta_rate_limit_error" -> "typing_extensions" [];
	"anthropic.types.beta_permission_error" -> "typing_extensions" [];
	"anthropic.types.beta_overloaded_error" -> "typing_extensions" [];
	"anthropic.types.beta_not_found_error" -> "typing_extensions" [];
	"anthropic.types.beta_billing_error" -> "typing_extensions" [];
	"anthropic.types.beta_api_error" -> "typing_extensions" [];
	"anthropic.types.beta.messages.beta_deleted_message_batch" -> "typing_extensions" [];
	"anthropic.types.beta.messages.beta_message_batch" -> "typing" [];
	"anthropic.types.beta.messages.beta_message_batch" -> "datetime" [];
	"anthropic.types.beta.messages.beta_message_batch" -> "typing_extensions" [];
	"anthropic.types.beta.messages.batch_create_params" -> "__future__" [];
	"anthropic.types.beta.messages.batch_create_params" -> "typing" [];
	"anthropic.types.beta.messages.batch_create_params" -> "typing_extensions" [];
	"anthropic.types.beta.messages.batch_list_params" -> "__future__" [];
	"anthropic.types.beta.messages.batch_list_params" -> "typing" [];
	"anthropic.types.beta.messages.batch_list_params" -> "typing_extensions" [];
	"anthropic.types.beta.messages" -> "__future__" [];
	"anthropic.resources.beta.models" -> "__future__" [];
	"anthropic.resources.beta.models" -> "anthropic" [];
	"anthropic.resources.beta.beta" -> "__future__" [];
	"anthropic.types.metadata_param" -> "__future__" [];
	"anthropic.types.metadata_param" -> "typing" [];
	"anthropic.types.metadata_param" -> "typing_extensions" [];
	"anthropic.types.completion" -> "typing" [];
	"anthropic.types.completion" -> "typing_extensions" [];
	"anthropic._resource" -> "__future__" [];
	"anthropic._resource" -> "time" [];
	"anthropic._resource" -> "anyio" [];
	"anthropic.types.completion_create_params" -> "__future__" [];
	"anthropic.types.completion_create_params" -> "typing" [];
	"anthropic.types.completion_create_params" -> "typing_extensions" [];
	"anthropic.lib.bedrock._stream_decoder" -> "__future__" [];
	"anthropic.lib.bedrock._stream_decoder" -> "typing" [];
	"anthropic.lib.bedrock._stream_decoder" -> "'botocore.model'" [];
	"anthropic.lib.bedrock._stream_decoder" -> "'botocore.eventstream'" [];
	"anthropic.lib.bedrock._stream_decoder" -> "'botocore.loaders'" [];
	"anthropic.lib.bedrock._stream_decoder" -> "'botocore.parsers'" [];
	"anthropic.lib.bedrock._beta" -> "__future__" [];
	"anthropic.lib.bedrock._beta_messages" -> "__future__" [];
	"anthropic.lib.bedrock._beta_messages" -> "anthropic" [];
	"anthropic.lib.vertex._client" -> "__future__" [];
	"anthropic.lib.vertex._client" -> "os" [];
	"anthropic.lib.vertex._client" -> "typing" [];
	"anthropic.lib.vertex._client" -> "typing_extensions" [];
	"anthropic.lib.vertex._client" -> "anthropic" [];
	"anthropic.lib.vertex._beta" -> "__future__" [];
	"anthropic.lib.vertex._beta_messages" -> "__future__" [];
	"anthropic.lib.vertex._beta_messages" -> "anthropic" [];
	"anthropic.lib.vertex._auth" -> "__future__" [];
	"anthropic.lib.vertex._auth" -> "typing" [];
	"anthropic.lib._extras._google_auth" -> "__future__" [];
	"anthropic.lib._extras._google_auth" -> "typing" [];
	"anthropic.lib._extras._google_auth" -> "typing_extensions" [];
	"anthropic._utils._logs" -> "os" [];
	"anthropic._utils._logs" -> "logging" [];
	"anthropic._base_client" -> "__future__" [];
	"anthropic._base_client" -> "sys" [];
	"anthropic._base_client" -> "json" [];
	"anthropic._base_client" -> "time" [];
	"anthropic._base_client" -> "uuid" [];
	"anthropic._base_client" -> "email" [];
	"anthropic._base_client" -> "socket" [];
	"anthropic._base_client" -> "asyncio" [];
	"anthropic._base_client" -> "inspect" [];
	"anthropic._base_client" -> "logging" [];
	"anthropic._base_client" -> "platform" [];
	"anthropic._base_client" -> "types" [];
	"anthropic._base_client" -> "random" [];
	"anthropic._base_client" -> "typing" [];
	"anthropic._base_client" -> "typing_extensions" [];
	"anthropic._base_client" -> "anyio" [];
	"anthropic._base_client" -> "distro" [];
	"anthropic._base_client" -> "pydantic" [];
	"anthropic._qs" -> "__future__" [];
	"anthropic._qs" -> "typing" [];
	"anthropic._qs" -> "typing_extensions" [];
	"anthropic._response" -> "__future__" [];
	"anthropic._response" -> "os" [];
	"anthropic._response" -> "inspect" [];
	"anthropic._response" -> "logging" [];
	"anthropic._response" -> "datetime" [];
	"anthropic._response" -> "functools" [];
	"anthropic._response" -> "types" [];
	"anthropic._response" -> "typing" [];
	"anthropic._response" -> "typing_extensions" [];
	"anthropic._response" -> "anyio" [];
	"anthropic._response" -> "pydantic" [];
	"anthropic._models" -> "__future__" [];
	"anthropic._models" -> "os" [];
	"anthropic._models" -> "inspect" [];
	"anthropic._models" -> "typing" [];
	"anthropic._models" -> "datetime" [];
	"anthropic._models" -> "typing_extensions" [];
	"anthropic._models" -> "pydantic" [];
	"anthropic._client" -> "__future__" [];
	"anthropic._client" -> "os" [];
	"anthropic._client" -> "typing" [];
	"anthropic._client" -> "typing_extensions" [];
	"anthropic._utils._reflection" -> "__future__" [];
	"anthropic._utils._reflection" -> "inspect" [];
	"anthropic._utils._reflection" -> "typing" [];
	"anthropic._utils._streams" -> "typing" [];
	"anthropic._utils._streams" -> "typing_extensions" [];
	"anthropic._utils._proxy" -> "__future__" [];
	"anthropic._utils._proxy" -> "abc" [];
	"anthropic._utils._proxy" -> "typing" [];
	"anthropic._utils._proxy" -> "typing_extensions" [];
	"anthropic._utils._sync" -> "__future__" [];
	"anthropic._utils._sync" -> "sys" [];
	"anthropic._utils._sync" -> "asyncio" [];
	"anthropic._utils._sync" -> "functools" [];
	"anthropic._utils._sync" -> "contextvars" [];
	"anthropic._utils._sync" -> "typing" [];
	"anthropic._utils._sync" -> "typing_extensions" [];
	"anthropic._utils._sync" -> "anyio" [];
	"anthropic._utils._sync" -> "sniffio" [];
	"anthropic._types" -> "__future__" [];
	"anthropic._types" -> "os" [];
	"anthropic._types" -> "typing" [];
	"anthropic._types" -> "typing_extensions" [];
	"anthropic._types" -> "pydantic" [];
	"anthropic.types" -> "__future__" [];
	"anthropic.types.content_block_param" -> "__future__" [];
	"anthropic.types.content_block_param" -> "typing" [];
	"anthropic.types.content_block_param" -> "typing_extensions" [];
	"anthropic._legacy_response" -> "__future__" [];
	"anthropic._legacy_response" -> "os" [];
	"anthropic._legacy_response" -> "inspect" [];
	"anthropic._legacy_response" -> "logging" [];
	"anthropic._legacy_response" -> "datetime" [];
	"anthropic._legacy_response" -> "functools" [];
	"anthropic._legacy_response" -> "typing" [];
	"anthropic._legacy_response" -> "typing_extensions" [];
	"anthropic._legacy_response" -> "anyio" [];
	"anthropic._legacy_response" -> "pydantic" [];
	"anthropic._exceptions" -> "__future__" [];
	"anthropic._exceptions" -> "typing_extensions" [];
	"openai" -> "__future__" [];
	"openai" -> "os" [];
	"openai" -> "typing_extensions" [];
	"openai" -> "typing" [];
	"openai._module_client" -> "typing_extensions" [];
	"openai.lib._old_api" -> "__future__" [];
	"openai.lib._old_api" -> "typing" [];
	"openai.lib._old_api" -> "typing_extensions" [];
	"langchain_core.output_parsers" -> "typing" [];
	"langchain_core.output_parsers.xml" -> "contextlib" [];
	"langchain_core.output_parsers.xml" -> "re" [];
	"langchain_core.output_parsers.xml" -> "xml" [];
	"langchain_core.output_parsers.xml" -> "typing" [];
	"langchain_core.output_parsers.xml" -> "defusedxml" [];
	"langchain_core.output_parsers.pydantic" -> "json" [];
	"langchain_core.output_parsers.pydantic" -> "typing" [];
	"langchain_core.output_parsers.pydantic" -> "pydantic" [];
	"langchain_core.output_parsers.pydantic" -> "typing_extensions" [];
	"langchain_core.prompts" -> "typing" [];
	"langchain_core.prompts.pipeline" -> "typing" [];
	"langchain_core.prompts.pipeline" -> "pydantic" [];
	"langchain_core.prompts.few_shot_with_templates" -> "pathlib" [];
	"langchain_core.prompts.few_shot_with_templates" -> "typing" [];
	"langchain_core.prompts.few_shot_with_templates" -> "pydantic" [];
	"langchain_core.prompts.few_shot_with_templates" -> "typing_extensions" [];
	"docx" -> "__future__" [];
	"docx" -> "typing" [];
	"docx.parts.styles" -> "__future__" [];
	"docx.parts.styles" -> "os" [];
	"docx.parts.styles" -> "typing" [];
	"docx.opc.package" -> "__future__" [];
	"docx.opc.package" -> "typing" [];
	"docx.opc.coreprops" -> "__future__" [];
	"docx.opc.coreprops" -> "typing" [];
	"docx.oxml.coreprops" -> "__future__" [];
	"docx.oxml.coreprops" -> "datetime" [];
	"docx.oxml.coreprops" -> "re" [];
	"docx.oxml.coreprops" -> "typing" [];
	"docx.oxml" -> "__future__" [];
	"docx.oxml.text.parfmt" -> "__future__" [];
	"docx.oxml.text.parfmt" -> "typing" [];
	"docx.oxml.simpletypes" -> "__future__" [];
	"docx.oxml.simpletypes" -> "typing" [];
	"docx.enum.text" -> "__future__" [];
	"docx.enum.text" -> "enum" [];
	"docx.enum.base" -> "__future__" [];
	"docx.enum.base" -> "enum" [];
	"docx.enum.base" -> "textwrap" [];
	"docx.enum.base" -> "typing" [];
	"docx.enum.base" -> "typing_extensions" [];
	"docx.oxml.text.paragraph" -> "__future__" [];
	"docx.oxml.text.paragraph" -> "typing" [];
	"docx.oxml.text.font" -> "__future__" [];
	"docx.oxml.text.font" -> "typing" [];
	"docx.oxml.table" -> "__future__" [];
	"docx.oxml.table" -> "typing" [];
	"docx.oxml.styles" -> "__future__" [];
	"docx.oxml.settings" -> "__future__" [];
	"docx.oxml.settings" -> "typing" [];
	"docx.oxml.section" -> "__future__" [];
	"docx.oxml.section" -> "copy" [];
	"docx.oxml.section" -> "typing" [];
	"docx.oxml.section" -> "lxml" [];
	"docx.oxml.section" -> "typing_extensions" [];
	"docx.oxml.document" -> "__future__" [];
	"docx.oxml.document" -> "typing" [];
	"docx.oxml.text.run" -> "__future__" [];
	"docx.oxml.text.run" -> "typing" [];
	"docx.oxml.text.pagebreak" -> "__future__" [];
	"docx.oxml.text.pagebreak" -> "copy" [];
	"docx.oxml.text.pagebreak" -> "typing" [];
	"docx.oxml.text.hyperlink" -> "__future__" [];
	"docx.oxml.text.hyperlink" -> "typing" [];
	"docx.oxml.shared" -> "__future__" [];
	"docx.oxml.shared" -> "typing" [];
	"docx.oxml.shape" -> "__future__" [];
	"docx.oxml.shape" -> "typing" [];
	"docx.oxml.xmlchemy" -> "__future__" [];
	"docx.oxml.xmlchemy" -> "re" [];
	"docx.oxml.xmlchemy" -> "typing" [];
	"docx.oxml.xmlchemy" -> "lxml" [];
	"docx.oxml.ns" -> "__future__" [];
	"docx.oxml.ns" -> "typing" [];
	"docx.shared" -> "__future__" [];
	"docx.shared" -> "functools" [];
	"docx.shared" -> "typing" [];
	"docx.parts.story" -> "__future__" [];
	"docx.parts.story" -> "typing" [];
	"docx.styles.style" -> "__future__" [];
	"docx.styles.style" -> "typing" [];
	"docx.text.font" -> "__future__" [];
	"docx.text.font" -> "typing" [];
	"docx.styles" -> "__future__" [];
	"docx.styles" -> "typing" [];
	"docx.image.image" -> "__future__" [];
	"docx.image.image" -> "hashlib" [];
	"docx.image.image" -> "io" [];
	"docx.image.image" -> "os" [];
	"docx.image.image" -> "typing" [];
	"docx.image.helpers" -> "struct" [];
	"docx.image.jpeg" -> "io" [];
	"docx.image.gif" -> "struct" [];
	"docx.types" -> "__future__" [];
	"docx.types" -> "typing" [];
	"docx.types" -> "typing_extensions" [];
	"docx.opc.rel" -> "__future__" [];
	"docx.opc.rel" -> "typing" [];
	"docx.opc.oxml" -> "__future__" [];
	"docx.opc.oxml" -> "typing" [];
	"docx.opc.oxml" -> "lxml" [];
	"docx.opc.pkgwriter" -> "__future__" [];
	"docx.opc.pkgwriter" -> "typing" [];
	"docx.opc.shared" -> "__future__" [];
	"docx.opc.shared" -> "typing" [];
	"docx.opc.phys_pkg" -> "os" [];
	"docx.opc.phys_pkg" -> "zipfile" [];
	"docx.styles.styles" -> "__future__" [];
	"docx.styles.styles" -> "warnings" [];
	"docx.oxml.parser" -> "__future__" [];
	"docx.oxml.parser" -> "typing" [];
	"docx.oxml.parser" -> "lxml" [];
	"docx.opc.packuri" -> "__future__" [];
	"docx.opc.packuri" -> "posixpath" [];
	"docx.opc.packuri" -> "re" [];
	"docx.parts.settings" -> "__future__" [];
	"docx.parts.settings" -> "os" [];
	"docx.parts.settings" -> "typing" [];
	"docx.package" -> "__future__" [];
	"docx.package" -> "typing" [];
	"docx.settings" -> "__future__" [];
	"docx.settings" -> "typing" [];
	"docx.parts.image" -> "__future__" [];
	"docx.parts.image" -> "hashlib" [];
	"docx.parts.image" -> "typing" [];
	"docx.parts.hdrftr" -> "__future__" [];
	"docx.parts.hdrftr" -> "os" [];
	"docx.parts.hdrftr" -> "typing" [];
	"docx.parts.document" -> "__future__" [];
	"docx.parts.document" -> "typing" [];
	"docx.shape" -> "__future__" [];
	"docx.shape" -> "typing" [];
	"docx.enum.shape" -> "enum" [];
	"docx.document" -> "__future__" [];
	"docx.document" -> "typing" [];
	"docx.text.paragraph" -> "__future__" [];
	"docx.text.paragraph" -> "typing" [];
	"docx.text.run" -> "__future__" [];
	"docx.text.run" -> "typing" [];
	"docx.drawing" -> "__future__" [];
	"docx.drawing" -> "typing" [];
	"docx.text.pagebreak" -> "__future__" [];
	"docx.text.pagebreak" -> "typing" [];
	"docx.text.hyperlink" -> "__future__" [];
	"docx.text.hyperlink" -> "typing" [];
	"docx.table" -> "__future__" [];
	"docx.table" -> "typing" [];
	"docx.table" -> "typing_extensions" [];
	"docx.section" -> "__future__" [];
	"docx.section" -> "typing" [];
	"docx.blkcntnr" -> "__future__" [];
	"docx.blkcntnr" -> "typing" [];
	"docx.blkcntnr" -> "typing_extensions" [];
	"docx.opc.parts.coreprops" -> "__future__" [];
	"docx.opc.parts.coreprops" -> "datetime" [];
	"docx.opc.parts.coreprops" -> "typing" [];
	"docx.opc.part" -> "__future__" [];
	"docx.opc.part" -> "typing" [];
	"docx.api" -> "__future__" [];
	"docx.api" -> "os" [];
	"docx.api" -> "typing" [];
	"langchain_community.document_loaders" -> "importlib" [];
	"langchain_community.document_loaders" -> "typing" [];
	"langchain_community.document_loaders.yuque" -> "re" [];
	"langchain_community.document_loaders.yuque" -> "typing" [];
	"langchain_community.document_loaders.yuque" -> "requests" [];
	"langchain_community.document_loaders.youtube" -> "__future__" [];
	"langchain_community.document_loaders.youtube" -> "logging" [];
	"langchain_community.document_loaders.youtube" -> "enum" [];
	"langchain_community.document_loaders.youtube" -> "pathlib" [];
	"langchain_community.document_loaders.youtube" -> "typing" [];
	"langchain_community.document_loaders.youtube" -> "pydantic" [];
	"langchain_community.document_loaders.youtube" -> "'google_auth_oauthlib.flow'" [];
	"langchain_community.document_loaders.youtube" -> "youtube_transcript_api" [];
	"langchain_community.document_loaders.youtube" -> "pytube" [];
	"langchain_community.document_loaders.xorbits" -> "typing" [];
	"langchain_community.document_loaders.xorbits" -> "xorbits" [];
	"langchain_community.document_loaders.xml" -> "pathlib" [];
	"langchain_community.document_loaders.xml" -> "typing" [];
	"langchain_community.document_loaders.xml" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.word_document" -> "os" [];
	"langchain_community.document_loaders.word_document" -> "tempfile" [];
	"langchain_community.document_loaders.word_document" -> "abc" [];
	"langchain_community.document_loaders.word_document" -> "pathlib" [];
	"langchain_community.document_loaders.word_document" -> "typing" [];
	"langchain_community.document_loaders.word_document" -> "requests" [];
	"langchain_community.document_loaders.word_document" -> "docx2txt" [];
	"langchain_community.document_loaders.word_document" -> "'unstructured.file_utils'" [];
	"langchain_community.document_loaders.word_document" -> "magic" [];
	"langchain_community.document_loaders.word_document" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.wikipedia" -> "typing" [];
	"langchain_community.document_loaders.whatsapp_chat" -> "re" [];
	"langchain_community.document_loaders.whatsapp_chat" -> "pathlib" [];
	"langchain_community.document_loaders.whatsapp_chat" -> "typing" [];
	"langchain_community.document_loaders.weather" -> "__future__" [];
	"langchain_community.document_loaders.weather" -> "datetime" [];
	"langchain_community.document_loaders.weather" -> "typing" [];
	"langchain_community.document_loaders.vsdx" -> "os" [];
	"langchain_community.document_loaders.vsdx" -> "tempfile" [];
	"langchain_community.document_loaders.vsdx" -> "abc" [];
	"langchain_community.document_loaders.vsdx" -> "pathlib" [];
	"langchain_community.document_loaders.vsdx" -> "typing" [];
	"langchain_community.document_loaders.vsdx" -> "requests" [];
	"langchain_community.document_loaders.parsers" -> "importlib" [];
	"langchain_community.document_loaders.parsers" -> "typing" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "json" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "re" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "zipfile" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "abc" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "pathlib" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "typing" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "xmltodict" [];
	"langchain_community.document_loaders.parsers.pdf" -> "__future__" [];
	"langchain_community.document_loaders.parsers.pdf" -> "html" [];
	"langchain_community.document_loaders.parsers.pdf" -> "io" [];
	"langchain_community.document_loaders.parsers.pdf" -> "logging" [];
	"langchain_community.document_loaders.parsers.pdf" -> "threading" [];
	"langchain_community.document_loaders.parsers.pdf" -> "warnings" [];
	"langchain_community.document_loaders.parsers.pdf" -> "datetime" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pathlib" [];
	"langchain_community.document_loaders.parsers.pdf" -> "tempfile" [];
	"langchain_community.document_loaders.parsers.pdf" -> "typing" [];
	"langchain_community.document_loaders.parsers.pdf" -> "numpy" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pdfplumber" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pymupdf" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pypdf" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pypdfium2" [];
	"langchain_community.document_loaders.parsers.pdf" -> "textractor" [];
	"langchain_community.document_loaders.parsers.pdf" -> "rapidocr_onnxruntime" [];
	"langchain_community.document_loaders.parsers.pdf" -> "PIL" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pdfminer" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pymupdf.table'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "textractcaller" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'textractor.entities'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "boto3" [];
	"pypdfium2_raw.bindings" -> "ctypes" [];
	"pypdfium2_raw.bindings" -> "sys" [];
	"pypdfium2_raw.bindings" -> "pathlib" [];
	"pdfminer.image" -> "os" [];
	"pdfminer.image" -> "os.path" [];
	"pdfminer.image" -> "struct" [];
	"pdfminer.image" -> "io" [];
	"pdfminer.image" -> "typing" [];
	"pdfminer.image" -> "PIL" [];
	"pdfminer.pdftypes" -> "io" [];
	"pdfminer.pdftypes" -> "logging" [];
	"pdfminer.pdftypes" -> "zlib" [];
	"pdfminer.pdftypes" -> "typing" [];
	"pdfminer.pdftypes" -> "warnings" [];
	"pdfminer.pdfdocument" -> "itertools" [];
	"pdfminer.pdfdocument" -> "logging" [];
	"pdfminer.pdfdocument" -> "re" [];
	"pdfminer.pdfdocument" -> "struct" [];
	"pdfminer.pdfdocument" -> "hashlib" [];
	"pdfminer.pdfdocument" -> "typing" [];
	"pdfminer._saslprep" -> "stringprep" [];
	"pdfminer._saslprep" -> "unicodedata" [];
	"pdfminer._saslprep" -> "typing" [];
	"stringprep" -> "unicodedata" [];
	"pdfminer.pdfparser" -> "logging" [];
	"pdfminer.pdfparser" -> "io" [];
	"pdfminer.pdfparser" -> "typing" [];
	"pdfminer.casting" -> "typing" [];
	"pdfminer.data_structures" -> "typing" [];
	"pdfminer.arcfour" -> "typing" [];
	"pdfminer.runlength" -> "typing" [];
	"pdfminer.lzw" -> "logging" [];
	"pdfminer.lzw" -> "io" [];
	"pdfminer.lzw" -> "typing" [];
	"pdfminer.ccitt" -> "array" [];
	"pdfminer.ccitt" -> "typing" [];
	"pdfminer.ccitt" -> "unittest" [];
	"pdfminer.ccitt" -> "pygame" [];
	"pdfminer.ascii85" -> "re" [];
	"pdfminer.ascii85" -> "base64" [];
	"pdfminer.ascii85" -> "binascii" [];
	"pdfminer.pdfcolor" -> "collections" [];
	"pdfminer.pdfcolor" -> "typing" [];
	"pdfminer.jbig2" -> "math" [];
	"pdfminer.jbig2" -> "os" [];
	"pdfminer.jbig2" -> "struct" [];
	"pdfminer.jbig2" -> "typing" [];
	"pdfminer.pdfinterp" -> "logging" [];
	"pdfminer.pdfinterp" -> "re" [];
	"pdfminer.pdfinterp" -> "io" [];
	"pdfminer.pdfinterp" -> "typing" [];
	"pdfminer.pdffont" -> "logging" [];
	"pdfminer.pdffont" -> "struct" [];
	"pdfminer.pdffont" -> "io" [];
	"pdfminer.pdffont" -> "typing" [];
	"pdfminer.fontmetrics" -> "typing" [];
	"pdfminer.encodingdb" -> "logging" [];
	"pdfminer.encodingdb" -> "re" [];
	"pdfminer.encodingdb" -> "typing" [];
	"pdfminer.latin_enc" -> "typing" [];
	"pdfminer.pdfdevice" -> "logging" [];
	"pdfminer.pdfdevice" -> "typing" [];
	"pdfminer.cmapdb" -> "gzip" [];
	"pdfminer.cmapdb" -> "logging" [];
	"pdfminer.cmapdb" -> "os" [];
	"pdfminer.cmapdb" -> "os.path" [];
	"pdfminer.cmapdb" -> "pickle" [];
	"pdfminer.cmapdb" -> "struct" [];
	"pdfminer.cmapdb" -> "sys" [];
	"pdfminer.cmapdb" -> "typing" [];
	"pdfminer.layout" -> "heapq" [];
	"pdfminer.layout" -> "logging" [];
	"pdfminer.layout" -> "typing" [];
	"pdfminer.converter" -> "io" [];
	"pdfminer.converter" -> "logging" [];
	"pdfminer.converter" -> "re" [];
	"pdfminer.converter" -> "typing" [];
	"pdfminer.pdfpage" -> "itertools" [];
	"pdfminer.pdfpage" -> "logging" [];
	"pdfminer.pdfpage" -> "typing" [];
	"pdfminer.psparser" -> "io" [];
	"pdfminer.psparser" -> "logging" [];
	"pdfminer.psparser" -> "re" [];
	"pdfminer.psparser" -> "typing" [];
	"pdfminer.utils" -> "io" [];
	"pdfminer.utils" -> "pathlib" [];
	"pdfminer.utils" -> "string" [];
	"pdfminer.utils" -> "html" [];
	"pdfminer.utils" -> "typing" [];
	"pdfminer.utils" -> "charset_normalizer" [];
	"pypdfium2.internal.utils" -> "ctypes" [];
	"pypdfium2.internal.bases" -> "os" [];
	"pypdfium2.internal.bases" -> "sys" [];
	"pypdfium2.internal.bases" -> "ctypes" [];
	"pypdfium2.internal.bases" -> "weakref" [];
	"pypdfium2.internal.bases" -> "logging" [];
	"pypdfium2.internal.bases" -> "uuid" [];
	"pypdfium2._helpers.textpage" -> "ctypes" [];
	"pypdfium2._helpers.textpage" -> "logging" [];
	"pypdfium2._helpers.textpage" -> "warnings" [];
	"pypdfium2._helpers.pageobjects" -> "ctypes" [];
	"pypdfium2._helpers.pageobjects" -> "pathlib" [];
	"pypdfium2._helpers.pageobjects" -> "collections" [];
	"pypdfium2._helpers.page" -> "math" [];
	"pypdfium2._helpers.page" -> "ctypes" [];
	"pypdfium2._helpers.page" -> "logging" [];
	"pypdfium2._helpers.attachment" -> "ctypes" [];
	"pypdfium2._helpers.document" -> "os" [];
	"pypdfium2._helpers.document" -> "ctypes" [];
	"pypdfium2._helpers.document" -> "logging" [];
	"pypdfium2._helpers.document" -> "inspect" [];
	"pypdfium2._helpers.document" -> "warnings" [];
	"pypdfium2._helpers.document" -> "pathlib" [];
	"pypdfium2._helpers.document" -> "collections" [];
	"pypdfium2._helpers.document" -> "multiprocessing" [];
	"pypdfium2._helpers.bitmap" -> "ctypes" [];
	"pypdfium2._helpers.bitmap" -> "logging" [];
	"pypdfium2._helpers.bitmap" -> "weakref" [];
	"pypdfium2._helpers.bitmap" -> "collections" [];
	"pypdfium2._helpers.bitmap" -> "numpy" [];
	"pypdfium2._helpers.matrix" -> "math" [];
	"pypdfium2._helpers.matrix" -> "ctypes" [];
	"pypdfium2._helpers.unsupported" -> "atexit" [];
	"pypdfium2._helpers.unsupported" -> "logging" [];
	"pypdfium2.version" -> "sys" [];
	"pypdfium2.version" -> "json" [];
	"pypdfium2.version" -> "functools" [];
	"pypdfium2.version" -> "pathlib" [];
	"pypdfium2.version" -> "types" [];
	"pypdfium2.version" -> "pypdfium2_raw" [];
	"pypdfium2._library_scope" -> "atexit" [];
	"pypdfium2._library_scope" -> "os" [];
	"pypdfium2._library_scope" -> "sys" [];
	"pdfplumber" -> "pdfminer" [];
	"pdfplumber.repair" -> "pathlib" [];
	"pdfplumber.repair" -> "shutil" [];
	"pdfplumber.repair" -> "subprocess" [];
	"pdfplumber.repair" -> "io" [];
	"pdfplumber.repair" -> "typing" [];
	"pdfplumber.pdf" -> "itertools" [];
	"pdfplumber.pdf" -> "logging" [];
	"pdfplumber.pdf" -> "pathlib" [];
	"pdfplumber.pdf" -> "io" [];
	"pdfplumber.pdf" -> "types" [];
	"pdfplumber.pdf" -> "typing" [];
	"pdfplumber.structure" -> "itertools" [];
	"pdfplumber.structure" -> "logging" [];
	"pdfplumber.structure" -> "re" [];
	"pdfplumber.structure" -> "collections" [];
	"pdfplumber.structure" -> "dataclasses" [];
	"pdfplumber.structure" -> "typing" [];
	"pdfplumber.utils.geometry" -> "itertools" [];
	"pdfplumber.utils.geometry" -> "operator" [];
	"pdfplumber.utils.geometry" -> "typing" [];
	"pdfplumber.utils.clustering" -> "itertools" [];
	"pdfplumber.utils.clustering" -> "operator" [];
	"pdfplumber.utils.clustering" -> "typing" [];
	"pdfplumber.page" -> "numbers" [];
	"pdfplumber.page" -> "re" [];
	"pdfplumber.page" -> "functools" [];
	"pdfplumber.page" -> "typing" [];
	"pdfplumber.page" -> "unicodedata" [];
	"pdfplumber.page" -> "warnings" [];
	"pdfplumber.display" -> "pathlib" [];
	"pdfplumber.display" -> "io" [];
	"pdfplumber.display" -> "typing" [];
	"pdfplumber.display" -> "pypdfium2" [];
	"pdfplumber.display" -> "pandas" [];
	"pdfplumber.utils.text" -> "inspect" [];
	"pdfplumber.utils.text" -> "itertools" [];
	"pdfplumber.utils.text" -> "logging" [];
	"pdfplumber.utils.text" -> "re" [];
	"pdfplumber.utils.text" -> "string" [];
	"pdfplumber.utils.text" -> "operator" [];
	"pdfplumber.utils.text" -> "typing" [];
	"pdfplumber.utils.generic" -> "typing" [];
	"pdfplumber.table" -> "itertools" [];
	"pdfplumber.table" -> "dataclasses" [];
	"pdfplumber.table" -> "operator" [];
	"pdfplumber.table" -> "typing" [];
	"pdfplumber.container" -> "csv" [];
	"pdfplumber.container" -> "json" [];
	"pdfplumber.container" -> "io" [];
	"pdfplumber.container" -> "itertools" [];
	"pdfplumber.container" -> "typing" [];
	"pdfplumber.convert" -> "base64" [];
	"pdfplumber.convert" -> "typing" [];
	"pdfplumber._typing" -> "typing" [];
	"pdfplumber.utils.pdfinternals" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.language_parser" -> "__future__" [];
	"langchain_community.document_loaders.parsers.language.language_parser" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.typescript" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.typescript" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.typescript" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" -> "abc" [];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.code_segmenter" -> "abc" [];
	"langchain_community.document_loaders.parsers.language.code_segmenter" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.sql" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.sql" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.sql" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.scala" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.scala" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.scala" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.rust" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.rust" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.rust" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.ruby" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.ruby" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.ruby" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.python" -> "ast" [];
	"langchain_community.document_loaders.parsers.language.python" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.php" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.php" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.php" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.perl" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.perl" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.perl" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.lua" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.lua" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.lua" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.kotlin" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.kotlin" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.kotlin" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.javascript" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.javascript" -> "esprima" [];
	"langchain_community.document_loaders.parsers.language.java" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.java" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.java" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.go" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.go" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.go" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.elixir" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.elixir" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.elixir" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.csharp" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.csharp" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.csharp" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.cpp" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.cpp" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.cpp" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.cobol" -> "re" [];
	"langchain_community.document_loaders.parsers.language.cobol" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.c" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.c" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.c" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.images" -> "base64" [];
	"langchain_community.document_loaders.parsers.images" -> "io" [];
	"langchain_community.document_loaders.parsers.images" -> "logging" [];
	"langchain_community.document_loaders.parsers.images" -> "abc" [];
	"langchain_community.document_loaders.parsers.images" -> "typing" [];
	"langchain_community.document_loaders.parsers.images" -> "numpy" [];
	"langchain_community.document_loaders.parsers.images" -> "PIL" [];
	"langchain_community.document_loaders.parsers.images" -> "rapidocr_onnxruntime" [];
	"langchain_community.document_loaders.parsers.images" -> "pytesseract" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "logging" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "typing" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "bs4" [];
	"langchain_community.document_loaders.parsers.grobid" -> "logging" [];
	"langchain_community.document_loaders.parsers.grobid" -> "typing" [];
	"langchain_community.document_loaders.parsers.grobid" -> "requests" [];
	"langchain_community.document_loaders.parsers.grobid" -> "bs4" [];
	"langchain_community.document_loaders.parsers.docai" -> "logging" [];
	"langchain_community.document_loaders.parsers.docai" -> "re" [];
	"langchain_community.document_loaders.parsers.docai" -> "time" [];
	"langchain_community.document_loaders.parsers.docai" -> "dataclasses" [];
	"langchain_community.document_loaders.parsers.docai" -> "typing" [];
	"langchain_community.document_loaders.parsers.docai" -> "'google.cloud.documentai'" [];
	"langchain_community.document_loaders.parsers.docai" -> "'google.cloud.documentai_v1'" [];
	"langchain_community.document_loaders.parsers.docai" -> "'google.cloud.documentai_toolbox'" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "__future__" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "logging" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "typing" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "'azure.core'" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "'azure.ai'" [];
	"langchain_community.document_loaders.parsers.audio" -> "io" [];
	"langchain_community.document_loaders.parsers.audio" -> "logging" [];
	"langchain_community.document_loaders.parsers.audio" -> "os" [];
	"langchain_community.document_loaders.parsers.audio" -> "time" [];
	"langchain_community.document_loaders.parsers.audio" -> "typing" [];
	"langchain_community.document_loaders.parsers.audio" -> "openai" [];
	"langchain_community.document_loaders.parsers.audio" -> "transformers" [];
	"langchain_community.document_loaders.parsers.audio" -> "torch" [];
	"langchain_community.document_loaders.parsers.audio" -> "librosa" [];
	"langchain_community.document_loaders.parsers.audio" -> "speechkit" [];
	"langchain_community.document_loaders.parsers.audio" -> "'speechkit.stt'" [];
	"langchain_community.document_loaders.parsers.audio" -> "faster_whisper" [];
	"langchain_community.document_loaders.parsers.audio" -> "pydub" [];
	"langchain_community.document_loaders.url_selenium" -> "logging" [];
	"langchain_community.document_loaders.url_selenium" -> "typing" [];
	"langchain_community.document_loaders.url_selenium" -> "selenium" [];
	"langchain_community.document_loaders.url_selenium" -> "unstructured" [];
	"langchain_community.document_loaders.url_selenium" -> "'selenium.webdriver'" [];
	"langchain_community.document_loaders.url_selenium" -> "'selenium.common'" [];
	"langchain_community.document_loaders.url_selenium" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.url_playwright" -> "logging" [];
	"langchain_community.document_loaders.url_playwright" -> "os" [];
	"langchain_community.document_loaders.url_playwright" -> "abc" [];
	"langchain_community.document_loaders.url_playwright" -> "typing" [];
	"langchain_community.document_loaders.url_playwright" -> "'playwright.async_api'" [];
	"langchain_community.document_loaders.url_playwright" -> "'playwright.sync_api'" [];
	"langchain_community.document_loaders.url_playwright" -> "unstructured" [];
	"langchain_community.document_loaders.url_playwright" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.url_playwright" -> "playwright" [];
	"langchain_community.document_loaders.url" -> "logging" [];
	"langchain_community.document_loaders.url" -> "typing" [];
	"langchain_community.document_loaders.url" -> "unstructured" [];
	"langchain_community.document_loaders.url" -> "'unstructured.__version__'" [];
	"langchain_community.document_loaders.url" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.url" -> "tqdm" [];
	"langchain_community.document_loaders.unstructured" -> "__future__" [];
	"langchain_community.document_loaders.unstructured" -> "logging" [];
	"langchain_community.document_loaders.unstructured" -> "os" [];
	"langchain_community.document_loaders.unstructured" -> "abc" [];
	"langchain_community.document_loaders.unstructured" -> "pathlib" [];
	"langchain_community.document_loaders.unstructured" -> "typing" [];
	"langchain_community.document_loaders.unstructured" -> "typing_extensions" [];
	"langchain_community.document_loaders.unstructured" -> "unstructured" [];
	"langchain_community.document_loaders.unstructured" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.twitter" -> "__future__" [];
	"langchain_community.document_loaders.twitter" -> "typing" [];
	"langchain_community.document_loaders.twitter" -> "tweepy" [];
	"langchain_community.document_loaders.tsv" -> "pathlib" [];
	"langchain_community.document_loaders.tsv" -> "typing" [];
	"langchain_community.document_loaders.tsv" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.trello" -> "__future__" [];
	"langchain_community.document_loaders.trello" -> "typing" [];
	"langchain_community.document_loaders.trello" -> "trello" [];
	"langchain_community.document_loaders.trello" -> "bs4" [];
	"langchain_community.document_loaders.toml" -> "json" [];
	"langchain_community.document_loaders.toml" -> "pathlib" [];
	"langchain_community.document_loaders.toml" -> "typing" [];
	"langchain_community.document_loaders.toml" -> "tomli" [];
	"langchain_community.document_loaders.tomarkdown" -> "__future__" [];
	"langchain_community.document_loaders.tomarkdown" -> "typing" [];
	"langchain_community.document_loaders.tomarkdown" -> "requests" [];
	"langchain_community.document_loaders.tidb" -> "typing" [];
	"langchain_community.document_loaders.tidb" -> "sqlalchemy" [];
	"langchain_community.document_loaders.text" -> "logging" [];
	"langchain_community.document_loaders.text" -> "pathlib" [];
	"langchain_community.document_loaders.text" -> "typing" [];
	"langchain_community.document_loaders.helpers" -> "pathlib" [];
	"langchain_community.document_loaders.helpers" -> "typing" [];
	"langchain_community.document_loaders.helpers" -> "chardet" [];
	"langchain_community.document_loaders.tensorflow_datasets" -> "typing" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "os" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "tempfile" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "typing" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "qcloud_cos" [];
	"langchain_community.document_loaders.tencent_cos_directory" -> "typing" [];
	"langchain_community.document_loaders.tencent_cos_directory" -> "qcloud_cos" [];
	"langchain_community.document_loaders.telegram" -> "__future__" [];
	"langchain_community.document_loaders.telegram" -> "asyncio" [];
	"langchain_community.document_loaders.telegram" -> "json" [];
	"langchain_community.document_loaders.telegram" -> "pathlib" [];
	"langchain_community.document_loaders.telegram" -> "typing" [];
	"langchain_community.document_loaders.telegram" -> "pandas" [];
	"langchain_community.document_loaders.telegram" -> "telethon" [];
	"langchain_community.document_loaders.telegram" -> "langchain_text_splitters" [];
	"langchain_community.document_loaders.telegram" -> "'telethon.sync'" [];
	"langchain_community.document_loaders.telegram" -> "nest_asyncio" [];
	"langchain_community.document_loaders.surrealdb" -> "asyncio" [];
	"langchain_community.document_loaders.surrealdb" -> "json" [];
	"langchain_community.document_loaders.surrealdb" -> "logging" [];
	"langchain_community.document_loaders.surrealdb" -> "typing" [];
	"langchain_community.document_loaders.surrealdb" -> "surrealdb" [];
	"langchain_community.document_loaders.stripe" -> "json" [];
	"langchain_community.document_loaders.stripe" -> "typing" [];
	"langchain_community.document_loaders.srt" -> "pathlib" [];
	"langchain_community.document_loaders.srt" -> "typing" [];
	"langchain_community.document_loaders.srt" -> "pysrt" [];
	"langchain_community.document_loaders.sql_database" -> "typing" [];
	"langchain_community.document_loaders.sql_database" -> "sqlalchemy" [];
	"langchain_community.document_loaders.spreedly" -> "json" [];
	"langchain_community.document_loaders.spreedly" -> "typing" [];
	"langchain_community.document_loaders.spider" -> "typing" [];
	"langchain_community.document_loaders.spider" -> "spider" [];
	"langchain_community.document_loaders.snowflake_loader" -> "__future__" [];
	"langchain_community.document_loaders.snowflake_loader" -> "typing" [];
	"langchain_community.document_loaders.snowflake_loader" -> "snowflake" [];
	"langchain_community.document_loaders.slack_directory" -> "json" [];
	"langchain_community.document_loaders.slack_directory" -> "zipfile" [];
	"langchain_community.document_loaders.slack_directory" -> "pathlib" [];
	"langchain_community.document_loaders.slack_directory" -> "typing" [];
	"langchain_community.document_loaders.sitemap" -> "itertools" [];
	"langchain_community.document_loaders.sitemap" -> "re" [];
	"langchain_community.document_loaders.sitemap" -> "typing" [];
	"langchain_community.document_loaders.sitemap" -> "lxml" [];
	"langchain_community.document_loaders.sitemap" -> "bs4" [];
	"langchain_community.document_loaders.sharepoint" -> "__future__" [];
	"langchain_community.document_loaders.sharepoint" -> "json" [];
	"langchain_community.document_loaders.sharepoint" -> "pathlib" [];
	"langchain_community.document_loaders.sharepoint" -> "typing" [];
	"langchain_community.document_loaders.sharepoint" -> "requests" [];
	"langchain_community.document_loaders.sharepoint" -> "pydantic" [];
	"langchain_community.document_loaders.sharepoint" -> "'O365.drive'" [];
	"langchain_community.document_loaders.base_o365" -> "__future__" [];
	"langchain_community.document_loaders.base_o365" -> "logging" [];
	"langchain_community.document_loaders.base_o365" -> "mimetypes" [];
	"langchain_community.document_loaders.base_o365" -> "os" [];
	"langchain_community.document_loaders.base_o365" -> "re" [];
	"langchain_community.document_loaders.base_o365" -> "tempfile" [];
	"langchain_community.document_loaders.base_o365" -> "urllib" [];
	"langchain_community.document_loaders.base_o365" -> "abc" [];
	"langchain_community.document_loaders.base_o365" -> "datetime" [];
	"langchain_community.document_loaders.base_o365" -> "pathlib" [];
	"langchain_community.document_loaders.base_o365" -> "typing" [];
	"langchain_community.document_loaders.base_o365" -> "pydantic" [];
	"langchain_community.document_loaders.base_o365" -> "pydantic_settings" [];
	"langchain_community.document_loaders.base_o365" -> "O365" [];
	"langchain_community.document_loaders.base_o365" -> "'O365.drive'" [];
	"langchain_community.document_loaders.parsers.txt" -> "typing" [];
	"langchain_community.document_loaders.parsers.msword" -> "typing" [];
	"langchain_community.document_loaders.parsers.msword" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.parsers.generic" -> "typing" [];
	"langchain_community.document_loaders.blob_loaders.file_system" -> "pathlib" [];
	"langchain_community.document_loaders.blob_loaders.file_system" -> "typing" [];
	"langchain_community.document_loaders.scrapingant" -> "logging" [];
	"langchain_community.document_loaders.scrapingant" -> "typing" [];
	"langchain_community.document_loaders.scrapingant" -> "scrapingant_client" [];
	"langchain_community.document_loaders.scrapfly" -> "logging" [];
	"langchain_community.document_loaders.scrapfly" -> "typing" [];
	"langchain_community.document_loaders.scrapfly" -> "scrapfly" [];
	"langchain_community.document_loaders.s3_file" -> "__future__" [];
	"langchain_community.document_loaders.s3_file" -> "os" [];
	"langchain_community.document_loaders.s3_file" -> "tempfile" [];
	"langchain_community.document_loaders.s3_file" -> "typing" [];
	"langchain_community.document_loaders.s3_file" -> "botocore" [];
	"langchain_community.document_loaders.s3_file" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.s3_file" -> "boto3" [];
	"langchain_community.document_loaders.s3_directory" -> "__future__" [];
	"langchain_community.document_loaders.s3_directory" -> "typing" [];
	"langchain_community.document_loaders.s3_directory" -> "botocore" [];
	"langchain_community.document_loaders.s3_directory" -> "boto3" [];
	"langchain_community.document_loaders.rtf" -> "pathlib" [];
	"langchain_community.document_loaders.rtf" -> "typing" [];
	"langchain_community.document_loaders.rtf" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.rst" -> "pathlib" [];
	"langchain_community.document_loaders.rst" -> "typing" [];
	"langchain_community.document_loaders.rst" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.rss" -> "logging" [];
	"langchain_community.document_loaders.rss" -> "typing" [];
	"langchain_community.document_loaders.rss" -> "tqdm" [];
	"langchain_community.document_loaders.rss" -> "listparser" [];
	"langchain_community.document_loaders.rss" -> "feedparser" [];
	"langchain_community.document_loaders.rocksetdb" -> "typing" [];
	"langchain_community.document_loaders.rocksetdb" -> "rockset" [];
	"langchain_community.document_loaders.rocksetdb" -> "'rockset.models'" [];
	"langchain_community.document_loaders.roam" -> "pathlib" [];
	"langchain_community.document_loaders.roam" -> "typing" [];
	"langchain_community.document_loaders.reddit" -> "__future__" [];
	"langchain_community.document_loaders.reddit" -> "typing" [];
	"langchain_community.document_loaders.reddit" -> "praw" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "__future__" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "asyncio" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "inspect" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "logging" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "re" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "typing" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "aiohttp" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "requests" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "bs4" [];
	"langchain_core.utils.html" -> "logging" [];
	"langchain_core.utils.html" -> "re" [];
	"langchain_core.utils.html" -> "typing" [];
	"langchain_community.document_loaders.readthedocs" -> "__future__" [];
	"langchain_community.document_loaders.readthedocs" -> "pathlib" [];
	"langchain_community.document_loaders.readthedocs" -> "typing" [];
	"langchain_community.document_loaders.readthedocs" -> "bs4" [];
	"langchain_community.document_loaders.readthedocs" -> "'bs4.element'" [];
	"langchain_community.document_loaders.python" -> "tokenize" [];
	"langchain_community.document_loaders.python" -> "pathlib" [];
	"langchain_community.document_loaders.python" -> "typing" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "itertools" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "logging" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "sys" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "typing" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "pyspark" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "'pyspark.sql'" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "psutil" [];
	"langchain_community.document_loaders.pubmed" -> "typing" [];
	"langchain_community.document_loaders.psychic" -> "typing" [];
	"langchain_community.document_loaders.psychic" -> "psychicapi" [];
	"langchain_community.document_loaders.powerpoint" -> "os" [];
	"langchain_community.document_loaders.powerpoint" -> "pathlib" [];
	"langchain_community.document_loaders.powerpoint" -> "typing" [];
	"langchain_community.document_loaders.powerpoint" -> "'unstructured.file_utils'" [];
	"langchain_community.document_loaders.powerpoint" -> "magic" [];
	"langchain_community.document_loaders.powerpoint" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.polars_dataframe" -> "typing" [];
	"langchain_community.document_loaders.polars_dataframe" -> "polars" [];
	"langchain_community.document_loaders.pebblo" -> "logging" [];
	"langchain_community.document_loaders.pebblo" -> "os" [];
	"langchain_community.document_loaders.pebblo" -> "uuid" [];
	"langchain_community.document_loaders.pebblo" -> "typing" [];
	"langchain_community.utilities.pebblo" -> "__future__" [];
	"langchain_community.utilities.pebblo" -> "json" [];
	"langchain_community.utilities.pebblo" -> "logging" [];
	"langchain_community.utilities.pebblo" -> "os" [];
	"langchain_community.utilities.pebblo" -> "pathlib" [];
	"langchain_community.utilities.pebblo" -> "platform" [];
	"langchain_community.utilities.pebblo" -> "enum" [];
	"langchain_community.utilities.pebblo" -> "http" [];
	"langchain_community.utilities.pebblo" -> "typing" [];
	"langchain_community.utilities.pebblo" -> "pydantic" [];
	"langchain_community.utilities.pebblo" -> "requests" [];
	"langchain_community.utilities.pebblo" -> "socket" [];
	"langchain_community.utilities.pebblo" -> "pwd" [];
	"langchain_community.document_loaders.pdf" -> "json" [];
	"langchain_community.document_loaders.pdf" -> "logging" [];
	"langchain_community.document_loaders.pdf" -> "os" [];
	"langchain_community.document_loaders.pdf" -> "re" [];
	"langchain_community.document_loaders.pdf" -> "tempfile" [];
	"langchain_community.document_loaders.pdf" -> "time" [];
	"langchain_community.document_loaders.pdf" -> "abc" [];
	"langchain_community.document_loaders.pdf" -> "io" [];
	"langchain_community.document_loaders.pdf" -> "pathlib" [];
	"langchain_community.document_loaders.pdf" -> "typing" [];
	"langchain_community.document_loaders.pdf" -> "requests" [];
	"langchain_community.document_loaders.pdf" -> "'textractor.data'" [];
	"langchain_community.document_loaders.pdf" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.pdf" -> "pdfplumber" [];
	"langchain_community.document_loaders.pdf" -> "textractcaller" [];
	"langchain_community.document_loaders.pdf" -> "boto3" [];
	"langchain_community.document_loaders.pdf" -> "pypdf" [];
	"langchain_community.document_loaders.pdf" -> "PIL" [];
	"langchain_community.document_loaders.pdf" -> "'dedoc.utils'" [];
	"langchain_community.document_loaders.pdf" -> "asyncio" [];
	"langchain_community.document_loaders.pdf" -> "pyzerox" [];
	"pdfminer.high_level" -> "logging" [];
	"pdfminer.high_level" -> "sys" [];
	"pdfminer.high_level" -> "io" [];
	"pdfminer.high_level" -> "typing" [];
	"langchain_community.document_loaders.org_mode" -> "pathlib" [];
	"langchain_community.document_loaders.org_mode" -> "typing" [];
	"langchain_community.document_loaders.org_mode" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.oracleai" -> "__future__" [];
	"langchain_community.document_loaders.oracleai" -> "hashlib" [];
	"langchain_community.document_loaders.oracleai" -> "json" [];
	"langchain_community.document_loaders.oracleai" -> "logging" [];
	"langchain_community.document_loaders.oracleai" -> "os" [];
	"langchain_community.document_loaders.oracleai" -> "random" [];
	"langchain_community.document_loaders.oracleai" -> "struct" [];
	"langchain_community.document_loaders.oracleai" -> "time" [];
	"langchain_community.document_loaders.oracleai" -> "traceback" [];
	"langchain_community.document_loaders.oracleai" -> "typing" [];
	"langchain_community.document_loaders.oracleai" -> "langchain_text_splitters" [];
	"langchain_community.document_loaders.oracleai" -> "oracledb" [];
	"html.parser" -> "re" [];
	"html.parser" -> "_markupbase" [];
	"_markupbase" -> "re" [];
	"langchain_community.document_loaders.oracleadb_loader" -> "typing" [];
	"langchain_community.document_loaders.oracleadb_loader" -> "oracledb" [];
	"langchain_community.document_loaders.open_city_data" -> "typing" [];
	"langchain_community.document_loaders.open_city_data" -> "sodapy" [];
	"langchain_community.document_loaders.onedrive_file" -> "__future__" [];
	"langchain_community.document_loaders.onedrive_file" -> "tempfile" [];
	"langchain_community.document_loaders.onedrive_file" -> "typing" [];
	"langchain_community.document_loaders.onedrive_file" -> "pydantic" [];
	"langchain_community.document_loaders.onedrive_file" -> "O365" [];
	"langchain_community.document_loaders.onedrive" -> "typing" [];
	"langchain_community.document_loaders.onedrive" -> "pydantic" [];
	"langchain_community.document_loaders.odt" -> "pathlib" [];
	"langchain_community.document_loaders.odt" -> "typing" [];
	"langchain_community.document_loaders.odt" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.obsidian" -> "functools" [];
	"langchain_community.document_loaders.obsidian" -> "logging" [];
	"langchain_community.document_loaders.obsidian" -> "re" [];
	"langchain_community.document_loaders.obsidian" -> "pathlib" [];
	"langchain_community.document_loaders.obsidian" -> "typing" [];
	"langchain_community.document_loaders.obsidian" -> "yaml" [];
	"langchain_community.document_loaders.obs_file" -> "os" [];
	"langchain_community.document_loaders.obs_file" -> "tempfile" [];
	"langchain_community.document_loaders.obs_file" -> "typing" [];
	"langchain_community.document_loaders.obs_file" -> "obs" [];
	"langchain_community.document_loaders.obs_directory" -> "typing" [];
	"langchain_community.document_loaders.obs_directory" -> "obs" [];
	"langchain_community.document_loaders.notiondb" -> "logging" [];
	"langchain_community.document_loaders.notiondb" -> "typing" [];
	"langchain_community.document_loaders.notiondb" -> "requests" [];
	"langchain_community.document_loaders.notion" -> "pathlib" [];
	"langchain_community.document_loaders.notion" -> "typing" [];
	"langchain_community.document_loaders.notebook" -> "json" [];
	"langchain_community.document_loaders.notebook" -> "pathlib" [];
	"langchain_community.document_loaders.notebook" -> "typing" [];
	"langchain_community.document_loaders.news" -> "logging" [];
	"langchain_community.document_loaders.news" -> "typing" [];
	"langchain_community.document_loaders.news" -> "newspaper" [];
	"langchain_community.document_loaders.news" -> "tqdm" [];
	"langchain_community.document_loaders.needle" -> "typing" [];
	"langchain_community.document_loaders.needle" -> "needle" [];
	"langchain_community.document_loaders.needle" -> "'needle.v1'" [];
	"langchain_community.document_loaders.mongodb" -> "asyncio" [];
	"langchain_community.document_loaders.mongodb" -> "logging" [];
	"langchain_community.document_loaders.mongodb" -> "typing" [];
	"langchain_community.document_loaders.mongodb" -> "motor" [];
	"langchain_community.document_loaders.modern_treasury" -> "json" [];
	"langchain_community.document_loaders.modern_treasury" -> "base64" [];
	"langchain_community.document_loaders.modern_treasury" -> "typing" [];
	"langchain_community.document_loaders.mhtml" -> "email" [];
	"langchain_community.document_loaders.mhtml" -> "logging" [];
	"langchain_community.document_loaders.mhtml" -> "pathlib" [];
	"langchain_community.document_loaders.mhtml" -> "typing" [];
	"langchain_community.document_loaders.mhtml" -> "bs4" [];
	"langchain_community.document_loaders.merge" -> "typing" [];
	"langchain_community.document_loaders.mediawikidump" -> "logging" [];
	"langchain_community.document_loaders.mediawikidump" -> "pathlib" [];
	"langchain_community.document_loaders.mediawikidump" -> "typing" [];
	"langchain_community.document_loaders.mediawikidump" -> "mwxml" [];
	"langchain_community.document_loaders.mediawikidump" -> "mwparserfromhell" [];
	"langchain_community.document_loaders.max_compute" -> "__future__" [];
	"langchain_community.document_loaders.max_compute" -> "typing" [];
	"langchain_community.document_loaders.mastodon" -> "__future__" [];
	"langchain_community.document_loaders.mastodon" -> "os" [];
	"langchain_community.document_loaders.mastodon" -> "typing" [];
	"langchain_community.document_loaders.mastodon" -> "mastodon" [];
	"langchain_community.document_loaders.markdown" -> "pathlib" [];
	"langchain_community.document_loaders.markdown" -> "typing" [];
	"langchain_community.document_loaders.markdown" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.llmsherpa" -> "pathlib" [];
	"langchain_community.document_loaders.llmsherpa" -> "typing" [];
	"langchain_community.document_loaders.llmsherpa" -> "llmsherpa" [];
	"langchain_community.document_loaders.llmsherpa" -> "'llmsherpa.readers'" [];
	"langchain_community.document_loaders.larksuite" -> "json" [];
	"langchain_community.document_loaders.larksuite" -> "typing" [];
	"langchain_community.document_loaders.lakefs" -> "os" [];
	"langchain_community.document_loaders.lakefs" -> "tempfile" [];
	"langchain_community.document_loaders.lakefs" -> "typing" [];
	"langchain_community.document_loaders.lakefs" -> "requests" [];
	"langchain_community.document_loaders.lakefs" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.kinetica_loader" -> "__future__" [];
	"langchain_community.document_loaders.kinetica_loader" -> "typing" [];
	"langchain_community.document_loaders.kinetica_loader" -> "gpudb" [];
	"langchain_community.document_loaders.json_loader" -> "json" [];
	"langchain_community.document_loaders.json_loader" -> "os" [];
	"langchain_community.document_loaders.json_loader" -> "pathlib" [];
	"langchain_community.document_loaders.json_loader" -> "typing" [];
	"langchain_community.document_loaders.json_loader" -> "jq" [];
	"langchain_community.document_loaders.joplin" -> "json" [];
	"langchain_community.document_loaders.joplin" -> "urllib" [];
	"langchain_community.document_loaders.joplin" -> "datetime" [];
	"langchain_community.document_loaders.joplin" -> "typing" [];
	"langchain_community.document_loaders.iugu" -> "json" [];
	"langchain_community.document_loaders.iugu" -> "typing" [];
	"langchain_community.document_loaders.imsdb" -> "typing" [];
	"langchain_community.document_loaders.image_captions" -> "io" [];
	"langchain_community.document_loaders.image_captions" -> "pathlib" [];
	"langchain_community.document_loaders.image_captions" -> "typing" [];
	"langchain_community.document_loaders.image_captions" -> "requests" [];
	"langchain_community.document_loaders.image_captions" -> "transformers" [];
	"langchain_community.document_loaders.image_captions" -> "PIL" [];
	"langchain_community.document_loaders.image" -> "pathlib" [];
	"langchain_community.document_loaders.image" -> "typing" [];
	"langchain_community.document_loaders.image" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.ifixit" -> "typing" [];
	"langchain_community.document_loaders.ifixit" -> "requests" [];
	"langchain_community.document_loaders.hugging_face_model" -> "typing" [];
	"langchain_community.document_loaders.hugging_face_model" -> "requests" [];
	"langchain_community.document_loaders.hugging_face_dataset" -> "json" [];
	"langchain_community.document_loaders.hugging_face_dataset" -> "typing" [];
	"langchain_community.document_loaders.hugging_face_dataset" -> "datasets" [];
	"langchain_community.document_loaders.html_bs" -> "logging" [];
	"langchain_community.document_loaders.html_bs" -> "pathlib" [];
	"langchain_community.document_loaders.html_bs" -> "typing" [];
	"langchain_community.document_loaders.html_bs" -> "bs4" [];
	"langchain_community.document_loaders.html" -> "pathlib" [];
	"langchain_community.document_loaders.html" -> "typing" [];
	"langchain_community.document_loaders.html" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.hn" -> "typing" [];
	"langchain_community.document_loaders.gutenberg" -> "typing" [];
	"langchain_community.document_loaders.googledrive" -> "pathlib" [];
	"langchain_community.document_loaders.googledrive" -> "typing" [];
	"langchain_community.document_loaders.googledrive" -> "pydantic" [];
	"langchain_community.document_loaders.googledrive" -> "google_auth_oauthlib" [];
	"langchain_community.document_loaders.googledrive" -> "io" [];
	"langchain_community.document_loaders.googledrive" -> "PyPDF2" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "__future__" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "typing" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "'google.cloud.speech_v2'" [];
	"langchain_community.document_loaders.glue_catalog" -> "__future__" [];
	"langchain_community.document_loaders.glue_catalog" -> "typing" [];
	"langchain_community.document_loaders.glue_catalog" -> "'boto3.session'" [];
	"langchain_community.document_loaders.glue_catalog" -> "boto3" [];
	"langchain_community.document_loaders.github" -> "base64" [];
	"langchain_community.document_loaders.github" -> "abc" [];
	"langchain_community.document_loaders.github" -> "datetime" [];
	"langchain_community.document_loaders.github" -> "typing" [];
	"langchain_community.document_loaders.github" -> "requests" [];
	"langchain_community.document_loaders.github" -> "pydantic" [];
	"langchain_community.document_loaders.gitbook" -> "typing" [];
	"langchain_community.document_loaders.git" -> "os" [];
	"langchain_community.document_loaders.git" -> "typing" [];
	"langchain_community.document_loaders.git" -> "git" [];
	"langchain_community.document_loaders.geodataframe" -> "typing" [];
	"langchain_community.document_loaders.geodataframe" -> "geopandas" [];
	"langchain_community.document_loaders.gcs_file" -> "os" [];
	"langchain_community.document_loaders.gcs_file" -> "tempfile" [];
	"langchain_community.document_loaders.gcs_file" -> "typing" [];
	"langchain_community.document_loaders.gcs_directory" -> "logging" [];
	"langchain_community.document_loaders.gcs_directory" -> "typing" [];
	"langchain_community.document_loaders.firecrawl" -> "warnings" [];
	"langchain_community.document_loaders.firecrawl" -> "typing" [];
	"langchain_community.document_loaders.firecrawl" -> "firecrawl" [];
	"langchain_community.document_loaders.figma" -> "json" [];
	"langchain_community.document_loaders.figma" -> "typing" [];
	"langchain_community.document_loaders.fauna" -> "typing" [];
	"langchain_community.document_loaders.fauna" -> "fauna" [];
	"langchain_community.document_loaders.fauna" -> "'fauna.client'" [];
	"langchain_community.document_loaders.fauna" -> "'fauna.encoding'" [];
	"langchain_community.document_loaders.facebook_chat" -> "datetime" [];
	"langchain_community.document_loaders.facebook_chat" -> "json" [];
	"langchain_community.document_loaders.facebook_chat" -> "pathlib" [];
	"langchain_community.document_loaders.facebook_chat" -> "typing" [];
	"langchain_community.document_loaders.excel" -> "pathlib" [];
	"langchain_community.document_loaders.excel" -> "typing" [];
	"langchain_community.document_loaders.excel" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.evernote" -> "hashlib" [];
	"langchain_community.document_loaders.evernote" -> "logging" [];
	"langchain_community.document_loaders.evernote" -> "base64" [];
	"langchain_community.document_loaders.evernote" -> "pathlib" [];
	"langchain_community.document_loaders.evernote" -> "time" [];
	"langchain_community.document_loaders.evernote" -> "typing" [];
	"langchain_community.document_loaders.evernote" -> "html2text" [];
	"langchain_community.document_loaders.evernote" -> "lxml" [];
	"langchain_community.document_loaders.etherscan" -> "os" [];
	"langchain_community.document_loaders.etherscan" -> "re" [];
	"langchain_community.document_loaders.etherscan" -> "typing" [];
	"langchain_community.document_loaders.etherscan" -> "requests" [];
	"langchain_community.document_loaders.epub" -> "pathlib" [];
	"langchain_community.document_loaders.epub" -> "typing" [];
	"langchain_community.document_loaders.epub" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.email" -> "os" [];
	"langchain_community.document_loaders.email" -> "pathlib" [];
	"langchain_community.document_loaders.email" -> "typing" [];
	"langchain_community.document_loaders.email" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.email" -> "'unstructured.file_utils'" [];
	"langchain_community.document_loaders.email" -> "extract_msg" [];
	"langchain_community.document_loaders.duckdb_loader" -> "typing" [];
	"langchain_community.document_loaders.duckdb_loader" -> "duckdb" [];
	"langchain_community.document_loaders.dropbox" -> "os" [];
	"langchain_community.document_loaders.dropbox" -> "tempfile" [];
	"langchain_community.document_loaders.dropbox" -> "pathlib" [];
	"langchain_community.document_loaders.dropbox" -> "typing" [];
	"langchain_community.document_loaders.dropbox" -> "pydantic" [];
	"langchain_community.document_loaders.dropbox" -> "dropbox" [];
	"langchain_community.document_loaders.dropbox" -> "'dropbox.files'" [];
	"langchain_community.document_loaders.docusaurus" -> "typing" [];
	"langchain_community.document_loaders.docugami" -> "hashlib" [];
	"langchain_community.document_loaders.docugami" -> "io" [];
	"langchain_community.document_loaders.docugami" -> "logging" [];
	"langchain_community.document_loaders.docugami" -> "os" [];
	"langchain_community.document_loaders.docugami" -> "pathlib" [];
	"langchain_community.document_loaders.docugami" -> "typing" [];
	"langchain_community.document_loaders.docugami" -> "requests" [];
	"langchain_community.document_loaders.docugami" -> "pydantic" [];
	"langchain_community.document_loaders.docugami" -> "lxml" [];
	"langchain_community.document_loaders.docugami" -> "dgml_utils" [];
	"langchain_community.document_loaders.docugami" -> "'dgml_utils.segmentation'" [];
	"langchain_community.document_loaders.doc_intelligence" -> "__future__" [];
	"langchain_community.document_loaders.doc_intelligence" -> "typing" [];
	"langchain_community.document_loaders.doc_intelligence" -> "'azure.core'" [];
	"langchain_community.document_loaders.discord" -> "__future__" [];
	"langchain_community.document_loaders.discord" -> "typing" [];
	"langchain_community.document_loaders.discord" -> "pandas" [];
	"langchain_community.document_loaders.directory" -> "concurrent" [];
	"langchain_community.document_loaders.directory" -> "logging" [];
	"langchain_community.document_loaders.directory" -> "random" [];
	"langchain_community.document_loaders.directory" -> "pathlib" [];
	"langchain_community.document_loaders.directory" -> "typing" [];
	"langchain_community.document_loaders.directory" -> "tqdm" [];
	"langchain_community.document_loaders.diffbot" -> "logging" [];
	"langchain_community.document_loaders.diffbot" -> "typing" [];
	"langchain_community.document_loaders.diffbot" -> "requests" [];
	"langchain_community.document_loaders.dedoc" -> "html" [];
	"langchain_community.document_loaders.dedoc" -> "json" [];
	"langchain_community.document_loaders.dedoc" -> "os" [];
	"langchain_community.document_loaders.dedoc" -> "abc" [];
	"langchain_community.document_loaders.dedoc" -> "typing" [];
	"langchain_community.document_loaders.dedoc" -> "tempfile" [];
	"langchain_community.document_loaders.dedoc" -> "dedoc" [];
	"langchain_community.document_loaders.dedoc" -> "'dedoc.utils'" [];
	"langchain_community.document_loaders.dedoc" -> "requests" [];
	"langchain_community.document_loaders.dataframe" -> "typing" [];
	"langchain_community.document_loaders.dataframe" -> "pandas" [];
	"langchain_community.document_loaders.dataframe" -> "modin" [];
	"langchain_community.document_loaders.datadog_logs" -> "datetime" [];
	"langchain_community.document_loaders.datadog_logs" -> "typing" [];
	"langchain_community.document_loaders.datadog_logs" -> "datadog_api_client" [];
	"langchain_community.document_loaders.datadog_logs" -> "'datadog_api_client.v2'" [];
	"langchain_community.document_loaders.cube_semantic" -> "json" [];
	"langchain_community.document_loaders.cube_semantic" -> "logging" [];
	"langchain_community.document_loaders.cube_semantic" -> "time" [];
	"langchain_community.document_loaders.cube_semantic" -> "typing" [];
	"langchain_community.document_loaders.cube_semantic" -> "requests" [];
	"langchain_community.document_loaders.csv_loader" -> "csv" [];
	"langchain_community.document_loaders.csv_loader" -> "io" [];
	"langchain_community.document_loaders.csv_loader" -> "pathlib" [];
	"langchain_community.document_loaders.csv_loader" -> "typing" [];
	"langchain_community.document_loaders.csv_loader" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.couchbase" -> "logging" [];
	"langchain_community.document_loaders.couchbase" -> "typing" [];
	"langchain_community.document_loaders.couchbase" -> "couchbase" [];
	"langchain_community.document_loaders.couchbase" -> "'couchbase.cluster'" [];
	"langchain_community.document_loaders.couchbase" -> "'couchbase.options'" [];
	"langchain_community.document_loaders.couchbase" -> "datetime" [];
	"langchain_community.document_loaders.conllu" -> "csv" [];
	"langchain_community.document_loaders.conllu" -> "pathlib" [];
	"langchain_community.document_loaders.conllu" -> "typing" [];
	"langchain_community.document_loaders.confluence" -> "logging" [];
	"langchain_community.document_loaders.confluence" -> "enum" [];
	"langchain_community.document_loaders.confluence" -> "io" [];
	"langchain_community.document_loaders.confluence" -> "typing" [];
	"langchain_community.document_loaders.confluence" -> "requests" [];
	"langchain_community.document_loaders.confluence" -> "tenacity" [];
	"langchain_community.document_loaders.confluence" -> "atlassian" [];
	"langchain_community.document_loaders.confluence" -> "markdownify" [];
	"langchain_community.document_loaders.confluence" -> "bs4" [];
	"langchain_community.document_loaders.confluence" -> "PIL" [];
	"langchain_community.document_loaders.confluence" -> "pytesseract" [];
	"langchain_community.document_loaders.confluence" -> "pdf2image" [];
	"langchain_community.document_loaders.confluence" -> "docx2txt" [];
	"langchain_community.document_loaders.confluence" -> "os" [];
	"langchain_community.document_loaders.confluence" -> "xlrd" [];
	"langchain_community.document_loaders.confluence" -> "pandas" [];
	"langchain_community.document_loaders.confluence" -> "reportlab" [];
	"langchain_community.document_loaders.confluence" -> "svglib" [];
	"langchain_community.document_loaders.concurrent" -> "__future__" [];
	"langchain_community.document_loaders.concurrent" -> "pathlib" [];
	"langchain_community.document_loaders.concurrent" -> "typing" [];
	"langchain_community.document_loaders.generic" -> "__future__" [];
	"langchain_community.document_loaders.generic" -> "pathlib" [];
	"langchain_community.document_loaders.generic" -> "typing" [];
	"langchain_community.document_loaders.generic" -> "langchain_text_splitters" [];
	"langchain_community.document_loaders.college_confidential" -> "typing" [];
	"langchain_community.document_loaders.chromium" -> "asyncio" [];
	"langchain_community.document_loaders.chromium" -> "logging" [];
	"langchain_community.document_loaders.chromium" -> "typing" [];
	"langchain_community.document_loaders.chromium" -> "playwright" [];
	"langchain_community.document_loaders.chromium" -> "'playwright.async_api'" [];
	"langchain_community.document_loaders.chm" -> "pathlib" [];
	"langchain_community.document_loaders.chm" -> "typing" [];
	"langchain_community.document_loaders.chm" -> "chm" [];
	"langchain_community.document_loaders.chm" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.chm" -> "bs4" [];
	"langchain_community.document_loaders.chatgpt" -> "datetime" [];
	"langchain_community.document_loaders.chatgpt" -> "json" [];
	"langchain_community.document_loaders.chatgpt" -> "typing" [];
	"langchain_community.document_loaders.cassandra" -> "__future__" [];
	"langchain_community.document_loaders.cassandra" -> "typing" [];
	"langchain_community.document_loaders.cassandra" -> "'cassandra.cluster'" [];
	"langchain_community.document_loaders.cassandra" -> "'cassandra.pool'" [];
	"langchain_community.document_loaders.cassandra" -> "'cassandra.query'" [];
	"langchain_community.document_loaders.cassandra" -> "cassio" [];
	"langchain_community.document_loaders.browserless" -> "typing" [];
	"langchain_community.document_loaders.browserless" -> "requests" [];
	"langchain_community.document_loaders.browserbase" -> "typing" [];
	"langchain_community.document_loaders.browserbase" -> "browserbase" [];
	"langchain_community.document_loaders.brave_search" -> "typing" [];
	"langchain_community.document_loaders.brave_search" -> "pydantic" [];
	"langchain_community.document_loaders.blockchain" -> "os" [];
	"langchain_community.document_loaders.blockchain" -> "re" [];
	"langchain_community.document_loaders.blockchain" -> "time" [];
	"langchain_community.document_loaders.blockchain" -> "enum" [];
	"langchain_community.document_loaders.blockchain" -> "typing" [];
	"langchain_community.document_loaders.blockchain" -> "requests" [];
	"langchain_community.document_loaders.blob_loaders" -> "importlib" [];
	"langchain_community.document_loaders.blob_loaders" -> "typing" [];
	"langchain_community.document_loaders.blob_loaders.youtube_audio" -> "typing" [];
	"langchain_community.document_loaders.blob_loaders.youtube_audio" -> "yt_dlp" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "contextlib" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "mimetypes" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "tempfile" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "io" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "pathlib" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "typing" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "cloudpathlib" [];
	"langchain_community.document_loaders.blackboard" -> "contextlib" [];
	"langchain_community.document_loaders.blackboard" -> "re" [];
	"langchain_community.document_loaders.blackboard" -> "pathlib" [];
	"langchain_community.document_loaders.blackboard" -> "typing" [];
	"langchain_community.document_loaders.blackboard" -> "bs4" [];
	"langchain_community.document_loaders.bilibili" -> "json" [];
	"langchain_community.document_loaders.bilibili" -> "re" [];
	"langchain_community.document_loaders.bilibili" -> "warnings" [];
	"langchain_community.document_loaders.bilibili" -> "typing" [];
	"langchain_community.document_loaders.bilibili" -> "requests" [];
	"langchain_community.document_loaders.bilibili" -> "bilibili_api" [];
	"langchain_community.document_loaders.bigquery" -> "__future__" [];
	"langchain_community.document_loaders.bigquery" -> "typing" [];
	"langchain_community.document_loaders.bibtex" -> "logging" [];
	"langchain_community.document_loaders.bibtex" -> "re" [];
	"langchain_community.document_loaders.bibtex" -> "pathlib" [];
	"langchain_community.document_loaders.bibtex" -> "typing" [];
	"langchain_community.document_loaders.bibtex" -> "fitz" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "os" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "tempfile" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "typing" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "azure" [];
	"langchain_community.document_loaders.azure_blob_storage_container" -> "typing" [];
	"langchain_community.document_loaders.azure_blob_storage_container" -> "'azure.storage'" [];
	"langchain_community.document_loaders.azure_ai_data" -> "typing" [];
	"langchain_community.document_loaders.azure_ai_data" -> "azureml" [];
	"langchain_community.document_loaders.azlyrics" -> "typing" [];
	"langchain_community.document_loaders.athena" -> "__future__" [];
	"langchain_community.document_loaders.athena" -> "io" [];
	"langchain_community.document_loaders.athena" -> "json" [];
	"langchain_community.document_loaders.athena" -> "time" [];
	"langchain_community.document_loaders.athena" -> "typing" [];
	"langchain_community.document_loaders.athena" -> "boto3" [];
	"langchain_community.document_loaders.athena" -> "pandas" [];
	"langchain_community.document_loaders.async_html" -> "asyncio" [];
	"langchain_community.document_loaders.async_html" -> "logging" [];
	"langchain_community.document_loaders.async_html" -> "warnings" [];
	"langchain_community.document_loaders.async_html" -> "typing" [];
	"langchain_community.document_loaders.async_html" -> "aiohttp" [];
	"langchain_community.document_loaders.async_html" -> "requests" [];
	"langchain_community.document_loaders.async_html" -> "fake_useragent" [];
	"langchain_community.document_loaders.async_html" -> "bs4" [];
	"langchain_community.document_loaders.astradb" -> "__future__" [];
	"langchain_community.document_loaders.astradb" -> "json" [];
	"langchain_community.document_loaders.astradb" -> "logging" [];
	"langchain_community.document_loaders.astradb" -> "typing" [];
	"langchain_community.document_loaders.astradb" -> "'astrapy.db'" [];
	"langchain_community.document_loaders.assemblyai" -> "__future__" [];
	"langchain_community.document_loaders.assemblyai" -> "enum" [];
	"langchain_community.document_loaders.assemblyai" -> "pathlib" [];
	"langchain_community.document_loaders.assemblyai" -> "typing" [];
	"langchain_community.document_loaders.assemblyai" -> "requests" [];
	"langchain_community.document_loaders.assemblyai" -> "assemblyai" [];
	"langchain_community.document_loaders.arxiv" -> "typing" [];
	"langchain_community.document_loaders.arcgis_loader" -> "__future__" [];
	"langchain_community.document_loaders.arcgis_loader" -> "json" [];
	"langchain_community.document_loaders.arcgis_loader" -> "re" [];
	"langchain_community.document_loaders.arcgis_loader" -> "warnings" [];
	"langchain_community.document_loaders.arcgis_loader" -> "datetime" [];
	"langchain_community.document_loaders.arcgis_loader" -> "typing" [];
	"langchain_community.document_loaders.arcgis_loader" -> "arcgis" [];
	"langchain_community.document_loaders.arcgis_loader" -> "bs4" [];
	"langchain_community.document_loaders.apify_dataset" -> "typing" [];
	"langchain_community.document_loaders.apify_dataset" -> "pydantic" [];
	"langchain_community.document_loaders.apify_dataset" -> "apify_client" [];
	"langchain_community.document_loaders.airtable" -> "typing" [];
	"langchain_community.document_loaders.airtable" -> "pyairtable" [];
	"langchain_community.document_loaders.airbyte_json" -> "json" [];
	"langchain_community.document_loaders.airbyte_json" -> "pathlib" [];
	"langchain_community.document_loaders.airbyte_json" -> "typing" [];
	"langchain_community.document_loaders.airbyte" -> "typing" [];
	"langchain_community.document_loaders.airbyte" -> "airbyte_cdk" [];
	"langchain_community.document_loaders.airbyte" -> "'airbyte_cdk.sources'" [];
	"langchain_community.document_loaders.acreom" -> "re" [];
	"langchain_community.document_loaders.acreom" -> "pathlib" [];
	"langchain_community.document_loaders.acreom" -> "typing" [];
	"pypdf" -> "PIL" [];
	"pypdf.papersizes" -> "typing" [];
	"pypdf.pagerange" -> "re" [];
	"pypdf.pagerange" -> "typing" [];
	"pypdf.constants" -> "enum" [];
	"pypdf.constants" -> "typing" [];
	"pypdf._writer" -> "decimal" [];
	"pypdf._writer" -> "enum" [];
	"pypdf._writer" -> "hashlib" [];
	"pypdf._writer" -> "re" [];
	"pypdf._writer" -> "struct" [];
	"pypdf._writer" -> "uuid" [];
	"pypdf._writer" -> "io" [];
	"pypdf._writer" -> "itertools" [];
	"pypdf._writer" -> "pathlib" [];
	"pypdf._writer" -> "types" [];
	"pypdf._writer" -> "typing" [];
	"pypdf.xmp" -> "datetime" [];
	"pypdf.xmp" -> "decimal" [];
	"pypdf.xmp" -> "re" [];
	"pypdf.xmp" -> "typing" [];
	"pypdf.types" -> "sys" [];
	"pypdf.types" -> "typing" [];
	"pypdf.types" -> "typing_extensions" [];
	"pypdf.generic._outline" -> "typing" [];
	"pypdf.generic._data_structures" -> "logging" [];
	"pypdf.generic._data_structures" -> "re" [];
	"pypdf.generic._data_structures" -> "sys" [];
	"pypdf.generic._data_structures" -> "io" [];
	"pypdf.generic._data_structures" -> "math" [];
	"pypdf.generic._data_structures" -> "typing" [];
	"pypdf.generic._data_structures" -> "typing_extensions" [];
	"pypdf.filters" -> "math" [];
	"pypdf.filters" -> "struct" [];
	"pypdf.filters" -> "zlib" [];
	"pypdf.filters" -> "base64" [];
	"pypdf.filters" -> "dataclasses" [];
	"pypdf.filters" -> "io" [];
	"pypdf.filters" -> "typing" [];
	"pypdf._xobj_image_helpers" -> "sys" [];
	"pypdf._xobj_image_helpers" -> "io" [];
	"pypdf._xobj_image_helpers" -> "typing" [];
	"pypdf._xobj_image_helpers" -> "typing_extensions" [];
	"pypdf._xobj_image_helpers" -> "PIL" [];
	"pypdf._codecs._codecs" -> "io" [];
	"pypdf._codecs._codecs" -> "abc" [];
	"pypdf._codecs._codecs" -> "typing" [];
	"pypdf._codecs" -> "typing" [];
	"pypdf.generic._utils" -> "codecs" [];
	"pypdf.generic._utils" -> "typing" [];
	"pypdf.generic._image_inline" -> "logging" [];
	"pypdf.generic._image_inline" -> "io" [];
	"pypdf.generic._image_inline" -> "typing" [];
	"pypdf.generic._fit" -> "typing" [];
	"pypdf._protocols" -> "abc" [];
	"pypdf._protocols" -> "pathlib" [];
	"pypdf._protocols" -> "typing" [];
	"pypdf.generic._base" -> "binascii" [];
	"pypdf.generic._base" -> "codecs" [];
	"pypdf.generic._base" -> "hashlib" [];
	"pypdf.generic._base" -> "re" [];
	"pypdf.generic._base" -> "sys" [];
	"pypdf.generic._base" -> "math" [];
	"pypdf.generic._base" -> "struct" [];
	"pypdf.generic._base" -> "typing" [];
	"pypdf.generic._base" -> "typing_extensions" [];
	"pypdf.generic" -> "typing" [];
	"pypdf.generic._viewerpref" -> "typing" [];
	"pypdf.generic._rectangle" -> "typing" [];
	"pypdf.generic._files" -> "__future__" [];
	"pypdf.generic._files" -> "typing" [];
	"pypdf.generic._files" -> "datetime" [];
	"pypdf._utils" -> "functools" [];
	"pypdf._utils" -> "logging" [];
	"pypdf._utils" -> "re" [];
	"pypdf._utils" -> "sys" [];
	"pypdf._utils" -> "warnings" [];
	"pypdf._utils" -> "dataclasses" [];
	"pypdf._utils" -> "datetime" [];
	"pypdf._utils" -> "io" [];
	"pypdf._utils" -> "os" [];
	"pypdf._utils" -> "typing" [];
	"pypdf._utils" -> "typing_extensions" [];
	"pypdf._page_labels" -> "typing" [];
	"pypdf._cmap" -> "binascii" [];
	"pypdf._cmap" -> "math" [];
	"pypdf._cmap" -> "typing" [];
	"pypdf._reader" -> "os" [];
	"pypdf._reader" -> "re" [];
	"pypdf._reader" -> "io" [];
	"pypdf._reader" -> "pathlib" [];
	"pypdf._reader" -> "types" [];
	"pypdf._reader" -> "typing" [];
	"pypdf._page" -> "math" [];
	"pypdf._page" -> "dataclasses" [];
	"pypdf._page" -> "decimal" [];
	"pypdf._page" -> "io" [];
	"pypdf._page" -> "pathlib" [];
	"pypdf._page" -> "typing" [];
	"pypdf._page" -> "json" [];
	"pypdf._text_extraction._layout_mode._font" -> "dataclasses" [];
	"pypdf._text_extraction._layout_mode._font" -> "typing" [];
	"pypdf._text_extraction._layout_mode._fixed_width_page" -> "itertools" [];
	"pypdf._text_extraction._layout_mode._fixed_width_page" -> "math" [];
	"pypdf._text_extraction._layout_mode._fixed_width_page" -> "pathlib" [];
	"pypdf._text_extraction._layout_mode._fixed_width_page" -> "typing" [];
	"pypdf._text_extraction._layout_mode._fixed_width_page" -> "json" [];
	"pypdf._text_extraction._layout_mode._text_state_params" -> "math" [];
	"pypdf._text_extraction._layout_mode._text_state_params" -> "dataclasses" [];
	"pypdf._text_extraction._layout_mode._text_state_params" -> "typing" [];
	"pypdf._text_extraction._layout_mode._text_state_manager" -> "collections" [];
	"pypdf._text_extraction._layout_mode._text_state_manager" -> "typing" [];
	"pypdf._text_extraction" -> "math" [];
	"pypdf._text_extraction" -> "typing" [];
	"pypdf._encryption" -> "hashlib" [];
	"pypdf._encryption" -> "secrets" [];
	"pypdf._encryption" -> "struct" [];
	"pypdf._encryption" -> "enum" [];
	"pypdf._encryption" -> "typing" [];
	"pypdf._doc_common" -> "struct" [];
	"pypdf._doc_common" -> "zlib" [];
	"pypdf._doc_common" -> "abc" [];
	"pypdf._doc_common" -> "datetime" [];
	"pypdf._doc_common" -> "typing" [];
	"pypdf._crypt_providers._pycryptodome" -> "secrets" [];
	"pypdf._crypt_providers._pycryptodome" -> "Crypto" [];
	"pypdf._crypt_providers._pycryptodome" -> "'Crypto.Cipher'" [];
	"pypdf._crypt_providers._pycryptodome" -> "'Crypto.Util'" [];
	"pypdf._crypt_providers._cryptography" -> "secrets" [];
	"pypdf._crypt_providers._cryptography" -> "cryptography" [];
	"langchain_community.embeddings" -> "importlib" [];
	"langchain_community.embeddings" -> "logging" [];
	"langchain_community.embeddings" -> "typing" [];
	"langchain_community.embeddings.zhipuai" -> "typing" [];
	"langchain_community.embeddings.zhipuai" -> "pydantic" [];
	"langchain_community.embeddings.zhipuai" -> "zhipuai" [];
	"langchain_community.embeddings.yandex" -> "__future__" [];
	"langchain_community.embeddings.yandex" -> "logging" [];
	"langchain_community.embeddings.yandex" -> "time" [];
	"langchain_community.embeddings.yandex" -> "typing" [];
	"langchain_community.embeddings.yandex" -> "pydantic" [];
	"langchain_community.embeddings.yandex" -> "tenacity" [];
	"langchain_community.embeddings.yandex" -> "grpc" [];
	"langchain_community.embeddings.yandex" -> "'yandex.cloud'" [];
	"langchain_community.embeddings.xinference" -> "typing" [];
	"langchain_community.embeddings.xinference" -> "'xinference.client'" [];
	"langchain_community.embeddings.xinference" -> "xinference_client" [];
	"langchain_community.embeddings.voyageai" -> "__future__" [];
	"langchain_community.embeddings.voyageai" -> "json" [];
	"langchain_community.embeddings.voyageai" -> "logging" [];
	"langchain_community.embeddings.voyageai" -> "typing" [];
	"langchain_community.embeddings.voyageai" -> "requests" [];
	"langchain_community.embeddings.voyageai" -> "pydantic" [];
	"langchain_community.embeddings.voyageai" -> "tenacity" [];
	"langchain_community.embeddings.volcengine" -> "__future__" [];
	"langchain_community.embeddings.volcengine" -> "logging" [];
	"langchain_community.embeddings.volcengine" -> "typing" [];
	"langchain_community.embeddings.volcengine" -> "pydantic" [];
	"langchain_community.embeddings.volcengine" -> "'volcengine.maas'" [];
	"langchain_community.embeddings.vertexai" -> "logging" [];
	"langchain_community.embeddings.vertexai" -> "re" [];
	"langchain_community.embeddings.vertexai" -> "string" [];
	"langchain_community.embeddings.vertexai" -> "threading" [];
	"langchain_community.embeddings.vertexai" -> "typing" [];
	"langchain_community.embeddings.vertexai" -> "tqdm" [];
	"langchain_community.embeddings.titan_takeoff" -> "enum" [];
	"langchain_community.embeddings.titan_takeoff" -> "typing" [];
	"langchain_community.embeddings.titan_takeoff" -> "pydantic" [];
	"langchain_community.embeddings.titan_takeoff" -> "takeoff_client" [];
	"langchain_community.embeddings.textembed" -> "asyncio" [];
	"langchain_community.embeddings.textembed" -> "typing" [];
	"langchain_community.embeddings.textembed" -> "aiohttp" [];
	"langchain_community.embeddings.textembed" -> "numpy" [];
	"langchain_community.embeddings.textembed" -> "requests" [];
	"langchain_community.embeddings.textembed" -> "pydantic" [];
	"langchain_community.embeddings.textembed" -> "typing_extensions" [];
	"langchain_community.embeddings.tensorflow_hub" -> "typing" [];
	"langchain_community.embeddings.tensorflow_hub" -> "pydantic" [];
	"langchain_community.embeddings.tensorflow_hub" -> "tensorflow_hub" [];
	"langchain_community.embeddings.tensorflow_hub" -> "tensorflow_text" [];
	"langchain_community.embeddings.sparkllm" -> "base64" [];
	"langchain_community.embeddings.sparkllm" -> "hashlib" [];
	"langchain_community.embeddings.sparkllm" -> "hmac" [];
	"langchain_community.embeddings.sparkllm" -> "json" [];
	"langchain_community.embeddings.sparkllm" -> "logging" [];
	"langchain_community.embeddings.sparkllm" -> "datetime" [];
	"langchain_community.embeddings.sparkllm" -> "time" [];
	"langchain_community.embeddings.sparkllm" -> "typing" [];
	"langchain_community.embeddings.sparkllm" -> "numpy" [];
	"langchain_community.embeddings.sparkllm" -> "requests" [];
	"langchain_community.embeddings.sparkllm" -> "pydantic" [];
	"langchain_community.embeddings.spacy_embeddings" -> "typing" [];
	"langchain_community.embeddings.spacy_embeddings" -> "pydantic" [];
	"langchain_community.embeddings.spacy_embeddings" -> "spacy" [];
	"langchain_community.embeddings.solar" -> "__future__" [];
	"langchain_community.embeddings.solar" -> "logging" [];
	"langchain_community.embeddings.solar" -> "typing" [];
	"langchain_community.embeddings.solar" -> "requests" [];
	"langchain_community.embeddings.solar" -> "pydantic" [];
	"langchain_community.embeddings.solar" -> "tenacity" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "importlib" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "logging" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "typing" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "sentence_transformers" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "InstructorEmbedding" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "torch" [];
	"langchain_community.embeddings.self_hosted" -> "typing" [];
	"langchain_community.embeddings.self_hosted" -> "pydantic" [];
	"langchain_community.embeddings.sambanova" -> "json" [];
	"langchain_community.embeddings.sambanova" -> "typing" [];
	"langchain_community.embeddings.sambanova" -> "requests" [];
	"langchain_community.embeddings.sambanova" -> "pydantic" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "typing" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "pydantic" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "boto3" [];
	"langchain_community.embeddings.premai" -> "__future__" [];
	"langchain_community.embeddings.premai" -> "logging" [];
	"langchain_community.embeddings.premai" -> "typing" [];
	"langchain_community.embeddings.premai" -> "pydantic" [];
	"langchain_community.embeddings.premai" -> "premai" [];
	"langchain_community.embeddings.premai" -> "'premai.models'" [];
	"langchain_community.embeddings.ovhcloud" -> "json" [];
	"langchain_community.embeddings.ovhcloud" -> "logging" [];
	"langchain_community.embeddings.ovhcloud" -> "time" [];
	"langchain_community.embeddings.ovhcloud" -> "typing" [];
	"langchain_community.embeddings.ovhcloud" -> "requests" [];
	"langchain_community.embeddings.ovhcloud" -> "pydantic" [];
	"langchain_community.embeddings.oracleai" -> "__future__" [];
	"langchain_community.embeddings.oracleai" -> "json" [];
	"langchain_community.embeddings.oracleai" -> "logging" [];
	"langchain_community.embeddings.oracleai" -> "traceback" [];
	"langchain_community.embeddings.oracleai" -> "typing" [];
	"langchain_community.embeddings.oracleai" -> "pydantic" [];
	"langchain_community.embeddings.oracleai" -> "oracledb" [];
	"langchain_community.embeddings.optimum_intel" -> "typing" [];
	"langchain_community.embeddings.optimum_intel" -> "pydantic" [];
	"langchain_community.embeddings.optimum_intel" -> "transformers" [];
	"langchain_community.embeddings.optimum_intel" -> "'optimum.intel'" [];
	"langchain_community.embeddings.optimum_intel" -> "torch" [];
	"langchain_community.embeddings.optimum_intel" -> "pandas" [];
	"langchain_community.embeddings.optimum_intel" -> "tqdm" [];
	"langchain_community.embeddings.openvino" -> "pathlib" [];
	"langchain_community.embeddings.openvino" -> "typing" [];
	"langchain_community.embeddings.openvino" -> "pydantic" [];
	"langchain_community.embeddings.openvino" -> "'optimum.intel'" [];
	"langchain_community.embeddings.openvino" -> "huggingface_hub" [];
	"langchain_community.embeddings.openvino" -> "transformers" [];
	"langchain_community.embeddings.openvino" -> "numpy" [];
	"langchain_community.embeddings.openvino" -> "tqdm" [];
	"langchain_community.embeddings.openvino" -> "torch" [];
	"langchain_community.embeddings.ollama" -> "logging" [];
	"langchain_community.embeddings.ollama" -> "typing" [];
	"langchain_community.embeddings.ollama" -> "requests" [];
	"langchain_community.embeddings.ollama" -> "pydantic" [];
	"langchain_community.embeddings.ollama" -> "tqdm" [];
	"langchain_community.embeddings.octoai_embeddings" -> "typing" [];
	"langchain_community.embeddings.octoai_embeddings" -> "pydantic" [];
	"langchain_community.embeddings.octoai_embeddings" -> "openai" [];
	"langchain_community.embeddings.oci_generative_ai" -> "enum" [];
	"langchain_community.embeddings.oci_generative_ai" -> "typing" [];
	"langchain_community.embeddings.oci_generative_ai" -> "pydantic" [];
	"langchain_community.embeddings.oci_generative_ai" -> "oci" [];
	"langchain_community.embeddings.oci_generative_ai" -> "'oci.generative_ai_inference'" [];
	"langchain_community.embeddings.nlpcloud" -> "typing" [];
	"langchain_community.embeddings.nlpcloud" -> "pydantic" [];
	"langchain_community.embeddings.nlpcloud" -> "nlpcloud" [];
	"langchain_community.embeddings.nemo" -> "__future__" [];
	"langchain_community.embeddings.nemo" -> "asyncio" [];
	"langchain_community.embeddings.nemo" -> "json" [];
	"langchain_community.embeddings.nemo" -> "typing" [];
	"langchain_community.embeddings.nemo" -> "aiohttp" [];
	"langchain_community.embeddings.nemo" -> "requests" [];
	"langchain_community.embeddings.nemo" -> "pydantic" [];
	"langchain_community.embeddings.naver" -> "logging" [];
	"langchain_community.embeddings.naver" -> "typing" [];
	"langchain_community.embeddings.naver" -> "pydantic" [];
	"langchain_community.embeddings.naver" -> "typing_extensions" [];
	"langchain_community.embeddings.mosaicml" -> "typing" [];
	"langchain_community.embeddings.mosaicml" -> "requests" [];
	"langchain_community.embeddings.mosaicml" -> "pydantic" [];
	"langchain_community.embeddings.mosaicml" -> "time" [];
	"langchain_community.embeddings.modelscope_hub" -> "typing" [];
	"langchain_community.embeddings.modelscope_hub" -> "pydantic" [];
	"langchain_community.embeddings.modelscope_hub" -> "modelscope" [];
	"langchain_community.embeddings.modelscope_hub" -> "'modelscope.utils'" [];
	"langchain_community.embeddings.model2vec" -> "typing" [];
	"langchain_community.embeddings.model2vec" -> "model2vec" [];
	"langchain_community.embeddings.mlflow_gateway" -> "__future__" [];
	"langchain_community.embeddings.mlflow_gateway" -> "warnings" [];
	"langchain_community.embeddings.mlflow_gateway" -> "typing" [];
	"langchain_community.embeddings.mlflow_gateway" -> "pydantic" [];
	"langchain_community.embeddings.mlflow_gateway" -> "'mlflow.gateway'" [];
	"langchain_community.embeddings.mlflow" -> "__future__" [];
	"langchain_community.embeddings.mlflow" -> "typing" [];
	"langchain_community.embeddings.mlflow" -> "pydantic" [];
	"langchain_community.embeddings.mlflow" -> "'mlflow.deployments'" [];
	"langchain_community.embeddings.minimax" -> "__future__" [];
	"langchain_community.embeddings.minimax" -> "logging" [];
	"langchain_community.embeddings.minimax" -> "typing" [];
	"langchain_community.embeddings.minimax" -> "requests" [];
	"langchain_community.embeddings.minimax" -> "pydantic" [];
	"langchain_community.embeddings.minimax" -> "tenacity" [];
	"langchain_community.embeddings.localai" -> "__future__" [];
	"langchain_community.embeddings.localai" -> "logging" [];
	"langchain_community.embeddings.localai" -> "warnings" [];
	"langchain_community.embeddings.localai" -> "typing" [];
	"langchain_community.embeddings.localai" -> "pydantic" [];
	"langchain_community.embeddings.localai" -> "tenacity" [];
	"langchain_community.embeddings.localai" -> "openai" [];
	"langchain_community.embeddings.llm_rails" -> "typing" [];
	"langchain_community.embeddings.llm_rails" -> "requests" [];
	"langchain_community.embeddings.llm_rails" -> "pydantic" [];
	"langchain_community.embeddings.llamafile" -> "logging" [];
	"langchain_community.embeddings.llamafile" -> "typing" [];
	"langchain_community.embeddings.llamafile" -> "requests" [];
	"langchain_community.embeddings.llamafile" -> "pydantic" [];
	"langchain_community.embeddings.llamacpp" -> "typing" [];
	"langchain_community.embeddings.llamacpp" -> "pydantic" [];
	"langchain_community.embeddings.llamacpp" -> "typing_extensions" [];
	"langchain_community.embeddings.llamacpp" -> "llama_cpp" [];
	"langchain_community.embeddings.laser" -> "typing" [];
	"langchain_community.embeddings.laser" -> "numpy" [];
	"langchain_community.embeddings.laser" -> "pydantic" [];
	"langchain_community.embeddings.laser" -> "laser_encoders" [];
	"langchain_community.embeddings.johnsnowlabs" -> "os" [];
	"langchain_community.embeddings.johnsnowlabs" -> "sys" [];
	"langchain_community.embeddings.johnsnowlabs" -> "typing" [];
	"langchain_community.embeddings.johnsnowlabs" -> "pydantic" [];
	"langchain_community.embeddings.johnsnowlabs" -> "johnsnowlabs" [];
	"langchain_community.embeddings.johnsnowlabs" -> "nlu" [];
	"langchain_community.embeddings.jina" -> "base64" [];
	"langchain_community.embeddings.jina" -> "os.path" [];
	"langchain_community.embeddings.jina" -> "typing" [];
	"langchain_community.embeddings.jina" -> "requests" [];
	"langchain_community.embeddings.jina" -> "pydantic" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "__future__" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "typing" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "pydantic" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "javelin_sdk" [];
	"langchain_community.embeddings.itrex" -> "os" [];
	"langchain_community.embeddings.itrex" -> "typing" [];
	"langchain_community.embeddings.itrex" -> "pydantic" [];
	"langchain_community.embeddings.itrex" -> "huggingface_hub" [];
	"langchain_community.embeddings.itrex" -> "'intel_extension_for_transformers.transformers'" [];
	"langchain_community.embeddings.itrex" -> "transformers" [];
	"langchain_community.embeddings.itrex" -> "torch" [];
	"langchain_community.embeddings.itrex" -> "pandas" [];
	"langchain_community.embeddings.ipex_llm" -> "typing" [];
	"langchain_community.embeddings.ipex_llm" -> "pydantic" [];
	"langchain_community.embeddings.ipex_llm" -> "sentence_transformers" [];
	"langchain_community.embeddings.ipex_llm" -> "'ipex_llm.transformers'" [];
	"langchain_community.embeddings.infinity_local" -> "asyncio" [];
	"langchain_community.embeddings.infinity_local" -> "logging" [];
	"langchain_community.embeddings.infinity_local" -> "typing" [];
	"langchain_community.embeddings.infinity_local" -> "pydantic" [];
	"langchain_community.embeddings.infinity_local" -> "typing_extensions" [];
	"langchain_community.embeddings.infinity_local" -> "infinity_emb" [];
	"langchain_community.embeddings.infinity" -> "asyncio" [];
	"langchain_community.embeddings.infinity" -> "typing" [];
	"langchain_community.embeddings.infinity" -> "aiohttp" [];
	"langchain_community.embeddings.infinity" -> "numpy" [];
	"langchain_community.embeddings.infinity" -> "requests" [];
	"langchain_community.embeddings.infinity" -> "pydantic" [];
	"langchain_community.embeddings.hunyuan" -> "json" [];
	"langchain_community.embeddings.hunyuan" -> "typing" [];
	"langchain_community.embeddings.hunyuan" -> "pydantic" [];
	"langchain_community.embeddings.hunyuan" -> "'tencentcloud.common'" [];
	"langchain_community.embeddings.hunyuan" -> "'tencentcloud.hunyuan'" [];
	"langchain_community.embeddings.hunyuan" -> "tqdm" [];
	"langchain_community.embeddings.huggingface_hub" -> "json" [];
	"langchain_community.embeddings.huggingface_hub" -> "typing" [];
	"langchain_community.embeddings.huggingface_hub" -> "pydantic" [];
	"langchain_community.embeddings.huggingface_hub" -> "typing_extensions" [];
	"langchain_community.embeddings.huggingface_hub" -> "huggingface_hub" [];
	"langchain_community.embeddings.huggingface" -> "warnings" [];
	"langchain_community.embeddings.huggingface" -> "typing" [];
	"langchain_community.embeddings.huggingface" -> "requests" [];
	"langchain_community.embeddings.huggingface" -> "pydantic" [];
	"langchain_community.embeddings.huggingface" -> "sentence_transformers" [];
	"langchain_community.embeddings.huggingface" -> "InstructorEmbedding" [];
	"langchain_community.embeddings.gradient_ai" -> "typing" [];
	"langchain_community.embeddings.gradient_ai" -> "pydantic" [];
	"langchain_community.embeddings.gradient_ai" -> "typing_extensions" [];
	"langchain_community.embeddings.gradient_ai" -> "gradientai" [];
	"langchain_community.embeddings.gpt4all" -> "typing" [];
	"langchain_community.embeddings.gpt4all" -> "pydantic" [];
	"langchain_community.embeddings.gpt4all" -> "gpt4all" [];
	"langchain_community.embeddings.google_palm" -> "__future__" [];
	"langchain_community.embeddings.google_palm" -> "logging" [];
	"langchain_community.embeddings.google_palm" -> "typing" [];
	"langchain_community.embeddings.google_palm" -> "pydantic" [];
	"langchain_community.embeddings.google_palm" -> "tenacity" [];
	"langchain_community.embeddings.google_palm" -> "tqdm" [];
	"langchain_community.embeddings.gigachat" -> "__future__" [];
	"langchain_community.embeddings.gigachat" -> "logging" [];
	"langchain_community.embeddings.gigachat" -> "functools" [];
	"langchain_community.embeddings.gigachat" -> "typing" [];
	"langchain_community.embeddings.gigachat" -> "pydantic" [];
	"langchain_community.embeddings.gigachat" -> "gigachat" [];
	"langchain_community.embeddings.fastembed" -> "importlib" [];
	"langchain_community.embeddings.fastembed" -> "typing" [];
	"langchain_community.embeddings.fastembed" -> "numpy" [];
	"langchain_community.embeddings.fastembed" -> "pydantic" [];
	"langchain_community.embeddings.fake" -> "hashlib" [];
	"langchain_community.embeddings.fake" -> "typing" [];
	"langchain_community.embeddings.fake" -> "numpy" [];
	"langchain_community.embeddings.fake" -> "pydantic" [];
	"langchain_community.embeddings.ernie" -> "asyncio" [];
	"langchain_community.embeddings.ernie" -> "logging" [];
	"langchain_community.embeddings.ernie" -> "threading" [];
	"langchain_community.embeddings.ernie" -> "typing" [];
	"langchain_community.embeddings.ernie" -> "requests" [];
	"langchain_community.embeddings.ernie" -> "pydantic" [];
	"langchain_community.embeddings.embaas" -> "typing" [];
	"langchain_community.embeddings.embaas" -> "requests" [];
	"langchain_community.embeddings.embaas" -> "pydantic" [];
	"langchain_community.embeddings.embaas" -> "typing_extensions" [];
	"langchain_community.embeddings.elasticsearch" -> "__future__" [];
	"langchain_community.embeddings.elasticsearch" -> "typing" [];
	"langchain_community.embeddings.elasticsearch" -> "elasticsearch" [];
	"langchain_community.embeddings.elasticsearch" -> "'elasticsearch.client'" [];
	"langchain_community.embeddings.edenai" -> "typing" [];
	"langchain_community.embeddings.edenai" -> "pydantic" [];
	"langchain_community.embeddings.edenai" -> "langchain_community" [];
	"langchain_community.embeddings.deepinfra" -> "typing" [];
	"langchain_community.embeddings.deepinfra" -> "requests" [];
	"langchain_community.embeddings.deepinfra" -> "pydantic" [];
	"langchain_community.embeddings.databricks" -> "__future__" [];
	"langchain_community.embeddings.databricks" -> "typing" [];
	"langchain_community.embeddings.dashscope" -> "__future__" [];
	"langchain_community.embeddings.dashscope" -> "logging" [];
	"langchain_community.embeddings.dashscope" -> "typing" [];
	"langchain_community.embeddings.dashscope" -> "pydantic" [];
	"langchain_community.embeddings.dashscope" -> "tenacity" [];
	"langchain_community.embeddings.dashscope" -> "dashscope" [];
	"langchain_community.embeddings.cohere" -> "typing" [];
	"langchain_community.embeddings.cohere" -> "pydantic" [];
	"langchain_community.embeddings.cohere" -> "cohere" [];
	"langchain_community.embeddings.clova" -> "__future__" [];
	"langchain_community.embeddings.clova" -> "typing" [];
	"langchain_community.embeddings.clova" -> "requests" [];
	"langchain_community.embeddings.clova" -> "pydantic" [];
	"langchain_community.embeddings.clarifai" -> "logging" [];
	"langchain_community.embeddings.clarifai" -> "typing" [];
	"langchain_community.embeddings.clarifai" -> "pydantic" [];
	"langchain_community.embeddings.clarifai" -> "clarifai" [];
	"langchain_community.embeddings.clarifai" -> "'clarifai.client'" [];
	"langchain_community.embeddings.bookend" -> "json" [];
	"langchain_community.embeddings.bookend" -> "typing" [];
	"langchain_community.embeddings.bookend" -> "requests" [];
	"langchain_community.embeddings.bookend" -> "pydantic" [];
	"langchain_community.embeddings.bedrock" -> "asyncio" [];
	"langchain_community.embeddings.bedrock" -> "json" [];
	"langchain_community.embeddings.bedrock" -> "os" [];
	"langchain_community.embeddings.bedrock" -> "typing" [];
	"langchain_community.embeddings.bedrock" -> "numpy" [];
	"langchain_community.embeddings.bedrock" -> "pydantic" [];
	"langchain_community.embeddings.bedrock" -> "typing_extensions" [];
	"langchain_community.embeddings.bedrock" -> "boto3" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "__future__" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "logging" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "typing" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "pydantic" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "qianfan" [];
	"langchain_community.embeddings.baichuan" -> "typing" [];
	"langchain_community.embeddings.baichuan" -> "requests" [];
	"langchain_community.embeddings.baichuan" -> "pydantic" [];
	"langchain_community.embeddings.baichuan" -> "typing_extensions" [];
	"langchain_community.embeddings.azure_openai" -> "__future__" [];
	"langchain_community.embeddings.azure_openai" -> "os" [];
	"langchain_community.embeddings.azure_openai" -> "warnings" [];
	"langchain_community.embeddings.azure_openai" -> "typing" [];
	"langchain_community.embeddings.azure_openai" -> "pydantic" [];
	"langchain_community.embeddings.azure_openai" -> "typing_extensions" [];
	"langchain_community.embeddings.azure_openai" -> "openai" [];
	"langchain_community.embeddings.awa" -> "typing" [];
	"langchain_community.embeddings.awa" -> "pydantic" [];
	"langchain_community.embeddings.awa" -> "awadb" [];
	"langchain_community.embeddings.ascend" -> "os" [];
	"langchain_community.embeddings.ascend" -> "typing" [];
	"langchain_community.embeddings.ascend" -> "pydantic" [];
	"langchain_community.embeddings.ascend" -> "transformers" [];
	"langchain_community.embeddings.ascend" -> "torch_npu" [];
	"langchain_community.embeddings.ascend" -> "torch" [];
	"langchain_community.embeddings.ascend" -> "numpy" [];
	"langchain_community.embeddings.anyscale" -> "__future__" [];
	"langchain_community.embeddings.anyscale" -> "typing" [];
	"langchain_community.embeddings.anyscale" -> "pydantic" [];
	"langchain_community.embeddings.anyscale" -> "openai" [];
	"langchain_community.embeddings.aleph_alpha" -> "typing" [];
	"langchain_community.embeddings.aleph_alpha" -> "pydantic" [];
	"langchain_community.embeddings.aleph_alpha" -> "aleph_alpha_client" [];
	"langchain_community.chat_models" -> "importlib" [];
	"langchain_community.chat_models" -> "typing" [];
	"langchain_community.chat_models.zhipuai" -> "__future__" [];
	"langchain_community.chat_models.zhipuai" -> "json" [];
	"langchain_community.chat_models.zhipuai" -> "logging" [];
	"langchain_community.chat_models.zhipuai" -> "time" [];
	"langchain_community.chat_models.zhipuai" -> "contextlib" [];
	"langchain_community.chat_models.zhipuai" -> "operator" [];
	"langchain_community.chat_models.zhipuai" -> "typing" [];
	"langchain_community.chat_models.zhipuai" -> "pydantic" [];
	"langchain_community.chat_models.zhipuai" -> "httpx_sse" [];
	"langchain_community.chat_models.zhipuai" -> "jwt" [];
	"httpx_sse._models" -> "json" [];
	"httpx_sse._models" -> "typing" [];
	"httpx_sse._api" -> "contextlib" [];
	"httpx_sse._api" -> "typing" [];
	"httpx_sse._decoders" -> "typing" [];
	"langchain_community.chat_models.yuan2" -> "__future__" [];
	"langchain_community.chat_models.yuan2" -> "logging" [];
	"langchain_community.chat_models.yuan2" -> "typing" [];
	"langchain_community.chat_models.yuan2" -> "pydantic" [];
	"langchain_community.chat_models.yuan2" -> "tenacity" [];
	"langchain_community.chat_models.yuan2" -> "openai" [];
	"langchain_community.chat_models.yi" -> "json" [];
	"langchain_community.chat_models.yi" -> "logging" [];
	"langchain_community.chat_models.yi" -> "contextlib" [];
	"langchain_community.chat_models.yi" -> "typing" [];
	"langchain_community.chat_models.yi" -> "requests" [];
	"langchain_community.chat_models.yi" -> "pydantic" [];
	"langchain_community.chat_models.yi" -> "httpx_sse" [];
	"langchain_community.chat_models.yandex" -> "__future__" [];
	"langchain_community.chat_models.yandex" -> "logging" [];
	"langchain_community.chat_models.yandex" -> "typing" [];
	"langchain_community.chat_models.yandex" -> "tenacity" [];
	"langchain_community.chat_models.yandex" -> "grpc" [];
	"langchain_community.chat_models.yandex" -> "'yandex.cloud'" [];
	"langchain_community.chat_models.yandex" -> "asyncio" [];
	"langchain_community.chat_models.volcengine_maas" -> "__future__" [];
	"langchain_community.chat_models.volcengine_maas" -> "typing" [];
	"langchain_community.chat_models.vertexai" -> "__future__" [];
	"langchain_community.chat_models.vertexai" -> "base64" [];
	"langchain_community.chat_models.vertexai" -> "logging" [];
	"langchain_community.chat_models.vertexai" -> "re" [];
	"langchain_community.chat_models.vertexai" -> "dataclasses" [];
	"langchain_community.chat_models.vertexai" -> "typing" [];
	"langchain_community.chat_models.vertexai" -> "requests" [];
	"langchain_community.chat_models.tongyi" -> "__future__" [];
	"langchain_community.chat_models.tongyi" -> "asyncio" [];
	"langchain_community.chat_models.tongyi" -> "functools" [];
	"langchain_community.chat_models.tongyi" -> "json" [];
	"langchain_community.chat_models.tongyi" -> "logging" [];
	"langchain_community.chat_models.tongyi" -> "operator" [];
	"langchain_community.chat_models.tongyi" -> "typing" [];
	"langchain_community.chat_models.tongyi" -> "pydantic" [];
	"langchain_community.chat_models.tongyi" -> "tenacity" [];
	"langchain_community.chat_models.tongyi" -> "dashscope" [];
	"langchain_community.chat_models.symblai_nebula" -> "json" [];
	"langchain_community.chat_models.symblai_nebula" -> "os" [];
	"langchain_community.chat_models.symblai_nebula" -> "typing" [];
	"langchain_community.chat_models.symblai_nebula" -> "requests" [];
	"langchain_community.chat_models.symblai_nebula" -> "aiohttp" [];
	"langchain_community.chat_models.symblai_nebula" -> "pydantic" [];
	"langchain_community.chat_models.sparkllm" -> "base64" [];
	"langchain_community.chat_models.sparkllm" -> "hashlib" [];
	"langchain_community.chat_models.sparkllm" -> "hmac" [];
	"langchain_community.chat_models.sparkllm" -> "json" [];
	"langchain_community.chat_models.sparkllm" -> "logging" [];
	"langchain_community.chat_models.sparkllm" -> "queue" [];
	"langchain_community.chat_models.sparkllm" -> "threading" [];
	"langchain_community.chat_models.sparkllm" -> "datetime" [];
	"langchain_community.chat_models.sparkllm" -> "time" [];
	"langchain_community.chat_models.sparkllm" -> "typing" [];
	"langchain_community.chat_models.sparkllm" -> "pydantic" [];
	"langchain_community.chat_models.sparkllm" -> "websocket" [];
	"langchain_community.chat_models.solar" -> "typing" [];
	"langchain_community.chat_models.solar" -> "pydantic" [];
	"langchain_community.chat_models.solar" -> "openai" [];
	"langchain_community.llms.solar" -> "typing" [];
	"langchain_community.llms.solar" -> "requests" [];
	"langchain_community.llms.solar" -> "pydantic" [];
	"langchain_community.chat_models.snowflake" -> "json" [];
	"langchain_community.chat_models.snowflake" -> "typing" [];
	"langchain_community.chat_models.snowflake" -> "pydantic" [];
	"langchain_community.chat_models.snowflake" -> "'snowflake.snowpark'" [];
	"langchain_community.chat_models.sambanova" -> "json" [];
	"langchain_community.chat_models.sambanova" -> "operator" [];
	"langchain_community.chat_models.sambanova" -> "typing" [];
	"langchain_community.chat_models.sambanova" -> "requests" [];
	"langchain_community.chat_models.sambanova" -> "pydantic" [];
	"langchain_community.chat_models.sambanova" -> "sseclient" [];
	"langchain_community.chat_models.reka" -> "json" [];
	"langchain_community.chat_models.reka" -> "typing" [];
	"langchain_community.chat_models.reka" -> "pydantic" [];
	"langchain_community.chat_models.reka" -> "reka" [];
	"langchain_community.chat_models.reka" -> "tiktoken" [];
	"langchain_community.chat_models.promptlayer_openai" -> "datetime" [];
	"langchain_community.chat_models.promptlayer_openai" -> "typing" [];
	"langchain_community.chat_models.promptlayer_openai" -> "promptlayer" [];
	"langchain_community.chat_models.promptlayer_openai" -> "'promptlayer.utils'" [];
	"langchain_community.chat_models.premai" -> "__future__" [];
	"langchain_community.chat_models.premai" -> "logging" [];
	"langchain_community.chat_models.premai" -> "warnings" [];
	"langchain_community.chat_models.premai" -> "typing" [];
	"langchain_community.chat_models.premai" -> "pydantic" [];
	"langchain_community.chat_models.premai" -> "premai" [];
	"langchain_community.chat_models.premai" -> "'premai.models'" [];
	"langchain_community.chat_models.perplexity" -> "__future__" [];
	"langchain_community.chat_models.perplexity" -> "logging" [];
	"langchain_community.chat_models.perplexity" -> "operator" [];
	"langchain_community.chat_models.perplexity" -> "typing" [];
	"langchain_community.chat_models.perplexity" -> "pydantic" [];
	"langchain_community.chat_models.perplexity" -> "typing_extensions" [];
	"langchain_community.chat_models.perplexity" -> "openai" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "json" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "logging" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "typing" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "requests" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "pydantic" [];
	"langchain_community.chat_models.outlines" -> "__future__" [];
	"langchain_community.chat_models.outlines" -> "platform" [];
	"langchain_community.chat_models.outlines" -> "typing" [];
	"langchain_community.chat_models.outlines" -> "pydantic" [];
	"langchain_community.chat_models.outlines" -> "typing_extensions" [];
	"langchain_community.chat_models.outlines" -> "outlines" [];
	"langchain_community.chat_models.outlines" -> "transformers" [];
	"langchain_community.chat_models.outlines" -> "huggingface_hub" [];
	"langchain_community.chat_models.ollama" -> "json" [];
	"langchain_community.chat_models.ollama" -> "typing" [];
	"langchain_community.chat_models.octoai" -> "typing" [];
	"langchain_community.chat_models.octoai" -> "pydantic" [];
	"langchain_community.chat_models.octoai" -> "openai" [];
	"langchain_community.chat_models.oci_generative_ai" -> "json" [];
	"langchain_community.chat_models.oci_generative_ai" -> "re" [];
	"langchain_community.chat_models.oci_generative_ai" -> "uuid" [];
	"langchain_community.chat_models.oci_generative_ai" -> "abc" [];
	"langchain_community.chat_models.oci_generative_ai" -> "operator" [];
	"langchain_community.chat_models.oci_generative_ai" -> "typing" [];
	"langchain_community.chat_models.oci_generative_ai" -> "pydantic" [];
	"langchain_community.chat_models.oci_generative_ai" -> "'oci.generative_ai_inference'" [];
	"langchain_community.chat_models.oci_data_science" -> "importlib" [];
	"langchain_community.chat_models.oci_data_science" -> "json" [];
	"langchain_community.chat_models.oci_data_science" -> "logging" [];
	"langchain_community.chat_models.oci_data_science" -> "operator" [];
	"langchain_community.chat_models.oci_data_science" -> "typing" [];
	"langchain_community.chat_models.oci_data_science" -> "pydantic" [];
	"langchain_community.chat_models.naver" -> "logging" [];
	"langchain_community.chat_models.naver" -> "typing" [];
	"langchain_community.chat_models.naver" -> "httpx_sse" [];
	"langchain_community.chat_models.naver" -> "pydantic" [];
	"langchain_community.chat_models.naver" -> "typing_extensions" [];
	"langchain_community.chat_models.moonshot" -> "typing" [];
	"langchain_community.chat_models.moonshot" -> "openai" [];
	"langchain_community.llms.moonshot" -> "typing" [];
	"langchain_community.llms.moonshot" -> "requests" [];
	"langchain_community.llms.moonshot" -> "pydantic" [];
	"langchain_community.chat_models.mlx" -> "typing" [];
	"langchain_community.chat_models.mlx" -> "'mlx.core'" [];
	"langchain_community.chat_models.mlx" -> "'mlx_lm.utils'" [];
	"langchain_community.chat_models.mlx" -> "'mlx_lm.sample_utils'" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "logging" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "warnings" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "typing" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "pydantic" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "'mlflow.gateway'" [];
	"langchain_community.chat_models.minimax" -> "json" [];
	"langchain_community.chat_models.minimax" -> "logging" [];
	"langchain_community.chat_models.minimax" -> "contextlib" [];
	"langchain_community.chat_models.minimax" -> "operator" [];
	"langchain_community.chat_models.minimax" -> "typing" [];
	"langchain_community.chat_models.minimax" -> "pydantic" [];
	"langchain_community.chat_models.minimax" -> "httpx_sse" [];
	"langchain_community.chat_models.maritalk" -> "json" [];
	"langchain_community.chat_models.maritalk" -> "http" [];
	"langchain_community.chat_models.maritalk" -> "typing" [];
	"langchain_community.chat_models.maritalk" -> "requests" [];
	"langchain_community.chat_models.maritalk" -> "pydantic" [];
	"langchain_community.chat_models.llamacpp" -> "json" [];
	"langchain_community.chat_models.llamacpp" -> "operator" [];
	"langchain_community.chat_models.llamacpp" -> "pathlib" [];
	"langchain_community.chat_models.llamacpp" -> "typing" [];
	"langchain_community.chat_models.llamacpp" -> "pydantic" [];
	"langchain_community.chat_models.llamacpp" -> "typing_extensions" [];
	"langchain_community.chat_models.llamacpp" -> "llama_cpp" [];
	"langchain_community.chat_models.llama_edge" -> "json" [];
	"langchain_community.chat_models.llama_edge" -> "logging" [];
	"langchain_community.chat_models.llama_edge" -> "re" [];
	"langchain_community.chat_models.llama_edge" -> "typing" [];
	"langchain_community.chat_models.llama_edge" -> "requests" [];
	"langchain_community.chat_models.llama_edge" -> "pydantic" [];
	"langchain_community.chat_models.litellm_router" -> "typing" [];
	"langchain_community.chat_models.litellm_router" -> "'litellm.utils'" [];
	"langchain_community.chat_models.litellm" -> "__future__" [];
	"langchain_community.chat_models.litellm" -> "json" [];
	"langchain_community.chat_models.litellm" -> "logging" [];
	"langchain_community.chat_models.litellm" -> "typing" [];
	"langchain_community.chat_models.litellm" -> "pydantic" [];
	"langchain_community.chat_models.litellm" -> "litellm" [];
	"langchain_community.chat_models.konko" -> "__future__" [];
	"langchain_community.chat_models.konko" -> "logging" [];
	"langchain_community.chat_models.konko" -> "os" [];
	"langchain_community.chat_models.konko" -> "warnings" [];
	"langchain_community.chat_models.konko" -> "typing" [];
	"langchain_community.chat_models.konko" -> "requests" [];
	"langchain_community.chat_models.konko" -> "pydantic" [];
	"langchain_community.chat_models.konko" -> "konko" [];
	"langchain_community.chat_models.kinetica" -> "json" [];
	"langchain_community.chat_models.kinetica" -> "logging" [];
	"langchain_community.chat_models.kinetica" -> "os" [];
	"langchain_community.chat_models.kinetica" -> "re" [];
	"langchain_community.chat_models.kinetica" -> "pathlib" [];
	"langchain_community.chat_models.kinetica" -> "typing" [];
	"langchain_community.chat_models.kinetica" -> "gpudb" [];
	"langchain_community.chat_models.kinetica" -> "pydantic" [];
	"langchain_community.chat_models.jinachat" -> "__future__" [];
	"langchain_community.chat_models.jinachat" -> "logging" [];
	"langchain_community.chat_models.jinachat" -> "typing" [];
	"langchain_community.chat_models.jinachat" -> "pydantic" [];
	"langchain_community.chat_models.jinachat" -> "tenacity" [];
	"langchain_community.chat_models.jinachat" -> "openai" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "logging" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "typing" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "pydantic" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "javelin_sdk" [];
	"langchain_community.chat_models.hunyuan" -> "json" [];
	"langchain_community.chat_models.hunyuan" -> "logging" [];
	"langchain_community.chat_models.hunyuan" -> "typing" [];
	"langchain_community.chat_models.hunyuan" -> "pydantic" [];
	"langchain_community.chat_models.hunyuan" -> "tencentcloud" [];
	"langchain_community.chat_models.hunyuan" -> "'tencentcloud.hunyuan'" [];
	"langchain_community.chat_models.human" -> "io" [];
	"langchain_community.chat_models.human" -> "typing" [];
	"langchain_community.chat_models.human" -> "yaml" [];
	"langchain_community.chat_models.human" -> "pydantic" [];
	"langchain_community.chat_models.huggingface" -> "typing" [];
	"langchain_community.chat_models.huggingface" -> "pydantic" [];
	"langchain_community.chat_models.huggingface" -> "typing_extensions" [];
	"langchain_community.chat_models.huggingface" -> "transformers" [];
	"langchain_community.chat_models.huggingface" -> "huggingface_hub" [];
	"langchain_community.chat_models.gpt_router" -> "__future__" [];
	"langchain_community.chat_models.gpt_router" -> "logging" [];
	"langchain_community.chat_models.gpt_router" -> "typing" [];
	"langchain_community.chat_models.gpt_router" -> "pydantic" [];
	"langchain_community.chat_models.gpt_router" -> "typing_extensions" [];
	"langchain_community.chat_models.gpt_router" -> "gpt_router" [];
	"langchain_community.chat_models.gpt_router" -> "'gpt_router.models'" [];
	"langchain_community.chat_models.gpt_router" -> "'gpt_router.client'" [];
	"langchain_community.chat_models.google_palm" -> "__future__" [];
	"langchain_community.chat_models.google_palm" -> "logging" [];
	"langchain_community.chat_models.google_palm" -> "typing" [];
	"langchain_community.chat_models.google_palm" -> "pydantic" [];
	"langchain_community.chat_models.google_palm" -> "tenacity" [];
	"langchain_community.chat_models.gigachat" -> "__future__" [];
	"langchain_community.chat_models.gigachat" -> "logging" [];
	"langchain_community.chat_models.gigachat" -> "typing" [];
	"langchain_community.chat_models.gigachat" -> "'gigachat.models'" [];
	"langchain_community.chat_models.friendli" -> "__future__" [];
	"langchain_community.chat_models.friendli" -> "typing" [];
	"langchain_community.chat_models.fireworks" -> "typing" [];
	"langchain_community.chat_models.fireworks" -> "pydantic" [];
	"langchain_community.chat_models.fireworks" -> "fireworks" [];
	"langchain_community.chat_models.fireworks" -> "'fireworks.client'" [];
	"langchain_community.chat_models.fake" -> "asyncio" [];
	"langchain_community.chat_models.fake" -> "time" [];
	"langchain_community.chat_models.fake" -> "typing" [];
	"langchain_community.chat_models.everlyai" -> "__future__" [];
	"langchain_community.chat_models.everlyai" -> "logging" [];
	"langchain_community.chat_models.everlyai" -> "sys" [];
	"langchain_community.chat_models.everlyai" -> "warnings" [];
	"langchain_community.chat_models.everlyai" -> "typing" [];
	"langchain_community.chat_models.everlyai" -> "pydantic" [];
	"langchain_community.chat_models.everlyai" -> "tiktoken" [];
	"langchain_community.chat_models.everlyai" -> "openai" [];
	"langchain_community.chat_models.ernie" -> "logging" [];
	"langchain_community.chat_models.ernie" -> "threading" [];
	"langchain_community.chat_models.ernie" -> "typing" [];
	"langchain_community.chat_models.ernie" -> "requests" [];
	"langchain_community.chat_models.ernie" -> "pydantic" [];
	"langchain_community.chat_models.edenai" -> "json" [];
	"langchain_community.chat_models.edenai" -> "warnings" [];
	"langchain_community.chat_models.edenai" -> "operator" [];
	"langchain_community.chat_models.edenai" -> "typing" [];
	"langchain_community.chat_models.edenai" -> "aiohttp" [];
	"langchain_community.chat_models.edenai" -> "pydantic" [];
	"langchain_community.chat_models.edenai" -> "langchain_community" [];
	"langchain_community.chat_models.deepinfra" -> "__future__" [];
	"langchain_community.chat_models.deepinfra" -> "json" [];
	"langchain_community.chat_models.deepinfra" -> "logging" [];
	"langchain_community.chat_models.deepinfra" -> "typing" [];
	"langchain_community.chat_models.deepinfra" -> "aiohttp" [];
	"langchain_community.chat_models.deepinfra" -> "requests" [];
	"langchain_community.chat_models.deepinfra" -> "pydantic" [];
	"langchain_community.chat_models.deepinfra" -> "typing_extensions" [];
	"langchain_community.chat_models.coze" -> "json" [];
	"langchain_community.chat_models.coze" -> "logging" [];
	"langchain_community.chat_models.coze" -> "typing" [];
	"langchain_community.chat_models.coze" -> "requests" [];
	"langchain_community.chat_models.coze" -> "pydantic" [];
	"langchain_community.chat_models.cohere" -> "typing" [];
	"langchain_community.chat_models.cohere" -> "pydantic" [];
	"langchain_community.chat_models.bedrock" -> "re" [];
	"langchain_community.chat_models.bedrock" -> "collections" [];
	"langchain_community.chat_models.bedrock" -> "typing" [];
	"langchain_community.chat_models.bedrock" -> "pydantic" [];
	"langchain_community.chat_models.meta" -> "typing" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "json" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "logging" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "uuid" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "operator" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "typing" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "pydantic" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "qianfan" [];
	"langchain_community.chat_models.baichuan" -> "json" [];
	"langchain_community.chat_models.baichuan" -> "logging" [];
	"langchain_community.chat_models.baichuan" -> "contextlib" [];
	"langchain_community.chat_models.baichuan" -> "typing" [];
	"langchain_community.chat_models.baichuan" -> "requests" [];
	"langchain_community.chat_models.baichuan" -> "pydantic" [];
	"langchain_community.chat_models.baichuan" -> "httpx_sse" [];
	"langchain_community.chat_models.azure_openai" -> "__future__" [];
	"langchain_community.chat_models.azure_openai" -> "logging" [];
	"langchain_community.chat_models.azure_openai" -> "os" [];
	"langchain_community.chat_models.azure_openai" -> "warnings" [];
	"langchain_community.chat_models.azure_openai" -> "typing" [];
	"langchain_community.chat_models.azure_openai" -> "pydantic" [];
	"langchain_community.chat_models.azure_openai" -> "openai" [];
	"langchain_community.chat_models.anyscale" -> "__future__" [];
	"langchain_community.chat_models.anyscale" -> "logging" [];
	"langchain_community.chat_models.anyscale" -> "os" [];
	"langchain_community.chat_models.anyscale" -> "sys" [];
	"langchain_community.chat_models.anyscale" -> "warnings" [];
	"langchain_community.chat_models.anyscale" -> "typing" [];
	"langchain_community.chat_models.anyscale" -> "requests" [];
	"langchain_community.chat_models.anyscale" -> "pydantic" [];
	"langchain_community.chat_models.anyscale" -> "tiktoken" [];
	"langchain_community.chat_models.anyscale" -> "openai" [];
	"langchain_community.chat_models.anthropic" -> "typing" [];
	"langchain_community.chat_models.anthropic" -> "pydantic" [];
	"langchain.retrievers" -> "typing" [];
	"langchain_community.retrievers" -> "importlib" [];
	"langchain_community.retrievers" -> "typing" [];
	"langchain_community.retrievers.zilliz" -> "warnings" [];
	"langchain_community.retrievers.zilliz" -> "typing" [];
	"langchain_community.retrievers.zilliz" -> "pydantic" [];
	"langchain_community.retrievers.zep_cloud" -> "__future__" [];
	"langchain_community.retrievers.zep_cloud" -> "typing" [];
	"langchain_community.retrievers.zep_cloud" -> "pydantic" [];
	"langchain_community.retrievers.zep_cloud" -> "zep_cloud" [];
	"langchain_community.retrievers.zep_cloud" -> "'zep_cloud.client'" [];
	"langchain_community.retrievers.zep" -> "__future__" [];
	"langchain_community.retrievers.zep" -> "enum" [];
	"langchain_community.retrievers.zep" -> "typing" [];
	"langchain_community.retrievers.zep" -> "pydantic" [];
	"langchain_community.retrievers.zep" -> "'zep_python.memory'" [];
	"langchain_community.retrievers.zep" -> "zep_python" [];
	"langchain_community.retrievers.you" -> "typing" [];
	"langchain_community.retrievers.wikipedia" -> "typing" [];
	"langchain_community.retrievers.web_research" -> "logging" [];
	"langchain_community.retrievers.web_research" -> "re" [];
	"langchain_community.retrievers.web_research" -> "typing" [];
	"langchain_community.retrievers.web_research" -> "langchain_text_splitters" [];
	"langchain_community.retrievers.web_research" -> "pydantic" [];
	"langchain_community.document_transformers" -> "importlib" [];
	"langchain_community.document_transformers" -> "typing" [];
	"langchain_community.document_transformers.openai_functions" -> "typing" [];
	"langchain_community.document_transformers.openai_functions" -> "pydantic" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "asyncio" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "json" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "uuid" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "typing" [];
	"langchain_community.tools.nuclia.tool" -> "asyncio" [];
	"langchain_community.tools.nuclia.tool" -> "base64" [];
	"langchain_community.tools.nuclia.tool" -> "logging" [];
	"langchain_community.tools.nuclia.tool" -> "mimetypes" [];
	"langchain_community.tools.nuclia.tool" -> "os" [];
	"langchain_community.tools.nuclia.tool" -> "typing" [];
	"langchain_community.tools.nuclia.tool" -> "requests" [];
	"langchain_community.tools.nuclia.tool" -> "pydantic" [];
	"langchain_community.tools.nuclia.tool" -> "nucliadb_protos" [];
	"langchain_community.document_transformers.markdownify" -> "re" [];
	"langchain_community.document_transformers.markdownify" -> "typing" [];
	"langchain_community.document_transformers.markdownify" -> "markdownify" [];
	"langchain_community.document_transformers.long_context_reorder" -> "typing" [];
	"langchain_community.document_transformers.long_context_reorder" -> "pydantic" [];
	"langchain_community.document_transformers.html2text" -> "typing" [];
	"langchain_community.document_transformers.html2text" -> "html2text" [];
	"langchain_community.document_transformers.google_translate" -> "typing" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "typing" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "numpy" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "pydantic" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "'sklearn.cluster'" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "__future__" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "asyncio" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "typing" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "doctran" [];
	"langchain_community.document_transformers.doctran_text_qa" -> "typing" [];
	"langchain_community.document_transformers.doctran_text_qa" -> "doctran" [];
	"langchain_community.document_transformers.doctran_text_extract" -> "typing" [];
	"langchain_community.document_transformers.doctran_text_extract" -> "doctran" [];
	"langchain_community.document_transformers.beautiful_soup_transformer" -> "typing" [];
	"langchain_community.document_transformers.beautiful_soup_transformer" -> "bs4" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "__future__" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "typing" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "uuid" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "pydantic" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "weaviate" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "'weaviate.util'" [];
	"langchain_community.retrievers.vespa_retriever" -> "__future__" [];
	"langchain_community.retrievers.vespa_retriever" -> "json" [];
	"langchain_community.retrievers.vespa_retriever" -> "typing" [];
	"langchain_community.retrievers.vespa_retriever" -> "vespa" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "__future__" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "importlib" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "os" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "pathlib" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "typing" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "pydantic" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "thirdai" [];
	"langchain_community.retrievers.tfidf" -> "__future__" [];
	"langchain_community.retrievers.tfidf" -> "pickle" [];
	"langchain_community.retrievers.tfidf" -> "pathlib" [];
	"langchain_community.retrievers.tfidf" -> "typing" [];
	"langchain_community.retrievers.tfidf" -> "pydantic" [];
	"langchain_community.retrievers.tfidf" -> "'sklearn.feature_extraction'" [];
	"langchain_community.retrievers.tfidf" -> "'sklearn.metrics'" [];
	"langchain_community.retrievers.tfidf" -> "joblib" [];
	"langchain_community.retrievers.tavily_search_api" -> "os" [];
	"langchain_community.retrievers.tavily_search_api" -> "enum" [];
	"langchain_community.retrievers.tavily_search_api" -> "typing" [];
	"langchain_community.retrievers.tavily_search_api" -> "tavily" [];
	"langchain_community.retrievers.svm" -> "__future__" [];
	"langchain_community.retrievers.svm" -> "typing" [];
	"langchain_community.retrievers.svm" -> "numpy" [];
	"langchain_community.retrievers.svm" -> "pydantic" [];
	"langchain_community.retrievers.svm" -> "sklearn" [];
	"langchain_community.retrievers.remote_retriever" -> "typing" [];
	"langchain_community.retrievers.remote_retriever" -> "aiohttp" [];
	"langchain_community.retrievers.remote_retriever" -> "requests" [];
	"langchain_community.retrievers.rememberizer" -> "typing" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "uuid" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "itertools" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "typing" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "pydantic" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "grpc" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "qdrant_client" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "'qdrant_client.http'" [];
	"langchain_community.retrievers.pubmed" -> "typing" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "hashlib" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "typing" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "pydantic" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "pinecone_text" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "'pinecone_text.sparse'" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "'pinecone_text.hybrid'" [];
	"langchain_community.retrievers.outline" -> "typing" [];
	"langchain_community.retrievers.needle" -> "typing" [];
	"langchain_community.retrievers.needle" -> "pydantic" [];
	"langchain_community.retrievers.needle" -> "'needle.v1'" [];
	"langchain_community.retrievers.nanopq" -> "__future__" [];
	"langchain_community.retrievers.nanopq" -> "typing" [];
	"langchain_community.retrievers.nanopq" -> "numpy" [];
	"langchain_community.retrievers.nanopq" -> "pydantic" [];
	"langchain_community.retrievers.nanopq" -> "nanopq" [];
	"langchain_community.retrievers.milvus" -> "warnings" [];
	"langchain_community.retrievers.milvus" -> "typing" [];
	"langchain_community.retrievers.milvus" -> "pydantic" [];
	"langchain_community.retrievers.metal" -> "typing" [];
	"langchain_community.retrievers.metal" -> "pydantic" [];
	"langchain_community.retrievers.metal" -> "metal_sdk" [];
	"langchain_community.retrievers.llama_index" -> "typing" [];
	"langchain_community.retrievers.llama_index" -> "pydantic" [];
	"langchain_community.retrievers.llama_index" -> "llama_index" [];
	"langchain_community.retrievers.llama_index" -> "'llama_index.core'" [];
	"langchain_community.retrievers.knn" -> "__future__" [];
	"langchain_community.retrievers.knn" -> "typing" [];
	"langchain_community.retrievers.knn" -> "numpy" [];
	"langchain_community.retrievers.knn" -> "pydantic" [];
	"langchain_community.retrievers.kendra" -> "re" [];
	"langchain_community.retrievers.kendra" -> "abc" [];
	"langchain_community.retrievers.kendra" -> "typing" [];
	"langchain_community.retrievers.kendra" -> "pydantic" [];
	"langchain_community.retrievers.kendra" -> "typing_extensions" [];
	"langchain_community.retrievers.kendra" -> "boto3" [];
	"langchain_community.retrievers.kay" -> "__future__" [];
	"langchain_community.retrievers.kay" -> "typing" [];
	"langchain_community.retrievers.kay" -> "kay" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "__future__" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "typing" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "pydantic" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "'google.cloud.discoveryengine_v1beta'" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "json" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "warnings" [];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" -> "typing" [];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" -> "'google.cloud.contentwarehouse_v1'" [];
	"langchain_community.retrievers.embedchain" -> "__future__" [];
	"langchain_community.retrievers.embedchain" -> "typing" [];
	"langchain_community.retrievers.embedchain" -> "embedchain" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "__future__" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "uuid" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "typing" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "elasticsearch" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "'elasticsearch.helpers'" [];
	"langchain_community.retrievers.dria_index" -> "typing" [];
	"langchain_community.retrievers.docarray" -> "enum" [];
	"langchain_community.retrievers.docarray" -> "typing" [];
	"langchain_community.retrievers.docarray" -> "numpy" [];
	"langchain_community.retrievers.docarray" -> "pydantic" [];
	"langchain_community.retrievers.docarray" -> "'docarray.index'" [];
	"langchain_community.retrievers.cohere_rag_retriever" -> "__future__" [];
	"langchain_community.retrievers.cohere_rag_retriever" -> "typing" [];
	"langchain_community.retrievers.cohere_rag_retriever" -> "pydantic" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "__future__" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "typing" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "aiohttp" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "requests" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "pydantic" [];
	"langchain_community.retrievers.chaindesk" -> "typing" [];
	"langchain_community.retrievers.chaindesk" -> "aiohttp" [];
	"langchain_community.retrievers.chaindesk" -> "requests" [];
	"langchain_community.retrievers.breebs" -> "typing" [];
	"langchain_community.retrievers.breebs" -> "requests" [];
	"langchain_community.retrievers.bm25" -> "__future__" [];
	"langchain_community.retrievers.bm25" -> "typing" [];
	"langchain_community.retrievers.bm25" -> "pydantic" [];
	"langchain_community.retrievers.bm25" -> "rank_bm25" [];
	"langchain_community.retrievers.bedrock" -> "typing" [];
	"langchain_community.retrievers.bedrock" -> "pydantic" [];
	"langchain_community.retrievers.bedrock" -> "boto3" [];
	"langchain_community.retrievers.bedrock" -> "'botocore.client'" [];
	"langchain_community.retrievers.bedrock" -> "'botocore.exceptions'" [];
	"langchain_community.retrievers.azure_ai_search" -> "__future__" [];
	"langchain_community.retrievers.azure_ai_search" -> "json" [];
	"langchain_community.retrievers.azure_ai_search" -> "typing" [];
	"langchain_community.retrievers.azure_ai_search" -> "aiohttp" [];
	"langchain_community.retrievers.azure_ai_search" -> "requests" [];
	"langchain_community.retrievers.azure_ai_search" -> "pydantic" [];
	"langchain_community.retrievers.asknews" -> "os" [];
	"langchain_community.retrievers.asknews" -> "re" [];
	"langchain_community.retrievers.asknews" -> "typing" [];
	"langchain_community.retrievers.asknews" -> "asknews_sdk" [];
	"langchain_community.retrievers.asknews" -> "'asknews_sdk.dto'" [];
	"langchain_community.retrievers.arxiv" -> "typing" [];
	"langchain_community.retrievers.arcee" -> "typing" [];
	"langchain_community.retrievers.arcee" -> "pydantic" [];
	"langchain.retrievers.time_weighted_retriever" -> "datetime" [];
	"langchain.retrievers.time_weighted_retriever" -> "copy" [];
	"langchain.retrievers.time_weighted_retriever" -> "typing" [];
	"langchain.retrievers.time_weighted_retriever" -> "pydantic" [];
	"langchain.retrievers.self_query.base" -> "logging" [];
	"langchain.retrievers.self_query.base" -> "typing" [];
	"langchain.retrievers.self_query.base" -> "pydantic" [];
	"langchain.retrievers.self_query.base" -> "langchain_community" [];
	"langchain.retrievers.self_query.base" -> "langchain_astradb" [];
	"langchain.retrievers.self_query.base" -> "langchain_elasticsearch" [];
	"langchain.retrievers.self_query.base" -> "langchain_pinecone" [];
	"langchain.retrievers.self_query.base" -> "langchain_mongodb" [];
	"langchain.retrievers.self_query.base" -> "langchain_neo4j" [];
	"langchain.retrievers.self_query.base" -> "langchain_chroma" [];
	"langchain.retrievers.self_query.base" -> "langchain_postgres" [];
	"langchain.retrievers.self_query.base" -> "langchain_qdrant" [];
	"langchain.retrievers.self_query.base" -> "langchain_weaviate" [];
	"langchain_community.query_constructors.hanavector" -> "typing" [];
	"langchain_neo4j" -> "importlib" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "__future__" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "logging" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "os" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "hashlib" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "typing" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "neo4j" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "numpy" [];
	"langchain_neo4j.vectorstores.utils" -> "enum" [];
	"neo4j_graphrag.utils.version_utils" -> "typing" [];
	"neo4j_graphrag.utils.version_utils" -> "neo4j" [];
	"neo4j_graphrag.utils.driver_config" -> "neo4j" [];
	"neo4j_graphrag.utils.driver_config" -> "neo4j_graphrag" [];
	"neo4j_graphrag.types" -> "__future__" [];
	"neo4j_graphrag.types" -> "warnings" [];
	"neo4j_graphrag.types" -> "enum" [];
	"neo4j_graphrag.types" -> "typing" [];
	"neo4j_graphrag.types" -> "neo4j" [];
	"neo4j_graphrag.types" -> "pydantic" [];
	"neo4j_graphrag.types" -> "typing_extensions" [];
	"neo4j_graphrag.utils.validation" -> "__future__" [];
	"neo4j_graphrag.utils.validation" -> "importlib" [];
	"neo4j_graphrag.utils.validation" -> "typing" [];
	"neo4j_graphrag.neo4j_queries" -> "__future__" [];
	"neo4j_graphrag.neo4j_queries" -> "warnings" [];
	"neo4j_graphrag.neo4j_queries" -> "typing" [];
	"neo4j_graphrag.filters" -> "__future__" [];
	"neo4j_graphrag.filters" -> "re" [];
	"neo4j_graphrag.filters" -> "collections" [];
	"neo4j_graphrag.filters" -> "typing" [];
	"neo4j_graphrag.exceptions" -> "__future__" [];
	"neo4j_graphrag.exceptions" -> "pydantic_core" [];
	"neo4j_graphrag.indexes" -> "__future__" [];
	"neo4j_graphrag.indexes" -> "logging" [];
	"neo4j_graphrag.indexes" -> "warnings" [];
	"neo4j_graphrag.indexes" -> "typing" [];
	"neo4j_graphrag.indexes" -> "neo4j" [];
	"neo4j_graphrag.indexes" -> "pydantic" [];
	"langchain_core.vectorstores.utils" -> "__future__" [];
	"langchain_core.vectorstores.utils" -> "logging" [];
	"langchain_core.vectorstores.utils" -> "typing" [];
	"langchain_core.vectorstores.utils" -> "numpy" [];
	"langchain_core.vectorstores.utils" -> "simsimd" [];
	"langchain_neo4j.graphs.neo4j_graph" -> "hashlib" [];
	"langchain_neo4j.graphs.neo4j_graph" -> "typing" [];
	"langchain_neo4j.graphs.neo4j_graph" -> "neo4j" [];
	"langchain_neo4j.graphs.graph_store" -> "typing" [];
	"langchain_neo4j.graphs.graph_document" -> "__future__" [];
	"langchain_neo4j.graphs.graph_document" -> "typing" [];
	"langchain_neo4j.graphs.graph_document" -> "pydantic" [];
	"neo4j_graphrag.schema" -> "__future__" [];
	"neo4j_graphrag.schema" -> "typing" [];
	"neo4j_graphrag.schema" -> "neo4j" [];
	"langchain_neo4j.chat_message_histories.neo4j" -> "typing" [];
	"langchain_neo4j.chat_message_histories.neo4j" -> "neo4j" [];
	"neo4j_graphrag.message_history" -> "threading" [];
	"neo4j_graphrag.message_history" -> "abc" [];
	"neo4j_graphrag.message_history" -> "typing" [];
	"neo4j_graphrag.message_history" -> "neo4j" [];
	"neo4j_graphrag.message_history" -> "pydantic" [];
	"langchain_neo4j.chains.graph_qa.cypher" -> "__future__" [];
	"langchain_neo4j.chains.graph_qa.cypher" -> "typing" [];
	"langchain_neo4j.chains.graph_qa.cypher" -> "pydantic" [];
	"langchain_neo4j.chains.graph_qa.cypher_utils" -> "re" [];
	"langchain_neo4j.chains.graph_qa.cypher_utils" -> "collections" [];
	"langchain_neo4j.chains.graph_qa.cypher_utils" -> "typing" [];
	"neo4j_graphrag.retrievers.text2cypher" -> "__future__" [];
	"neo4j_graphrag.retrievers.text2cypher" -> "logging" [];
	"neo4j_graphrag.retrievers.text2cypher" -> "re" [];
	"neo4j_graphrag.retrievers.text2cypher" -> "typing" [];
	"neo4j_graphrag.retrievers.text2cypher" -> "neo4j" [];
	"neo4j_graphrag.retrievers.text2cypher" -> "pydantic" [];
	"neo4j_graphrag.retrievers.external.qdrant.qdrant" -> "__future__" [];
	"neo4j_graphrag.retrievers.external.qdrant.qdrant" -> "logging" [];
	"neo4j_graphrag.retrievers.external.qdrant.qdrant" -> "typing" [];
	"neo4j_graphrag.retrievers.external.qdrant.qdrant" -> "neo4j" [];
	"neo4j_graphrag.retrievers.external.qdrant.qdrant" -> "pydantic" [];
	"neo4j_graphrag.retrievers.external.qdrant.qdrant" -> "qdrant_client" [];
	"neo4j_graphrag.retrievers.external.utils" -> "__future__" [];
	"neo4j_graphrag.retrievers.external.utils" -> "typing" [];
	"neo4j_graphrag.retrievers.external.qdrant.types" -> "__future__" [];
	"neo4j_graphrag.retrievers.external.qdrant.types" -> "typing" [];
	"neo4j_graphrag.retrievers.external.qdrant.types" -> "neo4j" [];
	"neo4j_graphrag.retrievers.external.qdrant.types" -> "pydantic" [];
	"neo4j_graphrag.retrievers.external.qdrant.types" -> "qdrant_client" [];
	"neo4j_graphrag.embeddings.base" -> "__future__" [];
	"neo4j_graphrag.embeddings.base" -> "abc" [];
	"neo4j_graphrag.embeddings.vertexai" -> "__future__" [];
	"neo4j_graphrag.embeddings.vertexai" -> "typing" [];
	"neo4j_graphrag.embeddings.vertexai" -> "vertexai" [];
	"neo4j_graphrag.embeddings.sentence_transformers" -> "typing" [];
	"neo4j_graphrag.embeddings.sentence_transformers" -> "numpy" [];
	"neo4j_graphrag.embeddings.sentence_transformers" -> "sentence_transformers" [];
	"neo4j_graphrag.embeddings.sentence_transformers" -> "torch" [];
	"neo4j_graphrag.embeddings.openai" -> "__future__" [];
	"neo4j_graphrag.embeddings.openai" -> "abc" [];
	"neo4j_graphrag.embeddings.openai" -> "typing" [];
	"neo4j_graphrag.embeddings.openai" -> "openai" [];
	"neo4j_graphrag.embeddings.ollama" -> "__future__" [];
	"neo4j_graphrag.embeddings.ollama" -> "typing" [];
	"neo4j_graphrag.embeddings.ollama" -> "ollama" [];
	"neo4j_graphrag.embeddings.mistral" -> "__future__" [];
	"neo4j_graphrag.embeddings.mistral" -> "os" [];
	"neo4j_graphrag.embeddings.mistral" -> "typing" [];
	"neo4j_graphrag.embeddings.mistral" -> "mistralai" [];
	"neo4j_graphrag.embeddings.cohere" -> "__future__" [];
	"neo4j_graphrag.embeddings.cohere" -> "typing" [];
	"neo4j_graphrag.embeddings.cohere" -> "cohere" [];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" -> "__future__" [];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" -> "logging" [];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" -> "typing" [];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" -> "neo4j" [];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" -> "weaviate" [];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" -> "pydantic" [];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" -> "'weaviate.client'" [];
	"neo4j_graphrag.retrievers.external.weaviate.types" -> "__future__" [];
	"neo4j_graphrag.retrievers.external.weaviate.types" -> "typing" [];
	"neo4j_graphrag.retrievers.external.weaviate.types" -> "neo4j" [];
	"neo4j_graphrag.retrievers.external.weaviate.types" -> "pydantic" [];
	"neo4j_graphrag.retrievers.external.weaviate.types" -> "'weaviate.client'" [];
	"neo4j_graphrag.retrievers.external.weaviate.types" -> "'weaviate.collections'" [];
	"neo4j_graphrag.retrievers.external.pinecone.pinecone" -> "__future__" [];
	"neo4j_graphrag.retrievers.external.pinecone.pinecone" -> "logging" [];
	"neo4j_graphrag.retrievers.external.pinecone.pinecone" -> "typing" [];
	"neo4j_graphrag.retrievers.external.pinecone.pinecone" -> "neo4j" [];
	"neo4j_graphrag.retrievers.external.pinecone.pinecone" -> "pydantic" [];
	"neo4j_graphrag.retrievers.external.pinecone.pinecone" -> "pinecone" [];
	"neo4j_graphrag.retrievers.external.pinecone.types" -> "__future__" [];
	"neo4j_graphrag.retrievers.external.pinecone.types" -> "typing" [];
	"neo4j_graphrag.retrievers.external.pinecone.types" -> "neo4j" [];
	"neo4j_graphrag.retrievers.external.pinecone.types" -> "pinecone" [];
	"neo4j_graphrag.retrievers.external.pinecone.types" -> "pydantic" [];
	"neo4j_graphrag.retrievers.vector" -> "__future__" [];
	"neo4j_graphrag.retrievers.vector" -> "logging" [];
	"neo4j_graphrag.retrievers.vector" -> "typing" [];
	"neo4j_graphrag.retrievers.vector" -> "neo4j" [];
	"neo4j_graphrag.retrievers.vector" -> "pydantic" [];
	"neo4j_graphrag.retrievers.hybrid" -> "__future__" [];
	"neo4j_graphrag.retrievers.hybrid" -> "copy" [];
	"neo4j_graphrag.retrievers.hybrid" -> "logging" [];
	"neo4j_graphrag.retrievers.hybrid" -> "typing" [];
	"neo4j_graphrag.retrievers.hybrid" -> "neo4j" [];
	"neo4j_graphrag.retrievers.hybrid" -> "pydantic" [];
	"neo4j_graphrag.retrievers.base" -> "__future__" [];
	"neo4j_graphrag.retrievers.base" -> "inspect" [];
	"neo4j_graphrag.retrievers.base" -> "types" [];
	"neo4j_graphrag.retrievers.base" -> "abc" [];
	"neo4j_graphrag.retrievers.base" -> "typing" [];
	"neo4j_graphrag.retrievers.base" -> "neo4j" [];
	"neo4j_graphrag.retrievers.base" -> "typing_extensions" [];
	"neo4j_graphrag.llm.vertexai_llm" -> "__future__" [];
	"neo4j_graphrag.llm.vertexai_llm" -> "typing" [];
	"neo4j_graphrag.llm.vertexai_llm" -> "pydantic" [];
	"neo4j_graphrag.llm.types" -> "warnings" [];
	"neo4j_graphrag.llm.types" -> "typing" [];
	"neo4j_graphrag.llm.types" -> "pydantic" [];
	"neo4j_graphrag.llm.openai_llm" -> "__future__" [];
	"neo4j_graphrag.llm.openai_llm" -> "abc" [];
	"neo4j_graphrag.llm.openai_llm" -> "typing" [];
	"neo4j_graphrag.llm.openai_llm" -> "pydantic" [];
	"neo4j_graphrag.llm.openai_llm" -> "openai" [];
	"neo4j_graphrag.llm.ollama_llm" -> "__future__" [];
	"neo4j_graphrag.llm.ollama_llm" -> "typing" [];
	"neo4j_graphrag.llm.ollama_llm" -> "pydantic" [];
	"neo4j_graphrag.llm.ollama_llm" -> "ollama" [];
	"neo4j_graphrag.llm.mistralai_llm" -> "__future__" [];
	"neo4j_graphrag.llm.mistralai_llm" -> "os" [];
	"neo4j_graphrag.llm.mistralai_llm" -> "typing" [];
	"neo4j_graphrag.llm.mistralai_llm" -> "pydantic" [];
	"neo4j_graphrag.llm.mistralai_llm" -> "mistralai" [];
	"neo4j_graphrag.llm.mistralai_llm" -> "'mistralai.models'" [];
	"neo4j_graphrag.llm.cohere_llm" -> "__future__" [];
	"neo4j_graphrag.llm.cohere_llm" -> "typing" [];
	"neo4j_graphrag.llm.cohere_llm" -> "pydantic" [];
	"neo4j_graphrag.llm.cohere_llm" -> "cohere" [];
	"neo4j_graphrag.llm.base" -> "__future__" [];
	"neo4j_graphrag.llm.base" -> "abc" [];
	"neo4j_graphrag.llm.base" -> "typing" [];
	"neo4j_graphrag.llm.anthropic_llm" -> "__future__" [];
	"neo4j_graphrag.llm.anthropic_llm" -> "typing" [];
	"neo4j_graphrag.llm.anthropic_llm" -> "pydantic" [];
	"neo4j_graphrag.llm.anthropic_llm" -> "anthropic" [];
	"neo4j_graphrag.generation.prompts" -> "__future__" [];
	"neo4j_graphrag.generation.prompts" -> "warnings" [];
	"neo4j_graphrag.generation.prompts" -> "typing" [];
	"neo4j_graphrag.generation.graphrag" -> "__future__" [];
	"neo4j_graphrag.generation.graphrag" -> "logging" [];
	"neo4j_graphrag.generation.graphrag" -> "warnings" [];
	"neo4j_graphrag.generation.graphrag" -> "typing" [];
	"neo4j_graphrag.generation.graphrag" -> "pydantic" [];
	"neo4j_graphrag.generation.types" -> "__future__" [];
	"neo4j_graphrag.generation.types" -> "typing" [];
	"neo4j_graphrag.generation.types" -> "pydantic" [];
	"langchain_community.query_constructors.weaviate" -> "datetime" [];
	"langchain_community.query_constructors.weaviate" -> "typing" [];
	"langchain_community.query_constructors.vectara" -> "typing" [];
	"langchain_community.query_constructors.timescalevector" -> "__future__" [];
	"langchain_community.query_constructors.timescalevector" -> "typing" [];
	"langchain_community.query_constructors.timescalevector" -> "timescale_vector" [];
	"langchain_community.query_constructors.supabase" -> "typing" [];
	"langchain_community.query_constructors.redis" -> "__future__" [];
	"langchain_community.query_constructors.redis" -> "typing" [];
	"langchain_community.query_constructors.qdrant" -> "__future__" [];
	"langchain_community.query_constructors.qdrant" -> "typing" [];
	"langchain_community.query_constructors.qdrant" -> "'qdrant_client.http'" [];
	"langchain_community.query_constructors.pinecone" -> "typing" [];
	"langchain_community.query_constructors.pgvector" -> "typing" [];
	"langchain_community.query_constructors.opensearch" -> "typing" [];
	"langchain_community.query_constructors.neo4j" -> "typing" [];
	"langchain_community.query_constructors.myscale" -> "re" [];
	"langchain_community.query_constructors.myscale" -> "typing" [];
	"langchain_community.query_constructors.mongodb_atlas" -> "typing" [];
	"langchain_community.query_constructors.milvus" -> "typing" [];
	"langchain_community.query_constructors.elasticsearch" -> "typing" [];
	"langchain_community.query_constructors.dingo" -> "typing" [];
	"langchain_community.query_constructors.deeplake" -> "typing" [];
	"langchain_community.query_constructors.databricks_vector_search" -> "collections" [];
	"langchain_community.query_constructors.databricks_vector_search" -> "itertools" [];
	"langchain_community.query_constructors.databricks_vector_search" -> "typing" [];
	"langchain_community.query_constructors.dashvector" -> "typing" [];
	"langchain_community.query_constructors.chroma" -> "typing" [];
	"langchain_community.query_constructors.astradb" -> "typing" [];
	"langchain.retrievers.re_phraser" -> "logging" [];
	"langchain.retrievers.parent_document_retriever" -> "uuid" [];
	"langchain.retrievers.parent_document_retriever" -> "typing" [];
	"langchain.retrievers.parent_document_retriever" -> "langchain_text_splitters" [];
	"langchain.retrievers.multi_vector" -> "enum" [];
	"langchain.retrievers.multi_vector" -> "typing" [];
	"langchain.retrievers.multi_vector" -> "pydantic" [];
	"langchain.storage._lc_store" -> "typing" [];
	"langchain.storage" -> "typing" [];
	"langchain_community.storage" -> "importlib" [];
	"langchain_community.storage" -> "typing" [];
	"langchain_community.storage.upstash_redis" -> "typing" [];
	"langchain_community.storage.upstash_redis" -> "upstash_redis" [];
	"langchain_community.storage.sql" -> "contextlib" [];
	"langchain_community.storage.sql" -> "pathlib" [];
	"langchain_community.storage.sql" -> "typing" [];
	"langchain_community.storage.sql" -> "sqlalchemy" [];
	"langchain_community.storage.redis" -> "typing" [];
	"langchain_community.storage.redis" -> "redis" [];
	"langchain_community.storage.mongodb" -> "typing" [];
	"langchain_community.storage.mongodb" -> "pymongo" [];
	"langchain_community.storage.cassandra" -> "__future__" [];
	"langchain_community.storage.cassandra" -> "asyncio" [];
	"langchain_community.storage.cassandra" -> "typing" [];
	"langchain_community.storage.cassandra" -> "'cassandra.cluster'" [];
	"langchain_community.storage.cassandra" -> "'cassandra.query'" [];
	"langchain_community.storage.cassandra" -> "'cassio.config'" [];
	"langchain_community.storage.astradb" -> "__future__" [];
	"langchain_community.storage.astradb" -> "base64" [];
	"langchain_community.storage.astradb" -> "abc" [];
	"langchain_community.storage.astradb" -> "typing" [];
	"langchain_community.storage.astradb" -> "'astrapy.db'" [];
	"langchain.storage.file_system" -> "os" [];
	"langchain.storage.file_system" -> "re" [];
	"langchain.storage.file_system" -> "time" [];
	"langchain.storage.file_system" -> "pathlib" [];
	"langchain.storage.file_system" -> "typing" [];
	"langchain.storage.encoder_backed" -> "typing" [];
	"langchain_core.stores" -> "abc" [];
	"langchain_core.stores" -> "typing" [];
	"langchain.retrievers.multi_query" -> "asyncio" [];
	"langchain.retrievers.multi_query" -> "logging" [];
	"langchain.retrievers.multi_query" -> "typing" [];
	"langchain.retrievers.merger_retriever" -> "asyncio" [];
	"langchain.retrievers.ensemble" -> "asyncio" [];
	"langchain.retrievers.ensemble" -> "collections" [];
	"langchain.retrievers.ensemble" -> "itertools" [];
	"langchain.retrievers.ensemble" -> "typing" [];
	"langchain.retrievers.ensemble" -> "pydantic" [];
	"langchain.retrievers.contextual_compression" -> "typing" [];
	"langchain.retrievers.contextual_compression" -> "pydantic" [];
	"langchain.retrievers.document_compressors.base" -> "inspect" [];
	"langchain.retrievers.document_compressors.base" -> "typing" [];
	"langchain.retrievers.document_compressors.base" -> "pydantic" [];
	"langchain.retrievers.document_compressors" -> "importlib" [];
	"langchain.retrievers.document_compressors" -> "typing" [];
	"langchain.retrievers.document_compressors.listwise_rerank" -> "typing" [];
	"langchain.retrievers.document_compressors.listwise_rerank" -> "pydantic" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "typing" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "pydantic" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "numpy" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "__future__" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "operator" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "typing" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "pydantic" [];
	"langchain.retrievers.document_compressors.cross_encoder" -> "abc" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "__future__" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "copy" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "typing" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "pydantic" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "cohere" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "typing" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "pydantic" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "__future__" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "typing" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "pydantic" [];
	"langchain_core.vectorstores" -> "typing" [];
	"langchain_core.vectorstores.in_memory" -> "__future__" [];
	"langchain_core.vectorstores.in_memory" -> "json" [];
	"langchain_core.vectorstores.in_memory" -> "uuid" [];
	"langchain_core.vectorstores.in_memory" -> "pathlib" [];
	"langchain_core.vectorstores.in_memory" -> "typing" [];
	"langchain_core.vectorstores.in_memory" -> "typing_extensions" [];
	"langchain_core.vectorstores.in_memory" -> "numpy" [];
	"langchain_core.vectorstores.base" -> "__future__" [];
	"langchain_core.vectorstores.base" -> "logging" [];
	"langchain_core.vectorstores.base" -> "math" [];
	"langchain_core.vectorstores.base" -> "warnings" [];
	"langchain_core.vectorstores.base" -> "abc" [];
	"langchain_core.vectorstores.base" -> "itertools" [];
	"langchain_core.vectorstores.base" -> "typing" [];
	"langchain_core.vectorstores.base" -> "pydantic" [];
	"langchain_core.vectorstores.base" -> "typing_extensions" [];
	"langchain_core.documents" -> "typing" [];
	"langchain_core.documents.transformers" -> "__future__" [];
	"langchain_core.documents.transformers" -> "abc" [];
	"langchain_core.documents.transformers" -> "typing" [];
	"langchain_core.documents.compressor" -> "__future__" [];
	"langchain_core.documents.compressor" -> "abc" [];
	"langchain_core.documents.compressor" -> "typing" [];
	"langchain_core.documents.compressor" -> "pydantic" [];
	"langchain.embeddings" -> "logging" [];
	"langchain.embeddings" -> "typing" [];
	"langchain.embeddings.cache" -> "__future__" [];
	"langchain.embeddings.cache" -> "hashlib" [];
	"langchain.embeddings.cache" -> "json" [];
	"langchain.embeddings.cache" -> "uuid" [];
	"langchain.embeddings.cache" -> "functools" [];
	"langchain.embeddings.cache" -> "typing" [];
	"langchain.embeddings.base" -> "functools" [];
	"langchain.embeddings.base" -> "importlib" [];
	"langchain.embeddings.base" -> "typing" [];
	"langchain.embeddings.base" -> "langchain_openai" [];
	"langchain.embeddings.base" -> "langchain_google_vertexai" [];
	"langchain.embeddings.base" -> "langchain_aws" [];
	"langchain.embeddings.base" -> "langchain_cohere" [];
	"langchain.embeddings.base" -> "langchain_mistralai" [];
	"langchain.embeddings.base" -> "langchain_huggingface" [];
	"langchain.embeddings.base" -> "langchain_ollama" [];
	"langchain_community.vectorstores.neo4j_vector" -> "__future__" [];
	"langchain_community.vectorstores.neo4j_vector" -> "enum" [];
	"langchain_community.vectorstores.neo4j_vector" -> "logging" [];
	"langchain_community.vectorstores.neo4j_vector" -> "os" [];
	"langchain_community.vectorstores.neo4j_vector" -> "hashlib" [];
	"langchain_community.vectorstores.neo4j_vector" -> "typing" [];
	"langchain_community.vectorstores.neo4j_vector" -> "numpy" [];
	"langchain_community.vectorstores.neo4j_vector" -> "neo4j" [];
	"langchain.text_splitter" -> "langchain_text_splitters" [];
	"langchain.prompts" -> "typing" [];
	"langchain_community.example_selectors.ngram_overlap" -> "typing" [];
	"langchain_community.example_selectors.ngram_overlap" -> "numpy" [];
	"langchain_community.example_selectors.ngram_overlap" -> "pydantic" [];
	"langchain_community.example_selectors.ngram_overlap" -> "'nltk.translate'" [];
	"google.generativeai" -> "__future__" [];
	"google.generativeai.models" -> "__future__" [];
	"google.generativeai.models" -> "typing" [];
	"google.generativeai.operations" -> "__future__" [];
	"google.generativeai.operations" -> "functools" [];
	"google.generativeai.operations" -> "typing" [];
	"google.generativeai.generative_models" -> "__future__" [];
	"google.generativeai.generative_models" -> "textwrap" [];
	"google.generativeai.generative_models" -> "typing" [];
	"google.generativeai.generative_models" -> "reprlib" [];
	"google.generativeai.files" -> "__future__" [];
	"google.generativeai.files" -> "os" [];
	"google.generativeai.files" -> "pathlib" [];
	"google.generativeai.files" -> "mimetypes" [];
	"google.generativeai.files" -> "typing" [];
	"google.generativeai.files" -> "logging" [];
	"google.generativeai.files" -> "itertools" [];
	"google.generativeai.files" -> "io" [];
	"google.generativeai.embedding" -> "__future__" [];
	"google.generativeai.embedding" -> "itertools" [];
	"google.generativeai.embedding" -> "typing" [];
	"wx.lib.newevent" -> "wx" [];
	"wx.lib.newevent" -> "time" [];
	"wx.lib.newevent" -> "threading" [];
	"wx.lib.scrolledpanel" -> "wx" [];
	"wx.lib.scrolledpanel" -> "math" [];
	"wx.grid" -> "collections" [];
	"wx.lib.colourdb" -> "wx" [];
	"wx.core" -> "sys" [];
	"wx.core" -> "atexit" [];
	"wx.core" -> "warnings" [];
	"wx.core" -> "functools" [];
	"wx.core" -> "typing" [];
	"wx.core" -> "datetime" [];
	"wx.core" -> "os" [];
	"wx.core" -> "collections" [];
	"wx.core" -> "signal" [];
	"wx.core" -> "locale" [];
	"wx.core" -> "typing_extensions" [];
	"wx.lib.colourutils" -> "wx" [];
	"wx.lib.colourutils" -> "Carbon" [];
	"ntpath" -> "os" [];
	"ntpath" -> "sys" [];
	"ntpath" -> "stat" [];
	"ntpath" -> "genericpath" [];
	"ntpath" -> "nt" [];
	"ntpath" -> "string" [];
	"functools" -> "abc" [];
	"functools" -> "collections" [];
	"functools" -> "reprlib" [];
	"functools" -> "_thread" [];
	"functools" -> "types" [];
	"functools" -> "_functools" [];
	"functools" -> "weakref" [];
	"functools" -> "typing" [];
	"genericpath" -> "os" [];
	"genericpath" -> "stat" [];
	"os" -> "abc" [];
	"os" -> "sys" [];
	"os" -> "stat" [];
	"os" -> "_collections_abc" [];
	"os" -> "posix" [];
	"os" -> "posixpath" [];
	"os" -> "nt" [];
	"os" -> "ntpath" [];
	"os" -> "os.path" [];
	"os" -> "warnings" [];
	"os" -> "subprocess" [];
	"os" -> "io" [];
	"sre_constants" -> "_sre" [];
	"abc" -> "_abc" [];
	"abc" -> "_py_abc" [];
	"_py_abc" -> "_weakrefset" [];
	"_bootlocale" -> "sys" [];
	"_bootlocale" -> "_locale" [];
	"_bootlocale" -> "locale" [];
	"_weakrefset" -> "_weakref" [];
	"_weakrefset" -> "types" [];
	"warnings" -> "sys" [];
	"warnings" -> "linecache" [];
	"warnings" -> "tracemalloc" [];
	"warnings" -> "re" [];
	"warnings" -> "builtins" [];
	"warnings" -> "traceback" [];
	"warnings" -> "_warnings" [];
	"tracemalloc" -> "functools" [];
	"tracemalloc" -> "fnmatch" [];
	"tracemalloc" -> "linecache" [];
	"tracemalloc" -> "os.path" [];
	"tracemalloc" -> "pickle" [];
	"tracemalloc" -> "_tracemalloc" [];
	"heapq" -> "_heapq" [];
	"enum" -> "sys" [];
	"enum" -> "types" [];
	"enum" -> "warnings" [];
	"io" -> "_io" [];
	"io" -> "abc" [];
	"types" -> "sys" [];
	"types" -> "functools" [];
	"types" -> "_collections_abc" [];
	"encodings.zlib_codec" -> "codecs" [];
	"encodings.zlib_codec" -> "zlib" [];
	"encodings.uu_codec" -> "codecs" [];
	"encodings.uu_codec" -> "binascii" [];
	"encodings.uu_codec" -> "io" [];
	"encodings.utf_8_sig" -> "codecs" [];
	"encodings.utf_8" -> "codecs" [];
	"encodings.utf_7" -> "codecs" [];
	"encodings.utf_32_le" -> "codecs" [];
	"encodings.utf_32_be" -> "codecs" [];
	"encodings.utf_32" -> "codecs" [];
	"encodings.utf_32" -> "sys" [];
	"encodings.utf_16_le" -> "codecs" [];
	"encodings.utf_16_be" -> "codecs" [];
	"encodings.utf_16" -> "codecs" [];
	"encodings.utf_16" -> "sys" [];
	"encodings.unicode_escape" -> "codecs" [];
	"encodings.undefined" -> "codecs" [];
	"encodings.tis_620" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_codecs_jp" [];
	"encodings.shift_jisx0213" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_multibytecodec" [];
	"encodings.shift_jis_2004" -> "_codecs_jp" [];
	"encodings.shift_jis_2004" -> "codecs" [];
	"encodings.shift_jis_2004" -> "_multibytecodec" [];
	"encodings.shift_jis" -> "_codecs_jp" [];
	"encodings.shift_jis" -> "codecs" [];
	"encodings.shift_jis" -> "_multibytecodec" [];
	"encodings.rot_13" -> "codecs" [];
	"encodings.rot_13" -> "sys" [];
	"encodings.raw_unicode_escape" -> "codecs" [];
	"encodings.quopri_codec" -> "codecs" [];
	"encodings.quopri_codec" -> "quopri" [];
	"encodings.quopri_codec" -> "io" [];
	"encodings.punycode" -> "codecs" [];
	"encodings.ptcp154" -> "codecs" [];
	"encodings.palmos" -> "codecs" [];
	"encodings.oem" -> "codecs" [];
	"encodings.mbcs" -> "codecs" [];
	"encodings.mac_turkish" -> "codecs" [];
	"encodings.mac_romanian" -> "codecs" [];
	"encodings.mac_roman" -> "codecs" [];
	"encodings.mac_latin2" -> "codecs" [];
	"encodings.mac_iceland" -> "codecs" [];
	"encodings.mac_greek" -> "codecs" [];
	"encodings.mac_farsi" -> "codecs" [];
	"encodings.mac_cyrillic" -> "codecs" [];
	"encodings.mac_croatian" -> "codecs" [];
	"encodings.mac_arabic" -> "codecs" [];
	"encodings.latin_1" -> "codecs" [];
	"encodings.kz1048" -> "codecs" [];
	"encodings.koi8_u" -> "codecs" [];
	"encodings.koi8_t" -> "codecs" [];
	"encodings.koi8_r" -> "codecs" [];
	"encodings.johab" -> "_codecs_kr" [];
	"encodings.johab" -> "codecs" [];
	"encodings.johab" -> "_multibytecodec" [];
	"encodings.iso8859_9" -> "codecs" [];
	"encodings.iso8859_8" -> "codecs" [];
	"encodings.iso8859_7" -> "codecs" [];
	"encodings.iso8859_6" -> "codecs" [];
	"encodings.iso8859_5" -> "codecs" [];
	"encodings.iso8859_4" -> "codecs" [];
	"encodings.iso8859_3" -> "codecs" [];
	"encodings.iso8859_2" -> "codecs" [];
	"encodings.iso8859_16" -> "codecs" [];
	"encodings.iso8859_15" -> "codecs" [];
	"encodings.iso8859_14" -> "codecs" [];
	"encodings.iso8859_13" -> "codecs" [];
	"encodings.iso8859_11" -> "codecs" [];
	"encodings.iso8859_10" -> "codecs" [];
	"encodings.iso8859_1" -> "codecs" [];
	"encodings.iso2022_kr" -> "_codecs_iso2022" [];
	"encodings.iso2022_kr" -> "codecs" [];
	"encodings.iso2022_kr" -> "_multibytecodec" [];
	"encodings.iso2022_jp_ext" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_ext" -> "codecs" [];
	"encodings.iso2022_jp_ext" -> "_multibytecodec" [];
	"encodings.iso2022_jp_3" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_3" -> "codecs" [];
	"encodings.iso2022_jp_3" -> "_multibytecodec" [];
	"encodings.iso2022_jp_2004" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2004" -> "codecs" [];
	"encodings.iso2022_jp_2004" -> "_multibytecodec" [];
	"encodings.iso2022_jp_2" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2" -> "codecs" [];
	"encodings.iso2022_jp_2" -> "_multibytecodec" [];
	"encodings.iso2022_jp_1" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_1" -> "codecs" [];
	"encodings.iso2022_jp_1" -> "_multibytecodec" [];
	"encodings.iso2022_jp" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp" -> "codecs" [];
	"encodings.iso2022_jp" -> "_multibytecodec" [];
	"encodings.idna" -> "stringprep" [];
	"encodings.idna" -> "re" [];
	"encodings.idna" -> "codecs" [];
	"encodings.idna" -> "unicodedata" [];
	"encodings.hz" -> "_codecs_cn" [];
	"encodings.hz" -> "codecs" [];
	"encodings.hz" -> "_multibytecodec" [];
	"encodings.hp_roman8" -> "codecs" [];
	"encodings.hex_codec" -> "codecs" [];
	"encodings.hex_codec" -> "binascii" [];
	"encodings.gbk" -> "_codecs_cn" [];
	"encodings.gbk" -> "codecs" [];
	"encodings.gbk" -> "_multibytecodec" [];
	"encodings.gb2312" -> "_codecs_cn" [];
	"encodings.gb2312" -> "codecs" [];
	"encodings.gb2312" -> "_multibytecodec" [];
	"encodings.gb18030" -> "_codecs_cn" [];
	"encodings.gb18030" -> "codecs" [];
	"encodings.gb18030" -> "_multibytecodec" [];
	"encodings.euc_kr" -> "_codecs_kr" [];
	"encodings.euc_kr" -> "codecs" [];
	"encodings.euc_kr" -> "_multibytecodec" [];
	"encodings.euc_jp" -> "_codecs_jp" [];
	"encodings.euc_jp" -> "codecs" [];
	"encodings.euc_jp" -> "_multibytecodec" [];
	"encodings.euc_jisx0213" -> "_codecs_jp" [];
	"encodings.euc_jisx0213" -> "codecs" [];
	"encodings.euc_jisx0213" -> "_multibytecodec" [];
	"encodings.euc_jis_2004" -> "_codecs_jp" [];
	"encodings.euc_jis_2004" -> "codecs" [];
	"encodings.euc_jis_2004" -> "_multibytecodec" [];
	"encodings.cp950" -> "_codecs_tw" [];
	"encodings.cp950" -> "codecs" [];
	"encodings.cp950" -> "_multibytecodec" [];
	"encodings.cp949" -> "_codecs_kr" [];
	"encodings.cp949" -> "codecs" [];
	"encodings.cp949" -> "_multibytecodec" [];
	"encodings.cp932" -> "_codecs_jp" [];
	"encodings.cp932" -> "codecs" [];
	"encodings.cp932" -> "_multibytecodec" [];
	"encodings.cp875" -> "codecs" [];
	"encodings.cp874" -> "codecs" [];
	"encodings.cp869" -> "codecs" [];
	"encodings.cp866" -> "codecs" [];
	"encodings.cp865" -> "codecs" [];
	"encodings.cp864" -> "codecs" [];
	"encodings.cp863" -> "codecs" [];
	"encodings.cp862" -> "codecs" [];
	"encodings.cp861" -> "codecs" [];
	"encodings.cp860" -> "codecs" [];
	"encodings.cp858" -> "codecs" [];
	"encodings.cp857" -> "codecs" [];
	"encodings.cp856" -> "codecs" [];
	"encodings.cp855" -> "codecs" [];
	"encodings.cp852" -> "codecs" [];
	"encodings.cp850" -> "codecs" [];
	"encodings.cp775" -> "codecs" [];
	"encodings.cp737" -> "codecs" [];
	"encodings.cp720" -> "codecs" [];
	"encodings.cp500" -> "codecs" [];
	"encodings.cp437" -> "codecs" [];
	"encodings.cp424" -> "codecs" [];
	"encodings.cp273" -> "codecs" [];
	"encodings.cp1258" -> "codecs" [];
	"encodings.cp1257" -> "codecs" [];
	"encodings.cp1256" -> "codecs" [];
	"encodings.cp1255" -> "codecs" [];
	"encodings.cp1254" -> "codecs" [];
	"encodings.cp1253" -> "codecs" [];
	"encodings.cp1252" -> "codecs" [];
	"encodings.cp1251" -> "codecs" [];
	"encodings.cp1250" -> "codecs" [];
	"encodings.cp1140" -> "codecs" [];
	"encodings.cp1125" -> "codecs" [];
	"encodings.cp1026" -> "codecs" [];
	"encodings.cp1006" -> "codecs" [];
	"encodings.cp037" -> "codecs" [];
	"encodings.charmap" -> "codecs" [];
	"encodings.bz2_codec" -> "codecs" [];
	"encodings.bz2_codec" -> "bz2" [];
	"encodings.big5hkscs" -> "_codecs_hk" [];
	"encodings.big5hkscs" -> "codecs" [];
	"encodings.big5hkscs" -> "_multibytecodec" [];
	"encodings.big5" -> "_codecs_tw" [];
	"encodings.big5" -> "codecs" [];
	"encodings.big5" -> "_multibytecodec" [];
	"encodings.base64_codec" -> "codecs" [];
	"encodings.base64_codec" -> "base64" [];
	"encodings.ascii" -> "codecs" [];
	"encodings" -> "codecs" [];
	"encodings" -> "sys" [];
	"encodings" -> "_winapi" [];
	"collections.abc" -> "_collections_abc" [];
	"collections" -> "_collections_abc" [];
	"collections" -> "heapq" [];
	"collections" -> "sys" [];
	"collections" -> "itertools" [];
	"collections" -> "keyword" [];
	"collections" -> "operator" [];
	"collections" -> "reprlib" [];
	"collections" -> "_weakref" [];
	"collections" -> "_collections" [];
	"collections" -> "warnings" [];
	"collections" -> "copy" [];
	"weakref" -> "_weakref" [];
	"weakref" -> "_weakrefset" [];
	"weakref" -> "_collections_abc" [];
	"weakref" -> "sys" [];
	"weakref" -> "itertools" [];
	"weakref" -> "copy" [];
	"weakref" -> "atexit" [];
	"weakref" -> "gc" [];
	"stat" -> "_stat" [];
	"reprlib" -> "builtins" [];
	"reprlib" -> "itertools" [];
	"reprlib" -> "_thread" [];
	"sre_compile" -> "_sre" [];
	"sre_compile" -> "sre_parse" [];
	"sre_compile" -> "sre_constants" [];
	"sre_compile" -> "sys" [];
	"re" -> "enum" [];
	"re" -> "sre_compile" [];
	"re" -> "sre_parse" [];
	"re" -> "functools" [];
	"re" -> "_locale" [];
	"re" -> "copyreg" [];
	"re" -> "sre_constants" [];
	"_collections_abc" -> "abc" [];
	"_collections_abc" -> "sys" [];
	"_collections_abc" -> "warnings" [];
	"operator" -> "builtins" [];
	"operator" -> "functools" [];
	"operator" -> "_operator" [];
	"sre_parse" -> "sre_constants" [];
	"sre_parse" -> "unicodedata" [];
	"sre_parse" -> "warnings" [];
	"locale" -> "sys" [];
	"locale" -> "encodings" [];
	"locale" -> "re" [];
	"locale" -> "_collections_abc" [];
	"locale" -> "builtins" [];
	"locale" -> "functools" [];
	"locale" -> "_locale" [];
	"locale" -> "warnings" [];
	"locale" -> "os" [];
	"locale" -> "_bootlocale" [];
	"traceback" -> "collections" [];
	"traceback" -> "itertools" [];
	"traceback" -> "linecache" [];
	"traceback" -> "sys" [];
	"linecache" -> "functools" [];
	"linecache" -> "sys" [];
	"linecache" -> "os" [];
	"linecache" -> "tokenize" [];
	"_pickle" -> "codecs" [];
	"_pickle" -> "copyreg" [];
	"_pickle" -> "_compat_pickle" [];
	"datetime" -> "time" [];
	"datetime" -> "math" [];
	"datetime" -> "sys" [];
	"datetime" -> "warnings" [];
	"datetime" -> "_strptime" [];
	"datetime" -> "_datetime" [];
	"_strptime" -> "time" [];
	"_strptime" -> "locale" [];
	"_strptime" -> "calendar" [];
	"_strptime" -> "re" [];
	"_strptime" -> "datetime" [];
	"_strptime" -> "_thread" [];
	"_datetime" -> "time" [];
	"_datetime" -> "_strptime" [];
	"_posixsubprocess" -> "gc" [];
	"posixpath" -> "os" [];
	"posixpath" -> "sys" [];
	"posixpath" -> "stat" [];
	"posixpath" -> "genericpath" [];
	"posixpath" -> "pwd" [];
	"posixpath" -> "re" [];
	"posix" -> "resource" [];
	"_sre" -> "copy" [];
	"_sre" -> "re" [];
	"codecs" -> "builtins" [];
	"codecs" -> "sys" [];
	"codecs" -> "_codecs" [];
	"codecs" -> "encodings" [];
	"time" -> "_strptime" [];
	"gc" -> "time" [];
	"pandas._libs.writers" -> "pandas" [];
	"pandas._typing" -> "collections" [];
	"typing_extensions" -> "asyncio" [];
	"asyncio.coroutines" -> "collections" [];
	"logging" -> "collections" [];
	"zipfile" -> "importlib" [];
	"py_compile" -> "importlib" [];
	"pathlib" -> "urllib" [];
	"email.utils" -> "urllib" [];
	"asyncio.base_events" -> "concurrent" [];
	"runpy" -> "importlib" [];
	"multiprocessing.connection" -> "xmlrpc" [];
	"xmlrpc.client" -> "http" [];
	"xmlrpc.client" -> "urllib" [];
	"xmlrpc.client" -> "xml" [];
	"xml.sax.expatreader" -> "xml" [];
	"xml.sax.saxutils" -> "urllib" [];
	"urllib.request" -> "http" [];
	"nturl2path" -> "urllib" [];
	"mimetypes" -> "urllib" [];
	"http.cookiejar" -> "urllib" [];
	"http.client" -> "email" [];
	"http.client" -> "collections" [];
	"http.client" -> "urllib" [];
	"asyncio.tasks" -> "concurrent" [];
	"asyncio.futures" -> "concurrent" [];
	"pandas.tseries.holiday" -> "dateutil" [];
	"six" -> "importlib" [];
	"pandas.io.formats.format" -> "collections" [];
	"pandas.io.formats.csvs" -> "collections" [];
	"pandas.io.formats.csvs" -> "pandas" [];
	"pandas.core.arraylike" -> "pandas" [];
	"pandas.core.ops.common" -> "pandas" [];
	"pandas.core.ops.mask_ops" -> "pandas" [];
	"pandas.core.ops.invalid" -> "pandas" [];
	"pandas.core.ops.array_ops" -> "pandas" [];
	"pandas.core.ops.dispatch" -> "pandas" [];
	"pandas.core.computation.expressions" -> "pandas" [];
	"pandas.core.util.hashing" -> "collections" [];
	"pandas.core.computation.scope" -> "pandas" [];
	"pandas.core.computation.parsing" -> "collections" [];
	"pandas.core.computation.ops" -> "collections" [];
	"pandas.core.computation.engines" -> "pandas" [];
	"pandas.core.computation.align" -> "collections" [];
	"pandas.util._validators" -> "collections" [];
	"pandas.util._validators" -> "pandas" [];
	"pandas.core.computation.common" -> "pandas" [];
	"pandas.core.dtypes.cast" -> "collections" [];
	"pandas.core.arrays.timedeltas" -> "collections" [];
	"pandas.core.arrays._ranges" -> "pandas" [];
	"pandas.core.arrays.datetimelike" -> "collections" [];
	"pandas.core.groupby.ops" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "collections" [];
	"pandas.core.arrays.categorical" -> "collections" [];
	"pandas.core.dtypes.concat" -> "collections" [];
	"pandas.core.dtypes.astype" -> "pandas" [];
	"pandas.core.strings.object_array" -> "collections" [];
	"pandas.core.strings.base" -> "collections" [];
	"pandas.core.groupby.groupby" -> "collections" [];
	"pandas.core.groupby.groupby" -> "pandas" [];
	"pandas.core._numba.kernels.var_" -> "pandas" [];
	"pandas.core._numba.kernels.sum_" -> "pandas" [];
	"pandas.core._numba.kernels.min_max_" -> "pandas" [];
	"pandas.core._numba.kernels.mean_" -> "pandas" [];
	"pandas.core.window.numba_" -> "pandas" [];
	"pandas.core.util.numba_" -> "pandas" [];
	"pandas.core.internals.blocks" -> "pandas" [];
	"pandas.core.internals.blocks" -> "collections" [];
	"pandas.core.array_algos.transforms" -> "pandas" [];
	"pandas.core.array_algos.replace" -> "pandas" [];
	"pandas.core.array_algos.quantile" -> "pandas" [];
	"pandas.core.groupby.indexing" -> "collections" [];
	"pandas.core.arrays.string_arrow" -> "collections" [];
	"pandas.core.arrays.masked" -> "collections" [];
	"pandas.core.arrays._utils" -> "pandas" [];
	"pandas.core.array_algos.masked_reductions" -> "pandas" [];
	"pandas.core.array_algos.masked_accumulations" -> "pandas" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "pandas" [];
	"pydoc" -> "importlib" [];
	"pydoc" -> "urllib" [];
	"pydoc" -> "pydoc_data" [];
	"pydoc" -> "http" [];
	"pydoc" -> "email" [];
	"http.server" -> "email" [];
	"http.server" -> "urllib" [];
	"pandas.core.arrays.numeric" -> "pandas" [];
	"pandas.core.arrays.numeric" -> "collections" [];
	"pandas.core.arrays.boolean" -> "pandas" [];
	"pandas.core.arrays.arrow.accessors" -> "collections" [];
	"pandas.core.arrays._arrow_string_mixins" -> "pandas" [];
	"pandas.core._numba.extensions" -> "pandas" [];
	"pandas.core._numba.executor" -> "pandas" [];
	"pandas.core.groupby.numba_" -> "pandas" [];
	"pandas.core.groupby.base" -> "collections" [];
	"pandas.core.arrays.period" -> "pandas" [];
	"pandas.core.arrays.period" -> "collections" [];
	"pandas.core.arrays.arrow.extension_types" -> "pandas" [];
	"pandas.core.arrays.interval" -> "collections" [];
	"pandas.core.indexers.utils" -> "pandas" [];
	"pandas.core.arrays._mixins" -> "collections" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "pandas" [];
	"pandas.compat.numpy.function" -> "pandas" [];
	"pandas.core.arrays.datetimes" -> "collections" [];
	"pyarrow.parquet.encryption" -> "pyarrow" [];
	"pyarrow.pandas_compat" -> "collections" [];
	"cffi.api" -> "ctypes" [];
	"ctypes.util" -> "importlib" [];
	"distutils.util" -> "importlib" [];
	"cgi" -> "collections" [];
	"cgi" -> "urllib" [];
	"cgi" -> "email" [];
	"distutils.command.build_ext" -> "concurrent" [];
	"setuptools" -> "_distutils_hack" [];
	"setuptools" -> "distutils" [];
	"setuptools._vendor.packaging.tags" -> "distutils" [];
	"setuptools._vendor.packaging.tags" -> "importlib" [];
	"setuptools._vendor.more_itertools.more" -> "concurrent" [];
	"setuptools.msvc" -> "distutils" [];
	"setuptools.monkey" -> "distutils" [];
	"setuptools.depends" -> "distutils" [];
	"setuptools._imp" -> "importlib" [];
	"setuptools.dist" -> "distutils" [];
	"setuptools.command.py36compat" -> "distutils" [];
	"pkg_resources" -> "email" [];
	"packaging.tags" -> "importlib" [];
	"packaging.metadata" -> "email" [];
	"pkg_resources._vendor.packaging.tags" -> "distutils" [];
	"pkg_resources._vendor.packaging.tags" -> "importlib" [];
	"pkg_resources.extern" -> "importlib" [];
	"setuptools.config" -> "distutils" [];
	"distutils.command.bdist" -> "distutils" [];
	"setuptools.extern" -> "importlib" [];
	"setuptools.extension" -> "distutils" [];
	"cffi.verifier" -> "importlib" [];
	"pyarrow.util" -> "urllib" [];
	"requests" -> "urllib" [];
	"requests.compat" -> "urllib" [];
	"requests.models" -> "encodings" [];
	"urllib3.response" -> "http" [];
	"urllib3.connection" -> "http" [];
	"urllib3.http2" -> "importlib" [];
	"urllib3._request_methods" -> "urllib" [];
	"urllib3.util.response" -> "http" [];
	"urllib3.util.response" -> "email" [];
	"urllib3.fields" -> "email" [];
	"urllib3.poolmanager" -> "urllib" [];
	"certifi.core" -> "importlib" [];
	"urllib3.exceptions" -> "email" [];
	"urllib3.exceptions" -> "http" [];
	"cryptography.hazmat.primitives.asymmetric.x25519" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.x448" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.ed25519" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.ed448" -> "cryptography" [];
	"cryptography.x509.general_name" -> "email" [];
	"urllib3.contrib.pyopenssl" -> "urllib" [];
	"charset_normalizer.utils" -> "encodings" [];
	"charset_normalizer.constant" -> "encodings" [];
	"charset_normalizer.models" -> "encodings" [];
	"urllib3.contrib.emscripten.connection" -> "http" [];
	"urllib3.contrib.emscripten.response" -> "http" [];
	"urllib3.contrib.emscripten.fetch" -> "email" [];
	"urllib3.contrib.emscripten.fetch" -> "importlib" [];
	"fsspec" -> "importlib" [];
	"fsspec.utils" -> "urllib" [];
	"fsspec.parquet" -> "pyarrow" [];
	"fsspec.implementations.webhdfs" -> "urllib" [];
	"fsspec.implementations.webhdfs" -> "fsspec" [];
	"fsspec.implementations.reference" -> "fsspec" [];
	"fsspec.implementations.reference" -> "importlib" [];
	"fsspec.implementations.http" -> "urllib" [];
	"fsspec.implementations.http" -> "fsspec" [];
	"yarl._url" -> "collections" [];
	"yarl._url" -> "urllib" [];
	"yarl._url" -> "propcache" [];
	"yarl._quoters" -> "urllib" [];
	"yarl._path" -> "collections" [];
	"yarl._parse" -> "urllib" [];
	"propcache._helpers_py" -> "collections" [];
	"multidict" -> "collections" [];
	"multidict._multidict_py" -> "collections" [];
	"multidict._abc" -> "collections" [];
	"yarl._query" -> "collections" [];
	"aiohttp.web_response" -> "collections" [];
	"aiohttp.web_response" -> "concurrent" [];
	"aiohttp.typedefs" -> "http" [];
	"aiohttp.compression_utils" -> "concurrent" [];
	"aiohttp.web_request" -> "http" [];
	"aiohttp.web_request" -> "urllib" [];
	"aiohttp.client_reqrep" -> "http" [];
	"attr" -> "importlib" [];
	"attr._make" -> "collections" [];
	"attr._compat" -> "collections" [];
	"aiohttp.abc" -> "collections" [];
	"aiohttp.abc" -> "http" [];
	"frozenlist" -> "collections" [];
	"aiohttp.web" -> "collections" [];
	"aiohttp._websocket.helpers" -> "aiohttp" [];
	"aiohttp._websocket.writer" -> "aiohttp" [];
	"aiohttp._websocket.reader" -> "aiohttp" [];
	"aiohttp._websocket.reader_c" -> "aiohttp" [];
	"aiohttp._websocket.reader_py" -> "aiohttp" [];
	"aiohttp.payload" -> "collections" [];
	"aiohttp.helpers" -> "email" [];
	"aiohttp.helpers" -> "urllib" [];
	"aiohttp.helpers" -> "propcache" [];
	"aiohttp.formdata" -> "urllib" [];
	"aiohttp.cookiejar" -> "http" [];
	"aiohttp.multipart" -> "urllib" [];
	"fsspec.implementations.git" -> "fsspec" [];
	"fsspec.implementations.ftp" -> "fsspec" [];
	"fsspec.implementations.data" -> "urllib" [];
	"fsspec.implementations.cache_metadata" -> "fsspec" [];
	"fsspec.implementations.asyn_wrapper" -> "fsspec" [];
	"fsspec.implementations.arrow" -> "urllib" [];
	"fsspec.implementations.arrow" -> "fsspec" [];
	"fsspec.implementations.arrow" -> "pyarrow" [];
	"fsspec.dircache" -> "collections" [];
	"fsspec.mapping" -> "collections" [];
	"fsspec.caching" -> "concurrent" [];
	"pandas.core.arrays.arrow.array" -> "collections" [];
	"pandas.core.tools.times" -> "pandas" [];
	"pandas.core.tools.timedeltas" -> "collections" [];
	"pandas.core.dtypes.inference" -> "pandas" [];
	"pandas.util._exceptions" -> "collections" [];
	"pandas.core.ops.missing" -> "pandas" [];
	"pandas.core.construction" -> "collections" [];
	"numpy.compat.py3k" -> "importlib" [];
	"numpy.core._methods" -> "numpy" [];
	"numpy.core._exceptions" -> "numpy" [];
	"numpy.core._ufunc_config" -> "collections" [];
	"numpy.core._ufunc_config" -> "numpy" [];
	"numpy.core.numerictypes" -> "numpy" [];
	"numpy.core._type_aliases" -> "numpy" [];
	"numpy.core._machar" -> "numpy" [];
	"numpy.core.records" -> "numpy" [];
	"numpy.core.getlimits" -> "numpy" [];
	"numpy.lib.npyio" -> "collections" [];
	"numpy.lib._datasource" -> "numpy" [];
	"numpy.lib._datasource" -> "urllib" [];
	"numpy.lib.polynomial" -> "numpy" [];
	"numpy._typing._array_like" -> "collections" [];
	"numpy._typing._dtype_like" -> "collections" [];
	"numpy._typing._shape" -> "collections" [];
	"numpy._typing._nested_sequence" -> "collections" [];
	"numpy.lib.shape_base" -> "numpy" [];
	"numpy.matrixlib.defmatrix" -> "numpy" [];
	"numpy.lib.function_base" -> "collections" [];
	"numpy.lib.type_check" -> "numpy" [];
	"numpy.lib.mixins" -> "numpy" [];
	"numpy.core.overrides" -> "numpy" [];
	"numpy.testing._private.extbuild" -> "importlib" [];
	"numpy.array_api._typing" -> "collections" [];
	"numpy.array_api._data_type_functions" -> "collections" [];
	"numpy.array_api._creation_functions" -> "collections" [];
	"pandas.core.internals.construction" -> "pandas" [];
	"pandas.core.internals.managers" -> "collections" [];
	"pandas.core.internals.managers" -> "pandas" [];
	"pandas.core.internals.ops" -> "collections" [];
	"pandas.core.internals.ops" -> "pandas" [];
	"pandas.core.internals.base" -> "pandas" [];
	"pandas.core.internals.array_manager" -> "pandas" [];
	"pandas.core.internals.array_manager" -> "collections" [];
	"pandas.core.array_algos.take" -> "pandas" [];
	"pandas.core.sample" -> "pandas" [];
	"pandas.core.indexing" -> "collections" [];
	"pandas.core.nanops" -> "pandas" [];
	"pandas.util._decorators" -> "pandas" [];
	"pandas.util._decorators" -> "collections" [];
	"pandas.io.formats.string" -> "collections" [];
	"pandas.io.formats.html" -> "collections" [];
	"pandas.core.indexes.multi" -> "collections" [];
	"pandas.core.reshape.util" -> "pandas" [];
	"pandas.core.indexes.frozen" -> "pandas" [];
	"pandas.io.formats.printing" -> "collections" [];
	"pandas.io.formats.printing" -> "pandas" [];
	"pandas.io.formats.style" -> "collections" [];
	"pandas.io.formats.excel" -> "collections" [];
	"pandas.io.excel._xlsxwriter" -> "pandas" [];
	"pandas.io.excel._util" -> "collections" [];
	"pandas.io.excel._openpyxl" -> "pandas" [];
	"pandas.io.excel._odswriter" -> "pandas" [];
	"pandas.io.excel._base" -> "collections" [];
	"pandas.io.excel._base" -> "pandas" [];
	"pandas.io.excel._xlrd" -> "pandas" [];
	"pandas.io.excel._pyxlsb" -> "pandas" [];
	"pandas.io.formats.css" -> "pandas" [];
	"pandas.io.formats.css" -> "collections" [];
	"pandas.io.common" -> "urllib" [];
	"pandas.core.indexes.timedeltas" -> "pandas" [];
	"pandas.core.indexes.extension" -> "pandas" [];
	"pandas.core.indexes.datetimelike" -> "collections" [];
	"pandas.core.indexes.range" -> "collections" [];
	"pandas.core.indexes.range" -> "pandas" [];
	"pandas.core.indexes.datetimes" -> "pandas" [];
	"pandas.core.indexes.datetimes" -> "collections" [];
	"pandas.core.indexes.datetimes" -> "dateutil" [];
	"pandas.core.indexes.api" -> "pandas" [];
	"pandas.core.indexes.period" -> "pandas" [];
	"pandas.core.indexes.period" -> "collections" [];
	"pandas.core.indexes.interval" -> "pandas" [];
	"pandas.core.indexes.interval" -> "collections" [];
	"pandas.core.indexes.category" -> "pandas" [];
	"pandas.core.indexes.category" -> "collections" [];
	"pandas.core.base" -> "collections" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "collections" [];
	"pandas.core.dtypes.common" -> "pandas" [];
	"pandas._config.config" -> "pandas" [];
	"pandas._config.config" -> "collections" [];
	"pandas.core.window.rolling" -> "collections" [];
	"pandas.core.series" -> "collections" [];
	"pandas.core.series" -> "pandas" [];
	"pandas.core.reshape.reshape" -> "pandas" [];
	"pandas.io.formats.info" -> "collections" [];
	"pandas.core.strings.accessor" -> "collections" [];
	"pandas.core.methods.selectn" -> "collections" [];
	"pandas.core.resample" -> "collections" [];
	"pandas.core.internals.concat" -> "collections" [];
	"pandas.core.internals.api" -> "pandas" [];
	"pandas.core.reshape.merge" -> "collections" [];
	"pandas.io.clipboard" -> "pandas" [];
	"pandas.compat.pickle_compat" -> "collections" [];
	"pandas.io.sql" -> "collections" [];
	"sqlalchemy.sql.dml" -> "collections" [];
	"sqlalchemy.sql.sqltypes" -> "collections" [];
	"sqlalchemy.util._has_cy" -> "sqlalchemy" [];
	"sqlalchemy.util.compat" -> "collections" [];
	"importlib_metadata._adapters" -> "email" [];
	"importlib_metadata._meta" -> "collections" [];
	"sqlalchemy.sql.lambdas" -> "collections" [];
	"sqlalchemy.sql.coercions" -> "collections" [];
	"sqlalchemy.orm.query" -> "collections" [];
	"sqlalchemy.future.engine" -> "sqlalchemy" [];
	"sqlalchemy.orm._typing" -> "sqlalchemy" [];
	"sqlalchemy.engine.url" -> "collections" [];
	"sqlalchemy.engine.url" -> "urllib" [];
	"sqlalchemy.engine.row" -> "collections" [];
	"sqlalchemy.engine.row" -> "sqlalchemy" [];
	"sqlite3.dbapi2" -> "collections" [];
	"sqlalchemy.dialects._typing" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.operators" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.ext" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "collections" [];
	"sqlalchemy.connectors.asyncio" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.mariadb" -> "sqlalchemy" [];
	"sqlalchemy.connectors.pyodbc" -> "urllib" [];
	"sqlalchemy.dialects.mysql.pymysql" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql" -> "sqlalchemy" [];
	"sqlalchemy.ext.baked" -> "collections" [];
	"pandas.io.pytables" -> "collections" [];
	"pandas.core.computation.pytables" -> "pandas" [];
	"pandas.core.methods.describe" -> "collections" [];
	"pandas.core.reshape.pivot" -> "collections" [];
	"pandas.io.formats.xml" -> "lxml" [];
	"lxml.html.soupparser" -> "html" [];
	"lxml.html.html5parser" -> "urllib" [];
	"lxml.html.formfill" -> "lxml" [];
	"lxml.html.builder" -> "lxml" [];
	"lxml.html._setmixin" -> "collections" [];
	"lxml.html" -> "collections" [];
	"lxml.ElementInclude" -> "urllib" [];
	"xml.dom.pulldom" -> "xml" [];
	"xml.dom.expatbuilder" -> "xml" [];
	"xml.dom.xmlbuilder" -> "urllib" [];
	"xml.etree.ElementTree" -> "xml" [];
	"pandas.io.xml" -> "collections" [];
	"pandas.io.orc" -> "pyarrow" [];
	"pandas.io.parquet" -> "pyarrow" [];
	"pandas.io.feather_format" -> "collections" [];
	"google.auth._helpers" -> "email" [];
	"google.auth._default" -> "google" [];
	"google.oauth2.gdch_credentials" -> "google" [];
	"google.oauth2._client" -> "http" [];
	"google.oauth2._client" -> "google" [];
	"google.auth.transport" -> "http" [];
	"google.auth.transport.mtls" -> "google" [];
	"google.auth.transport._mtls_helper" -> "google" [];
	"google.auth.transport._custom_tls_signer" -> "google" [];
	"google.oauth2.service_account" -> "google" [];
	"google.oauth2.credentials" -> "google" [];
	"google.oauth2.reauth" -> "google" [];
	"google.oauth2.challenges" -> "google" [];
	"google.oauth2.webauthn_types" -> "google" [];
	"google.oauth2.webauthn_handler" -> "google" [];
	"google.oauth2.sts" -> "http" [];
	"google.oauth2.utils" -> "google" [];
	"google.auth.transport.requests" -> "google" [];
	"google.auth.compute_engine._metadata" -> "http" [];
	"google.auth.compute_engine._metadata" -> "urllib" [];
	"google.auth.compute_engine._metadata" -> "google" [];
	"google.auth.transport._http_client" -> "http" [];
	"google.auth.transport._http_client" -> "google" [];
	"google.auth.aws" -> "http" [];
	"google.auth.external_account" -> "google" [];
	"google.auth.impersonated_credentials" -> "http" [];
	"google.auth.impersonated_credentials" -> "google" [];
	"google.auth.external_account_authorized_user" -> "google" [];
	"google.auth.compute_engine.credentials" -> "google" [];
	"google.auth.crypt.es256" -> "google" [];
	"google.auth.crypt.base" -> "google" [];
	"google.auth.iam" -> "http" [];
	"google.auth.crypt._python_rsa" -> "google" [];
	"rsa.key" -> "pyasn1" [];
	"pyasn1.type.error" -> "pyasn1" [];
	"pyasn1.codec.ber.eoo" -> "pyasn1" [];
	"rsa.asn1" -> "pyasn1" [];
	"pyasn1_modules.rfc2251" -> "pyasn1" [];
	"pyasn1_modules.rfc2459" -> "pyasn1" [];
	"pyasn1.codec.der.decoder" -> "pyasn1" [];
	"google.auth.crypt._cryptography_rsa" -> "cryptography" [];
	"google.auth.crypt._cryptography_rsa" -> "google" [];
	"google.resumable_media._upload" -> "http" [];
	"google.resumable_media._upload" -> "urllib" [];
	"google.resumable_media._upload" -> "xml" [];
	"google.resumable_media._download" -> "http" [];
	"google.resumable_media._helpers" -> "urllib" [];
	"google_crc32c.__config__" -> "importlib" [];
	"google.resumable_media.common" -> "http" [];
	"pandas.core.interchange.dataframe_protocol" -> "collections" [];
	"pandas.core.reshape.melt" -> "collections" [];
	"pandas.core.arrays.base" -> "collections" [];
	"numpy.random.mtrand" -> "collections" [];
	"numpy.random._pcg64" -> "numpy" [];
	"numpy.random.bit_generator" -> "collections" [];
	"numpy.random._generator" -> "collections" [];
	"numpy.fft.helper" -> "numpy" [];
	"numpy.fft._pocketfft" -> "numpy" [];
	"yaml.constructor" -> "collections" [];
	"pandas._libs.window.indexers" -> "pandas" [];
	"pandas._libs.window.aggregations" -> "pandas" [];
	"pandas._libs.tslibs.vectorized" -> "pandas" [];
	"pandas._libs.tslibs.tzconversion" -> "pandas" [];
	"pandas._libs.tslibs.timestamps" -> "pandas" [];
	"pandas._libs.tslibs.timedeltas" -> "pandas" [];
	"pandas._libs.tslibs.strptime" -> "pandas" [];
	"pandas._libs.tslibs.period" -> "pandas" [];
	"pandas._libs.tslibs.parsing" -> "pandas" [];
	"pandas._libs.tslibs.offsets" -> "pandas" [];
	"pandas._libs.tslibs.np_datetime" -> "pandas" [];
	"pandas._libs.tslibs.nattype" -> "pandas" [];
	"pandas._libs.tslibs.fields" -> "pandas" [];
	"pandas._libs.tslib" -> "pandas" [];
	"pandas._libs.sparse" -> "pandas" [];
	"pandas.io.sas.sasreader" -> "collections" [];
	"pandas._libs.reshape" -> "pandas" [];
	"pandas._libs.properties" -> "pandas" [];
	"pandas._libs.parsers" -> "pandas" [];
	"pandas._libs.ops" -> "pandas" [];
	"pandas._libs.lib" -> "pandas" [];
	"pandas._libs.join" -> "pandas" [];
	"pandas._libs.interval" -> "pandas" [];
	"pandas._libs.hashtable" -> "pandas" [];
	"pandas._libs.hashing" -> "pandas" [];
	"pandas._libs.groupby" -> "pandas" [];
	"pandas._libs.arrays" -> "pandas" [];
	"pandas._libs.algos" -> "pandas" [];
	"pandas.io.spss" -> "collections" [];
	"pandas.io.html" -> "lxml" [];
	"pandas.util._print_versions" -> "pandas" [];
	"pandas._testing.contexts" -> "collections" [];
	"pandas._testing._warnings" -> "pandas" [];
	"pandas._testing._warnings" -> "collections" [];
	"pandas._config.localization" -> "collections" [];
	"pandas.plotting._misc" -> "collections" [];
	"pandas.plotting._core" -> "collections" [];
	"pandas.api.typing" -> "pandas" [];
	"pandas.core.reshape.encoding" -> "pandas" [];
	"pandas.core.dtypes.dtypes" -> "collections" [];
	"pandas.core.api" -> "pandas" [];
	"pandas.core.config_init" -> "pandas" [];
	"graphdatascience.query_runner.neo4j_query_runner" -> "graphdatascience" [];
	"graphdatascience.query_runner.progress.query_progress_logger" -> "concurrent" [];
	"graphdatascience.query_runner.progress.query_progress_logger" -> "tqdm" [];
	"graphdatascience.error.endpoint_suggester" -> "graphdatascience" [];
	"textdistance.algorithms.sequence_based" -> "textdistance" [];
	"textdistance.algorithms.base" -> "textdistance" [];
	"neo4j.api" -> "urllib" [];
	"neo4j.exceptions" -> "collections" [];
	"neo4j._work.summary" -> "neo4j" [];
	"neo4j._work.eager_result" -> "neo4j" [];
	"neo4j._sync.work.transaction" -> "neo4j" [];
	"neo4j._sync.io._pool" -> "neo4j" [];
	"neo4j._sync.auth_management" -> "neo4j" [];
	"neo4j._async.auth_management" -> "neo4j" [];
	"neo4j._routing" -> "collections" [];
	"neo4j._async_compat.network._bolt_socket" -> "neo4j" [];
	"neo4j._async.io._pool" -> "neo4j" [];
	"neo4j._async.config" -> "neo4j" [];
	"neo4j._async.io._common" -> "neo4j" [];
	"neo4j._async.io._bolt" -> "neo4j" [];
	"neo4j._codec.packstream.v1.types" -> "neo4j" [];
	"neo4j._codec.hydration.v1.hydration_handler" -> "neo4j" [];
	"neo4j._codec.hydration.v2.temporal" -> "neo4j" [];
	"neo4j._codec.hydration.v2.hydration_handler" -> "neo4j" [];
	"neo4j._codec.hydration._common" -> "neo4j" [];
	"neo4j.graph" -> "collections" [];
	"neo4j._codec.hydration.v1.temporal" -> "neo4j" [];
	"neo4j._codec.hydration.v1.spatial" -> "neo4j" [];
	"neo4j._async.io._bolt5" -> "neo4j" [];
	"neo4j._async.io._bolt4" -> "neo4j" [];
	"neo4j._async.io._bolt3" -> "neo4j" [];
	"neo4j._sync.io._common" -> "neo4j" [];
	"neo4j._sync.io._bolt" -> "neo4j" [];
	"neo4j._sync.io._bolt5" -> "neo4j" [];
	"neo4j._sync.io._bolt4" -> "neo4j" [];
	"neo4j._sync.io._bolt3" -> "neo4j" [];
	"neo4j._sync._debug._concurrency_check" -> "neo4j" [];
	"neo4j._debug._notification_printer" -> "neo4j" [];
	"neo4j._sync.work.session" -> "neo4j" [];
	"neo4j._sync.work.workspace" -> "neo4j" [];
	"neo4j._sync.work.result" -> "neo4j" [];
	"neo4j._sync.driver" -> "neo4j" [];
	"neo4j._sync.bookmark_manager" -> "neo4j" [];
	"neo4j._sync.config" -> "neo4j" [];
	"neo4j._data" -> "collections" [];
	"neo4j._conf" -> "collections" [];
	"neo4j._async.work.transaction" -> "neo4j" [];
	"neo4j._async._debug._concurrency_check" -> "neo4j" [];
	"neo4j._async.work.session" -> "neo4j" [];
	"neo4j._async.work.workspace" -> "neo4j" [];
	"neo4j._async.work.result" -> "neo4j" [];
	"neo4j._async.driver" -> "neo4j" [];
	"neo4j._async.bookmark_manager" -> "neo4j" [];
	"graphdatascience.utils.util_node_property_func_runner" -> "graphdatascience" [];
	"graphdatascience.error.illegal_attr_checker" -> "graphdatascience" [];
	"graphdatascience.error.cypher_warning_handler" -> "graphdatascience" [];
	"graphdatascience.query_runner.session_query_runner" -> "graphdatascience" [];
	"graphdatascience.session.dbms.protocol_resolver" -> "neo4j" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "neo4j" [];
	"graphdatascience.query_runner.gds_arrow_client" -> "graphdatascience" [];
	"graphdatascience.query_runner.arrow_query_runner" -> "graphdatascience" [];
	"graphdatascience.query_runner.arrow_graph_constructor" -> "tqdm" [];
	"graphdatascience.graph.graph_remote_project_runner" -> "graphdatascience" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "graphdatascience" [];
	"graphdatascience.graph.base_graph_proc_runner" -> "importlib" [];
	"graphdatascience.graph.graph_sample_runner" -> "graphdatascience" [];
	"graphdatascience.graph.graph_export_runner" -> "graphdatascience" [];
	"graphdatascience.graph.graph_entity_ops_runner" -> "graphdatascience" [];
	"graphdatascience.error.client_only_endpoint" -> "graphdatascience" [];
	"graphdatascience.error.uncallable_namespace" -> "graphdatascience" [];
	"graphdatascience.utils.direct_util_endpoints" -> "graphdatascience" [];
	"graphdatascience.topological_lp.topological_lp_endpoints" -> "graphdatascience" [];
	"graphdatascience.system.system_endpoints" -> "graphdatascience" [];
	"graphdatascience.system.config_endpoints" -> "graphdatascience" [];
	"graphdatascience.pipeline.pipeline_endpoints" -> "graphdatascience" [];
	"graphdatascience.pipeline.pipeline_proc_runner" -> "graphdatascience" [];
	"graphdatascience.pipeline.training_pipeline" -> "graphdatascience" [];
	"graphdatascience.pipeline.nc_pipeline_create_runner" -> "graphdatascience" [];
	"graphdatascience.pipeline.lp_pipeline_create_runner" -> "graphdatascience" [];
	"graphdatascience.pipeline.nr_pipeline_create_runner" -> "graphdatascience" [];
	"graphdatascience.model.model_endpoints" -> "graphdatascience" [];
	"graphdatascience.model.model_proc_runner" -> "graphdatascience" [];
	"graphdatascience.model.model" -> "graphdatascience" [];
	"graphdatascience.model.model_beta_proc_runner" -> "graphdatascience" [];
	"graphdatascience.model.model_alpha_proc_runner" -> "graphdatascience" [];
	"graphdatascience.graph.graph_endpoints" -> "graphdatascience" [];
	"graphdatascience.graph.graph_beta_proc_runner" -> "graphdatascience" [];
	"graphdatascience.graph.graph_project_runner" -> "graphdatascience" [];
	"graphdatascience.graph.graph_alpha_proc_runner" -> "graphdatascience" [];
	"graphdatascience.algo.single_mode_algo_endpoints" -> "graphdatascience" [];
	"graphdatascience.algo.algo_proc_runner" -> "graphdatascience" [];
	"graphdatascience.algo.algo_endpoints" -> "graphdatascience" [];
	"graphdatascience.session.aura_api" -> "urllib" [];
	"graphdatascience.session.aura_api" -> "graphdatascience" [];
	"graphdatascience.query_runner.query_runner" -> "graphdatascience" [];
	"graphdatascience.pipeline.nr_training_pipeline" -> "graphdatascience" [];
	"graphdatascience.pipeline.nc_training_pipeline" -> "graphdatascience" [];
	"graphdatascience.pipeline.classification_training_pipeline" -> "graphdatascience" [];
	"graphdatascience.pipeline.lp_training_pipeline" -> "graphdatascience" [];
	"graphdatascience.model.simple_rel_embedding_model" -> "graphdatascience" [];
	"graphdatascience.model.node_classification_model" -> "graphdatascience" [];
	"graphdatascience.model.graphsage_model" -> "graphdatascience" [];
	"graphdatascience.graph.graph_cypher_runner" -> "graphdatascience" [];
	"graphdatascience.graph.graph_object" -> "graphdatascience" [];
	"xml.etree.ElementInclude" -> "urllib" [];
	"zipimport" -> "importlib" [];
	"_json" -> "json" [];
	"/Users/binobenjamin/Documents/Neo4jResearchAssistant/main.py" -> "google" [];
	"tiktoken.core" -> "concurrent" [];
	"langchain_core._api.deprecation" -> "collections" [];
	"langchain_core.utils.mustache" -> "collections" [];
	"langchain_core.utils.utils" -> "collections" [];
	"langchain_core.utils.utils" -> "packaging" [];
	"langchain_core.utils.formatting" -> "collections" [];
	"pydantic.v1.typing" -> "collections" [];
	"pydantic_core.core_schema" -> "collections" [];
	"pydantic_core._pydantic_core" -> "collections" [];
	"pydantic.json_schema" -> "typing_inspection" [];
	"pydantic.type_adapter" -> "collections" [];
	"pydantic.plugin._schema_validator" -> "collections" [];
	"pydantic.plugin._loader" -> "importlib" [];
	"pydantic.plugin._loader" -> "collections" [];
	"pydantic._internal._typing_extra" -> "collections" [];
	"pydantic.version" -> "importlib" [];
	"typing_inspection.typing_objects" -> "collections" [];
	"pydantic._internal._namespace_utils" -> "collections" [];
	"pydantic._internal._generate_schema" -> "collections" [];
	"pydantic._internal._generate_schema" -> "pydantic" [];
	"pydantic._internal._validators" -> "collections" [];
	"pydantic._internal._validators" -> "pydantic" [];
	"pydantic.types" -> "collections" [];
	"pydantic.types" -> "typing_inspection" [];
	"pydantic._internal._schema_gather" -> "pydantic_core" [];
	"pydantic._internal._generics" -> "pydantic" [];
	"pydantic._internal._fields" -> "collections" [];
	"pydantic._internal._discriminated_union" -> "collections" [];
	"pydantic._internal._discriminated_union" -> "pydantic" [];
	"zoneinfo._common" -> "importlib" [];
	"pydantic._internal._model_construction" -> "pydantic" [];
	"pydantic._internal._signature" -> "pydantic" [];
	"pydantic.main" -> "collections" [];
	"pydantic.deprecated.json" -> "pydantic" [];
	"pydantic.networks" -> "importlib" [];
	"pydantic.deprecated.parse" -> "pydantic" [];
	"pydantic._internal._dataclasses" -> "pydantic" [];
	"pydantic.errors" -> "typing_inspection" [];
	"pydantic._internal._schema_generation_shared" -> "pydantic" [];
	"pydantic._internal._mock_val_ser" -> "collections" [];
	"pydantic._internal._mock_val_ser" -> "pydantic" [];
	"pydantic._internal._decorators" -> "pydantic" [];
	"pydantic._internal._core_utils" -> "collections" [];
	"pydantic._internal._core_metadata" -> "pydantic" [];
	"pydantic._internal._config" -> "pydantic" [];
	"pydantic._internal._decorators_v1" -> "pydantic" [];
	"pydantic._internal._validate_call" -> "collections" [];
	"pydantic._internal._validate_call" -> "pydantic" [];
	"typing_inspection.introspection" -> "collections" [];
	"pydantic.fields" -> "collections" [];
	"pydantic.mypy" -> "collections" [];
	"pydantic.experimental.arguments_schema" -> "collections" [];
	"pydantic.deprecated.decorator" -> "collections" [];
	"pydantic.deprecated.decorator" -> "pydantic" [];
	"pydantic.deprecated.tools" -> "pydantic" [];
	"pydantic.deprecated.config" -> "pydantic" [];
	"pydantic.deprecated.class_validators" -> "pydantic" [];
	"langchain_core._api.beta_decorator" -> "collections" [];
	"langchain" -> "langchain_community" [];
	"langchain" -> "langchain_core" [];
	"langchain.globals" -> "langchain_core" [];
	"langchain_core.caches" -> "collections" [];
	"langchain_core.runnables.utils" -> "collections" [];
	"langchain_core.runnables.schema" -> "collections" [];
	"langchain_core.runnables.router" -> "collections" [];
	"langchain_core.runnables.passthrough" -> "collections" [];
	"langchain_core.runnables.graph_ascii" -> "collections" [];
	"langchain_core.load.dump" -> "langchain_core" [];
	"langchain_core.messages.utils" -> "collections" [];
	"langchain_core.messages.utils" -> "langchain_core" [];
	"langchain_core.prompt_values" -> "collections" [];
	"langchain_core.language_models.llms" -> "collections" [];
	"langchain_core.language_models.llms" -> "langchain_core" [];
	"langchain_core.callbacks.usage" -> "collections" [];
	"langchain_core.callbacks.usage" -> "langchain_core" [];
	"langchain_core.tracers.context" -> "collections" [];
	"langchain_core.tracers.log_stream" -> "langchain_core" [];
	"langchain_core.tracers.memory_stream" -> "collections" [];
	"langchain_core.tracers._streaming" -> "collections" [];
	"jsonpointer" -> "collections" [];
	"langchain_core.tracers.evaluation" -> "concurrent" [];
	"langchain_core.tracers.evaluation" -> "collections" [];
	"langsmith.evaluation.string_evaluator" -> "langsmith" [];
	"langsmith.evaluation.integrations._langchain" -> "langsmith" [];
	"langsmith.evaluation.integrations._langchain" -> "langchain" [];
	"langchain.evaluation.string_distance.base" -> "langchain_core" [];
	"langchain.evaluation.string_distance.base" -> "langchain" [];
	"langchain.chains.base" -> "langchain_core" [];
	"langchain.chains.base" -> "langchain" [];
	"langchain.evaluation.scoring.eval_chain" -> "langchain_core" [];
	"langchain.evaluation.scoring.eval_chain" -> "langchain" [];
	"langchain_core.prompts.chat" -> "langchain_core" [];
	"langchain_core.prompts.chat" -> "collections" [];
	"langchain_core.prompts.string" -> "langchain_core" [];
	"langchain_core.prompts.message" -> "langchain_core" [];
	"langchain_core.prompts.image" -> "langchain_core" [];
	"langchain_core.prompts.dict" -> "langchain_core" [];
	"langchain_core.prompts.base" -> "collections" [];
	"langchain_core.prompts.base" -> "langchain_core" [];
	"langchain_core.output_parsers.base" -> "langchain_core" [];
	"langchain.evaluation.criteria.eval_chain" -> "collections" [];
	"langchain.evaluation.criteria.eval_chain" -> "langchain_core" [];
	"langchain.evaluation.criteria.eval_chain" -> "langchain" [];
	"langchain.evaluation.criteria.prompt" -> "langchain_core" [];
	"langchain.chains.llm" -> "collections" [];
	"langchain.chains.llm" -> "langchain_core" [];
	"langchain_core.runnables.configurable" -> "collections" [];
	"langchain.evaluation.qa.generate_chain" -> "langchain_core" [];
	"langchain.output_parsers.regex" -> "langchain_core" [];
	"langchain.output_parsers" -> "langchain_core" [];
	"langchain_community.output_parsers.rail_parser" -> "langchain_core" [];
	"langchain.output_parsers.yaml" -> "langchain_core" [];
	"langchain.output_parsers.structured" -> "langchain_core" [];
	"langchain_core.output_parsers.json" -> "langchain_core" [];
	"langchain_core.utils.json" -> "langchain_core" [];
	"langchain_core.output_parsers.transform" -> "langchain_core" [];
	"langchain_core.output_parsers.transform" -> "collections" [];
	"langchain.output_parsers.retry" -> "langchain_core" [];
	"langchain.output_parsers.regex_dict" -> "langchain_core" [];
	"langchain.output_parsers.pandas_dataframe" -> "langchain_core" [];
	"langchain.output_parsers.fix" -> "langchain_core" [];
	"langchain.output_parsers.enum" -> "langchain_core" [];
	"langchain.output_parsers.datetime" -> "langchain_core" [];
	"langchain.output_parsers.combining" -> "langchain_core" [];
	"langchain.output_parsers.boolean" -> "langchain_core" [];
	"langchain._api.module_import" -> "langchain_core" [];
	"langchain_core.output_parsers.openai_tools" -> "langchain_core" [];
	"langchain.evaluation.qa.generate_prompt" -> "langchain_core" [];
	"langchain.evaluation.qa.eval_chain" -> "collections" [];
	"langchain.evaluation.qa.eval_chain" -> "langchain_core" [];
	"langchain.evaluation.qa.eval_chain" -> "langchain" [];
	"langchain.evaluation.qa.eval_prompt" -> "langchain_core" [];
	"langchain.evaluation.loading" -> "collections" [];
	"langchain.evaluation.loading" -> "langchain_core" [];
	"langchain_community.chat_models.openai" -> "langchain_core" [];
	"langchain.chains.openai_functions.base" -> "collections" [];
	"langchain.chains.openai_functions.base" -> "langchain_core" [];
	"langchain.chains.openai_functions.base" -> "langchain" [];
	"langchain.chains.openai_functions.tagging" -> "langchain_core" [];
	"langchain.chains.openai_functions.qa_with_structure" -> "langchain_core" [];
	"langchain.chains.openai_functions.extraction" -> "langchain_core" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "collections" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "langchain_core" [];
	"langchain.chains.structured_output.base" -> "collections" [];
	"langchain.chains.structured_output.base" -> "langchain_core" [];
	"langchain_core.utils.function_calling" -> "langchain_core" [];
	"langchain_core.tools.simple" -> "collections" [];
	"langchain_core.tools.simple" -> "langchain_core" [];
	"langchain_core.tools.base" -> "langchain_core" [];
	"langchain_core.tools.base" -> "collections" [];
	"langchain_core.utils.json_schema" -> "collections" [];
	"langchain_core.output_parsers.openai_functions" -> "langchain_core" [];
	"langchain_community.utils.openai" -> "importlib" [];
	"langchain_community.utils.openai" -> "packaging" [];
	"langchain_community.adapters.openai" -> "langchain_core" [];
	"langchain_core.chat_sessions" -> "collections" [];
	"langchain_core.tools.structured" -> "collections" [];
	"langchain_core.tools.structured" -> "langchain_core" [];
	"langchain_core.tools.retriever" -> "langchain_core" [];
	"langchain_core.tools.convert" -> "langchain_core" [];
	"langchain.evaluation.embedding_distance.base" -> "langchain_core" [];
	"langchain.evaluation.embedding_distance.base" -> "langchain" [];
	"langchain_community.embeddings.openai" -> "langchain_core" [];
	"langchain_community.embeddings.openai" -> "tqdm" [];
	"langchain.evaluation.comparison.eval_chain" -> "langchain_core" [];
	"langchain.evaluation.comparison.eval_chain" -> "langchain" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "collections" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "langchain_core" [];
	"langchain.evaluation.agents.trajectory_eval_prompt" -> "langchain_core" [];
	"langchain_core.agents" -> "collections" [];
	"langchain.evaluation.schema" -> "collections" [];
	"langchain.evaluation.schema" -> "langchain_core" [];
	"langsmith.evaluation._runner" -> "concurrent" [];
	"langsmith.evaluation._runner" -> "langchain_core" [];
	"langsmith.evaluation._runner" -> "importlib" [];
	"langsmith.evaluation._runner" -> "tqdm" [];
	"langsmith._internal._patch" -> "urllib" [];
	"langsmith.run_trees" -> "urllib" [];
	"langsmith.run_trees" -> "langchain_core" [];
	"langsmith.client" -> "concurrent" [];
	"langsmith.client" -> "langchain" [];
	"langsmith.client" -> "langchain_core" [];
	"langchain_core.prompts.structured" -> "collections" [];
	"langchain_core.prompts.structured" -> "langchain_core" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "langchain_core" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "langchain" [];
	"langchain.smith.evaluation.runner_utils" -> "concurrent" [];
	"langchain.smith.evaluation.runner_utils" -> "langchain_core" [];
	"langchain.smith.evaluation.runner_utils" -> "langsmith" [];
	"langchain.smith.evaluation.runner_utils" -> "langchain" [];
	"langchain.smith.evaluation.progress" -> "collections" [];
	"langchain.smith.evaluation.progress" -> "langchain_core" [];
	"langchain.smith.evaluation.config" -> "collections" [];
	"langchain.smith.evaluation.config" -> "langchain_core" [];
	"requests_toolbelt.multipart.decoder" -> "email" [];
	"requests_toolbelt.multipart.decoder" -> "requests" [];
	"requests_toolbelt.multipart.encoder" -> "requests_toolbelt" [];
	"requests_toolbelt.streaming_iterator" -> "requests" [];
	"requests_toolbelt.adapters.source" -> "requests" [];
	"requests_toolbelt.adapters.source" -> "requests_toolbelt" [];
	"requests_toolbelt.adapters.ssl" -> "requests_toolbelt" [];
	"langsmith.evaluation._arunner" -> "concurrent" [];
	"langsmith.evaluation._arunner" -> "importlib" [];
	"langchain_core.tracers.base" -> "langchain_core" [];
	"langchain_core.tracers.base" -> "collections" [];
	"langchain_core.tracers.core" -> "langchain_core" [];
	"langchain_core.tracers.core" -> "collections" [];
	"langchain_core.tracers.schemas" -> "langchain_core" [];
	"langchain_core.tracers.langchain" -> "concurrent" [];
	"langchain_core.tracers.langchain" -> "langchain_core" [];
	"langsmith.utils" -> "concurrent" [];
	"langsmith.utils" -> "http" [];
	"httpcore._backends.trio" -> "httpcore" [];
	"httpcore._backends.anyio" -> "httpcore" [];
	"anyio._backends._trio" -> "collections" [];
	"anyio._backends._trio" -> "concurrent" [];
	"exceptiongroup._formatting" -> "collections" [];
	"exceptiongroup._exceptions" -> "collections" [];
	"exceptiongroup._catch" -> "collections" [];
	"anyio.abc._eventloop" -> "collections" [];
	"anyio.abc._eventloop" -> "anyio" [];
	"anyio.abc._testing" -> "collections" [];
	"anyio.abc._tasks" -> "collections" [];
	"anyio.abc._streams" -> "collections" [];
	"anyio.abc._sockets" -> "collections" [];
	"anyio.from_thread" -> "collections" [];
	"anyio.from_thread" -> "concurrent" [];
	"anyio._backends._asyncio" -> "concurrent" [];
	"anyio._core._asyncio_selector_thread" -> "collections" [];
	"anyio._core._typedattr" -> "collections" [];
	"anyio._core._testing" -> "collections" [];
	"anyio._core._tempfile" -> "collections" [];
	"anyio._core._tasks" -> "collections" [];
	"anyio._core._synchronization" -> "anyio" [];
	"anyio._core._subprocesses" -> "collections" [];
	"anyio._core._subprocesses" -> "anyio" [];
	"anyio._core._sockets" -> "collections" [];
	"anyio.streams.tls" -> "collections" [];
	"anyio.streams.stapled" -> "collections" [];
	"anyio._core._signals" -> "collections" [];
	"anyio._core._resources" -> "anyio" [];
	"anyio._core._fileio" -> "collections" [];
	"anyio._core._exceptions" -> "collections" [];
	"anyio._core._eventloop" -> "collections" [];
	"anyio._core._eventloop" -> "anyio" [];
	"anyio.to_thread" -> "collections" [];
	"httpcore._sync.socks_proxy" -> "httpcore" [];
	"httpcore._sync.http2" -> "httpcore" [];
	"httpcore._sync.interfaces" -> "httpcore" [];
	"httpcore._sync.http_proxy" -> "httpcore" [];
	"httpcore._sync.http11" -> "httpcore" [];
	"httpcore._sync.connection_pool" -> "httpcore" [];
	"httpcore._sync.connection" -> "httpcore" [];
	"httpcore._models" -> "urllib" [];
	"httpcore._backends.sync" -> "httpcore" [];
	"httpcore._backends.mock" -> "httpcore" [];
	"httpcore._async.socks_proxy" -> "httpcore" [];
	"httpcore._backends.auto" -> "httpcore" [];
	"httpcore._async.http2" -> "httpcore" [];
	"httpcore._async.interfaces" -> "httpcore" [];
	"httpcore._async.http_proxy" -> "httpcore" [];
	"httpcore._async.http11" -> "httpcore" [];
	"httpcore._async.connection_pool" -> "httpcore" [];
	"httpcore._async.connection" -> "httpcore" [];
	"httpx._urls" -> "urllib" [];
	"httpx._utils" -> "urllib" [];
	"httpx._types" -> "http" [];
	"httpx._transports.default" -> "http" [];
	"httpx._models" -> "email" [];
	"httpx._models" -> "urllib" [];
	"httpx._models" -> "collections" [];
	"httpx._models" -> "http" [];
	"httpx._content" -> "urllib" [];
	"httpx._auth" -> "urllib" [];
	"langsmith.run_helpers" -> "langchain_core" [];
	"langsmith.async_client" -> "http" [];
	"langchain_core.callbacks.streaming_stdout" -> "langchain_core" [];
	"langchain_core.callbacks.stdout" -> "langchain_core" [];
	"langchain_core.callbacks.file" -> "langchain_core" [];
	"langchain_core.callbacks.base" -> "collections" [];
	"langchain_core.callbacks.base" -> "langchain_core" [];
	"langchain_core.language_models.fake_chat_models" -> "collections" [];
	"langchain_core.language_models.fake_chat_models" -> "langchain_core" [];
	"langchain_core.language_models.fake" -> "collections" [];
	"langchain_core.language_models.fake" -> "langchain_core" [];
	"langchain_core.language_models.chat_models" -> "collections" [];
	"langchain_core.language_models.chat_models" -> "langchain_core" [];
	"langchain_core.language_models._utils" -> "collections" [];
	"langchain_core.language_models._utils" -> "langchain_core" [];
	"langchain_core.language_models.base" -> "collections" [];
	"langchain_core.language_models.base" -> "langchain_core" [];
	"langchain_text_splitters.markdown" -> "langchain_core" [];
	"langchain_text_splitters.json" -> "langchain_core" [];
	"langchain_text_splitters.html" -> "langchain_core" [];
	"langchain_text_splitters.base" -> "langchain_core" [];
	"langchain_core.messages.base" -> "langchain_core" [];
	"langchain_core.messages.base" -> "collections" [];
	"langchain_core.load.load" -> "langchain_core" [];
	"langchain_core.callbacks.manager" -> "concurrent" [];
	"langchain_core.callbacks.manager" -> "langsmith" [];
	"langchain_core.callbacks.manager" -> "langchain_core" [];
	"langchain_core.callbacks.manager" -> "collections" [];
	"langchain_core.runnables.history" -> "collections" [];
	"langchain_core.runnables.history" -> "langchain_core" [];
	"langchain_core.chat_history" -> "collections" [];
	"langchain_core.runnables.fallbacks" -> "collections" [];
	"langchain_core.runnables.config" -> "collections" [];
	"langchain_core.runnables.config" -> "concurrent" [];
	"langchain_core.runnables.config" -> "langsmith" [];
	"langchain_core.runnables.branch" -> "collections" [];
	"langchain_core.runnables.base" -> "concurrent" [];
	"langchain_core.runnables.base" -> "langchain_core" [];
	"langchain_core.tracers.event_stream" -> "langchain_core" [];
	"langchain_core.tracers.event_stream" -> "collections" [];
	"langchain_core.tracers.root_listeners" -> "collections" [];
	"langchain_core.outputs.generation" -> "langchain_core" [];
	"langchain_core.outputs.chat_generation" -> "langchain_core" [];
	"langchain_community.vectorstores" -> "langchain_core" [];
	"langchain_community.vectorstores.zilliz" -> "langchain_core" [];
	"langchain_community.vectorstores.zep_cloud" -> "langchain_core" [];
	"langchain_community.vectorstores.zep" -> "langchain_core" [];
	"langchain_community.vectorstores.yellowbrick" -> "langchain_core" [];
	"langchain_community.docstore.document" -> "langchain_core" [];
	"langchain_community.vectorstores.weaviate" -> "langchain_core" [];
	"langchain_community.vectorstores.utils" -> "langchain_core" [];
	"langchain_community.vectorstores.vlite" -> "langchain_core" [];
	"langchain_community.vectorstores.vespa" -> "langchain_core" [];
	"langchain_community.vectorstores.vectara" -> "langchain_core" [];
	"langchain_community.vectorstores.vearch" -> "langchain_core" [];
	"langchain_community.vectorstores.vdms" -> "langchain_core" [];
	"langchain_community.vectorstores.vald" -> "langchain_core" [];
	"grpc.aio._server" -> "concurrent" [];
	"grpc.experimental.aio" -> "grpc" [];
	"langchain_community.vectorstores.usearch" -> "langchain_core" [];
	"langchain_community.docstore.in_memory" -> "langchain_core" [];
	"langchain_community.docstore.base" -> "langchain_core" [];
	"langchain_community.vectorstores.upstash" -> "langchain_core" [];
	"langchain_community.vectorstores.typesense" -> "langchain_core" [];
	"langchain_community.vectorstores.timescalevector" -> "langchain_core" [];
	"langchain_community.vectorstores.tiledb" -> "langchain_core" [];
	"langchain_community.vectorstores.tigris" -> "langchain_core" [];
	"langchain_community.vectorstores.tidb_vector" -> "langchain_core" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "langchain_core" [];
	"langchain_community.vectorstores.tencentvectordb" -> "langchain_core" [];
	"langchain_core.structured_query" -> "collections" [];
	"langchain.retrievers.self_query.tencentvectordb" -> "langchain" [];
	"langchain_community.query_constructors.tencentvectordb" -> "langchain_core" [];
	"langchain.chains.query_constructor.parser" -> "collections" [];
	"langchain.chains.query_constructor.parser" -> "langchain_core" [];
	"langchain.chains.query_constructor.base" -> "collections" [];
	"langchain.chains.query_constructor.base" -> "langchain_core" [];
	"langchain.chains.query_constructor.prompt" -> "langchain_core" [];
	"langchain_core.prompts.few_shot" -> "langchain_core" [];
	"langchain_core.example_selectors.semantic_similarity" -> "langchain_core" [];
	"langchain_core.example_selectors.base" -> "langchain_core" [];
	"langchain_community.vectorstores.tair" -> "langchain_core" [];
	"langchain_community.vectorstores.tablestore" -> "langchain_core" [];
	"langchain_community.vectorstores.surrealdb" -> "langchain_core" [];
	"langchain_community.vectorstores.supabase" -> "langchain_core" [];
	"langchain_community.vectorstores.starrocks" -> "langchain_core" [];
	"pydantic_settings.sources.types" -> "collections" [];
	"pydantic_settings.sources.types" -> "pydantic" [];
	"pydantic_settings.sources.providers.yaml" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.toml" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.secrets" -> "pydantic" [];
	"pydantic_settings.sources.providers.secrets" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.pyproject" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.json" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.gcp" -> "collections" [];
	"pydantic_settings.sources.providers.gcp" -> "google" [];
	"pydantic_settings.sources.providers.gcp" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.env" -> "collections" [];
	"pydantic_settings.sources.providers.env" -> "pydantic" [];
	"pydantic_settings.sources.providers.env" -> "typing_inspection" [];
	"pydantic_settings.sources.providers.env" -> "pydantic_settings" [];
	"pydantic_settings.sources.utils" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.dotenv" -> "collections" [];
	"pydantic_settings.sources.providers.dotenv" -> "typing_inspection" [];
	"pydantic_settings.sources.providers.dotenv" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.cli" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.azure" -> "collections" [];
	"pydantic_settings.sources.providers.azure" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.aws" -> "collections" [];
	"pydantic_settings.sources.providers.aws" -> "pydantic_settings" [];
	"pydantic_settings.sources.base" -> "typing_inspection" [];
	"pydantic_settings.sources.base" -> "pydantic_settings" [];
	"langchain_community.vectorstores.sqlitevss" -> "langchain_core" [];
	"langchain_community.vectorstores.sqlitevec" -> "langchain_core" [];
	"langchain_community.vectorstores.sklearn" -> "langchain_core" [];
	"langchain_community.vectorstores.singlestoredb" -> "langchain_core" [];
	"langchain_community.vectorstores.singlestoredb" -> "sqlalchemy" [];
	"langchain_community.vectorstores.semadb" -> "langchain_core" [];
	"langchain_community.vectorstores.scann" -> "langchain_core" [];
	"langchain_community.vectorstores.rocksetdb" -> "langchain_core" [];
	"langchain_community.vectorstores.relyt" -> "langchain_core" [];
	"langchain_community.utilities.redis" -> "urllib" [];
	"langchain_community.vectorstores.redis.base" -> "langchain_core" [];
	"langchain_community.vectorstores.qdrant" -> "langchain_core" [];
	"langchain_community.vectorstores.pinecone" -> "langchain_core" [];
	"langchain_community.vectorstores.pgvector" -> "langchain_core" [];
	"langchain_community.vectorstores.pgembedding" -> "langchain_core" [];
	"langchain_community.vectorstores.pathway" -> "langchain_core" [];
	"langchain_community.vectorstores.oraclevs" -> "langchain_core" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.myscale" -> "langchain_core" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "langchain_core" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "importlib" [];
	"langchain_community.vectorstores.momento_vector_index" -> "langchain_core" [];
	"langchain_community.vectorstores.milvus" -> "langchain_core" [];
	"langchain_community.vectorstores.meilisearch" -> "langchain_core" [];
	"langchain_community.vectorstores.matching_engine" -> "langchain_core" [];
	"langchain_community.vectorstores.matching_engine" -> "google" [];
	"langchain_community.vectorstores.matching_engine" -> "langchain_community" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint" -> "google" [];
	"google.protobuf.internal.builder" -> "google" [];
	"google.protobuf.internal.api_implementation" -> "google" [];
	"google.protobuf.internal.python_message" -> "google" [];
	"google.protobuf.internal.wire_format" -> "google" [];
	"google.protobuf.internal.well_known_types" -> "collections" [];
	"google.protobuf.internal.type_checkers" -> "google" [];
	"google.protobuf.internal.extension_dict" -> "google" [];
	"google.protobuf.internal.decoder" -> "google" [];
	"google.protobuf.internal.containers" -> "collections" [];
	"google.protobuf.text_format" -> "encodings" [];
	"google.cloud.aiplatform.matching_engine._protos.match_service_pb2" -> "google" [];
	"google.rpc.status_pb2" -> "google" [];
	"google.rpc.code_pb2" -> "google" [];
	"google.rpc.error_details_pb2" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest_base" -> "google" [];
	"google.auth.aio.credentials" -> "google" [];
	"google.auth.aio.transport.sessions" -> "google" [];
	"google.auth.aio.transport.aiohttp" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.rest" -> "google" [];
	"google.api_core.retry" -> "google" [];
	"google.api_core.datetime_helpers" -> "google" [];
	"google.api_core.retry.retry_base" -> "requests" [];
	"google.api_core.retry.retry_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.grpc" -> "google" [];
	"google.api_core.grpc_helpers" -> "google" [];
	"proto.message" -> "google" [];
	"proto.utils" -> "google" [];
	"proto.marshal.marshal" -> "google" [];
	"proto.marshal.marshal" -> "proto" [];
	"proto.marshal.rules.field_mask" -> "google" [];
	"proto.marshal.rules.wrappers" -> "google" [];
	"proto.marshal.rules.struct" -> "collections" [];
	"proto.marshal.rules.struct" -> "google" [];
	"proto.marshal.collections.repeated" -> "proto" [];
	"proto.marshal.collections.maps" -> "proto" [];
	"proto.marshal.rules.dates" -> "google" [];
	"proto.marshal.rules.stringy_numbers" -> "proto" [];
	"proto.marshal.compat" -> "google" [];
	"proto.fields" -> "google" [];
	"proto.enums" -> "google" [];
	"proto._file_info" -> "google" [];
	"proto.datetime_helpers" -> "google" [];
	"google.auth.transport.grpc" -> "google" [];
	"google.api_core.operations_v1.operations_rest_client_async" -> "google" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "google" [];
	"google.api_core.operations_v1.transports.base" -> "google" [];
	"google.api_core.operations_v1.pagers_async" -> "google" [];
	"google.api_core.operations_v1.pagers_base" -> "google" [];
	"google.api_core.operations_v1.transports.rest_asyncio" -> "google" [];
	"google.api_core.operations_v1.transports.rest" -> "google" [];
	"google.api_core.operations_v1.operations_client" -> "google" [];
	"google.api_core.operations_v1.operations_async_client" -> "google" [];
	"google.api_core.operations_v1.abstract_operations_client" -> "google" [];
	"google.api_core.operations_v1.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.transports.base" -> "google" [];
	"google.longrunning.operations_proto_pb2" -> "google" [];
	"google.api.client_pb2" -> "google" [];
	"google.api.launch_stage_pb2" -> "google" [];
	"google.api.annotations_pb2" -> "google" [];
	"google.api.http_pb2" -> "google" [];
	"google.api.resource_pb2" -> "google" [];
	"google.api.field_behavior_pb2" -> "google" [];
	"google.api.httpbody_pb2" -> "google" [];
	"google.longrunning.operations_pb2_grpc" -> "google" [];
	"google.iam.v1.policy_pb2" -> "google" [];
	"google.type.expr_pb2" -> "google" [];
	"google.type.interval_pb2" -> "google" [];
	"google.type.money_pb2" -> "google" [];
	"google.type.date_pb2" -> "google" [];
	"google.type.latlng_pb2" -> "google" [];
	"google.iam.v1.iam_policy_pb2" -> "google" [];
	"google.iam.v1.options_pb2" -> "google" [];
	"google.cloud.location.locations_pb2" -> "google" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_data_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.vertex_rag_data" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.pagers" -> "google" [];
	"google.api_core.operation_async" -> "google" [];
	"google.api_core.future.async_future" -> "google" [];
	"google.api_core.future.polling" -> "concurrent" [];
	"google.api_core.future.polling" -> "google" [];
	"google.api_core.protobuf_helpers" -> "google" [];
	"google.api_core.operation" -> "google" [];
	"google.api_core.gapic_v1.routing_header" -> "urllib" [];
	"google.api_core.gapic_v1.method_async" -> "google" [];
	"google.api_core.gapic_v1.method" -> "google" [];
	"google.api_core.gapic_v1.config_async" -> "google" [];
	"google.api_core.gapic_v1.config" -> "google" [];
	"google.api_core.gapic_v1.client_info" -> "google" [];
	"google.api_core.exceptions" -> "http" [];
	"google.api_core.exceptions" -> "google" [];
	"grpc_status.rpc_status" -> "google" [];
	"grpc_status._async" -> "google" [];
	"grpc_status._async" -> "grpc" [];
	"google.cloud.aiplatform_v1.types.tuning_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.tool" -> "google" [];
	"google.cloud.aiplatform_v1.types.saved_query" -> "google" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine_execution_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.reasoning_engine" -> "google" [];
	"google.cloud.aiplatform_v1.types.openapi" -> "google" [];
	"google.cloud.aiplatform_v1.types.notebook_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.notebook_runtime" -> "google" [];
	"google.cloud.aiplatform_v1.types.notebook_idle_shutdown_config" -> "google" [];
	"google.cloud.aiplatform_v1.types.notebook_execution_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.nas_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.migration_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.migratable_resource" -> "google" [];
	"google.cloud.aiplatform_v1.types.llm_utility_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.index_endpoint_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.gen_ai_cache_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.evaluated_annotation" -> "google" [];
	"google.cloud.aiplatform_v1.types.dataset_version" -> "google" [];
	"google.cloud.aiplatform_v1.types.content" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.notebook_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.migration_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.match_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.match_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.match_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.llm_utility_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_tuning_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.evaluation_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_data_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.vertex_rag_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.vizier_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.tensorboard_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.specialist_pool_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.schedule_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_execution_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.reasoning_engine_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.prediction_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.prediction_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.prediction_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.pipeline_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.persistent_resource_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.model_garden_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.metadata_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.job_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_endpoint_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.index_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.gen_ai_cache_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.featurestore_online_serving_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_registry_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_admin_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.feature_online_store_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.endpoint_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.deployment_resource_pool_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.client" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1.services.dataset_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.vertex_rag_data" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.ui_pipeline_spec" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.tuning_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.tool" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.session_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.session" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.saved_query" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine_execution_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.reasoning_engine" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.openapi" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_runtime" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_idle_shutdown_config" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.notebook_execution_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.nas_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.migration_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.migratable_resource" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.llm_utility_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.extension_registry_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.extension_execution_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.extension" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.example_store_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.example_store" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.evaluated_annotation" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.dataset_version" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.content" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.session_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.notebook_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.migration_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.llm_utility_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_tuning_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.evaluation_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vizier_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.vertex_rag_data_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.tensorboard_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.specialist_pool_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.schedule_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_execution_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.reasoning_engine_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.prediction_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.pipeline_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.persistent_resource_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_monitoring_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.model_garden_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.metadata_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.match_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.job_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_endpoint_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.index_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.gen_ai_cache_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.featurestore_online_serving_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_registry_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_admin_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.feature_online_store_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_registry_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.extension_execution_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.example_store_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.endpoint_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.deployment_resource_pool_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.client" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest_base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.rest" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc_asyncio" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.grpc" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.transports.base" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.pagers" -> "google" [];
	"google.cloud.aiplatform_v1beta1.services.dataset_service.async_client" -> "google" [];
	"google.cloud.aiplatform_v1.types.vizier_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.training_pipeline" -> "google" [];
	"google.cloud.aiplatform_v1.types.tensorboard_time_series" -> "google" [];
	"google.cloud.aiplatform_v1.types.tensorboard_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.tensorboard_run" -> "google" [];
	"google.cloud.aiplatform_v1.types.tensorboard_experiment" -> "google" [];
	"google.cloud.aiplatform_v1.types.tensorboard_data" -> "google" [];
	"google.cloud.aiplatform_v1.types.tensorboard" -> "google" [];
	"google.cloud.aiplatform_v1.types.study" -> "google" [];
	"google.cloud.aiplatform_v1.types.specialist_pool_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.schedule_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.schedule" -> "google" [];
	"google.cloud.aiplatform_v1.types.prediction_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.pipeline_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.pipeline_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.persistent_resource_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.persistent_resource" -> "google" [];
	"google.cloud.aiplatform_v1.types.operation" -> "google" [];
	"google.cloud.aiplatform_v1.types.model_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.model_deployment_monitoring_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.model_evaluation_slice" -> "google" [];
	"google.cloud.aiplatform_v1.types.model_evaluation" -> "google" [];
	"google.cloud.aiplatform_v1.types.model" -> "google" [];
	"google.cloud.aiplatform_v1.types.metadata_store" -> "google" [];
	"google.cloud.aiplatform_v1.types.metadata_schema" -> "google" [];
	"google.cloud.aiplatform_v1.types.metadata_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.job_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.io" -> "google" [];
	"google.cloud.aiplatform_v1.types.index_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.index_endpoint" -> "google" [];
	"google.cloud.aiplatform_v1.types.index" -> "google" [];
	"google.cloud.aiplatform_v1.types.hyperparameter_tuning_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.featurestore_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.featurestore_online_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.featurestore" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature_view_sync" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature_view" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature_registry_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature_online_store_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature_online_store_admin_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature_online_store" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature_monitoring_stats" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature_group" -> "google" [];
	"google.cloud.aiplatform_v1.types.feature" -> "google" [];
	"google.cloud.aiplatform_v1.types.explanation_metadata" -> "google" [];
	"google.cloud.aiplatform_v1.types.explanation" -> "google" [];
	"google.cloud.aiplatform_v1.types.execution" -> "google" [];
	"google.cloud.aiplatform_v1.types.event" -> "google" [];
	"google.cloud.aiplatform_v1.types.entity_type" -> "google" [];
	"google.cloud.aiplatform_v1.types.endpoint_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.endpoint" -> "google" [];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.deployment_resource_pool" -> "google" [];
	"google.cloud.aiplatform_v1.types.dataset_service" -> "google" [];
	"google.cloud.aiplatform_v1.types.dataset" -> "google" [];
	"google.cloud.aiplatform_v1.types.data_labeling_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.data_item" -> "google" [];
	"google.cloud.aiplatform_v1.types.custom_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.context" -> "google" [];
	"google.cloud.aiplatform_v1.types.cached_content" -> "google" [];
	"google.cloud.aiplatform_v1.types.batch_prediction_job" -> "google" [];
	"google.cloud.aiplatform_v1.types.artifact" -> "google" [];
	"google.cloud.aiplatform_v1.types.annotation_spec" -> "google" [];
	"google.cloud.aiplatform_v1.types.annotation" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.vizier_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.training_pipeline" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_time_series" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_run" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_experiment" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard_data" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.tensorboard" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.study" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.specialist_pool_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.schedule_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.schedule" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.prediction_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.pipeline_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.persistent_resource" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.operation" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_stats" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_spec" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitoring_alert" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_monitor" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_deployment_monitoring_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation_slice" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model_evaluation" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.model" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_store" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.metadata_schema" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.job_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.index_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.io" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.hyperparameter_tuning_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.index_endpoint" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.index" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.gen_ai_cache_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_online_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore_monitoring" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.featurestore" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_view_sync" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_view" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_registry_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store_admin_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_online_store" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitoring_stats" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_monitor" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature_group" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.feature" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.explanation_metadata" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.explanation" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.execution" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.event" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.entity_type" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.endpoint_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.endpoint" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.deployment_resource_pool" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.dataset_service" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.dataset" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.data_labeling_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.data_item" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.custom_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.context" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.cached_content" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.batch_prediction_job" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.artifact" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.annotation_spec" -> "google" [];
	"google.cloud.aiplatform_v1beta1.types.annotation" -> "google" [];
	"google.cloud.aiplatform.utils" -> "google" [];
	"google.cloud.aiplatform.datasets.video_dataset" -> "google" [];
	"google.cloud.aiplatform.datasets.text_dataset" -> "google" [];
	"google.cloud.aiplatform.datasets.image_dataset" -> "google" [];
	"google.cloud.aiplatform.datasets.time_series_dataset" -> "google" [];
	"google.cloud.aiplatform.datasets.tabular_dataset" -> "google" [];
	"google.cloud.bigquery.magics.magics" -> "google" [];
	"google.cloud.bigquery.dbapi._helpers" -> "google" [];
	"google.cloud.bigquery.dbapi.connection" -> "google" [];
	"google.cloud.bigquery.dbapi.cursor" -> "google" [];
	"google.cloud.exceptions" -> "google" [];
	"google.cloud.exceptions" -> "grpc" [];
	"google.cloud.bigquery.table" -> "google" [];
	"google.cloud.bigquery._tqdm_helpers" -> "concurrent" [];
	"google.cloud._helpers" -> "http" [];
	"google.cloud._helpers" -> "google" [];
	"shapely.geometry.geo" -> "shapely" [];
	"google.cloud.bigquery.retry" -> "google" [];
	"google.cloud.bigquery.retry" -> "requests" [];
	"google.cloud.bigquery.job.base" -> "google" [];
	"google.cloud.bigquery._http" -> "google" [];
	"google.cloud._http" -> "urllib" [];
	"google.cloud.client" -> "google" [];
	"google.resumable_media.requests.upload" -> "google" [];
	"google.resumable_media.requests.download" -> "google" [];
	"google.resumable_media.requests._request_helpers" -> "http" [];
	"google.resumable_media.requests._request_helpers" -> "requests" [];
	"google.resumable_media.requests._request_helpers" -> "google" [];
	"google.cloud.bigquery._job_helpers" -> "google" [];
	"google.cloud.bigquery.job.query" -> "concurrent" [];
	"google.cloud.bigquery.job.query" -> "google" [];
	"google.cloud.bigquery._pandas_helpers" -> "concurrent" [];
	"google.cloud.bigquery._pandas_helpers" -> "pyarrow" [];
	"google.cloud.bigquery._pandas_helpers" -> "google" [];
	"google.cloud.bigquery._versions_helpers" -> "packaging" [];
	"google.cloud.bigquery._versions_helpers" -> "google" [];
	"google.cloud.bigquery._helpers" -> "google" [];
	"google.cloud.aiplatform.datasets.column_names_dataset" -> "google" [];
	"google.cloud.aiplatform.datasets.dataset" -> "google" [];
	"google.cloud.aiplatform.utils.yaml_utils" -> "google" [];
	"google.cloud.aiplatform.utils.pipeline_utils" -> "packaging" [];
	"google.cloud.aiplatform.utils.prediction_utils" -> "google" [];
	"vertexai.tuning._tuning" -> "google" [];
	"vertexai.generative_models._generative_models" -> "google" [];
	"vertexai.generative_models._generative_models" -> "vertexai" [];
	"PIL.Image" -> "collections" [];
	"PIL.Jpeg2KImagePlugin" -> "collections" [];
	"PIL.IptcImagePlugin" -> "collections" [];
	"PIL.PngImagePlugin" -> "collections" [];
	"PIL.ImageOps" -> "collections" [];
	"PIL._typing" -> "collections" [];
	"PIL._typing" -> "numpy" [];
	"PIL.TiffImagePlugin" -> "collections" [];
	"PIL.ImagePalette" -> "collections" [];
	"PIL.ImageFilter" -> "collections" [];
	"PIL.ImageFont" -> "packaging" [];
	"PIL.ImageDraw" -> "collections" [];
	"vertexai.caching._caching" -> "vertexai" [];
	"vertexai.caching._caching" -> "google" [];
	"google.cloud.aiplatform.jobs" -> "google" [];
	"google.cloud.aiplatform._publisher_models" -> "google" [];
	"google.cloud.aiplatform.model_monitoring.schedule" -> "google" [];
	"google.cloud.aiplatform.metadata.metadata" -> "google" [];
	"google.cloud.aiplatform._mlflow_plugin._vertex_mlflow_tracking" -> "google" [];
	"google.cloud.aiplatform.tensorboard.tensorboard_resource" -> "google" [];
	"google.cloud.aiplatform.tensorboard.uploader" -> "google" [];
	"google.cloud.aiplatform.tensorboard.plugins.tf_profiler.profile_uploader" -> "google" [];
	"google.cloud.aiplatform.tensorboard.uploader_utils" -> "google" [];
	"google.cloud.aiplatform.metadata.schema.google.artifact_schema" -> "google" [];
	"google.cloud.aiplatform.models" -> "google" [];
	"google.cloud.aiplatform.models" -> "urllib" [];
	"google.cloud.aiplatform.preview.models" -> "google" [];
	"google.cloud.aiplatform.prediction.local_model" -> "google" [];
	"google.cloud.aiplatform.metadata.schema.base_artifact" -> "google" [];
	"google.cloud.aiplatform.metadata.artifact" -> "google" [];
	"google.cloud.aiplatform.metadata.resource" -> "google" [];
	"google.cloud.aiplatform.metadata.metadata_store" -> "google" [];
	"google.cloud.aiplatform.metadata._models" -> "google" [];
	"google.cloud.aiplatform.metadata.execution" -> "google" [];
	"google.cloud.aiplatform.metadata.context" -> "google" [];
	"google.cloud.aiplatform.pipeline_jobs" -> "google" [];
	"google.cloud.aiplatform.model_evaluation.model_evaluation_job" -> "google" [];
	"google.cloud.aiplatform._pipeline_based_service.pipeline_based_service" -> "google" [];
	"google.cloud.aiplatform.model_evaluation.model_evaluation" -> "google" [];
	"google.cloud.aiplatform.metadata.experiment_run_resource" -> "concurrent" [];
	"google.cloud.aiplatform.metadata.experiment_run_resource" -> "google" [];
	"google.cloud.aiplatform.metadata.experiment_resources" -> "concurrent" [];
	"google.cloud.aiplatform.metadata.experiment_resources" -> "google" [];
	"google.cloud.aiplatform.utils.gcs_utils" -> "google" [];
	"google.cloud.aiplatform.utils.resource_manager_utils" -> "google" [];
	"google.cloud.resourcemanager_v3.types.tag_values" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_values.pagers" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.pagers" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.pagers" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.pagers" -> "google" [];
	"google.cloud.resourcemanager_v3.services.projects.pagers" -> "google" [];
	"google.cloud.resourcemanager_v3.services.organizations.pagers" -> "google" [];
	"google.cloud.resourcemanager_v3.services.folders.pagers" -> "google" [];
	"google.cloud.resourcemanager_v3.types.tag_keys" -> "google" [];
	"google.cloud.resourcemanager_v3.types.tag_holds" -> "google" [];
	"google.cloud.resourcemanager_v3.types.projects" -> "google" [];
	"google.cloud.resourcemanager_v3.types.organizations" -> "google" [];
	"google.cloud.resourcemanager_v3.types.folders" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_values.client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.rest_base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc_asyncio" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.grpc" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_values.transports.base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_values.async_client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.rest_base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc_asyncio" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.grpc" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.transports.base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_keys.async_client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.rest_base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc_asyncio" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.grpc" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.transports.base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_holds.async_client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.rest_base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc_asyncio" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.grpc" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.transports.base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.tag_bindings.async_client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.projects.client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest" -> "google" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.rest_base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc_asyncio" -> "google" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.grpc" -> "google" [];
	"google.cloud.resourcemanager_v3.services.projects.transports.base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.projects.async_client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.organizations.client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest" -> "google" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.rest_base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc_asyncio" -> "google" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.grpc" -> "google" [];
	"google.cloud.resourcemanager_v3.services.organizations.transports.base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.organizations.async_client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.folders.client" -> "google" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest" -> "google" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.rest_base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc_asyncio" -> "google" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.grpc" -> "google" [];
	"google.cloud.resourcemanager_v3.services.folders.transports.base" -> "google" [];
	"google.cloud.resourcemanager_v3.services.folders.async_client" -> "google" [];
	"google.cloud.aiplatform.utils.source_utils" -> "google" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index" -> "google" [];
	"google.cloud.aiplatform.initializer" -> "google" [];
	"google.cloud.aiplatform.base" -> "google" [];
	"google.cloud.aiplatform.training_jobs" -> "google" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_object_tracking" -> "google" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_classification" -> "google" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.video_action_recognition" -> "google" [];
	"google.cloud.aiplatform.v1.schema.predict.prediction_v1.types.image_object_detection" -> "google" [];
	"google.cloud.aiplatform.pipeline_job_schedules" -> "google" [];
	"google.cloud.aiplatform.schedules" -> "google" [];
	"google.cloud.aiplatform.featurestore.featurestore" -> "google" [];
	"google.cloud.aiplatform.featurestore.feature" -> "google" [];
	"google.cloud.aiplatform.featurestore._entity_type" -> "google" [];
	"google.cloud.aiplatform.gapic" -> "google" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_object_tracking" -> "google" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_classification" -> "google" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.video_action_recognition" -> "google" [];
	"google.cloud.aiplatform.v1beta1.schema.predict.prediction_v1beta1.types.image_object_detection" -> "google" [];
	"google.cloud.aiplatform.utils.enhanced_library._decorators" -> "proto" [];
	"google.cloud.aiplatform.utils.enhanced_library.value_converter" -> "google" [];
	"google.cloud.storage.client" -> "google" [];
	"google.cloud.storage.retry" -> "google" [];
	"google.cloud.storage._signing" -> "google" [];
	"google.cloud.storage._http" -> "google" [];
	"google.cloud.storage._opentelemetry_tracing" -> "google" [];
	"google.cloud.storage.bucket" -> "urllib" [];
	"google.cloud.storage.bucket" -> "google" [];
	"google.cloud.storage.blob" -> "email" [];
	"google.cloud.storage.blob" -> "urllib" [];
	"google.cloud.storage.batch" -> "email" [];
	"google.cloud.storage.batch" -> "google" [];
	"google.cloud.storage._helpers" -> "urllib" [];
	"langchain_community.utilities.vertexai" -> "langchain_core" [];
	"langchain_community.utilities.vertexai" -> "google" [];
	"langchain_community.vectorstores.marqo" -> "langchain_core" [];
	"langchain_community.vectorstores.manticore_search" -> "langchain_core" [];
	"langchain_community.vectorstores.llm_rails" -> "langchain_core" [];
	"langchain_community.vectorstores.lantern" -> "langchain_core" [];
	"langchain_community.vectorstores.lancedb" -> "langchain_core" [];
	"langchain_community.vectorstores.kinetica" -> "langchain_core" [];
	"langchain_community.vectorstores.kdbai" -> "langchain_core" [];
	"langchain_community.vectorstores.inmemory" -> "langchain_core" [];
	"langchain_community.vectorstores.infinispanvs" -> "http" [];
	"langchain_community.vectorstores.infinispanvs" -> "langchain_core" [];
	"langchain_community.vectorstores.hologres" -> "langchain_core" [];
	"langchain_community.vectorstores.hanavector" -> "importlib" [];
	"langchain_community.vectorstores.hanavector" -> "langchain_core" [];
	"langchain_community.vectorstores.faiss" -> "langchain_core" [];
	"langchain_community.vectorstores.epsilla" -> "langchain_core" [];
	"langchain_community.vectorstores.elasticsearch" -> "langchain_core" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.duckdb" -> "langchain_core" [];
	"langchain_community.vectorstores.documentdb" -> "langchain_core" [];
	"langchain_community.vectorstores.docarray.in_memory" -> "langchain_core" [];
	"langchain_community.vectorstores.docarray.base" -> "langchain_core" [];
	"langchain_community.vectorstores.docarray.hnsw" -> "langchain_core" [];
	"langchain_community.vectorstores.dingo" -> "langchain_core" [];
	"langchain_community.vectorstores.deeplake" -> "langchain_core" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.dashvector" -> "langchain_core" [];
	"langchain_community.vectorstores.couchbase" -> "langchain_core" [];
	"langchain_community.vectorstores.clickhouse" -> "langchain_core" [];
	"langchain_community.vectorstores.clarifai" -> "concurrent" [];
	"langchain_community.vectorstores.clarifai" -> "langchain_core" [];
	"langchain_community.vectorstores.clarifai" -> "google" [];
	"langchain_community.vectorstores.chroma" -> "langchain_core" [];
	"langchain_community.vectorstores.cassandra" -> "importlib" [];
	"langchain_community.vectorstores.cassandra" -> "packaging" [];
	"langchain_community.vectorstores.cassandra" -> "langchain_core" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "google" [];
	"langchain_community.vectorstores.baiduvectordb" -> "langchain_core" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.bagel" -> "langchain_core" [];
	"langchain_community.vectorstores.azuresearch" -> "langchain_core" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "langchain_core" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "langchain_core" [];
	"langchain_community.vectorstores.awadb" -> "langchain_core" [];
	"langchain_community.vectorstores.atlas" -> "langchain_core" [];
	"langchain_community.vectorstores.astradb" -> "concurrent" [];
	"langchain_community.vectorstores.astradb" -> "langchain_core" [];
	"langchain_community.vectorstores.aperturedb" -> "langchain_core" [];
	"langchain_core.indexing.base" -> "langchain_core" [];
	"langchain_core.indexing.base" -> "collections" [];
	"langchain_core.indexing.api" -> "collections" [];
	"langchain_core.indexing.api" -> "langchain_core" [];
	"langchain_core.document_loaders.base" -> "langchain_core" [];
	"langchain_core.document_loaders.base" -> "collections" [];
	"langchain_core.document_loaders.langsmith" -> "collections" [];
	"langchain_core.document_loaders.langsmith" -> "langchain_core" [];
	"langchain_core.document_loaders.blob_loaders" -> "collections" [];
	"langchain_core.documents.base" -> "collections" [];
	"langchain_community.vectorstores.apache_doris" -> "langchain_core" [];
	"langchain_community.vectorstores.annoy" -> "langchain_core" [];
	"langchain_community.vectorstores.analyticdb" -> "langchain_core" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "langchain_core" [];
	"langchain_community.vectorstores.aerospike" -> "langchain_core" [];
	"langchain_community.utilities.zapier" -> "langchain_core" [];
	"langchain_community.utilities.you" -> "langchain_core" [];
	"langchain_community.utilities.wolfram_alpha" -> "langchain_core" [];
	"langchain_community.utilities.wikipedia" -> "langchain_core" [];
	"langchain_community.utilities.twilio" -> "langchain_core" [];
	"langchain_community.utilities.tensorflow_datasets" -> "langchain_core" [];
	"langchain_community.tools" -> "langchain_core" [];
	"langchain_community.tools.zenguard.tool" -> "langchain_core" [];
	"langchain_community.tools.zapier.tool" -> "langchain_core" [];
	"langchain_community.tools.youtube.search" -> "langchain_core" [];
	"langchain_community.tools.you.tool" -> "langchain_core" [];
	"langchain_community.tools.yahoo_finance_news" -> "langchain_core" [];
	"langchain_community.tools.yahoo_finance_news" -> "requests" [];
	"langchain_community.document_loaders.web_base" -> "langchain_core" [];
	"langchain_community.document_loaders.web_base" -> "tqdm" [];
	"langchain_community.document_loaders.base" -> "langchain_core" [];
	"langchain_community.tools.wolfram_alpha.tool" -> "langchain_core" [];
	"langchain_community.tools.wikipedia.tool" -> "langchain_core" [];
	"langchain_community.tools.vectorstore.tool" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.retrieval" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.loading" -> "collections" [];
	"langchain.chains.qa_with_sources.loading" -> "langchain_core" [];
	"langchain.chains.question_answering.map_rerank_prompt" -> "langchain_core" [];
	"langchain.chains.question_answering.chain" -> "collections" [];
	"langchain.chains.question_answering.chain" -> "langchain_core" [];
	"langchain.chains.question_answering.chain" -> "langchain" [];
	"langchain.chains.question_answering.stuff_prompt" -> "langchain_core" [];
	"langchain.chains.prompt_selector" -> "langchain_core" [];
	"langchain.chains.combine_documents.refine" -> "langchain_core" [];
	"langchain.chains.combine_documents.reduce" -> "langchain_core" [];
	"langchain.chains.combine_documents.map_rerank" -> "collections" [];
	"langchain.chains.combine_documents.map_rerank" -> "langchain_core" [];
	"langchain.chains.combine_documents.map_reduce" -> "langchain_core" [];
	"langchain.chains.combine_documents.base" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.stuff_prompt" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.refine_prompts" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.map_reduce_prompt" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.base" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.base" -> "langchain" [];
	"langchain.chains.combine_documents.stuff" -> "langchain_core" [];
	"langchain.chains.retrieval_qa.base" -> "langchain_core" [];
	"langchain_community.llms.openai" -> "langchain_core" [];
	"langchain_community.tools.tavily_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.tavily_search" -> "langchain_core" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "langchain_core" [];
	"langchain_community.tools.steam.tool" -> "langchain_core" [];
	"langchain_community.tools.stackexchange.tool" -> "langchain_core" [];
	"langchain_community.tools.sql_database.tool" -> "sqlalchemy" [];
	"langchain_community.tools.sql_database.tool" -> "langchain_core" [];
	"langchain_community.tools.spark_sql.tool" -> "langchain_core" [];
	"langchain_community.tools.sleep.tool" -> "langchain_core" [];
	"langchain_community.tools.slack.send_message" -> "langchain_core" [];
	"langchain_community.tools.slack.base" -> "langchain_core" [];
	"langchain_community.tools.slack.schedule_message" -> "langchain_core" [];
	"langchain_community.tools.slack.get_message" -> "langchain_core" [];
	"langchain_community.tools.slack.get_channel" -> "langchain_core" [];
	"langchain_community.tools.shell.tool" -> "langchain_core" [];
	"langchain_community.tools.searx_search.tool" -> "langchain_core" [];
	"langchain_community.tools.searchapi.tool" -> "langchain_core" [];
	"langchain_community.tools.scenexplain.tool" -> "langchain_core" [];
	"langchain_community.tools.requests.tool" -> "langchain_core" [];
	"langchain_community.tools.reddit_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.reddit_search" -> "langchain_core" [];
	"langchain_community.tools.pubmed.tool" -> "langchain_core" [];
	"langchain_community.tools.powerbi.tool" -> "langchain_core" [];
	"langchain_community.tools.polygon.ticker_news" -> "langchain_core" [];
	"langchain_community.utilities.polygon" -> "langchain_core" [];
	"langchain_community.tools.polygon.last_quote" -> "langchain_core" [];
	"langchain_community.tools.polygon.financials" -> "langchain_core" [];
	"langchain_community.tools.polygon.aggregates" -> "langchain_core" [];
	"langchain_community.tools.plugin" -> "langchain_core" [];
	"langchain_community.tools.playwright.navigate_back" -> "langchain_core" [];
	"langchain_community.tools.playwright.base" -> "langchain_core" [];
	"langchain_community.tools.playwright.navigate" -> "urllib" [];
	"langchain_community.tools.playwright.navigate" -> "langchain_core" [];
	"langchain_community.tools.playwright.get_elements" -> "langchain_core" [];
	"langchain_community.tools.playwright.extract_text" -> "langchain_core" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "langchain_core" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "urllib" [];
	"langchain_community.tools.playwright.current_page" -> "langchain_core" [];
	"langchain_community.tools.playwright.click" -> "langchain_core" [];
	"langchain_community.tools.openweathermap.tool" -> "langchain_core" [];
	"langchain_community.tools.office365.send_message" -> "langchain_core" [];
	"langchain_community.tools.office365.base" -> "langchain_core" [];
	"langchain_community.tools.office365.send_event" -> "langchain_core" [];
	"langchain_community.tools.office365.messages_search" -> "langchain_core" [];
	"langchain_community.tools.office365.events_search" -> "langchain_core" [];
	"langchain_community.tools.office365.create_draft_message" -> "langchain_core" [];
	"langchain_community.tools.nasa.tool" -> "langchain_core" [];
	"langchain_community.tools.mojeek_search.tool" -> "langchain_core" [];
	"langchain_community.tools.metaphor_search.tool" -> "langchain_core" [];
	"langchain_community.tools.merriam_webster.tool" -> "langchain_core" [];
	"langchain_community.tools.json.tool" -> "langchain_core" [];
	"langchain_community.tools.jira.tool" -> "langchain_core" [];
	"langchain_community.tools.jina_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.jina_search" -> "langchain_core" [];
	"langchain_community.tools.ifttt" -> "langchain_core" [];
	"langchain_community.tools.human.tool" -> "langchain_core" [];
	"langchain_community.tools.graphql.tool" -> "langchain_core" [];
	"langchain_community.tools.google_serper.tool" -> "langchain_core" [];
	"langchain_community.tools.google_search.tool" -> "langchain_core" [];
	"langchain_community.tools.google_places.tool" -> "langchain_core" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "langchain_core" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "google" [];
	"langchain_community.tools.google_books" -> "langchain_core" [];
	"langchain_community.tools.gmail.utils" -> "langchain_core" [];
	"langchain_community.tools.gmail.utils" -> "googleapiclient" [];
	"googleapiclient.discovery" -> "email" [];
	"googleapiclient.discovery" -> "http" [];
	"googleapiclient.discovery" -> "google" [];
	"googleapiclient.http" -> "http" [];
	"googleapiclient.http" -> "email" [];
	"googleapiclient._auth" -> "google" [];
	"google_auth_httplib2" -> "http" [];
	"google_auth_httplib2" -> "google" [];
	"uritemplate.variable" -> "collections" [];
	"uritemplate.variable" -> "urllib" [];
	"httplib2" -> "http" [];
	"httplib2" -> "urllib" [];
	"httplib2.iri2uri" -> "urllib" [];
	"pyparsing.helpers" -> "html" [];
	"langchain_community.tools.gmail.send_message" -> "langchain_core" [];
	"langchain_community.tools.gmail.base" -> "langchain_core" [];
	"langchain_community.tools.gmail.base" -> "googleapiclient" [];
	"email.mime.text" -> "email" [];
	"langchain_community.tools.gmail.search" -> "langchain_core" [];
	"langchain_community.tools.gmail.get_thread" -> "langchain_core" [];
	"langchain_community.tools.gmail.get_message" -> "langchain_core" [];
	"langchain_community.tools.gmail.create_draft" -> "email" [];
	"langchain_community.tools.gmail.create_draft" -> "langchain_core" [];
	"langchain_community.tools.financial_datasets.income_statements" -> "langchain_core" [];
	"langchain_community.utilities.financial_datasets" -> "langchain_core" [];
	"langchain_community.tools.financial_datasets.cash_flow_statements" -> "langchain_core" [];
	"langchain_community.tools.financial_datasets.balance_sheets" -> "langchain_core" [];
	"langchain_community.tools.file_management.write" -> "langchain_core" [];
	"langchain_community.tools.file_management.read" -> "langchain_core" [];
	"langchain_community.tools.file_management.move" -> "langchain_core" [];
	"langchain_community.tools.file_management.list_dir" -> "langchain_core" [];
	"langchain_community.tools.file_management.file_search" -> "langchain_core" [];
	"langchain_community.tools.file_management.delete" -> "langchain_core" [];
	"langchain_community.tools.file_management.copy" -> "langchain_core" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "langchain_core" [];
	"langchain_community.tools.edenai.text_moderation" -> "langchain_core" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "langchain_core" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "langchain_core" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "langchain_core" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "langchain_core" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "langchain_core" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "langchain_core" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "langchain_core" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "langchain_core" [];
	"langchain_community.tools.ddg_search.tool" -> "langchain_core" [];
	"langchain_community.tools.dataherald.tool" -> "langchain_core" [];
	"langchain_community.tools.connery.tool" -> "langchain_core" [];
	"langchain_community.tools.cogniswitch.tool" -> "langchain_core" [];
	"langchain_community.tools.cassandra_database.tool" -> "langchain_core" [];
	"langchain_community.tools.brave_search.tool" -> "langchain_core" [];
	"langchain_community.tools.bing_search.tool" -> "langchain_core" [];
	"langchain_community.tools.bearly.tool" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.utils" -> "urllib" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.utils" -> "urllib" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "langchain_core" [];
	"langchain_community.tools.asknews.tool" -> "langchain_core" [];
	"langchain_community.tools.arxiv.tool" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.value" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.base" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.transfer" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.rule" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.owner" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.app" -> "langchain_core" [];
	"langchain_community.utilities.sql_database" -> "langchain_core" [];
	"langchain_community.utilities.serpapi" -> "langchain_core" [];
	"langchain_community.utilities.searx_search" -> "langchain_core" [];
	"langchain_community.utilities.searchapi" -> "langchain_core" [];
	"langchain_community.utilities.scenexplain" -> "langchain_core" [];
	"langchain_community.utilities.rememberizer" -> "langchain_core" [];
	"langchain_community.utilities.pubmed" -> "urllib" [];
	"langchain_community.utilities.pubmed" -> "langchain_core" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "langchain_core" [];
	"langchain_community.utilities.outline" -> "langchain_core" [];
	"langchain_community.utilities.oracleai" -> "langchain_core" [];
	"langchain_community.utilities.openweathermap" -> "langchain_core" [];
	"langchain_community.utilities.nvidia_riva" -> "langchain_core" [];
	"langchain_community.utilities.metaphor_search" -> "langchain_core" [];
	"langchain_community.utilities.merriam_webster" -> "urllib" [];
	"langchain_community.utilities.merriam_webster" -> "langchain_core" [];
	"langchain_community.utilities.max_compute" -> "langchain_core" [];
	"langchain_community.utilities.jira" -> "langchain_core" [];
	"langchain_community.utilities.infobip" -> "langchain_core" [];
	"langchain_community.utilities.google_trends" -> "langchain_core" [];
	"langchain_community.utilities.google_serper" -> "langchain_core" [];
	"langchain_community.utilities.google_search" -> "langchain_core" [];
	"langchain_community.utilities.google_search" -> "googleapiclient" [];
	"langchain_community.utilities.google_scholar" -> "langchain_core" [];
	"langchain_community.utilities.google_places_api" -> "langchain_core" [];
	"langchain_community.utilities.google_lens" -> "langchain_core" [];
	"langchain_community.utilities.google_jobs" -> "langchain_core" [];
	"langchain_community.utilities.google_finance" -> "langchain_core" [];
	"langchain_community.utilities.google_books" -> "langchain_core" [];
	"langchain_community.utilities.golden_query" -> "langchain_core" [];
	"langchain_community.utilities.dataherald" -> "langchain_core" [];
	"langchain_community.utilities.brave_search" -> "langchain_core" [];
	"langchain_community.utilities.bing_search" -> "langchain_core" [];
	"langchain_community.utilities.asknews" -> "langchain_core" [];
	"langchain_community.utilities.arxiv" -> "langchain_core" [];
	"langchain_community.utilities.arcee" -> "langchain_core" [];
	"langchain_community.utilities.apify" -> "langchain_core" [];
	"langchain_community.utilities.apify" -> "langchain_community" [];
	"langchain_community.utilities.alpha_vantage" -> "langchain_core" [];
	"langchain_community.llms.huggingface_pipeline" -> "importlib" [];
	"langchain_community.llms.huggingface_pipeline" -> "langchain_core" [];
	"langchain_community.llms.yi" -> "langchain_core" [];
	"langchain_community.llms.you" -> "langchain_core" [];
	"langchain_community.llms.sparkllm" -> "urllib" [];
	"langchain_community.llms.sparkllm" -> "wsgiref" [];
	"langchain_community.llms.sparkllm" -> "langchain_core" [];
	"wsgiref.util" -> "urllib" [];
	"langchain_community.llms.volcengine_maas" -> "langchain_core" [];
	"langchain_community.llms.yuan2" -> "langchain_core" [];
	"langchain_community.llms.yandex" -> "langchain_core" [];
	"langchain_community.llms.xinference" -> "langchain_core" [];
	"langchain_community.llms.writer" -> "langchain_core" [];
	"langchain_community.llms.watsonxllm" -> "langchain_core" [];
	"langchain_community.llms.vllm" -> "langchain_core" [];
	"langchain_community.llms.vertexai" -> "concurrent" [];
	"langchain_community.llms.vertexai" -> "langchain_core" [];
	"langchain_community.llms.vertexai" -> "vertexai" [];
	"langchain_community.llms.vertexai" -> "google" [];
	"vertexai.language_models._evaluatable_language_models" -> "google" [];
	"vertexai.language_models._evaluatable_language_models" -> "vertexai" [];
	"vertexai._model_garden._model_garden_models" -> "google" [];
	"vertexai.language_models._distillation" -> "google" [];
	"vertexai.language_models._language_models" -> "collections" [];
	"vertexai.language_models._language_models" -> "google" [];
	"vertexai.language_models._language_models" -> "vertexai" [];
	"langchain_community.llms.tongyi" -> "langchain_core" [];
	"langchain_community.llms.tongyi" -> "requests" [];
	"langchain_community.llms.together" -> "langchain_core" [];
	"langchain_community.llms.titan_takeoff" -> "langchain_core" [];
	"langchain_community.llms.textgen" -> "langchain_core" [];
	"langchain_community.llms.symblai_nebula" -> "langchain_core" [];
	"langchain_community.llms.stochasticai" -> "langchain_core" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "importlib" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "langchain_core" [];
	"langchain_community.llms.self_hosted" -> "importlib" [];
	"langchain_community.llms.self_hosted" -> "langchain_core" [];
	"langchain_community.llms.sambanova" -> "langchain_core" [];
	"langchain_community.llms.sagemaker_endpoint" -> "langchain_core" [];
	"langchain_community.llms.rwkv" -> "langchain_core" [];
	"langchain_community.llms.replicate" -> "langchain_core" [];
	"langchain_community.llms.promptlayer_openai" -> "langchain_core" [];
	"langchain_community.llms.predictionguard" -> "langchain_core" [];
	"langchain_community.llms.predibase" -> "langchain_core" [];
	"langchain_community.llms.pipelineai" -> "langchain_core" [];
	"langchain_community.llms.petals" -> "langchain_core" [];
	"langchain_community.llms.pai_eas_endpoint" -> "langchain_core" [];
	"langchain_community.llms.outlines" -> "importlib" [];
	"langchain_community.llms.outlines" -> "langchain_core" [];
	"langchain_community.llms.openlm" -> "langchain_core" [];
	"langchain_community.llms.opaqueprompts" -> "langchain_core" [];
	"langchain_community.llms.ollama" -> "langchain_core" [];
	"langchain_community.llms.octoai_endpoint" -> "langchain_core" [];
	"langchain_community.llms.oci_generative_ai" -> "langchain_core" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "langchain_core" [];
	"langchain_community.llms.nlpcloud" -> "langchain_core" [];
	"langchain_community.llms.mosaicml" -> "langchain_core" [];
	"langchain_community.llms.modal" -> "langchain_core" [];
	"langchain_community.llms.mlx_pipeline" -> "langchain_core" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "langchain_core" [];
	"langchain_community.chat_models.mlflow" -> "urllib" [];
	"langchain_community.chat_models.mlflow" -> "langchain_core" [];
	"langchain_community.llms.mlflow" -> "urllib" [];
	"langchain_community.llms.mlflow" -> "langchain_core" [];
	"langchain_community.llms.minimax" -> "langchain_core" [];
	"langchain_community.llms.manifest" -> "langchain_core" [];
	"langchain_community.llms.llamafile" -> "langchain_core" [];
	"langchain_community.llms.llamacpp" -> "langchain_core" [];
	"langchain_community.llms.konko" -> "langchain_core" [];
	"langchain_community.llms.koboldai" -> "langchain_core" [];
	"langchain_community.llms.javelin_ai_gateway" -> "langchain_core" [];
	"langchain_community.llms.ipex_llm" -> "langchain_core" [];
	"langchain_community.llms.human" -> "langchain_core" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "langchain_core" [];
	"langchain_community.llms.huggingface_hub" -> "langchain_core" [];
	"langchain_community.llms.huggingface_endpoint" -> "langchain_core" [];
	"langchain_community.llms.gradient_ai" -> "concurrent" [];
	"langchain_community.llms.gradient_ai" -> "langchain_core" [];
	"langchain_community.llms.gpt4all" -> "langchain_core" [];
	"langchain_community.llms.gooseai" -> "langchain_core" [];
	"langchain_community.llms.google_palm" -> "langchain_core" [];
	"langchain_community.llms.google_palm" -> "google" [];
	"langchain_community.llms.gigachat" -> "langchain_core" [];
	"langchain_community.llms.friendli" -> "langchain_core" [];
	"langchain_community.llms.forefrontai" -> "langchain_core" [];
	"langchain_community.llms.fireworks" -> "concurrent" [];
	"langchain_community.llms.fireworks" -> "langchain_core" [];
	"langchain_community.llms.fake" -> "langchain_core" [];
	"langchain_community.llms.edenai" -> "langchain_core" [];
	"langchain_community.llms.deepsparse" -> "langchain_core" [];
	"langchain_community.llms.deepinfra" -> "langchain_core" [];
	"langchain_community.chat_models.databricks" -> "urllib" [];
	"langchain_community.chat_models.databricks" -> "langchain_core" [];
	"langchain_community.llms.databricks" -> "langchain_core" [];
	"langchain_community.llms.ctranslate2" -> "langchain_core" [];
	"langchain_community.llms.ctransformers" -> "langchain_core" [];
	"langchain_community.llms.cohere" -> "langchain_core" [];
	"langchain_community.llms.clarifai" -> "langchain_core" [];
	"langchain_community.llms.chatglm" -> "langchain_core" [];
	"langchain_community.llms.cerebriumai" -> "langchain_core" [];
	"langchain_community.llms.bittensor" -> "http" [];
	"langchain_community.llms.bittensor" -> "langchain_core" [];
	"langchain_community.llms.bedrock" -> "langchain_core" [];
	"langchain_community.llms.beam" -> "langchain_core" [];
	"langchain_community.llms.baseten" -> "langchain_core" [];
	"langchain_community.llms.bananadev" -> "langchain_core" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "langchain_core" [];
	"langchain_community.llms.baichuan" -> "langchain_core" [];
	"langchain_community.llms.azureml_endpoint" -> "urllib" [];
	"langchain_community.llms.azureml_endpoint" -> "langchain_core" [];
	"langchain_community.llms.aviary" -> "langchain_core" [];
	"langchain_community.llms.arcee" -> "langchain_core" [];
	"langchain_community.llms.aphrodite" -> "langchain_core" [];
	"langchain_community.llms.anyscale" -> "langchain_core" [];
	"langchain_community.llms.anthropic" -> "langchain_core" [];
	"langchain_community.llms.amazon_api_gateway" -> "langchain_core" [];
	"langchain_community.llms.aleph_alpha" -> "langchain_core" [];
	"langchain_community.llms.ai21" -> "langchain_core" [];
	"langchain_community.docstore.wikipedia" -> "langchain_core" [];
	"langchain_community.docstore.arbitrary_fn" -> "langchain_core" [];
	"langchain.agents" -> "langchain_core" [];
	"langchain_community.agent_toolkits.sql.base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.sql.base" -> "langchain" [];
	"langchain_community.agent_toolkits.zapier.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.steam.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.spark_sql.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.polygon.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.openapi.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.nla.tool" -> "langchain_core" [];
	"langchain_community.chains.openapi.chain" -> "langchain_core" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "importlib" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "langchain_core" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "langchain_core" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "langchain_core" [];
	"langchain.chains.api.openapi.response_chain" -> "langchain" [];
	"langchain_community.chains.openapi.response_chain" -> "langchain_core" [];
	"langchain.chains.api.openapi.prompts" -> "langchain" [];
	"langchain.chains.api.openapi.requests_chain" -> "langchain" [];
	"langchain_community.chains.openapi.requests_chain" -> "langchain_core" [];
	"langchain_community.agent_toolkits.nasa.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "langchain_core" [];
	"langchain_community.tools.multion.update_session" -> "langchain_core" [];
	"langchain_community.tools.multion.create_session" -> "langchain_core" [];
	"langchain_community.tools.multion.close_session" -> "langchain_core" [];
	"langchain_community.agent_toolkits.json.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.jira.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "googleapiclient" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.connery.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.cogniswitch.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "langchain_core" [];
	"langchain_community.agent_toolkits.azure_ai_services" -> "langchain_core" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "langchain_core" [];
	"langchain_community.tools.amadeus.flight_search" -> "langchain_core" [];
	"langchain_community.tools.amadeus.base" -> "langchain_core" [];
	"langchain_community.tools.amadeus.closest_airport" -> "langchain_core" [];
	"langchain_community.tools.amadeus.closest_airport" -> "langchain_community" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.sql.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.spark_sql.base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "langchain" [];
	"langchain.memory" -> "langchain_community" [];
	"langchain_community.memory.zep_memory" -> "langchain_community" [];
	"langchain_community.memory.zep_memory" -> "langchain" [];
	"langchain_community.memory.motorhead_memory" -> "langchain_core" [];
	"langchain_community.memory.kg" -> "langchain_core" [];
	"langchain_community.memory.kg" -> "langchain_community" [];
	"langchain_community.graphs.graph_document" -> "langchain_core" [];
	"langchain_community.graphs.neo4j_graph" -> "langchain_core" [];
	"langchain_community.graphs.memgraph_graph" -> "langchain_core" [];
	"langchain_community.graphs.gremlin_graph" -> "langchain_core" [];
	"langchain_community.graphs.falkordb_graph" -> "langchain_core" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "langchain_core" [];
	"langchain_community.chat_message_histories.zep" -> "langchain_core" [];
	"langchain_community.chat_message_histories.xata" -> "langchain_core" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "langchain_core" [];
	"langchain_community.chat_message_histories.tidb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.streamlit" -> "langchain_core" [];
	"langchain_community.chat_message_histories.sql" -> "langchain_core" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "sqlalchemy" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.redis" -> "langchain_core" [];
	"langchain_community.chat_message_histories.postgres" -> "langchain_core" [];
	"langchain_community.chat_message_histories.neo4j" -> "langchain_core" [];
	"langchain_community.chat_message_histories.neo4j" -> "langchain_community" [];
	"langchain_community.chat_message_histories.mongodb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.momento" -> "langchain_core" [];
	"langchain_community.chat_message_histories.kafka" -> "langchain_core" [];
	"langchain_community.chat_message_histories.in_memory" -> "langchain_core" [];
	"langchain_community.chat_message_histories.firestore" -> "langchain_core" [];
	"langchain_community.chat_message_histories.file" -> "langchain_core" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "langchain_core" [];
	"langchain_community.chat_message_histories.dynamodb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "langchain_core" [];
	"langchain_community.chat_message_histories.cassandra" -> "langchain_core" [];
	"langchain_community.chat_message_histories.astradb" -> "langchain_core" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "langchain_core" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "langchain" [];
	"langchain.memory.vectorstore" -> "collections" [];
	"langchain.memory.vectorstore" -> "langchain_core" [];
	"langchain.memory.token_buffer" -> "langchain_core" [];
	"langchain.memory.summary_buffer" -> "langchain_core" [];
	"langchain.memory.summary" -> "langchain_core" [];
	"langchain.memory.simple" -> "langchain_core" [];
	"langchain.memory.readonly" -> "langchain_core" [];
	"langchain.memory.entity" -> "collections" [];
	"langchain.memory.entity" -> "langchain_core" [];
	"langchain.memory.combined" -> "langchain_core" [];
	"langchain.memory.buffer_window" -> "langchain_core" [];
	"langchain.memory.buffer" -> "langchain_core" [];
	"langchain.memory.chat_memory" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "langchain" [];
	"langchain_community.agent_toolkits.openapi.base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.load_tools" -> "langchain_core" [];
	"langchain.chains.api.base" -> "collections" [];
	"langchain.chains.api.base" -> "urllib" [];
	"langchain.chains.api.base" -> "langchain_core" [];
	"langchain.chains.llm_math.base" -> "langchain_core" [];
	"langchain_community.utilities.dataforseo_api_search" -> "urllib" [];
	"langchain_community.utilities.dataforseo_api_search" -> "langchain_core" [];
	"langchain_community.utilities.dalle_image_generator" -> "langchain_core" [];
	"langchain_community.tools.memorize.tool" -> "langchain_core" [];
	"langchain_community.tools.google_trends.tool" -> "langchain_core" [];
	"langchain_community.tools.google_scholar.tool" -> "langchain_core" [];
	"langchain_community.tools.google_lens.tool" -> "langchain_core" [];
	"langchain_community.tools.google_jobs.tool" -> "langchain_core" [];
	"langchain_community.tools.google_finance.tool" -> "langchain_core" [];
	"langchain_community.tools.golden_query.tool" -> "langchain_core" [];
	"langchain_community.tools.dataforseo_api_search.tool" -> "langchain_core" [];
	"langchain_community.agent_toolkits.json.base" -> "langchain_core" [];
	"langchain.agents.xml.base" -> "collections" [];
	"langchain.agents.xml.base" -> "langchain_core" [];
	"langchain.agents.output_parsers.xml" -> "langchain_core" [];
	"langchain.agents.output_parsers.xml" -> "langchain" [];
	"langchain.agents.output_parsers.tools" -> "langchain_core" [];
	"langchain.agents.output_parsers.self_ask" -> "collections" [];
	"langchain.agents.output_parsers.self_ask" -> "langchain_core" [];
	"langchain.agents.output_parsers.react_single_input" -> "langchain_core" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "langchain_core" [];
	"langchain.agents.output_parsers.openai_functions" -> "langchain_core" [];
	"langchain.agents.output_parsers.json" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.xml" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.tools" -> "collections" [];
	"langchain.agents.format_scratchpad.tools" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.openai_functions" -> "collections" [];
	"langchain.agents.format_scratchpad.openai_functions" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.log_to_messages" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.log" -> "langchain_core" [];
	"langchain.agents.tool_calling_agent.base" -> "collections" [];
	"langchain.agents.tool_calling_agent.base" -> "langchain_core" [];
	"langchain.agents.structured_chat.base" -> "collections" [];
	"langchain.agents.structured_chat.base" -> "langchain_core" [];
	"langchain.tools.render" -> "langchain_core" [];
	"langchain.tools" -> "langchain_core" [];
	"langchain.agents.structured_chat.output_parser" -> "langchain_core" [];
	"langchain.agents.structured_chat.output_parser" -> "langchain" [];
	"langchain.agents.self_ask_with_search.base" -> "collections" [];
	"langchain.agents.self_ask_with_search.base" -> "langchain_core" [];
	"langchain.agents.utils" -> "collections" [];
	"langchain.agents.utils" -> "langchain_core" [];
	"langchain.agents.react.base" -> "collections" [];
	"langchain.agents.react.base" -> "langchain_core" [];
	"langchain.agents.react.output_parser" -> "langchain_core" [];
	"langchain.agents.react.agent" -> "collections" [];
	"langchain.agents.react.agent" -> "langchain_core" [];
	"langchain.agents.react.agent" -> "langchain" [];
	"langchain.agents.openai_tools.base" -> "collections" [];
	"langchain.agents.openai_tools.base" -> "langchain_core" [];
	"langchain.agents.output_parsers.openai_tools" -> "langchain_core" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "collections" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "langchain_core" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "langchain" [];
	"langchain.agents.openai_functions_agent.base" -> "collections" [];
	"langchain.agents.openai_functions_agent.base" -> "langchain_core" [];
	"langchain.agents.openai_functions_agent.base" -> "langchain" [];
	"langchain.agents.mrkl.base" -> "collections" [];
	"langchain.agents.mrkl.base" -> "langchain_core" [];
	"langchain.agents.mrkl.base" -> "langchain" [];
	"langchain.agents.mrkl.output_parser" -> "langchain_core" [];
	"langchain.agents.loading" -> "langchain_core" [];
	"langchain.chains.loading" -> "langchain_core" [];
	"langchain.chains.loading" -> "langchain_experimental" [];
	"langchain_experimental.sql.base" -> "langchain" [];
	"langchain_experimental.sql.base" -> "langchain_core" [];
	"langchain_core.output_parsers.list" -> "langchain_core" [];
	"langchain_experimental.pal_chain.base" -> "langchain_core" [];
	"langchain_experimental.pal_chain.base" -> "langchain_experimental" [];
	"langchain_experimental.llm_bash.base" -> "langchain" [];
	"langchain_experimental.llm_bash.base" -> "langchain_core" [];
	"langchain_experimental.llm_bash.prompt" -> "langchain_core" [];
	"langchain.chains.llm_requests" -> "langchain" [];
	"langchain_community.chains.llm_requests" -> "langchain" [];
	"langchain_community.chains.llm_requests" -> "langchain_core" [];
	"langchain_community.chains.graph_qa.cypher" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.vector_db" -> "langchain_core" [];
	"langchain.chains.llm_checker.base" -> "langchain_core" [];
	"langchain.chains.sequential" -> "langchain_core" [];
	"langchain.chains.hyde.base" -> "langchain_core" [];
	"langchain.agents.chat.base" -> "collections" [];
	"langchain.agents.chat.base" -> "langchain_core" [];
	"langchain.agents.chat.output_parser" -> "langchain_core" [];
	"langchain.agents.json_chat.base" -> "collections" [];
	"langchain.agents.json_chat.base" -> "langchain_core" [];
	"langchain.agents.initialize" -> "collections" [];
	"langchain.agents.initialize" -> "langchain_core" [];
	"langchain.agents.conversational_chat.base" -> "collections" [];
	"langchain.agents.conversational_chat.base" -> "langchain_core" [];
	"langchain.agents.conversational_chat.base" -> "langchain" [];
	"langchain.agents.conversational_chat.output_parser" -> "langchain_core" [];
	"langchain.agents.conversational_chat.output_parser" -> "langchain" [];
	"langchain.agents.conversational.base" -> "collections" [];
	"langchain.agents.conversational.base" -> "langchain_core" [];
	"langchain.agents.conversational.base" -> "langchain" [];
	"langchain.agents.conversational.output_parser" -> "langchain_core" [];
	"langchain.agents.agent_types" -> "langchain_core" [];
	"langchain.agents.agent_toolkits.vectorstore.base" -> "langchain_core" [];
	"langchain.agents.agent_toolkits" -> "langchain" [];
	"langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" -> "langchain_core" [];
	"langchain.agents.openai_functions_agent.agent_token_buffer_memory" -> "langchain_core" [];
	"langchain.agents.agent_toolkits.vectorstore.toolkit" -> "langchain_core" [];
	"langchain.agents.agent_iterator" -> "collections" [];
	"langchain.agents.agent_iterator" -> "langchain_core" [];
	"langchain.agents.agent_iterator" -> "langchain" [];
	"langchain.utilities" -> "langchain_community" [];
	"langchain.agents.agent" -> "collections" [];
	"langchain.agents.agent" -> "langchain_core" [];
	"langchain.agents.tools" -> "langchain_core" [];
	"langchain_google_genai.llms" -> "google" [];
	"langchain_google_genai.llms" -> "langchain_core" [];
	"langchain_google_genai.google_vector_store" -> "langchain_core" [];
	"google.ai.generativelanguage_v1beta.types.tuned_model" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.retriever_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.retriever" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.prediction_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.permission_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.model_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.file" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.content" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.cached_content" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.cache_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "google" [];
	"langchain_google_genai.genai_aqa" -> "langchain_core" [];
	"langchain_google_genai.embeddings" -> "langchain_core" [];
	"langchain_google_genai.chat_models" -> "google" [];
	"langchain_google_genai.chat_models" -> "langchain_core" [];
	"langchain_google_genai._image_utils" -> "urllib" [];
	"langchain_google_genai._function_utils" -> "langchain_core" [];
	"google.generativeai.types.content_types" -> "collections" [];
	"google.generativeai.types.content_types" -> "google" [];
	"google.generativeai.types.content_types" -> "PIL" [];
	"google.generativeai.types.file_types" -> "google" [];
	"google.generativeai.client" -> "collections" [];
	"google.generativeai.client" -> "googleapiclient" [];
	"google.generativeai.types.text_types" -> "google" [];
	"google.generativeai.types.safety_types" -> "collections" [];
	"google.generativeai.types.safety_types" -> "google" [];
	"google.generativeai.types.model_types" -> "collections" [];
	"google.generativeai.types.model_types" -> "urllib" [];
	"google.generativeai.types.model_types" -> "google" [];
	"google.generativeai.types.permission_types" -> "google" [];
	"google.generativeai.types.generation_types" -> "google" [];
	"google.generativeai.responder" -> "collections" [];
	"google.generativeai.types.citation_types" -> "google" [];
	"google.generativeai.caching" -> "google" [];
	"langchain_google_genai._genai_extension" -> "google" [];
	"langchain_anthropic.llms" -> "collections" [];
	"langchain_anthropic.llms" -> "langchain_core" [];
	"langchain_anthropic.chat_models" -> "collections" [];
	"langchain_anthropic.chat_models" -> "langchain_core" [];
	"langchain_anthropic.output_parsers" -> "langchain_core" [];
	"langchain_openai.llms.base" -> "collections" [];
	"langchain_openai.llms.base" -> "langchain_core" [];
	"langchain_openai.llms.azure" -> "collections" [];
	"langchain_openai.llms.azure" -> "langchain_core" [];
	"langchain_openai.embeddings.base" -> "collections" [];
	"langchain_openai.embeddings.base" -> "langchain_core" [];
	"langchain_openai.embeddings.base" -> "http" [];
	"langchain_openai.embeddings.base" -> "tqdm" [];
	"langchain_openai.embeddings.azure" -> "collections" [];
	"langchain_openai.embeddings.azure" -> "langchain_core" [];
	"langchain_openai.chat_models.base" -> "collections" [];
	"langchain_openai.chat_models.base" -> "urllib" [];
	"langchain_openai.chat_models.base" -> "langchain_core" [];
	"langchain_openai.chat_models.base" -> "http" [];
	"openai.types.eval_stored_completions_data_source_config" -> "openai" [];
	"openai._models" -> "pydantic_core" [];
	"openai._constants" -> "http" [];
	"openai._utils._transform" -> "openai" [];
	"openai._utils._typing" -> "openai" [];
	"openai._utils._utils" -> "openai" [];
	"openai.lib.azure" -> "http" [];
	"openai.lib.azure" -> "openai" [];
	"openai.lib._parsing._completions" -> "openai" [];
	"openai.types.chat.chat_completion_message_tool_call" -> "openai" [];
	"openai.types.chat.chat_completion_token_logprob" -> "openai" [];
	"openai.types.chat.chat_completion_message" -> "openai" [];
	"openai.types.chat.chat_completion_deleted" -> "openai" [];
	"openai.types.chat.parsed_chat_completion" -> "openai" [];
	"openai.types.chat.chat_completion_chunk" -> "openai" [];
	"openai.types.chat.chat_completion_audio" -> "openai" [];
	"openai.types.chat.chat_completion" -> "openai" [];
	"openai.lib._pydantic" -> "openai" [];
	"openai._base_client" -> "http" [];
	"openai._legacy_response" -> "http" [];
	"openai._response" -> "http" [];
	"openai._qs" -> "urllib" [];
	"openai._exceptions" -> "http" [];
	"openai._streaming" -> "http" [];
	"openai._client" -> "http" [];
	"openai.resources.vector_stores.vector_stores" -> "http" [];
	"openai.resources.vector_stores.file_batches" -> "concurrent" [];
	"openai.resources.vector_stores.file_batches" -> "http" [];
	"openai.types.vector_stores.vector_store_file_batch" -> "openai" [];
	"openai.types.vector_stores.vector_store_file" -> "openai" [];
	"openai.types.vector_stores.vector_store_file_deleted" -> "openai" [];
	"openai.types.vector_stores.file_content_response" -> "openai" [];
	"openai.resources.vector_stores.files" -> "http" [];
	"openai.resources.fine_tuning.fine_tuning" -> "openai" [];
	"openai.resources.fine_tuning.checkpoints.checkpoints" -> "openai" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "http" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_response" -> "openai" [];
	"openai.types.fine_tuning.checkpoints.permission_delete_response" -> "openai" [];
	"openai.types.fine_tuning.checkpoints.permission_create_response" -> "openai" [];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration_object" -> "openai" [];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration" -> "openai" [];
	"openai.types.fine_tuning.fine_tuning_job_event" -> "openai" [];
	"openai.types.fine_tuning.fine_tuning_job" -> "openai" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "http" [];
	"openai.resources.fine_tuning.jobs.checkpoints" -> "http" [];
	"openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" -> "openai" [];
	"openai.resources.responses.responses" -> "http" [];
	"openai.lib.streaming.responses._responses" -> "openai" [];
	"openai.lib.streaming._assistants" -> "http" [];
	"openai.lib.streaming._assistants" -> "openai" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call_delta" -> "openai" [];
	"openai.types.beta.threads.runs.message_creation_step_details" -> "openai" [];
	"openai.types.beta.threads.runs.code_interpreter_output_image" -> "openai" [];
	"openai.types.beta.threads.runs.run_step_delta_message_delta" -> "openai" [];
	"openai.types.beta.threads.runs.file_search_tool_call_delta" -> "openai" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call" -> "openai" [];
	"openai.types.beta.threads.runs.function_tool_call_delta" -> "openai" [];
	"openai.types.beta.threads.runs.tool_calls_step_details" -> "openai" [];
	"openai.types.beta.threads.runs.tool_call_delta_object" -> "openai" [];
	"openai.types.beta.threads.runs.file_search_tool_call" -> "openai" [];
	"openai.types.beta.threads.runs.code_interpreter_logs" -> "openai" [];
	"openai.types.beta.threads.runs.run_step_delta_event" -> "openai" [];
	"openai.types.beta.threads.runs.function_tool_call" -> "openai" [];
	"openai.types.beta.threads.runs.tool_call_delta" -> "openai" [];
	"openai.types.beta.threads.runs.run_step_delta" -> "openai" [];
	"openai.types.beta.threads.runs.tool_call" -> "openai" [];
	"openai.types.beta.threads.runs.run_step" -> "openai" [];
	"openai.types.beta.threads.required_action_function_tool_call" -> "openai" [];
	"openai.types.beta.threads.file_citation_delta_annotation" -> "openai" [];
	"openai.types.beta.threads.file_path_delta_annotation" -> "openai" [];
	"openai.types.beta.threads.image_file_content_block" -> "openai" [];
	"openai.types.beta.threads.file_citation_annotation" -> "openai" [];
	"openai.types.beta.threads.image_url_content_block" -> "openai" [];
	"openai.types.beta.threads.image_file_delta_block" -> "openai" [];
	"openai.types.beta.threads.refusal_content_block" -> "openai" [];
	"openai.types.beta.threads.message_content_delta" -> "openai" [];
	"openai.types.beta.threads.image_url_delta_block" -> "openai" [];
	"openai.types.beta.threads.file_path_annotation" -> "openai" [];
	"openai.types.beta.threads.refusal_delta_block" -> "openai" [];
	"openai.types.beta.threads.message_delta_event" -> "openai" [];
	"openai.types.beta.threads.text_content_block" -> "openai" [];
	"openai.types.beta.threads.text_delta_block" -> "openai" [];
	"openai.types.beta.threads.image_file_delta" -> "openai" [];
	"openai.types.beta.threads.annotation_delta" -> "openai" [];
	"openai.types.beta.threads.message_deleted" -> "openai" [];
	"openai.types.beta.threads.message_content" -> "openai" [];
	"openai.types.beta.threads.image_url_delta" -> "openai" [];
	"openai.types.beta.threads.message_delta" -> "openai" [];
	"openai.types.beta.threads.text_delta" -> "openai" [];
	"openai.types.beta.threads.image_file" -> "openai" [];
	"openai.types.beta.threads.annotation" -> "openai" [];
	"openai.types.beta.threads.image_url" -> "openai" [];
	"openai.types.beta.threads.message" -> "openai" [];
	"openai.types.beta.code_interpreter_tool" -> "openai" [];
	"openai.types.beta.threads.text" -> "openai" [];
	"openai.types.beta.threads.run" -> "openai" [];
	"openai.types.shared.response_format_json_schema" -> "openai" [];
	"openai.types.shared.response_format_json_object" -> "openai" [];
	"openai.types.shared.response_format_text" -> "openai" [];
	"openai.types.beta.assistant_tool_choice" -> "openai" [];
	"openai.types.beta.assistant_tool_choice_function" -> "openai" [];
	"openai.types.beta.assistant_tool" -> "openai" [];
	"openai.types.beta.file_search_tool" -> "openai" [];
	"openai.types.beta.function_tool" -> "openai" [];
	"openai.types.shared.function_definition" -> "openai" [];
	"openai.types.beta.assistant_stream_event" -> "openai" [];
	"openai.types.shared.error_object" -> "openai" [];
	"openai.types.beta.assistant_deleted" -> "openai" [];
	"openai.types.beta.thread_deleted" -> "openai" [];
	"openai.types.beta.assistant" -> "openai" [];
	"openai.types.beta.thread" -> "openai" [];
	"openai.lib.streaming.responses._events" -> "openai" [];
	"openai.lib._parsing._responses" -> "openai" [];
	"openai.resources.responses.input_items" -> "http" [];
	"openai.resources.uploads.uploads" -> "http" [];
	"openai.resources.uploads.parts" -> "http" [];
	"openai.types.uploads.upload_part" -> "openai" [];
	"openai.types.uploads.part_create_params" -> "openai" [];
	"openai.resources.evals.evals" -> "http" [];
	"openai.resources.evals.runs.runs" -> "http" [];
	"openai.types.evals.run_retrieve_response" -> "openai" [];
	"openai.types.evals.create_eval_completions_run_data_source" -> "openai" [];
	"openai.types.evals.create_eval_jsonl_run_data_source" -> "openai" [];
	"openai.types.evals.eval_api_error" -> "openai" [];
	"openai.types.evals.run_delete_response" -> "openai" [];
	"openai.types.evals.run_create_response" -> "openai" [];
	"openai.types.evals.run_cancel_response" -> "openai" [];
	"openai.types.evals.run_list_response" -> "openai" [];
	"openai.resources.evals.runs.output_items" -> "http" [];
	"openai.types.evals.runs.output_item_retrieve_response" -> "openai" [];
	"openai.types.evals.runs.output_item_list_response" -> "openai" [];
	"openai.resources.audio.audio" -> "openai" [];
	"openai.resources.audio.transcriptions" -> "http" [];
	"openai.types.audio.transcription_stream_event" -> "openai" [];
	"openai.types.audio.transcription_text_delta_event" -> "openai" [];
	"openai.types.audio.transcription_text_done_event" -> "openai" [];
	"openai.types.audio.transcription_verbose" -> "openai" [];
	"openai.types.audio.transcription_segment" -> "openai" [];
	"openai.types.audio.transcription_word" -> "openai" [];
	"openai.types.audio.transcription" -> "openai" [];
	"openai.types.audio.transcription_create_params" -> "openai" [];
	"openai.types.audio.translation_create_params" -> "openai" [];
	"openai.types.audio.translation_verbose" -> "openai" [];
	"openai.types.audio.translation" -> "openai" [];
	"openai.resources.audio.translations" -> "http" [];
	"openai.resources.audio.speech" -> "http" [];
	"openai.resources.chat.chat" -> "openai" [];
	"openai.resources.chat.completions.completions" -> "http" [];
	"openai.resources.chat.completions.messages" -> "http" [];
	"openai.resources.beta.beta" -> "openai" [];
	"openai.resources.beta.realtime.realtime" -> "http" [];
	"openai.resources.beta.realtime.realtime" -> "openai" [];
	"openai.resources.beta.realtime.realtime" -> "websockets" [];
	"websockets.http11" -> "collections" [];
	"websockets.version" -> "importlib" [];
	"websockets.datastructures" -> "collections" [];
	"websockets.frames" -> "collections" [];
	"websockets.extensions.base" -> "collections" [];
	"websockets.extensions.base" -> "websockets" [];
	"websockets.uri" -> "urllib" [];
	"websockets.sync.server" -> "collections" [];
	"websockets.sync.server" -> "websockets" [];
	"websockets.sync.router" -> "urllib" [];
	"websockets.sync.router" -> "websockets" [];
	"websockets.sync.messages" -> "websockets" [];
	"websockets.sync.connection" -> "collections" [];
	"websockets.sync.connection" -> "websockets" [];
	"websockets.streams" -> "collections" [];
	"websockets.legacy.server" -> "email" [];
	"websockets.legacy.server" -> "collections" [];
	"websockets.legacy.server" -> "websockets" [];
	"websockets.legacy.protocol" -> "websockets" [];
	"websockets.legacy.http" -> "websockets" [];
	"websockets.legacy.handshake" -> "websockets" [];
	"websockets.legacy.framing" -> "collections" [];
	"websockets.legacy.client" -> "urllib" [];
	"websockets.legacy.client" -> "collections" [];
	"websockets.legacy.client" -> "websockets" [];
	"websockets.legacy.auth" -> "collections" [];
	"websockets.legacy.auth" -> "websockets" [];
	"websockets.headers" -> "collections" [];
	"websockets.extensions.permessage_deflate" -> "collections" [];
	"websockets.asyncio.messages" -> "websockets" [];
	"websockets.asyncio.connection" -> "websockets" [];
	"websockets.server" -> "email" [];
	"websockets.server" -> "collections" [];
	"websockets.protocol" -> "collections" [];
	"websockets.client" -> "collections" [];
	"websockets.asyncio.server" -> "collections" [];
	"websockets.asyncio.server" -> "websockets" [];
	"websockets.asyncio.router" -> "urllib" [];
	"websockets.asyncio.router" -> "websockets" [];
	"websockets.imports" -> "collections" [];
	"websockets.asyncio.client" -> "urllib" [];
	"websockets.asyncio.client" -> "collections" [];
	"websockets.asyncio.client" -> "websockets" [];
	"websockets.sync.client" -> "collections" [];
	"websockets.sync.client" -> "websockets" [];
	"openai.types.beta.realtime.realtime_server_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" -> "openai" [];
	"openai.types.beta.realtime.response_function_call_arguments_delta_event" -> "openai" [];
	"openai.types.beta.realtime.response_function_call_arguments_done_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_speech_stopped_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_speech_started_event" -> "openai" [];
	"openai.types.beta.realtime.response_audio_transcript_delta_event" -> "openai" [];
	"openai.types.beta.realtime.response_audio_transcript_done_event" -> "openai" [];
	"openai.types.beta.realtime.transcription_session_updated_event" -> "openai" [];
	"openai.types.beta.realtime.transcription_session" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_committed_event" -> "openai" [];
	"openai.types.beta.realtime.response_content_part_added_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_truncated_event" -> "openai" [];
	"openai.types.beta.realtime.response_output_item_added_event" -> "openai" [];
	"openai.types.beta.realtime.response_content_part_done_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_cleared_event" -> "openai" [];
	"openai.types.beta.realtime.response_output_item_done_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_deleted_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_created_event" -> "openai" [];
	"openai.types.beta.realtime.response_audio_delta_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_created_event" -> "openai" [];
	"openai.types.beta.realtime.response_text_delta_event" -> "openai" [];
	"openai.types.beta.realtime.response_audio_done_event" -> "openai" [];
	"openai.types.beta.realtime.rate_limits_updated_event" -> "openai" [];
	"openai.types.beta.realtime.response_text_done_event" -> "openai" [];
	"openai.types.beta.realtime.response_created_event" -> "openai" [];
	"openai.types.beta.realtime.realtime_response" -> "openai" [];
	"openai.types.beta.realtime.realtime_response_status" -> "openai" [];
	"openai.types.beta.realtime.realtime_response_usage" -> "openai" [];
	"openai.types.beta.realtime.session_updated_event" -> "openai" [];
	"openai.types.beta.realtime.session" -> "openai" [];
	"openai.types.beta.realtime.session_created_event" -> "openai" [];
	"openai.types.beta.realtime.response_done_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_content" -> "openai" [];
	"openai.types.beta.realtime.error_event" -> "openai" [];
	"openai.types.beta.realtime.realtime_client_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_truncate_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_delete_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_create_event" -> "openai" [];
	"openai.types.beta.realtime.transcription_session_update" -> "openai" [];
	"openai.types.beta.realtime.response_create_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_with_reference" -> "openai" [];
	"openai.types.beta.realtime.response_cancel_event" -> "openai" [];
	"openai.types.beta.realtime.session_update_event" -> "openai" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "http" [];
	"openai.types.beta.realtime.session_create_response" -> "openai" [];
	"openai.resources.beta.realtime.sessions" -> "http" [];
	"openai.resources.beta.threads.threads" -> "http" [];
	"openai.resources.beta.threads.runs.steps" -> "http" [];
	"openai.resources.beta.threads.runs.runs" -> "http" [];
	"openai.resources.beta.threads.messages" -> "http" [];
	"openai.resources.beta.assistants" -> "http" [];
	"openai.resources.beta.chat.chat" -> "openai" [];
	"openai.resources.beta.chat.completions" -> "http" [];
	"openai.lib.streaming.chat._completions" -> "openai" [];
	"openai.lib.streaming._deltas" -> "openai" [];
	"openai.lib.streaming.chat._events" -> "openai" [];
	"openai.resources.moderations" -> "http" [];
	"openai.resources.completions" -> "http" [];
	"openai.resources.embeddings" -> "http" [];
	"openai._extras.sounddevice_proxy" -> "openai" [];
	"openai._extras._common" -> "openai" [];
	"openai._extras.pandas_proxy" -> "openai" [];
	"openai._extras.numpy_proxy" -> "openai" [];
	"openai.resources.batches" -> "http" [];
	"openai.resources.models" -> "http" [];
	"openai.resources.images" -> "http" [];
	"openai.resources.files" -> "http" [];
	"openai._types" -> "http" [];
	"openai.types.static_file_chunking_strategy_object" -> "openai" [];
	"openai.types.other_file_chunking_strategy_object" -> "openai" [];
	"openai.types.eval_custom_data_source_config" -> "openai" [];
	"openai.types.static_file_chunking_strategy" -> "openai" [];
	"openai.types.vector_store_search_response" -> "openai" [];
	"openai.types.eval_text_similarity_grader" -> "openai" [];
	"openai.types.moderation_create_response" -> "openai" [];
	"openai.types.create_embedding_response" -> "openai" [];
	"openai.types.eval_string_check_grader" -> "openai" [];
	"openai.types.eval_label_model_grader" -> "openai" [];
	"openai.types.file_chunking_strategy" -> "openai" [];
	"openai.types.eval_retrieve_response" -> "openai" [];
	"openai.types.vector_store_deleted" -> "openai" [];
	"openai.types.eval_update_response" -> "openai" [];
	"openai.types.eval_delete_response" -> "openai" [];
	"openai.types.eval_create_response" -> "openai" [];
	"openai.types.batch_request_counts" -> "openai" [];
	"openai.types.eval_list_response" -> "openai" [];
	"openai.types.completion_choice" -> "openai" [];
	"openai.types.completion_usage" -> "openai" [];
	"openai.types.images_response" -> "openai" [];
	"openai.types.model_deleted" -> "openai" [];
	"openai.types.vector_store" -> "openai" [];
	"openai.types.file_deleted" -> "openai" [];
	"openai.types.file_object" -> "openai" [];
	"openai.types.batch_error" -> "openai" [];
	"openai.types.moderation" -> "openai" [];
	"openai.types.completion" -> "openai" [];
	"openai.types.embedding" -> "openai" [];
	"openai.types.upload" -> "openai" [];
	"openai.types.shared.comparison_filter" -> "openai" [];
	"openai.types.shared.compound_filter" -> "openai" [];
	"openai.types.shared.reasoning" -> "openai" [];
	"openai.types.model" -> "openai" [];
	"openai.types.image" -> "openai" [];
	"openai.types.batch" -> "openai" [];
	"openai.types.image_create_variation_params" -> "openai" [];
	"openai.types.image_edit_params" -> "openai" [];
	"openai.types.file_create_params" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_interpreting_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_in_progress_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_code_delta_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_completed_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_code_done_event" -> "openai" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot" -> "openai" [];
	"openai.types.responses.response_function_call_arguments_delta_event" -> "openai" [];
	"openai.types.responses.response_reasoning_summary_text_delta_event" -> "openai" [];
	"openai.types.responses.response_reasoning_summary_part_added_event" -> "openai" [];
	"openai.types.responses.response_function_call_arguments_done_event" -> "openai" [];
	"openai.types.responses.response_file_search_call_in_progress_event" -> "openai" [];
	"openai.types.responses.response_web_search_call_in_progress_event" -> "openai" [];
	"openai.types.responses.response_reasoning_summary_text_done_event" -> "openai" [];
	"openai.types.responses.response_reasoning_summary_part_done_event" -> "openai" [];
	"openai.types.responses.response_file_search_call_searching_event" -> "openai" [];
	"openai.types.responses.response_file_search_call_completed_event" -> "openai" [];
	"openai.types.responses.response_web_search_call_searching_event" -> "openai" [];
	"openai.types.responses.response_web_search_call_completed_event" -> "openai" [];
	"openai.types.responses.response_function_tool_call_output_item" -> "openai" [];
	"openai.types.responses.response_format_text_json_schema_config" -> "openai" [];
	"openai.types.responses.response_computer_tool_call_output_item" -> "openai" [];
	"openai.types.responses.response_audio_transcript_delta_event" -> "openai" [];
	"openai.types.responses.response_text_annotation_delta_event" -> "openai" [];
	"openai.types.responses.response_audio_transcript_done_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_tool_call" -> "openai" [];
	"openai.types.responses.response_content_part_added_event" -> "openai" [];
	"openai.types.responses.response_output_item_added_event" -> "openai" [];
	"openai.types.responses.response_content_part_done_event" -> "openai" [];
	"openai.types.responses.response_output_item_done_event" -> "openai" [];
	"openai.types.responses.response_file_search_tool_call" -> "openai" [];
	"openai.types.responses.response_refusal_delta_event" -> "openai" [];
	"openai.types.responses.response_function_web_search" -> "openai" [];
	"openai.types.responses.response_refusal_done_event" -> "openai" [];
	"openai.types.responses.response_input_message_item" -> "openai" [];
	"openai.types.responses.response_function_tool_call" -> "openai" [];
	"openai.types.responses.response_format_text_config" -> "openai" [];
	"openai.types.responses.response_computer_tool_call" -> "openai" [];
	"openai.types.responses.response_in_progress_event" -> "openai" [];
	"openai.types.responses.response_audio_delta_event" -> "openai" [];
	"openai.types.responses.response_text_delta_event" -> "openai" [];
	"openai.types.responses.response_incomplete_event" -> "openai" [];
	"openai.types.responses.response_audio_done_event" -> "openai" [];
	"openai.types.responses.response_text_done_event" -> "openai" [];
	"openai.types.responses.response_completed_event" -> "openai" [];
	"openai.types.responses.response_reasoning_item" -> "openai" [];
	"openai.types.responses.response_output_refusal" -> "openai" [];
	"openai.types.responses.response_output_message" -> "openai" [];
	"openai.types.responses.response_input_content" -> "openai" [];
	"openai.types.responses.response_created_event" -> "openai" [];
	"openai.types.responses.response_stream_event" -> "openai" [];
	"openai.types.responses.response_failed_event" -> "openai" [];
	"openai.types.responses.tool_choice_function" -> "openai" [];
	"openai.types.responses.response_text_config" -> "openai" [];
	"openai.types.responses.response_output_text" -> "openai" [];
	"openai.types.responses.response_output_item" -> "openai" [];
	"openai.types.responses.response_input_image" -> "openai" [];
	"openai.types.responses.response_error_event" -> "openai" [];
	"openai.types.responses.response_input_text" -> "openai" [];
	"openai.types.responses.response_input_file" -> "openai" [];
	"openai.types.responses.response_item_list" -> "openai" [];
	"openai.types.responses.easy_input_message" -> "openai" [];
	"openai.types.responses.tool_choice_types" -> "openai" [];
	"openai.types.responses.file_search_tool" -> "openai" [];
	"openai.types.responses.web_search_tool" -> "openai" [];
	"openai.types.responses.parsed_response" -> "openai" [];
	"openai.types.responses.response_usage" -> "openai" [];
	"openai.types.responses.response_error" -> "openai" [];
	"openai.types.responses.response_item" -> "openai" [];
	"openai.types.responses.function_tool" -> "openai" [];
	"openai.types.responses.computer_tool" -> "openai" [];
	"openai.types.responses.response" -> "openai" [];
	"openai.types.responses.tool" -> "openai" [];
	"langchain_openai.chat_models.azure" -> "collections" [];
	"langchain_openai.chat_models.azure" -> "langchain_core" [];
	"anthropic.lib.streaming._beta_messages" -> "http" [];
	"anthropic.lib.streaming._beta_messages" -> "anthropic" [];
	"anthropic.types.beta.beta_citation_content_block_location" -> "anthropic" [];
	"anthropic.types.beta.beta_raw_content_block_start_event" -> "anthropic" [];
	"anthropic.types.beta.beta_raw_content_block_delta_event" -> "anthropic" [];
	"anthropic.types.beta.beta_raw_content_block_stop_event" -> "anthropic" [];
	"anthropic.types.beta.beta_base64_image_source_param" -> "anthropic" [];
	"anthropic.types.beta.beta_raw_message_stream_event" -> "anthropic" [];
	"anthropic.types.beta.beta_redacted_thinking_block" -> "anthropic" [];
	"anthropic.types.beta.beta_raw_message_start_event" -> "anthropic" [];
	"anthropic.types.beta.beta_raw_message_delta_event" -> "anthropic" [];
	"anthropic.types.beta.beta_raw_content_block_delta" -> "anthropic" [];
	"anthropic.types.beta.beta_base64_pdf_source_param" -> "anthropic" [];
	"anthropic.types.beta.message_count_tokens_params" -> "anthropic" [];
	"anthropic.types.beta.beta_raw_message_stop_event" -> "anthropic" [];
	"anthropic.types.beta.beta_citation_page_location" -> "anthropic" [];
	"anthropic.types.beta.beta_citation_char_location" -> "anthropic" [];
	"anthropic.types.beta.beta_message_tokens_count" -> "anthropic" [];
	"anthropic.types.beta.beta_message_delta_usage" -> "anthropic" [];
	"anthropic.types.beta.message_create_params" -> "anthropic" [];
	"anthropic.types.beta.beta_input_json_delta" -> "anthropic" [];
	"anthropic.types.beta.beta_signature_delta" -> "anthropic" [];
	"anthropic.types.beta.beta_citations_delta" -> "anthropic" [];
	"anthropic.types.beta.beta_tool_use_block" -> "anthropic" [];
	"anthropic.types.beta.beta_thinking_delta" -> "anthropic" [];
	"anthropic.types.beta.beta_thinking_block" -> "anthropic" [];
	"anthropic.types.beta.beta_text_citation" -> "anthropic" [];
	"anthropic.types.beta.beta_content_block" -> "anthropic" [];
	"anthropic.types.beta.beta_text_delta" -> "anthropic" [];
	"anthropic.types.beta.beta_text_block" -> "anthropic" [];
	"anthropic.types.beta.beta_model_info" -> "anthropic" [];
	"anthropic.types.beta.beta_message" -> "anthropic" [];
	"anthropic.types.beta.beta_usage" -> "anthropic" [];
	"anthropic._streaming" -> "http" [];
	"anthropic.lib.streaming._beta_types" -> "anthropic" [];
	"anthropic._utils._transform" -> "anthropic" [];
	"anthropic._utils._typing" -> "anthropic" [];
	"anthropic._utils._utils" -> "anthropic" [];
	"anthropic.lib.streaming._messages" -> "http" [];
	"anthropic.lib.streaming._messages" -> "anthropic" [];
	"anthropic.lib.streaming._types" -> "anthropic" [];
	"anthropic.types.citations_delta" -> "anthropic" [];
	"anthropic.types.citation_content_block_location" -> "anthropic" [];
	"anthropic.types.citation_page_location" -> "anthropic" [];
	"anthropic.types.citation_char_location" -> "anthropic" [];
	"anthropic.lib.bedrock._client" -> "urllib" [];
	"anthropic.lib.bedrock._client" -> "http" [];
	"anthropic.lib.bedrock._auth" -> "http" [];
	"anthropic.lib.bedrock._auth" -> "anthropic" [];
	"anthropic.resources.completions" -> "http" [];
	"anthropic.resources.models" -> "http" [];
	"anthropic.types.model_info" -> "anthropic" [];
	"anthropic.resources.beta.messages.messages" -> "http" [];
	"anthropic.resources.messages.messages" -> "http" [];
	"anthropic.types.tool_param" -> "anthropic" [];
	"anthropic.types.raw_message_stream_event" -> "anthropic" [];
	"anthropic.types.raw_content_block_start_event" -> "anthropic" [];
	"anthropic.types.redacted_thinking_block" -> "anthropic" [];
	"anthropic.types.tool_use_block" -> "anthropic" [];
	"anthropic.types.thinking_block" -> "anthropic" [];
	"anthropic.types.text_block" -> "anthropic" [];
	"anthropic.types.text_citation" -> "anthropic" [];
	"anthropic.types.raw_content_block_delta_event" -> "anthropic" [];
	"anthropic.types.raw_content_block_delta" -> "anthropic" [];
	"anthropic.types.input_json_delta" -> "anthropic" [];
	"anthropic.types.signature_delta" -> "anthropic" [];
	"anthropic.types.thinking_delta" -> "anthropic" [];
	"anthropic.types.text_delta" -> "anthropic" [];
	"anthropic.types.raw_content_block_stop_event" -> "anthropic" [];
	"anthropic.types.raw_message_start_event" -> "anthropic" [];
	"anthropic.types.raw_message_delta_event" -> "anthropic" [];
	"anthropic.types.message_delta_usage" -> "anthropic" [];
	"anthropic.types.raw_message_stop_event" -> "anthropic" [];
	"anthropic.types.message_tokens_count" -> "anthropic" [];
	"anthropic.types.base64_pdf_source_param" -> "anthropic" [];
	"anthropic.types.base64_image_source_param" -> "anthropic" [];
	"anthropic.types.content_block" -> "anthropic" [];
	"anthropic.types.message" -> "anthropic" [];
	"anthropic.types.usage" -> "anthropic" [];
	"anthropic.resources.messages.batches" -> "http" [];
	"anthropic.types.messages.message_batch_individual_response" -> "anthropic" [];
	"anthropic.types.messages.message_batch_result" -> "anthropic" [];
	"anthropic.types.messages.message_batch_succeeded_result" -> "anthropic" [];
	"anthropic.types.messages.message_batch_canceled_result" -> "anthropic" [];
	"anthropic.types.messages.message_batch_expired_result" -> "anthropic" [];
	"anthropic.types.messages.message_batch_errored_result" -> "anthropic" [];
	"anthropic.types.shared.error_response" -> "anthropic" [];
	"anthropic.types.shared.invalid_request_error" -> "anthropic" [];
	"anthropic.types.shared.gateway_timeout_error" -> "anthropic" [];
	"anthropic.types.shared.authentication_error" -> "anthropic" [];
	"anthropic.types.shared.rate_limit_error" -> "anthropic" [];
	"anthropic.types.shared.permission_error" -> "anthropic" [];
	"anthropic.types.shared.overloaded_error" -> "anthropic" [];
	"anthropic.types.shared.api_error_object" -> "anthropic" [];
	"anthropic.types.shared.not_found_error" -> "anthropic" [];
	"anthropic.types.shared.billing_error" -> "anthropic" [];
	"anthropic.types.shared.error_object" -> "anthropic" [];
	"anthropic.types.messages.deleted_message_batch" -> "anthropic" [];
	"anthropic.types.messages.message_batch" -> "anthropic" [];
	"anthropic.types.messages.message_batch_request_counts" -> "anthropic" [];
	"anthropic._decoders.jsonl" -> "http" [];
	"anthropic._decoders.jsonl" -> "anthropic" [];
	"anthropic.resources.beta.messages.batches" -> "http" [];
	"anthropic.types.beta.messages.beta_message_batch_individual_response" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_message_batch_result" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_message_batch_succeeded_result" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_message_batch_canceled_result" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_message_batch_expired_result" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_message_batch_errored_result" -> "anthropic" [];
	"anthropic.types.beta_error_response" -> "anthropic" [];
	"anthropic.types.beta_error" -> "anthropic" [];
	"anthropic.types.beta_invalid_request_error" -> "anthropic" [];
	"anthropic.types.beta_gateway_timeout_error" -> "anthropic" [];
	"anthropic.types.beta_authentication_error" -> "anthropic" [];
	"anthropic.types.beta_rate_limit_error" -> "anthropic" [];
	"anthropic.types.beta_permission_error" -> "anthropic" [];
	"anthropic.types.beta_overloaded_error" -> "anthropic" [];
	"anthropic.types.beta_not_found_error" -> "anthropic" [];
	"anthropic.types.beta_billing_error" -> "anthropic" [];
	"anthropic.types.beta_api_error" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_deleted_message_batch" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_message_batch" -> "anthropic" [];
	"anthropic.types.beta.messages.beta_message_batch_request_counts" -> "anthropic" [];
	"anthropic.types.beta.messages.batch_create_params" -> "anthropic" [];
	"anthropic.types.beta.messages.batch_list_params" -> "anthropic" [];
	"anthropic.resources.beta.models" -> "http" [];
	"anthropic.resources.beta.beta" -> "anthropic" [];
	"anthropic.types.completion" -> "anthropic" [];
	"anthropic.lib.bedrock._stream_decoder" -> "anthropic" [];
	"anthropic.lib.bedrock._beta" -> "anthropic" [];
	"anthropic.lib.vertex._client" -> "http" [];
	"anthropic.lib.vertex._beta" -> "anthropic" [];
	"anthropic.lib._extras._google_auth" -> "anthropic" [];
	"anthropic.lib._extras._google_auth" -> "google" [];
	"anthropic.lib._extras._common" -> "anthropic" [];
	"anthropic._base_client" -> "http" [];
	"anthropic._qs" -> "urllib" [];
	"anthropic._constants" -> "http" [];
	"anthropic._response" -> "http" [];
	"anthropic._models" -> "pydantic_core" [];
	"anthropic._client" -> "http" [];
	"anthropic._types" -> "http" [];
	"anthropic._legacy_response" -> "http" [];
	"anthropic._exceptions" -> "http" [];
	"openai" -> "http" [];
	"openai.lib._old_api" -> "openai" [];
	"langchain_core.output_parsers.xml" -> "collections" [];
	"langchain_core.output_parsers.xml" -> "langchain_core" [];
	"langchain_core.output_parsers.pydantic" -> "langchain_core" [];
	"langchain_core.prompts.pipeline" -> "langchain_core" [];
	"docx.opc.package" -> "docx" [];
	"docx.oxml.coreprops" -> "lxml" [];
	"docx.oxml.text.parfmt" -> "docx" [];
	"docx.oxml.simpletypes" -> "docx" [];
	"docx.oxml.text.font" -> "docx" [];
	"docx.oxml.table" -> "docx" [];
	"docx.oxml.section" -> "docx" [];
	"docx.oxml.text.run" -> "docx" [];
	"docx.oxml.text.pagebreak" -> "docx" [];
	"docx.oxml.shape" -> "docx" [];
	"docx.oxml.xmlchemy" -> "docx" [];
	"docx.parts.story" -> "docx" [];
	"docx.styles.style" -> "docx" [];
	"docx.text.parfmt" -> "docx" [];
	"docx.text.tabstops" -> "docx" [];
	"docx.text.font" -> "docx" [];
	"docx.dml.color" -> "docx" [];
	"docx.image.image" -> "docx" [];
	"docx.styles.styles" -> "docx" [];
	"docx.styles.latent" -> "docx" [];
	"docx.parts.settings" -> "docx" [];
	"docx.parts.numbering" -> "docx" [];
	"docx.parts.image" -> "docx" [];
	"docx.parts.hdrftr" -> "docx" [];
	"docx.parts.document" -> "docx" [];
	"docx.text.paragraph" -> "docx" [];
	"docx.text.run" -> "docx" [];
	"docx.text.pagebreak" -> "docx" [];
	"docx.text.hyperlink" -> "docx" [];
	"docx.opc.part" -> "docx" [];
	"langchain_community.document_loaders.yuque" -> "langchain_core" [];
	"langchain_community.document_loaders.youtube" -> "urllib" [];
	"langchain_community.document_loaders.youtube" -> "langchain_core" [];
	"langchain_community.document_loaders.youtube" -> "google" [];
	"langchain_community.document_loaders.youtube" -> "googleapiclient" [];
	"langchain_community.document_loaders.word_document" -> "urllib" [];
	"langchain_community.document_loaders.word_document" -> "langchain_core" [];
	"langchain_community.document_loaders.wikipedia" -> "langchain_core" [];
	"langchain_community.document_loaders.whatsapp_chat" -> "langchain_core" [];
	"langchain_community.document_loaders.weather" -> "langchain_core" [];
	"langchain_community.document_loaders.vsdx" -> "urllib" [];
	"langchain_community.document_loaders.parsers.pdf" -> "urllib" [];
	"langchain_community.document_loaders.parsers.pdf" -> "langchain_core" [];
	"pypdfium2.raw" -> "pypdfium2_raw" [];
	"pdfminer" -> "importlib" [];
	"pypdfium2.internal.utils" -> "pypdfium2" [];
	"pypdfium2.internal.consts" -> "pypdfium2" [];
	"pypdfium2._helpers.textpage" -> "pypdfium2" [];
	"pypdfium2._helpers.pageobjects" -> "pypdfium2" [];
	"pypdfium2._helpers.pageobjects" -> "PIL" [];
	"pypdfium2._helpers.page" -> "pypdfium2" [];
	"pypdfium2._helpers.attachment" -> "pypdfium2" [];
	"pypdfium2._helpers.document" -> "pypdfium2" [];
	"pypdfium2._helpers.bitmap" -> "pypdfium2" [];
	"pypdfium2._helpers.bitmap" -> "PIL" [];
	"pypdfium2._helpers.matrix" -> "pypdfium2" [];
	"pypdfium2._helpers.unsupported" -> "pypdfium2" [];
	"pdfplumber.pdf" -> "pdfminer" [];
	"pdfplumber.structure" -> "pdfminer" [];
	"pdfplumber.utils.geometry" -> "pdfplumber" [];
	"pdfplumber.utils.clustering" -> "collections" [];
	"pdfplumber.utils.clustering" -> "pdfplumber" [];
	"pdfplumber.page" -> "pdfminer" [];
	"pdfplumber.display" -> "PIL" [];
	"pdfplumber.utils.text" -> "pdfplumber" [];
	"pdfplumber.utils.generic" -> "collections" [];
	"pdfplumber.utils.generic" -> "pdfplumber" [];
	"pdfplumber.convert" -> "pdfminer" [];
	"pdfplumber.utils.pdfinternals" -> "pdfminer" [];
	"langchain_community.document_loaders.parsers.language.language_parser" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.images" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.grobid" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.docai" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.docai" -> "google" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.audio" -> "langchain_core" [];
	"langchain_community.document_loaders.url_selenium" -> "langchain_core" [];
	"langchain_community.document_loaders.url_playwright" -> "langchain_core" [];
	"langchain_community.document_loaders.url" -> "langchain_core" [];
	"langchain_community.document_loaders.unstructured" -> "langchain_core" [];
	"langchain_community.document_loaders.twitter" -> "langchain_core" [];
	"langchain_community.document_loaders.trello" -> "langchain_core" [];
	"langchain_community.document_loaders.toml" -> "langchain_core" [];
	"langchain_community.document_loaders.tomarkdown" -> "langchain_core" [];
	"langchain_community.document_loaders.tidb" -> "langchain_core" [];
	"langchain_community.document_loaders.text" -> "langchain_core" [];
	"langchain_community.document_loaders.helpers" -> "concurrent" [];
	"langchain_community.document_loaders.tensorflow_datasets" -> "langchain_core" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "langchain_core" [];
	"langchain_community.document_loaders.tencent_cos_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.telegram" -> "langchain_core" [];
	"langchain_community.document_loaders.surrealdb" -> "langchain_core" [];
	"langchain_community.document_loaders.stripe" -> "urllib" [];
	"langchain_community.document_loaders.stripe" -> "langchain_core" [];
	"langchain_community.document_loaders.srt" -> "langchain_core" [];
	"langchain_community.document_loaders.spreedly" -> "urllib" [];
	"langchain_community.document_loaders.spreedly" -> "langchain_core" [];
	"langchain_community.document_loaders.spider" -> "langchain_core" [];
	"langchain_community.document_loaders.snowflake_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.slack_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.sitemap" -> "urllib" [];
	"langchain_community.document_loaders.sitemap" -> "langchain_core" [];
	"langchain_community.document_loaders.sharepoint" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.txt" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.msword" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.generic" -> "langchain_core" [];
	"langchain_community.document_loaders.blob_loaders.file_system" -> "tqdm" [];
	"langchain_community.document_loaders.scrapingant" -> "langchain_core" [];
	"langchain_community.document_loaders.scrapfly" -> "langchain_core" [];
	"langchain_community.document_loaders.s3_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.rss" -> "langchain_core" [];
	"langchain_community.document_loaders.rocksetdb" -> "langchain_core" [];
	"langchain_community.document_loaders.roam" -> "langchain_core" [];
	"langchain_community.document_loaders.reddit" -> "langchain_core" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "langchain_core" [];
	"langchain_core.utils.html" -> "collections" [];
	"langchain_core.utils.html" -> "urllib" [];
	"langchain_community.document_loaders.readthedocs" -> "langchain_core" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "langchain_core" [];
	"langchain_community.document_loaders.pubmed" -> "langchain_core" [];
	"langchain_community.document_loaders.psychic" -> "langchain_core" [];
	"langchain_community.document_loaders.polars_dataframe" -> "langchain_core" [];
	"langchain_community.document_loaders.pebblo" -> "importlib" [];
	"langchain_community.document_loaders.pebblo" -> "langchain_core" [];
	"langchain_community.utilities.pebblo" -> "langchain_core" [];
	"langchain_community.utilities.pebblo" -> "langchain_community" [];
	"langchain_community.document_loaders.pdf" -> "urllib" [];
	"langchain_community.document_loaders.pdf" -> "langchain_core" [];
	"langchain_community.document_loaders.pdf" -> "pdfminer" [];
	"langchain_community.document_loaders.oracleai" -> "html" [];
	"langchain_community.document_loaders.oracleai" -> "langchain_core" [];
	"langchain_community.document_loaders.oracleadb_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.open_city_data" -> "langchain_core" [];
	"langchain_community.document_loaders.onedrive_file" -> "langchain_core" [];
	"langchain_community.document_loaders.obsidian" -> "langchain_core" [];
	"langchain_community.document_loaders.obs_file" -> "langchain_core" [];
	"langchain_community.document_loaders.obs_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.notiondb" -> "langchain_core" [];
	"langchain_community.document_loaders.notion" -> "langchain_core" [];
	"langchain_community.document_loaders.notebook" -> "langchain_core" [];
	"langchain_community.document_loaders.news" -> "langchain_core" [];
	"langchain_community.document_loaders.needle" -> "langchain_core" [];
	"langchain_community.document_loaders.mongodb" -> "langchain_core" [];
	"langchain_community.document_loaders.modern_treasury" -> "urllib" [];
	"langchain_community.document_loaders.modern_treasury" -> "langchain_core" [];
	"langchain_community.document_loaders.mhtml" -> "langchain_core" [];
	"langchain_community.document_loaders.merge" -> "langchain_core" [];
	"langchain_community.document_loaders.mediawikidump" -> "langchain_core" [];
	"langchain_community.document_loaders.max_compute" -> "langchain_core" [];
	"langchain_community.document_loaders.mastodon" -> "langchain_core" [];
	"langchain_community.document_loaders.llmsherpa" -> "urllib" [];
	"langchain_community.document_loaders.llmsherpa" -> "langchain_core" [];
	"langchain_community.document_loaders.larksuite" -> "urllib" [];
	"langchain_community.document_loaders.larksuite" -> "langchain_core" [];
	"langchain_community.document_loaders.lakefs" -> "urllib" [];
	"langchain_community.document_loaders.lakefs" -> "langchain_core" [];
	"langchain_community.document_loaders.kinetica_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.json_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.joplin" -> "langchain_core" [];
	"langchain_community.document_loaders.iugu" -> "urllib" [];
	"langchain_community.document_loaders.iugu" -> "langchain_core" [];
	"langchain_community.document_loaders.imsdb" -> "langchain_core" [];
	"langchain_community.document_loaders.image_captions" -> "langchain_core" [];
	"langchain_community.document_loaders.ifixit" -> "langchain_core" [];
	"langchain_community.document_loaders.hugging_face_model" -> "langchain_core" [];
	"langchain_community.document_loaders.hugging_face_dataset" -> "langchain_core" [];
	"langchain_community.document_loaders.html_bs" -> "importlib" [];
	"langchain_community.document_loaders.html_bs" -> "langchain_core" [];
	"langchain_community.document_loaders.hn" -> "langchain_core" [];
	"langchain_community.document_loaders.gutenberg" -> "langchain_core" [];
	"langchain_community.document_loaders.gutenberg" -> "urllib" [];
	"langchain_community.document_loaders.googledrive" -> "langchain_core" [];
	"langchain_community.document_loaders.googledrive" -> "google" [];
	"langchain_community.document_loaders.googledrive" -> "googleapiclient" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "langchain_core" [];
	"langchain_community.document_loaders.glue_catalog" -> "langchain_core" [];
	"langchain_community.document_loaders.github" -> "langchain_core" [];
	"langchain_community.document_loaders.gitbook" -> "urllib" [];
	"langchain_community.document_loaders.gitbook" -> "langchain_core" [];
	"langchain_community.document_loaders.git" -> "langchain_core" [];
	"langchain_community.document_loaders.geodataframe" -> "langchain_core" [];
	"langchain_community.document_loaders.gcs_file" -> "langchain_core" [];
	"langchain_community.document_loaders.gcs_file" -> "google" [];
	"langchain_community.document_loaders.gcs_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.gcs_directory" -> "google" [];
	"langchain_community.document_loaders.firecrawl" -> "langchain_core" [];
	"langchain_community.document_loaders.figma" -> "urllib" [];
	"langchain_community.document_loaders.figma" -> "langchain_core" [];
	"langchain_community.document_loaders.fauna" -> "langchain_core" [];
	"langchain_community.document_loaders.facebook_chat" -> "langchain_core" [];
	"langchain_community.document_loaders.evernote" -> "langchain_core" [];
	"langchain_community.document_loaders.etherscan" -> "langchain_core" [];
	"langchain_community.document_loaders.email" -> "langchain_core" [];
	"langchain_community.document_loaders.duckdb_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.dropbox" -> "langchain_core" [];
	"langchain_community.document_loaders.docugami" -> "langchain_core" [];
	"langchain_community.document_loaders.doc_intelligence" -> "langchain_core" [];
	"langchain_community.document_loaders.discord" -> "langchain_core" [];
	"langchain_community.document_loaders.directory" -> "langchain_core" [];
	"langchain_community.document_loaders.diffbot" -> "langchain_core" [];
	"langchain_community.document_loaders.dedoc" -> "langchain_core" [];
	"langchain_community.document_loaders.dataframe" -> "langchain_core" [];
	"langchain_community.document_loaders.datadog_logs" -> "langchain_core" [];
	"langchain_community.document_loaders.cube_semantic" -> "langchain_core" [];
	"langchain_community.document_loaders.csv_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.couchbase" -> "langchain_core" [];
	"langchain_community.document_loaders.conllu" -> "langchain_core" [];
	"langchain_community.document_loaders.confluence" -> "langchain_core" [];
	"langchain_community.document_loaders.concurrent" -> "concurrent" [];
	"langchain_community.document_loaders.concurrent" -> "langchain_core" [];
	"langchain_community.document_loaders.generic" -> "langchain_core" [];
	"langchain_community.document_loaders.college_confidential" -> "langchain_core" [];
	"langchain_community.document_loaders.chromium" -> "langchain_core" [];
	"langchain_community.document_loaders.chm" -> "urllib" [];
	"langchain_community.document_loaders.chatgpt" -> "langchain_core" [];
	"langchain_community.document_loaders.cassandra" -> "langchain_core" [];
	"langchain_community.document_loaders.browserless" -> "langchain_core" [];
	"langchain_community.document_loaders.browserbase" -> "langchain_core" [];
	"langchain_community.document_loaders.brave_search" -> "langchain_core" [];
	"langchain_community.document_loaders.blockchain" -> "langchain_core" [];
	"langchain_community.document_loaders.blob_loaders" -> "langchain_core" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "urllib" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "tqdm" [];
	"langchain_community.document_loaders.blackboard" -> "urllib" [];
	"langchain_community.document_loaders.blackboard" -> "langchain_core" [];
	"langchain_community.document_loaders.bilibili" -> "langchain_core" [];
	"langchain_community.document_loaders.bigquery" -> "langchain_core" [];
	"langchain_community.document_loaders.bigquery" -> "google" [];
	"langchain_community.document_loaders.bibtex" -> "langchain_core" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "langchain_core" [];
	"langchain_community.document_loaders.azure_blob_storage_container" -> "langchain_core" [];
	"langchain_community.document_loaders.azlyrics" -> "langchain_core" [];
	"langchain_community.document_loaders.athena" -> "langchain_core" [];
	"langchain_community.document_loaders.async_html" -> "concurrent" [];
	"langchain_community.document_loaders.async_html" -> "langchain_core" [];
	"langchain_community.document_loaders.async_html" -> "tqdm" [];
	"langchain_community.document_loaders.astradb" -> "langchain_core" [];
	"langchain_community.document_loaders.assemblyai" -> "langchain_core" [];
	"langchain_community.document_loaders.arxiv" -> "langchain_core" [];
	"langchain_community.document_loaders.arcgis_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.apify_dataset" -> "langchain_core" [];
	"langchain_community.document_loaders.airtable" -> "langchain_core" [];
	"langchain_community.document_loaders.airbyte_json" -> "langchain_core" [];
	"langchain_community.document_loaders.airbyte" -> "langchain_core" [];
	"langchain_community.document_loaders.acreom" -> "langchain_core" [];
	"pypdf.generic._outline" -> "pypdf" [];
	"pypdf.generic._data_structures" -> "pypdf" [];
	"pypdf._codecs._codecs" -> "pypdf" [];
	"pypdf.generic._utils" -> "pypdf" [];
	"pypdf.generic._image_inline" -> "pypdf" [];
	"pypdf.generic._base" -> "pypdf" [];
	"pypdf.generic._files" -> "pypdf" [];
	"pypdf._page" -> "PIL" [];
	"pypdf._text_extraction._layout_mode._font" -> "pypdf" [];
	"pypdf._text_extraction._layout_mode._fixed_width_page" -> "pypdf" [];
	"pypdf._text_extraction._layout_mode._text_state_params" -> "pypdf" [];
	"pypdf._text_extraction._layout_mode._text_state_manager" -> "pypdf" [];
	"pypdf._crypt_providers._fallback" -> "pypdf" [];
	"langchain_community.embeddings.zhipuai" -> "langchain_core" [];
	"langchain_community.embeddings.yandex" -> "langchain_core" [];
	"langchain_community.embeddings.xinference" -> "langchain_core" [];
	"langchain_community.embeddings.voyageai" -> "langchain_core" [];
	"langchain_community.embeddings.voyageai" -> "tqdm" [];
	"langchain_community.embeddings.volcengine" -> "langchain_core" [];
	"langchain_community.embeddings.vertexai" -> "concurrent" [];
	"langchain_community.embeddings.vertexai" -> "langchain_core" [];
	"langchain_community.embeddings.vertexai" -> "vertexai" [];
	"langchain_community.embeddings.titan_takeoff" -> "langchain_core" [];
	"langchain_community.embeddings.textembed" -> "concurrent" [];
	"langchain_community.embeddings.textembed" -> "langchain_core" [];
	"langchain_community.embeddings.tensorflow_hub" -> "langchain_core" [];
	"langchain_community.embeddings.sparkllm" -> "urllib" [];
	"langchain_community.embeddings.sparkllm" -> "wsgiref" [];
	"langchain_community.embeddings.sparkllm" -> "langchain_core" [];
	"langchain_community.embeddings.spacy_embeddings" -> "importlib" [];
	"langchain_community.embeddings.spacy_embeddings" -> "langchain_core" [];
	"langchain_community.embeddings.solar" -> "langchain_core" [];
	"langchain_community.embeddings.self_hosted" -> "langchain_core" [];
	"langchain_community.embeddings.sambanova" -> "langchain_core" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "langchain_core" [];
	"langchain_community.embeddings.premai" -> "langchain_core" [];
	"langchain_community.embeddings.ovhcloud" -> "langchain_core" [];
	"langchain_community.embeddings.oracleai" -> "langchain_core" [];
	"langchain_community.embeddings.optimum_intel" -> "langchain_core" [];
	"langchain_community.embeddings.openvino" -> "langchain_core" [];
	"langchain_community.embeddings.ollama" -> "langchain_core" [];
	"langchain_community.embeddings.octoai_embeddings" -> "langchain_core" [];
	"langchain_community.embeddings.oci_generative_ai" -> "langchain_core" [];
	"langchain_community.embeddings.nlpcloud" -> "langchain_core" [];
	"langchain_community.embeddings.nemo" -> "langchain_core" [];
	"langchain_community.embeddings.naver" -> "http" [];
	"langchain_community.embeddings.naver" -> "langchain_core" [];
	"langchain_community.embeddings.mosaicml" -> "langchain_core" [];
	"langchain_community.embeddings.modelscope_hub" -> "langchain_core" [];
	"langchain_community.embeddings.model2vec" -> "langchain_core" [];
	"langchain_community.embeddings.mlflow_gateway" -> "langchain_core" [];
	"langchain_community.embeddings.mlflow" -> "urllib" [];
	"langchain_community.embeddings.mlflow" -> "langchain_core" [];
	"langchain_community.embeddings.minimax" -> "langchain_core" [];
	"langchain_community.embeddings.localai" -> "langchain_core" [];
	"langchain_community.embeddings.llm_rails" -> "langchain_core" [];
	"langchain_community.embeddings.llamafile" -> "langchain_core" [];
	"langchain_community.embeddings.llamacpp" -> "langchain_core" [];
	"langchain_community.embeddings.laser" -> "langchain_core" [];
	"langchain_community.embeddings.johnsnowlabs" -> "langchain_core" [];
	"langchain_community.embeddings.jina" -> "urllib" [];
	"langchain_community.embeddings.jina" -> "langchain_core" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "langchain_core" [];
	"langchain_community.embeddings.itrex" -> "importlib" [];
	"langchain_community.embeddings.itrex" -> "langchain_core" [];
	"langchain_community.embeddings.ipex_llm" -> "langchain_core" [];
	"langchain_community.embeddings.infinity_local" -> "langchain_core" [];
	"langchain_community.embeddings.infinity" -> "concurrent" [];
	"langchain_community.embeddings.infinity" -> "langchain_core" [];
	"langchain_community.embeddings.hunyuan" -> "langchain_core" [];
	"langchain_community.embeddings.huggingface_hub" -> "langchain_core" [];
	"langchain_community.embeddings.huggingface" -> "langchain_core" [];
	"langchain_community.embeddings.gradient_ai" -> "langchain_core" [];
	"langchain_community.embeddings.gradient_ai" -> "packaging" [];
	"langchain_community.embeddings.gpt4all" -> "langchain_core" [];
	"langchain_community.embeddings.google_palm" -> "langchain_core" [];
	"langchain_community.embeddings.google_palm" -> "google" [];
	"langchain_community.embeddings.gigachat" -> "langchain_core" [];
	"langchain_community.embeddings.fastembed" -> "langchain_core" [];
	"langchain_community.embeddings.fake" -> "langchain_core" [];
	"langchain_community.embeddings.ernie" -> "langchain_core" [];
	"langchain_community.embeddings.embaas" -> "langchain_core" [];
	"langchain_community.embeddings.elasticsearch" -> "langchain_core" [];
	"langchain_community.embeddings.edenai" -> "langchain_core" [];
	"langchain_community.embeddings.deepinfra" -> "langchain_core" [];
	"langchain_community.embeddings.databricks" -> "urllib" [];
	"langchain_community.embeddings.databricks" -> "langchain_core" [];
	"langchain_community.embeddings.dashscope" -> "langchain_core" [];
	"langchain_community.embeddings.dashscope" -> "requests" [];
	"langchain_community.embeddings.cohere" -> "langchain_core" [];
	"langchain_community.embeddings.clova" -> "langchain_core" [];
	"langchain_community.embeddings.clarifai" -> "langchain_core" [];
	"langchain_community.embeddings.bookend" -> "langchain_core" [];
	"langchain_community.embeddings.bedrock" -> "langchain_core" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "langchain_core" [];
	"langchain_community.embeddings.baichuan" -> "langchain_core" [];
	"langchain_community.embeddings.azure_openai" -> "langchain_core" [];
	"langchain_community.embeddings.awa" -> "langchain_core" [];
	"langchain_community.embeddings.ascend" -> "langchain_core" [];
	"langchain_community.embeddings.anyscale" -> "langchain_core" [];
	"langchain_community.embeddings.aleph_alpha" -> "langchain_core" [];
	"langchain_community.chat_models.zhipuai" -> "collections" [];
	"langchain_community.chat_models.zhipuai" -> "langchain_core" [];
	"langchain_community.chat_models.zhipuai" -> "http" [];
	"httpx_sse._exceptions" -> "http" [];
	"httpx_sse._api" -> "http" [];
	"langchain_community.chat_models.yuan2" -> "langchain_core" [];
	"langchain_community.chat_models.yi" -> "langchain_core" [];
	"langchain_community.chat_models.yi" -> "http" [];
	"langchain_community.chat_models.yandex" -> "langchain_core" [];
	"langchain_community.chat_models.volcengine_maas" -> "langchain_core" [];
	"langchain_community.chat_models.vertexai" -> "urllib" [];
	"langchain_community.chat_models.vertexai" -> "langchain_core" [];
	"langchain_community.chat_models.vertexai" -> "vertexai" [];
	"langchain_community.chat_models.tongyi" -> "langchain_core" [];
	"langchain_community.chat_models.tongyi" -> "requests" [];
	"langchain_community.chat_models.symblai_nebula" -> "langchain_core" [];
	"langchain_community.chat_models.sparkllm" -> "urllib" [];
	"langchain_community.chat_models.sparkllm" -> "wsgiref" [];
	"langchain_community.chat_models.sparkllm" -> "langchain_core" [];
	"langchain_community.chat_models.solar" -> "langchain_core" [];
	"langchain_community.llms.solar" -> "langchain_core" [];
	"langchain_community.chat_models.snowflake" -> "langchain_core" [];
	"langchain_community.chat_models.sambanova" -> "langchain_core" [];
	"langchain_community.chat_models.reka" -> "langchain_core" [];
	"langchain_community.chat_models.promptlayer_openai" -> "langchain_core" [];
	"langchain_community.chat_models.premai" -> "langchain_core" [];
	"langchain_community.chat_models.perplexity" -> "langchain_core" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "langchain_core" [];
	"langchain_community.chat_models.outlines" -> "importlib" [];
	"langchain_community.chat_models.outlines" -> "collections" [];
	"langchain_community.chat_models.outlines" -> "langchain_core" [];
	"langchain_community.chat_models.ollama" -> "langchain_core" [];
	"langchain_community.chat_models.octoai" -> "langchain_core" [];
	"langchain_community.chat_models.oci_generative_ai" -> "langchain_core" [];
	"langchain_community.chat_models.oci_data_science" -> "langchain_core" [];
	"langchain_community.chat_models.naver" -> "http" [];
	"langchain_community.chat_models.naver" -> "langchain_core" [];
	"langchain_community.chat_models.moonshot" -> "langchain_core" [];
	"langchain_community.llms.moonshot" -> "langchain_core" [];
	"langchain_community.chat_models.mlx" -> "langchain_core" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "langchain_core" [];
	"langchain_community.chat_models.minimax" -> "langchain_core" [];
	"langchain_community.chat_models.minimax" -> "http" [];
	"langchain_community.chat_models.maritalk" -> "langchain_core" [];
	"langchain_community.chat_models.llamacpp" -> "langchain_core" [];
	"langchain_community.chat_models.llama_edge" -> "langchain_core" [];
	"langchain_community.chat_models.litellm_router" -> "langchain_core" [];
	"langchain_community.chat_models.litellm" -> "langchain_core" [];
	"langchain_community.chat_models.konko" -> "langchain_core" [];
	"langchain_community.chat_models.kinetica" -> "importlib" [];
	"langchain_community.chat_models.kinetica" -> "langchain_core" [];
	"langchain_community.chat_models.jinachat" -> "langchain_core" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "langchain_core" [];
	"langchain_community.chat_models.hunyuan" -> "langchain_core" [];
	"langchain_community.chat_models.human" -> "langchain_core" [];
	"langchain_community.chat_models.huggingface" -> "langchain_core" [];
	"langchain_community.chat_models.gpt_router" -> "langchain_core" [];
	"langchain_community.chat_models.google_palm" -> "langchain_core" [];
	"langchain_community.chat_models.google_palm" -> "google" [];
	"langchain_community.chat_models.gigachat" -> "langchain_core" [];
	"langchain_community.chat_models.friendli" -> "langchain_core" [];
	"langchain_community.chat_models.fireworks" -> "langchain_core" [];
	"langchain_community.chat_models.fake" -> "langchain_core" [];
	"langchain_community.chat_models.everlyai" -> "langchain_core" [];
	"langchain_community.chat_models.ernie" -> "langchain_core" [];
	"langchain_community.chat_models.edenai" -> "langchain_core" [];
	"langchain_community.chat_models.deepinfra" -> "langchain_core" [];
	"langchain_community.chat_models.coze" -> "langchain_core" [];
	"langchain_community.chat_models.cohere" -> "langchain_core" [];
	"langchain_community.chat_models.bedrock" -> "langchain_core" [];
	"langchain_community.chat_models.meta" -> "langchain_core" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "langchain_core" [];
	"langchain_community.chat_models.baichuan" -> "langchain_core" [];
	"langchain_community.chat_models.baichuan" -> "http" [];
	"langchain_community.chat_models.azure_openai" -> "langchain_core" [];
	"langchain_community.chat_models.anyscale" -> "langchain_core" [];
	"langchain_community.chat_models.anthropic" -> "langchain_core" [];
	"langchain.retrievers" -> "langchain_community" [];
	"langchain_community.retrievers.zilliz" -> "langchain_core" [];
	"langchain_community.retrievers.zep_cloud" -> "langchain_core" [];
	"langchain_community.retrievers.zep" -> "langchain_core" [];
	"langchain_community.retrievers.you" -> "langchain_core" [];
	"langchain_community.retrievers.you" -> "langchain_community" [];
	"langchain_community.retrievers.wikipedia" -> "langchain_core" [];
	"langchain_community.retrievers.web_research" -> "langchain" [];
	"langchain_community.retrievers.web_research" -> "langchain_core" [];
	"langchain_community.retrievers.web_research" -> "langchain_community" [];
	"langchain_community.document_transformers.openai_functions" -> "langchain_core" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "langchain_core" [];
	"langchain_community.tools.nuclia.tool" -> "langchain_core" [];
	"langchain_community.document_transformers.markdownify" -> "langchain_core" [];
	"langchain_community.document_transformers.long_context_reorder" -> "langchain_core" [];
	"langchain_community.document_transformers.html2text" -> "langchain_core" [];
	"langchain_community.document_transformers.google_translate" -> "langchain_core" [];
	"langchain_community.document_transformers.google_translate" -> "google" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "langchain_core" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "langchain_core" [];
	"langchain_community.document_transformers.doctran_text_qa" -> "langchain_core" [];
	"langchain_community.document_transformers.doctran_text_extract" -> "langchain_core" [];
	"langchain_community.document_transformers.beautiful_soup_transformer" -> "langchain_core" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "langchain_core" [];
	"langchain_community.retrievers.vespa_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "langchain_core" [];
	"langchain_community.retrievers.tfidf" -> "langchain_core" [];
	"langchain_community.retrievers.tavily_search_api" -> "langchain_core" [];
	"langchain_community.retrievers.svm" -> "concurrent" [];
	"langchain_community.retrievers.svm" -> "langchain_core" [];
	"langchain_community.retrievers.remote_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.rememberizer" -> "langchain_core" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.pubmed" -> "langchain_core" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "langchain_core" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "tqdm" [];
	"langchain_community.retrievers.outline" -> "langchain_core" [];
	"langchain_community.retrievers.needle" -> "langchain_core" [];
	"langchain_community.retrievers.nanopq" -> "concurrent" [];
	"langchain_community.retrievers.nanopq" -> "langchain_core" [];
	"langchain_community.retrievers.milvus" -> "langchain_core" [];
	"langchain_community.retrievers.metal" -> "langchain_core" [];
	"langchain_community.retrievers.llama_index" -> "langchain_core" [];
	"langchain_community.retrievers.knn" -> "concurrent" [];
	"langchain_community.retrievers.knn" -> "langchain_core" [];
	"langchain_community.retrievers.kendra" -> "langchain_core" [];
	"langchain_community.retrievers.kay" -> "langchain_core" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "langchain_core" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "google" [];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" -> "langchain_core" [];
	"langchain_community.retrievers.embedchain" -> "langchain_core" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "langchain_core" [];
	"langchain_community.retrievers.dria_index" -> "langchain_core" [];
	"langchain_community.retrievers.dria_index" -> "langchain_community" [];
	"langchain_community.retrievers.docarray" -> "langchain_core" [];
	"langchain_community.retrievers.cohere_rag_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.chaindesk" -> "langchain_core" [];
	"langchain_community.retrievers.breebs" -> "langchain_core" [];
	"langchain_community.retrievers.bm25" -> "langchain_core" [];
	"langchain_community.retrievers.bedrock" -> "langchain_core" [];
	"langchain_community.retrievers.azure_ai_search" -> "langchain_core" [];
	"langchain_community.retrievers.asknews" -> "langchain_core" [];
	"langchain_community.retrievers.arxiv" -> "langchain_core" [];
	"langchain_community.retrievers.arcee" -> "langchain_core" [];
	"langchain.retrievers.time_weighted_retriever" -> "langchain_core" [];
	"langchain.retrievers.self_query.base" -> "collections" [];
	"langchain.retrievers.self_query.base" -> "langchain_core" [];
	"langchain_community.query_constructors.hanavector" -> "langchain_core" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "langchain_core" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "neo4j_graphrag" [];
	"neo4j_graphrag" -> "importlib" [];
	"langchain_neo4j.graphs.neo4j_graph" -> "langchain_core" [];
	"langchain_neo4j.graphs.neo4j_graph" -> "neo4j_graphrag" [];
	"langchain_neo4j.graphs.graph_document" -> "langchain_core" [];
	"langchain_neo4j.chat_message_histories.neo4j" -> "langchain_core" [];
	"langchain_neo4j.chat_message_histories.neo4j" -> "neo4j_graphrag" [];
	"langchain_neo4j.chains.graph_qa.cypher" -> "langchain_core" [];
	"langchain_neo4j.chains.graph_qa.cypher" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.text2cypher" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.external.qdrant.qdrant" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.external.utils" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.external.qdrant.types" -> "neo4j_graphrag" [];
	"neo4j_graphrag.embeddings.ollama" -> "neo4j_graphrag" [];
	"neo4j_graphrag.embeddings.mistral" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.external.weaviate.weaviate" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.external.weaviate.types" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.external.pinecone.pinecone" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.external.pinecone.types" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.vector" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.hybrid" -> "neo4j_graphrag" [];
	"neo4j_graphrag.retrievers.base" -> "neo4j_graphrag" [];
	"neo4j_graphrag.llm.vertexai_llm" -> "neo4j_graphrag" [];
	"neo4j_graphrag.llm.vertexai_llm" -> "vertexai" [];
	"neo4j_graphrag.llm.types" -> "neo4j_graphrag" [];
	"neo4j_graphrag.llm.openai_llm" -> "neo4j_graphrag" [];
	"neo4j_graphrag.llm.ollama_llm" -> "neo4j_graphrag" [];
	"neo4j_graphrag.llm.mistralai_llm" -> "neo4j_graphrag" [];
	"neo4j_graphrag.llm.cohere_llm" -> "neo4j_graphrag" [];
	"neo4j_graphrag.llm.base" -> "neo4j_graphrag" [];
	"neo4j_graphrag.llm.anthropic_llm" -> "neo4j_graphrag" [];
	"neo4j_graphrag.generation.prompts" -> "neo4j_graphrag" [];
	"neo4j_graphrag.generation.graphrag" -> "neo4j_graphrag" [];
	"neo4j_graphrag.generation.types" -> "neo4j_graphrag" [];
	"langchain_community.query_constructors.weaviate" -> "langchain_core" [];
	"langchain_community.query_constructors.vectara" -> "langchain_core" [];
	"langchain_community.query_constructors.timescalevector" -> "langchain_core" [];
	"langchain_community.query_constructors.supabase" -> "langchain_core" [];
	"langchain_community.query_constructors.redis" -> "langchain_core" [];
	"langchain_community.query_constructors.qdrant" -> "langchain_core" [];
	"langchain_community.query_constructors.pinecone" -> "langchain_core" [];
	"langchain_community.query_constructors.pgvector" -> "langchain_core" [];
	"langchain_community.query_constructors.opensearch" -> "langchain_core" [];
	"langchain_community.query_constructors.neo4j" -> "langchain_core" [];
	"langchain_community.query_constructors.myscale" -> "langchain_core" [];
	"langchain_community.query_constructors.mongodb_atlas" -> "langchain_core" [];
	"langchain_community.query_constructors.milvus" -> "langchain_core" [];
	"langchain_community.query_constructors.elasticsearch" -> "langchain_core" [];
	"langchain_community.query_constructors.dingo" -> "langchain_core" [];
	"langchain_community.query_constructors.deeplake" -> "langchain_core" [];
	"langchain_community.query_constructors.databricks_vector_search" -> "langchain_core" [];
	"langchain_community.query_constructors.dashvector" -> "langchain_core" [];
	"langchain_community.query_constructors.chroma" -> "langchain_core" [];
	"langchain_community.query_constructors.astradb" -> "langchain_core" [];
	"langchain.retrievers.re_phraser" -> "langchain_core" [];
	"langchain.retrievers.parent_document_retriever" -> "collections" [];
	"langchain.retrievers.parent_document_retriever" -> "langchain_core" [];
	"langchain.retrievers.multi_vector" -> "langchain_core" [];
	"langchain.storage._lc_store" -> "langchain_core" [];
	"langchain.storage" -> "langchain_core" [];
	"langchain.storage" -> "langchain_community" [];
	"langchain_community.storage.upstash_redis" -> "langchain_core" [];
	"langchain_community.storage.sql" -> "langchain_core" [];
	"langchain_community.storage.redis" -> "langchain_core" [];
	"langchain_community.storage.mongodb" -> "langchain_core" [];
	"langchain_community.storage.cassandra" -> "langchain_core" [];
	"langchain_community.storage.astradb" -> "langchain_core" [];
	"langchain.storage.file_system" -> "collections" [];
	"langchain.storage.file_system" -> "langchain_core" [];
	"langchain.storage.exceptions" -> "langchain_core" [];
	"langchain.storage.encoder_backed" -> "collections" [];
	"langchain.storage.encoder_backed" -> "langchain_core" [];
	"langchain_core.stores" -> "collections" [];
	"langchain.retrievers.multi_query" -> "collections" [];
	"langchain.retrievers.multi_query" -> "langchain_core" [];
	"langchain.retrievers.merger_retriever" -> "langchain_core" [];
	"langchain.retrievers.ensemble" -> "langchain_core" [];
	"langchain.retrievers.contextual_compression" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.base" -> "collections" [];
	"langchain.retrievers.document_compressors.base" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.listwise_rerank" -> "collections" [];
	"langchain.retrievers.document_compressors.listwise_rerank" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "collections" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "collections" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "collections" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "collections" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "langchain" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "collections" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "langchain_core" [];
	"langchain_core.vectorstores.in_memory" -> "langchain_core" [];
	"langchain_core.vectorstores.in_memory" -> "collections" [];
	"langchain_core.vectorstores.base" -> "langchain_core" [];
	"langchain_core.vectorstores.base" -> "collections" [];
	"langchain_core.documents.transformers" -> "collections" [];
	"langchain_core.documents.compressor" -> "langchain_core" [];
	"langchain_core.documents.compressor" -> "collections" [];
	"langchain.embeddings" -> "langchain_community" [];
	"langchain.embeddings.cache" -> "collections" [];
	"langchain.embeddings.cache" -> "langchain_core" [];
	"langchain.embeddings.base" -> "langchain_core" [];
	"langchain_community.vectorstores.neo4j_vector" -> "langchain_core" [];
	"langchain_community.vectorstores.neo4j_vector" -> "langchain_community" [];
	"langchain.schema" -> "langchain_core" [];
	"langchain.prompts" -> "langchain_core" [];
	"langchain_community.example_selectors.ngram_overlap" -> "langchain_core" [];
	"google.generativeai.models" -> "google" [];
	"google.generativeai.operations" -> "google" [];
	"google.generativeai.operations" -> "tqdm" [];
	"google.generativeai.generative_models" -> "collections" [];
	"tracemalloc" -> "collections" [];
	"pandas.core.computation.check" -> "pandas" [];
	"pandas.compat._optional" -> "pandas" [];
	"pandas.core.computation.ops" -> "pandas" [];
	"pandas.core.computation.eval" -> "pandas" [];
	"pandas.core.groupby.categorical" -> "pandas" [];
	"pandas.core.window.doc" -> "pandas" [];
	"pandas.core.indexers.objects" -> "pandas" [];
	"pandas.core.window.online" -> "pandas" [];
	"plistlib" -> "xml" [];
	"pandas.compat.numpy" -> "pandas" [];
	"setuptools.command" -> "distutils" [];
	"requests.models" -> "urllib" [];
	"urllib3.util.url" -> "urllib" [];
	"urllib3.util.timeout" -> "urllib" [];
	"urllib3.util.ssl_" -> "urllib" [];
	"urllib3.util.ssltransport" -> "urllib" [];
	"urllib3.util.retry" -> "urllib" [];
	"urllib3.http2.connection" -> "urllib" [];
	"urllib3.util.proxy" -> "urllib" [];
	"urllib3.util.response" -> "urllib" [];
	"urllib3.util.request" -> "urllib" [];
	"urllib3.util.connection" -> "urllib" [];
	"requests.adapters" -> "urllib" [];
	"urllib3.contrib.socks" -> "urllib" [];
	"requests.utils" -> "urllib" [];
	"cryptography.hazmat.backends.openssl.backend" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.padding" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.utils" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.dh" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.dsa" -> "cryptography" [];
	"cryptography.x509.oid" -> "cryptography" [];
	"requests.exceptions" -> "urllib" [];
	"urllib3.contrib.emscripten" -> "urllib" [];
	"urllib3.contrib.emscripten.connection" -> "urllib" [];
	"urllib3.contrib.emscripten.response" -> "urllib" [];
	"urllib3.contrib.emscripten.request" -> "urllib" [];
	"numpy.lib.ufunclike" -> "numpy" [];
	"numpy.lib.scimath" -> "numpy" [];
	"pandas.api.extensions" -> "pandas" [];
	"pandas.io.excel._util" -> "pandas" [];
	"pandas.api.types" -> "pandas" [];
	"importlib_metadata" -> "zipp" [];
	"sqlalchemy.util._collections" -> "sqlalchemy" [];
	"sqlalchemy.sql._py_util" -> "sqlalchemy" [];
	"sqlalchemy.sql._orm_types" -> "sqlalchemy" [];
	"sqlalchemy.engine.processors" -> "sqlalchemy" [];
	"sqlalchemy.sql._elements_constructors" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.aioodbc" -> "sqlalchemy" [];
	"pandas.io.formats.xml" -> "xml" [];
	"lxml.sax" -> "xml" [];
	"pandas.io.xml" -> "xml" [];
	"pandas.io.gbq" -> "google" [];
	"google.auth.transport._custom_tls_signer" -> "cryptography" [];
	"google.auth.crypt._python_rsa" -> "pyasn1" [];
	"pandas._libs.indexing" -> "pandas" [];
	"pandas.util._tester" -> "pandas" [];
	"pandas.api.indexers" -> "pandas" [];
	"pandas.compat.pyarrow" -> "pandas" [];
	"graphdatascience.session.dedicated_sessions" -> "graphdatascience" [];
	"graphdatascience.query_runner.progress.query_progress_logger" -> "graphdatascience" [];
	"graphdatascience.query_runner.progress.query_progress_provider" -> "graphdatascience" [];
	"graphdatascience.query_runner.cypher_graph_constructor" -> "graphdatascience" [];
	"neo4j._sync.home_db_cache" -> "neo4j" [];
	"neo4j._async.home_db_cache" -> "neo4j" [];
	"neo4j._codec.packstream.v1" -> "neo4j" [];
	"graphdatascience.utils.util_remote_proc_runner" -> "graphdatascience" [];
	"graphdatascience.query_runner.arrow_info" -> "graphdatascience" [];
	"graphdatascience.graph.nx_loader" -> "graphdatascience" [];
	"graphdatascience.graph.ogb_loader" -> "graphdatascience" [];
	"graphdatascience.utils.util_proc_runner" -> "graphdatascience" [];
	"graphdatascience.topological_lp.topological_lp_alpha_runner" -> "graphdatascience" [];
	"graphdatascience.pipeline.pipeline_beta_proc_runner" -> "graphdatascience" [];
	"graphdatascience.pipeline.pipeline_alpha_proc_runner" -> "graphdatascience" [];
	"graphdatascience.model.model_resolver" -> "graphdatascience" [];
	"graphdatascience.model.pipeline_model" -> "pandas" [];
	"_elementtree" -> "xml" [];
	"langchain_core._api.deprecation" -> "langchain_core" [];
	"langchain_core.utils.loading" -> "langchain_core" [];
	"langchain_core.runnables.utils" -> "langchain_core" [];
	"langchain_core.runnables.passthrough" -> "langchain_core" [];
	"langchain_core.runnables.graph" -> "langchain_core" [];
	"langchain_core.tracers.context" -> "langchain_core" [];
	"langchain_core.tracers.stdout" -> "langchain_core" [];
	"langchain.evaluation.scoring.prompt" -> "langchain_core" [];
	"langchain_core.prompts.prompt" -> "langchain_core" [];
	"langchain.evaluation.regex_match.base" -> "langchain" [];
	"langchain.evaluation.qa.generate_chain" -> "langchain" [];
	"langchain.output_parsers" -> "langchain_community" [];
	"langchain.output_parsers.prompts" -> "langchain_core" [];
	"langchain._api.deprecation" -> "langchain_core" [];
	"langchain.evaluation.qa.generate_prompt" -> "langchain" [];
	"langchain.evaluation.parsing.json_schema" -> "langchain_core" [];
	"langchain.evaluation.parsing.json_schema" -> "langchain" [];
	"langchain.evaluation.parsing.json_distance" -> "langchain_core" [];
	"langchain.evaluation.parsing.json_distance" -> "langchain" [];
	"langchain.evaluation.parsing.base" -> "langchain_core" [];
	"langchain.evaluation.parsing.base" -> "langchain" [];
	"langchain.evaluation.loading" -> "langchain" [];
	"langchain.evaluation.loading" -> "langchain_community" [];
	"langchain_community.chat_models.openai" -> "langchain_community" [];
	"langchain.chains.openai_functions" -> "langchain_core" [];
	"langchain.chains.openai_functions.tagging" -> "langchain" [];
	"langchain.chains.openai_functions.qa_with_structure" -> "langchain" [];
	"langchain.chains.openai_functions.extraction" -> "langchain" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "langchain" [];
	"langchain.evaluation.embedding_distance.base" -> "langchain_community" [];
	"langchain_community.embeddings.openai" -> "langchain_community" [];
	"langchain_core.embeddings.embeddings" -> "langchain_core" [];
	"langchain.evaluation.comparison.prompt" -> "langchain_core" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "langchain" [];
	"langchain.evaluation.exact_match.base" -> "langchain" [];
	"langchain.evaluation.schema" -> "langchain" [];
	"langchain.smith.evaluation.config" -> "langchain" [];
	"anyio.abc._tasks" -> "anyio" [];
	"anyio.abc._streams" -> "anyio" [];
	"anyio._core._tasks" -> "anyio" [];
	"anyio._core._streams" -> "anyio" [];
	"httpx._transports.wsgi" -> "http" [];
	"httpx._transports.mock" -> "http" [];
	"httpx._transports.base" -> "http" [];
	"httpx._transports.asgi" -> "http" [];
	"langchain_core.messages.tool" -> "langchain_core" [];
	"langchain_core.messages.function" -> "langchain_core" [];
	"langchain_core.messages.chat" -> "langchain_core" [];
	"langchain_core.messages.ai" -> "langchain_core" [];
	"langchain_core.runnables.fallbacks" -> "langchain_core" [];
	"langchain_core.runnables.config" -> "langchain_core" [];
	"langchain_core.beta.runnables.context" -> "langchain_core" [];
	"langchain_core.tracers.root_listeners" -> "langchain_core" [];
	"langchain_core.runnables.retry" -> "langchain_core" [];
	"langchain_community.vectorstores.yellowbrick" -> "langchain_community" [];
	"langchain_community.vectorstores.utils" -> "langchain_community" [];
	"grpc.aio._typing" -> "grpc" [];
	"langchain_community.vectorstores.usearch" -> "langchain_community" [];
	"langchain.retrievers.self_query.tencentvectordb" -> "langchain_community" [];
	"langchain.chains.query_constructor.base" -> "langchain" [];
	"langchain_core.example_selectors.length_based" -> "langchain_core" [];
	"pydantic_settings.sources.providers.dotenv" -> "pydantic" [];
	"langchain_community.vectorstores.scann" -> "langchain_community" [];
	"langchain_community.vectorstores.redis.filters" -> "langchain_community" [];
	"langchain_community.vectorstores.redis.base" -> "langchain_community" [];
	"langchain_community.vectorstores.redis.schema" -> "langchain_core" [];
	"langchain_community.vectorstores.qdrant" -> "langchain_community" [];
	"google.protobuf.pyext.cpp_message" -> "google" [];
	"google.protobuf.internal.field_mask" -> "google" [];
	"google.api_core.rest_streaming_async" -> "google" [];
	"google.api_core._rest_streaming_base" -> "google" [];
	"google.auth.aio.transport" -> "google" [];
	"google.api_core.rest_streaming" -> "google" [];
	"proto.marshal.rules.struct" -> "proto" [];
	"proto.marshal.collections.maps" -> "google" [];
	"google.cloud.aiplatform.utils.column_transformations_utils" -> "google" [];
	"google.cloud.aiplatform.datasets.tabular_dataset" -> "pandas" [];
	"google.cloud.bigquery.routine.routine" -> "google" [];
	"google.cloud.bigquery.model" -> "google" [];
	"google.cloud.bigquery.dataset" -> "google" [];
	"google.cloud.bigquery.opentelemetry_tracing" -> "google" [];
	"google.cloud._http" -> "google" [];
	"google.resumable_media.requests.download" -> "urllib" [];
	"google.resumable_media.requests._request_helpers" -> "urllib" [];
	"google.cloud.bigquery.job.load" -> "google" [];
	"google.cloud.bigquery.job.extract" -> "google" [];
	"google.cloud.bigquery.job.copy_" -> "google" [];
	"google.cloud.aiplatform.datasets._datasources" -> "google" [];
	"google.cloud.aiplatform.utils.featurestore_utils" -> "google" [];
	"google.cloud.aiplatform.utils._ipython_utils" -> "google" [];
	"google.cloud.aiplatform.utils._ipython_utils" -> "vertexai" [];
	"vertexai.preview.tuning.sft" -> "vertexai" [];
	"vertexai" -> "google" [];
	"vertexai.generative_models._function_calling_utils" -> "google" [];
	"PIL.Image" -> "xml" [];
	"vertexai.preview.tuning" -> "vertexai" [];
	"google.cloud.aiplatform.tensorboard.uploader_tracker" -> "google" [];
	"google.cloud.aiplatform.models" -> "requests_toolbelt" [];
	"google.cloud.aiplatform.helpers.container_uri_builders" -> "google" [];
	"google.cloud.aiplatform.prediction.local_endpoint" -> "google" [];
	"google.cloud.aiplatform.utils.rest_utils" -> "google" [];
	"google.cloud.aiplatform.utils._explanation_utils" -> "google" [];
	"google.cloud.aiplatform.utils.worker_spec_utils" -> "google" [];
	"google.cloud.aiplatform.utils.console_utils" -> "google" [];
	"google.cloud.aiplatform.constants.base" -> "google" [];
	"google.cloud.aiplatform.matching_engine.matching_engine_index_config" -> "google" [];
	"google.cloud.aiplatform.featurestore.entity_type" -> "google" [];
	"google.cloud.aiplatform.preview.featurestore.entity_type" -> "google" [];
	"google.cloud.aiplatform.utils.enhanced_library._decorators" -> "google" [];
	"google.cloud.storage.hmac_key" -> "google" [];
	"google.cloud.storage.notification" -> "google" [];
	"google.cloud.storage.fileio" -> "google" [];
	"vertexai.preview.generative_models" -> "vertexai" [];
	"langchain_community.vectorstores.faiss" -> "langchain_community" [];
	"langchain_community.vectorstores.docarray.base" -> "langchain_community" [];
	"langchain_community.vectorstores.cassandra" -> "langchain_community" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "langchain_community" [];
	"langchain_community.vectorstores.astradb" -> "langchain_community" [];
	"langchain_core.document_loaders.blob_loaders" -> "langchain_core" [];
	"langchain_core.documents.base" -> "langchain_core" [];
	"langchain_community.vectorstores.annoy" -> "langchain_community" [];
	"langchain_community.tools.zapier.tool" -> "langchain_community" [];
	"langchain_community.tools.you.tool" -> "langchain_community" [];
	"langchain_community.tools.yahoo_finance_news" -> "urllib" [];
	"langchain_community.tools.yahoo_finance_news" -> "langchain_community" [];
	"langchain_community.document_loaders.web_base" -> "langchain_community" [];
	"langchain_community.tools.wolfram_alpha.tool" -> "langchain_community" [];
	"langchain_community.tools.wikipedia.tool" -> "langchain_community" [];
	"langchain_community.tools.vectorstore.tool" -> "langchain_community" [];
	"langchain.chains.qa_with_sources.loading" -> "langchain" [];
	"langchain.chains.question_answering.map_rerank_prompt" -> "langchain" [];
	"langchain.chains.question_answering.stuff_prompt" -> "langchain" [];
	"langchain.chains.question_answering.refine_prompts" -> "langchain" [];
	"langchain.chains.question_answering.refine_prompts" -> "langchain_core" [];
	"langchain.chains.question_answering.map_reduce_prompt" -> "langchain" [];
	"langchain.chains.question_answering.map_reduce_prompt" -> "langchain_core" [];
	"langchain.chains.combine_documents.refine" -> "langchain" [];
	"langchain.chains.combine_documents.map_rerank" -> "langchain" [];
	"langchain.chains.combine_documents.map_reduce" -> "langchain" [];
	"langchain.chains.combine_documents.base" -> "langchain" [];
	"langchain.chains.combine_documents.stuff" -> "langchain" [];
	"langchain.chains.retrieval_qa.base" -> "langchain" [];
	"langchain_community.llms.openai" -> "langchain_community" [];
	"langchain_community.tools.tavily_search.tool" -> "langchain_community" [];
	"langchain_community.tools.steam.tool" -> "langchain_community" [];
	"langchain_community.tools.stackexchange.tool" -> "langchain_community" [];
	"langchain_community.tools.sql_database.tool" -> "langchain_community" [];
	"langchain_community.tools.sql_database.tool" -> "langchain" [];
	"langchain_community.tools.spark_sql.tool" -> "langchain_community" [];
	"langchain_community.tools.spark_sql.tool" -> "langchain" [];
	"langchain_community.tools.shell.tool" -> "langchain_experimental" [];
	"langchain_community.tools.searx_search.tool" -> "langchain_community" [];
	"langchain_community.tools.searchapi.tool" -> "langchain_community" [];
	"langchain_community.tools.scenexplain.tool" -> "langchain_community" [];
	"langchain_community.tools.requests.tool" -> "langchain_community" [];
	"langchain_community.tools.reddit_search.tool" -> "langchain_community" [];
	"langchain_community.tools.pubmed.tool" -> "langchain_community" [];
	"langchain_community.tools.powerbi.tool" -> "langchain_community" [];
	"langchain_community.tools.polygon.ticker_news" -> "langchain_community" [];
	"langchain_community.tools.polygon.last_quote" -> "langchain_community" [];
	"langchain_community.tools.polygon.financials" -> "langchain_community" [];
	"langchain_community.tools.polygon.aggregates" -> "langchain_community" [];
	"langchain_community.tools.openweathermap.tool" -> "langchain_community" [];
	"langchain_community.tools.openapi.utils.openapi_utils" -> "langchain_community" [];
	"langchain_community.tools.nasa.tool" -> "langchain_community" [];
	"langchain_community.tools.mojeek_search.tool" -> "langchain_community" [];
	"langchain_community.tools.metaphor_search.tool" -> "langchain_community" [];
	"langchain_community.tools.merriam_webster.tool" -> "langchain_community" [];
	"langchain_community.tools.jira.tool" -> "langchain_community" [];
	"langchain_community.tools.jina_search.tool" -> "langchain_community" [];
	"langchain_community.tools.graphql.tool" -> "langchain_community" [];
	"langchain_community.tools.google_serper.tool" -> "langchain_community" [];
	"langchain_community.tools.google_search.tool" -> "langchain_community" [];
	"langchain_community.tools.google_places.tool" -> "langchain_community" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "langchain_community" [];
	"langchain_community.tools.google_books" -> "langchain_community" [];
	"langchain_community.tools.gmail.utils" -> "google" [];
	"googleapiclient.model" -> "google" [];
	"langchain_community.tools.gmail.send_message" -> "email" [];
	"langchain_community.tools.financial_datasets.income_statements" -> "langchain_community" [];
	"langchain_community.tools.financial_datasets.cash_flow_statements" -> "langchain_community" [];
	"langchain_community.tools.financial_datasets.balance_sheets" -> "langchain_community" [];
	"langchain_community.tools.ddg_search.tool" -> "langchain_community" [];
	"langchain_community.tools.dataherald.tool" -> "langchain_community" [];
	"langchain_community.tools.convert_to_openai" -> "langchain_core" [];
	"langchain_community.tools.connery.service" -> "langchain_core" [];
	"langchain_community.tools.cassandra_database.tool" -> "langchain_community" [];
	"langchain_community.tools.brave_search.tool" -> "langchain_community" [];
	"langchain_community.tools.bing_search.tool" -> "langchain_community" [];
	"langchain_community.tools.asknews.tool" -> "langchain_community" [];
	"langchain_community.tools.arxiv.tool" -> "langchain_community" [];
	"langchain_community.utilities.infobip" -> "urllib" [];
	"langchain_community.llms" -> "langchain_core" [];
	"langchain_community.llms.yandex" -> "google" [];
	"langchain_community.llms.weight_only_quantization" -> "langchain_core" [];
	"langchain_community.llms.vllm" -> "langchain_community" [];
	"langchain_community.llms.vertexai" -> "langchain_community" [];
	"vertexai.preview.language_models" -> "vertexai" [];
	"langchain_community.llms.openllm" -> "langchain_community" [];
	"langchain_community.llms.octoai_endpoint" -> "langchain_community" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "langchain_community" [];
	"langchain_community.llms.google_palm" -> "langchain_community" [];
	"langchain_community.llms.deepinfra" -> "langchain_community" [];
	"langchain_community.llms.bigdl_llm" -> "langchain_core" [];
	"langchain_community.llms.bedrock" -> "langchain_community" [];
	"langchain_community.llms.arcee" -> "langchain_community" [];
	"langchain_community.llms.anyscale" -> "langchain_community" [];
	"langchain.agents" -> "langchain_community" [];
	"langchain_community.agent_toolkits.sql.base" -> "langchain_community" [];
	"langchain_community.agent_toolkits.zapier.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.steam.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.spark_sql.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "langchain" [];
	"langchain_community.agent_toolkits.polygon.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.openapi.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.nla.tool" -> "langchain_community" [];
	"langchain_community.chains.openapi.chain" -> "langchain" [];
	"langchain_community.chains.openapi.chain" -> "langchain_community" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "langchain" [];
	"langchain_community.chains.openapi.response_chain" -> "langchain" [];
	"langchain_community.chains.openapi.requests_chain" -> "langchain" [];
	"langchain_community.agent_toolkits.nasa.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.jira.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.connery.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "langchain_community" [];
	"langchain_community.agent_toolkits.azure_ai_services" -> "langchain_community" [];
	"langchain_community.agent_toolkits.sql.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.spark_sql.base" -> "langchain" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "langchain_community" [];
	"langchain_community.memory.motorhead_memory" -> "langchain" [];
	"langchain_community.memory.kg" -> "langchain" [];
	"langchain.memory.prompt" -> "langchain_core" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "langchain_core" [];
	"langchain_community.graphs.neptune_graph" -> "langchain_core" [];
	"langchain_community.chat_message_histories.redis" -> "langchain_community" [];
	"langchain_community.chat_message_histories.cassandra" -> "langchain_community" [];
	"langchain_community.chat_message_histories.astradb" -> "langchain_community" [];
	"langchain.memory.summary" -> "langchain" [];
	"langchain.memory.entity" -> "langchain" [];
	"langchain.memory.entity" -> "langchain_community" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "langchain_community" [];
	"langchain_community.agent_toolkits.openapi.base" -> "langchain" [];
	"langchain_community.agent_toolkits.load_tools" -> "langchain_community" [];
	"langchain_community.agent_toolkits.load_tools" -> "langchain" [];
	"langchain.chains.api.base" -> "langchain" [];
	"langchain.chains.api.base" -> "langchain_community" [];
	"langchain.chains.api.prompt" -> "langchain_core" [];
	"langchain.chains.llm_math.base" -> "langchain" [];
	"langchain.chains.llm_math.prompt" -> "langchain_core" [];
	"langchain_community.utilities.dalle_image_generator" -> "langchain_community" [];
	"langchain_community.tools.memorize.tool" -> "langchain_community" [];
	"langchain_community.tools.google_trends.tool" -> "langchain_community" [];
	"langchain_community.tools.google_scholar.tool" -> "langchain_community" [];
	"langchain_community.tools.google_lens.tool" -> "langchain_community" [];
	"langchain_community.tools.google_jobs.tool" -> "langchain_community" [];
	"langchain_community.tools.google_finance.tool" -> "langchain_community" [];
	"langchain_community.tools.golden_query.tool" -> "langchain_community" [];
	"langchain_community.tools.dataforseo_api_search.tool" -> "langchain_community" [];
	"langchain_community.agent_toolkits.json.base" -> "langchain" [];
	"langchain.agents.xml.base" -> "langchain" [];
	"langchain.agents.output_parsers.tools" -> "langchain" [];
	"langchain.agents.output_parsers.self_ask" -> "langchain" [];
	"langchain.agents.output_parsers.react_single_input" -> "langchain" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "langchain" [];
	"langchain.agents.output_parsers.openai_functions" -> "langchain" [];
	"langchain.agents.output_parsers.json" -> "langchain" [];
	"langchain.agents.structured_chat.base" -> "langchain" [];
	"langchain.agents.self_ask_with_search.base" -> "langchain" [];
	"langchain.agents.self_ask_with_search.base" -> "langchain_community" [];
	"langchain.agents.self_ask_with_search.prompt" -> "langchain_core" [];
	"langchain.agents.react.base" -> "langchain" [];
	"langchain.agents.react.base" -> "langchain_community" [];
	"langchain.agents.react.wiki_prompt" -> "langchain_core" [];
	"langchain.agents.react.textworld_prompt" -> "langchain_core" [];
	"langchain.agents.react.output_parser" -> "langchain" [];
	"langchain.agents.output_parsers.openai_tools" -> "langchain" [];
	"langchain.agents.mrkl.output_parser" -> "langchain" [];
	"langchain.agents.loading" -> "langchain" [];
	"langchain.chains.loading" -> "langchain_community" [];
	"langchain_experimental.sql.base" -> "langchain_community" [];
	"langchain.chains.sql_database.prompt" -> "langchain_core" [];
	"langchain_experimental.pal_chain.base" -> "langchain" [];
	"langchain_experimental.pal_chain.math_prompt" -> "langchain_core" [];
	"langchain_experimental.pal_chain.colored_object_prompt" -> "langchain_core" [];
	"langchain_community.llms.loading" -> "langchain_core" [];
	"langchain.chains.llm_requests" -> "langchain_community" [];
	"langchain_community.chains.llm_requests" -> "langchain_community" [];
	"langchain_community.chains.graph_qa.cypher" -> "langchain" [];
	"langchain_community.chains.graph_qa.cypher" -> "langchain_community" [];
	"langchain_community.chains.graph_qa.prompts" -> "langchain_core" [];
	"langchain_community.chains.graph_qa.cypher_utils" -> "langchain_core" [];
	"langchain.chains.llm_checker.base" -> "langchain" [];
	"langchain.chains.llm_checker.prompt" -> "langchain_core" [];
	"langchain.chains.hyde.base" -> "langchain" [];
	"langchain.chains.hyde.prompts" -> "langchain_core" [];
	"langchain_core.prompts.loading" -> "langchain_core" [];
	"langchain.agents.chat.base" -> "langchain" [];
	"langchain.agents.chat.output_parser" -> "langchain" [];
	"langchain.agents.json_chat.base" -> "langchain" [];
	"langchain.agents.initialize" -> "langchain" [];
	"langchain.agents.conversational.output_parser" -> "langchain" [];
	"langchain.agents.agent_types" -> "langchain" [];
	"langchain.agents.agent_toolkits.vectorstore.base" -> "langchain" [];
	"langchain.agents.agent_toolkits" -> "langchain_core" [];
	"langchain.agents.agent_toolkits" -> "langchain_community" [];
	"langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" -> "langchain" [];
	"langchain.agents.openai_functions_agent.agent_token_buffer_memory" -> "langchain" [];
	"langchain.agents.agent" -> "langchain" [];
	"langchain_google_genai.google_vector_store" -> "google" [];
	"langchain_google_genai.genai_aqa" -> "google" [];
	"langchain_google_genai._function_utils" -> "google" [];
	"google.generativeai.types.helper_types" -> "google" [];
	"langchain_google_genai._enums" -> "google" [];
	"openai.lib._tools" -> "openai" [];
	"openai.types.vector_stores.file_batch_create_params" -> "openai" [];
	"openai.types.vector_stores.file_create_params" -> "openai" [];
	"openai.lib.streaming.responses._types" -> "openai" [];
	"openai.lib.streaming.chat._types" -> "openai" [];
	"anthropic.types.messages.batch_create_params" -> "anthropic" [];
	"anthropic.lib.vertex._client" -> "google" [];
	"anthropic.lib.vertex._auth" -> "anthropic" [];
	"anthropic.lib.vertex._auth" -> "google" [];
	"docx.parts.styles" -> "docx" [];
	"docx.opc.coreprops" -> "docx" [];
	"docx.oxml.text.paragraph" -> "docx" [];
	"docx.oxml.styles" -> "docx" [];
	"docx.oxml.text.hyperlink" -> "docx" [];
	"docx.opc.parts.coreprops" -> "docx" [];
	"langchain_community.document_loaders.youtube" -> "xml" [];
	"langchain_community.document_loaders.wikipedia" -> "langchain_community" [];
	"langchain_community.document_loaders.weather" -> "langchain_community" [];
	"langchain_community.document_loaders.vsdx" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.pdf" -> "langchain_community" [];
	"pdfminer.pdfdocument" -> "cryptography" [];
	"pdfplumber.utils.generic" -> "pandas" [];
	"langchain_community.document_loaders.parsers.language.language_parser" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.images" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.grobid" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.docai" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.audio" -> "langchain_community" [];
	"langchain_community.document_loaders.tensorflow_datasets" -> "langchain_community" [];
	"langchain_community.document_loaders.sql_database" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.registry" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.txt" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.msword" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.generic" -> "langchain_community" [];
	"langchain_community.document_loaders.blob_loaders.schema" -> "langchain_core" [];
	"langchain_community.document_loaders.pubmed" -> "langchain_community" [];
	"langchain_community.document_loaders.pebblo" -> "langchain_community" [];
	"langchain_community.document_loaders.max_compute" -> "langchain_community" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "langchain_community" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "google" [];
	"langchain_community.document_loaders.gcs_file" -> "langchain_community" [];
	"langchain_community.document_loaders.gcs_directory" -> "langchain_community" [];
	"langchain_community.document_loaders.chromium" -> "langchain_community" [];
	"langchain_community.document_loaders.cassandra" -> "langchain_community" [];
	"langchain_community.document_loaders.brave_search" -> "langchain_community" [];
	"langchain_community.document_loaders.bigquery" -> "langchain_community" [];
	"langchain_community.document_loaders.bibtex" -> "langchain_community" [];
	"langchain_community.document_loaders.azure_ai_data" -> "langchain_community" [];
	"langchain_community.document_loaders.async_html" -> "langchain_community" [];
	"langchain_community.document_loaders.astradb" -> "langchain_community" [];
	"langchain_community.document_loaders.arxiv" -> "langchain_community" [];
	"pypdf.xmp" -> "xml" [];
	"langchain_community.embeddings.vertexai" -> "langchain_community" [];
	"langchain_community.embeddings.vertexai" -> "google" [];
	"langchain_community.embeddings.self_hosted" -> "langchain_community" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "langchain_community" [];
	"langchain_community.embeddings.octoai_embeddings" -> "langchain_community" [];
	"langchain_community.embeddings.cohere" -> "langchain_community" [];
	"langchain_community.embeddings.azure_openai" -> "langchain_community" [];
	"langchain_community.embeddings.anyscale" -> "langchain_community" [];
	"langchain_community.chat_models.yandex" -> "langchain_community" [];
	"langchain_community.chat_models.yandex" -> "google" [];
	"langchain_community.chat_models.volcengine_maas" -> "langchain_community" [];
	"langchain_community.chat_models.vertexai" -> "langchain_community" [];
	"langchain_community.chat_models.tongyi" -> "langchain_community" [];
	"langchain_community.chat_models.solar" -> "langchain_community" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "langchain_community" [];
	"langchain_community.chat_models.outlines" -> "langchain_community" [];
	"langchain_community.chat_models.ollama" -> "langchain_community" [];
	"langchain_community.chat_models.octoai" -> "langchain_community" [];
	"langchain_community.chat_models.oci_generative_ai" -> "langchain_community" [];
	"langchain_community.chat_models.oci_data_science" -> "langchain_community" [];
	"langchain_community.chat_models.oci_data_science" -> "langchain_openai" [];
	"langchain_community.chat_models.moonshot" -> "langchain_community" [];
	"langchain_community.chat_models.mlx" -> "langchain_community" [];
	"langchain_community.chat_models.konko" -> "langchain_community" [];
	"langchain_community.chat_models.human" -> "langchain_community" [];
	"langchain_community.chat_models.huggingface" -> "langchain_community" [];
	"langchain_community.chat_models.gpt_router" -> "langchain_community" [];
	"langchain_community.chat_models.gigachat" -> "langchain_community" [];
	"langchain_community.chat_models.friendli" -> "langchain_community" [];
	"langchain_community.chat_models.fireworks" -> "langchain_community" [];
	"langchain_community.chat_models.everlyai" -> "langchain_community" [];
	"langchain_community.chat_models.deepinfra" -> "langchain_community" [];
	"langchain_community.chat_models.cohere" -> "langchain_community" [];
	"langchain_community.chat_models.bedrock" -> "langchain_community" [];
	"langchain_community.chat_models.azure_openai" -> "langchain_community" [];
	"langchain_community.chat_models.anyscale" -> "langchain_community" [];
	"langchain_community.chat_models.anthropic" -> "langchain_community" [];
	"langchain_community.retrievers.zilliz" -> "langchain_community" [];
	"langchain_community.retrievers.wikipedia" -> "langchain_community" [];
	"langchain_community.document_transformers.openai_functions" -> "langchain" [];
	"langchain_community.tools.nuclia.tool" -> "google" [];
	"langchain_community.document_transformers.google_translate" -> "langchain_community" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "langchain_community" [];
	"langchain_community.retrievers.rememberizer" -> "langchain_community" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "langchain_community" [];
	"langchain_community.retrievers.pubmed" -> "langchain_community" [];
	"langchain_community.retrievers.outline" -> "langchain_community" [];
	"langchain_community.retrievers.milvus" -> "langchain_community" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "langchain_community" [];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" -> "langchain_community" [];
	"langchain_community.retrievers.docarray" -> "langchain_community" [];
	"langchain_community.retrievers.arxiv" -> "langchain_community" [];
	"langchain_community.retrievers.arcee" -> "langchain_community" [];
	"langchain_neo4j.vectorstores.neo4j_vector" -> "langchain_neo4j" [];
	"langchain_neo4j.chat_message_histories.neo4j" -> "langchain_neo4j" [];
	"langchain_neo4j.chains.graph_qa.cypher" -> "langchain" [];
	"langchain_neo4j.chains.graph_qa.cypher" -> "langchain_neo4j" [];
	"langchain_neo4j.chains.graph_qa.prompts" -> "langchain_core" [];
	"langchain_community.query_constructors.redis" -> "langchain_community" [];
	"langchain.retrievers.multi_vector" -> "langchain" [];
	"langchain_community.storage.redis" -> "langchain_community" [];
	"langchain_community.storage.cassandra" -> "langchain_community" [];
	"langchain_community.storage.astradb" -> "langchain_community" [];
	"langchain.retrievers.multi_query" -> "langchain" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "langchain_community" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "langchain" [];
	"langchain_core.documents.transformers" -> "langchain_core" [];
	"langchain.embeddings.cache" -> "langchain" [];
	"langchain.prompts" -> "langchain_community" [];
	"langchain.prompts.prompt" -> "langchain_core" [];
	"google.generativeai.generative_models" -> "google" [];
	"google.generativeai.embedding" -> "google" [];
	"cryptography.hazmat.decrepit.ciphers.algorithms" -> "cryptography" [];
	"cryptography.hazmat.primitives.ciphers.base" -> "cryptography" [];
	"cryptography.hazmat.primitives.hashes" -> "cryptography" [];
	"cryptography.hazmat.primitives.serialization.base" -> "cryptography" [];
	"cryptography.x509.verification" -> "cryptography" [];
	"pandas.core.arrays.floating" -> "pandas" [];
	"pandas.core.arrays.integer" -> "pandas" [];
	"google.auth.transport.requests" -> "urllib" [];
	"pandas._libs.sas" -> "pandas" [];
	"pandas.api.interchange" -> "pandas" [];
	"pandas.tseries.offsets" -> "pandas" [];
	"pandas.tseries.api" -> "pandas" [];
	"langchain_community.chat_models.openai" -> "langchain" [];
	"langchain_core.runnables.branch" -> "langchain_core" [];
	"langchain_community.vectorstores.tencentvectordb" -> "langchain" [];
	"google.cloud.aiplatform.compat.types" -> "google" [];
	"google.cloud.aiplatform.model_monitoring.sampling" -> "google" [];
	"google.cloud.aiplatform.model_monitoring.objective" -> "google" [];
	"google.cloud.aiplatform.model_monitoring.alert" -> "google" [];
	"vertexai.tuning._supervised_tuning" -> "google" [];
	"vertexai.preview" -> "google" [];
	"google.cloud.aiplatform.prediction.serializer" -> "google" [];
	"google.cloud.aiplatform.docker_utils.build" -> "google" [];
	"google.cloud.aiplatform.docker_utils.run" -> "google" [];
	"google.cloud.aiplatform.prediction.handler_utils" -> "google" [];
	"google.cloud.aiplatform._streaming_prediction" -> "google" [];
	"langchain_community.utils.google" -> "google" [];
	"langchain_community.utilities.steam" -> "langchain_community" [];
	"langchain_community.tools.vectorstore.tool" -> "langchain" [];
	"langchain.chains.qa_with_sources.retrieval" -> "langchain" [];
	"langchain_community.tools.interaction.tool" -> "langchain_community" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "langchain_community" [];
	"langchain.chains.api.openapi.response_chain" -> "langchain_community" [];
	"langchain.chains.api.openapi.prompts" -> "langchain_community" [];
	"langchain.chains.api.openapi.requests_chain" -> "langchain_community" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.json.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.cogniswitch.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "langchain_community" [];
	"langchain.agents.format_scratchpad.tools" -> "langchain" [];
	"langchain.agents.tool_calling_agent.base" -> "langchain" [];
	"langchain.agents.self_ask_with_search.output_parser" -> "langchain" [];
	"langchain.agents.openai_tools.base" -> "langchain" [];
	"langchain.chains.qa_with_sources.vector_db" -> "langchain" [];
	"langchain.agents.agent_toolkits.vectorstore.toolkit" -> "langchain_community" [];
	"langchain_google_genai.embeddings" -> "google" [];
	"langchain_google_genai._common" -> "google" [];
	"langchain_google_genai._image_utils" -> "google" [];
	"google.generativeai.protos" -> "google" [];
	"openai.types.shared_params.responses_model" -> "openai" [];
	"openai.types.shared_params.reasoning" -> "openai" [];
	"openai.types.chat.completion_create_params" -> "openai" [];
	"openai.types.chat.chat_completion_tool_param" -> "openai" [];
	"openai.types.chat.chat_completion_reasoning_effort" -> "openai" [];
	"openai.types.chat.completion_update_params" -> "openai" [];
	"openai.types.chat.completion_list_params" -> "openai" [];
	"openai.types.fine_tuning.job_create_params" -> "openai" [];
	"openai.types.beta.threads.message_update_params" -> "openai" [];
	"openai.types.beta.threads.message_create_params" -> "openai" [];
	"openai.types.beta.threads.run_update_params" -> "openai" [];
	"openai.types.beta.threads.run_create_params" -> "openai" [];
	"openai.types.beta.assistant_response_format_option_param" -> "openai" [];
	"openai.types.beta.function_tool_param" -> "openai" [];
	"openai.types.beta.assistant_response_format_option" -> "openai" [];
	"openai.types.beta.thread_create_and_run_params" -> "openai" [];
	"openai.types.beta.assistant_update_params" -> "openai" [];
	"openai.types.beta.assistant_create_params" -> "openai" [];
	"openai.types.beta.thread_update_params" -> "openai" [];
	"openai.types.beta.thread_create_params" -> "openai" [];
	"openai.types.evals.run_create_params" -> "openai" [];
	"openai.types.evals.create_eval_completions_run_data_source_param" -> "openai" [];
	"openai.types.beta.realtime.response_create_event_param" -> "openai" [];
	"openai.types.responses.response_format_text_config_param" -> "openai" [];
	"openai.types.responses.response_create_params" -> "openai" [];
	"openai.types.responses.file_search_tool_param" -> "openai" [];
	"openai.types.responses.tool_param" -> "openai" [];
	"langchain_community.embeddings" -> "langchain" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "langchain_community" [];
	"langchain.retrievers.self_query.base" -> "langchain" [];
	"google.cloud.aiplatform.compat.services" -> "google" [];
	"google.cloud.aiplatform.constants.pipeline" -> "google" [];
	"google.cloud.aiplatform.utils.pipeline_utils" -> "google" [];
	"google.cloud.aiplatform.metadata.constants" -> "google" [];
	"google.cloud.aiplatform.constants.schedule" -> "google" [];
	"google.cloud.aiplatform.gapic.schema" -> "google" [];
}
